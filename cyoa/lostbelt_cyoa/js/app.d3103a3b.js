(function(e) {
    function t(t) {
        for (var i, a, n = t[0], l = t[1], c = t[2], d = 0, u = []; d < n.length; d++) a = n[d], Object.prototype.hasOwnProperty.call(s, a) && s[a] && u.push(s[a][0]), s[a] = 0;
        for (i in l) Object.prototype.hasOwnProperty.call(l, i) && (e[i] = l[i]);
        p && p(t);
        while (u.length) u.shift()();
        return r.push.apply(r, c || []), o()
    }

    function o() {
        for (var e, t = 0; t < r.length; t++) {
            for (var o = r[t], i = !0, a = 1; a < o.length; a++) {
                var l = o[a];
                0 !== s[l] && (i = !1)
            }
            i && (r.splice(t--, 1), e = n(n.s = o[0]))
        }
        return e
    }
    var i = {},
        s = {
            app: 0
        },
        r = [];

    function a(e) {
        return "js/" + ({} [e] || e) + "." + {
            "chunk-2d0e6102": "09695d49"
        } [e] + ".js"
    }

    function n(t) {
        if (i[t]) return i[t].exports;
        var o = i[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return e[t].call(o.exports, o, o.exports, n), o.l = !0, o.exports
    }
    n.e = function(e) {
        var t = [],
            o = s[e];
        if (0 !== o)
            if (o) t.push(o[2]);
            else {
                var i = new Promise((function(t, i) {
                    o = s[e] = [t, i]
                }));
                t.push(o[2] = i);
                var r, l = document.createElement("script");
                l.charset = "utf-8", l.timeout = 120, n.nc && l.setAttribute("nonce", n.nc), l.src = a(e);
                var c = new Error;
                r = function(t) {
                    l.onerror = l.onload = null, clearTimeout(d);
                    var o = s[e];
                    if (0 !== o) {
                        if (o) {
                            var i = t && ("load" === t.type ? "missing" : t.type),
                                r = t && t.target && t.target.src;
                            c.message = "Loading chunk " + e + " failed.\n(" + i + ": " + r + ")", c.name = "ChunkLoadError", c.type = i, c.request = r, o[1](c)
                        }
                        s[e] = void 0
                    }
                };
                var d = setTimeout((function() {
                    r({
                        type: "timeout",
                        target: l
                    })
                }), 12e4);
                l.onerror = l.onload = r, document.head.appendChild(l)
            } return Promise.all(t)
    }, n.m = e, n.c = i, n.d = function(e, t, o) {
        n.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: o
        })
    }, n.r = function(e) {
        "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, n.t = function(e, t) {
        if (1 & t && (e = n(e)), 8 & t) return e;
        if (4 & t && "object" === typeof e && e && e.__esModule) return e;
        var o = Object.create(null);
        if (n.r(o), Object.defineProperty(o, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var i in e) n.d(o, i, function(t) {
                return e[t]
            }.bind(null, i));
        return o
    }, n.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e["default"]
        } : function() {
            return e
        };
        return n.d(t, "a", t), t
    }, n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, n.p = "/", n.oe = function(e) {
        throw console.error(e), e
    };
    var l = window["webpackJsonp"] = window["webpackJsonp"] || [],
        c = l.push.bind(l);
    l.push = t, l = l.slice();
    for (var d = 0; d < l.length; d++) t(l[d]);
    var p = c;
    r.push([0, "chunk-vendors"]), o()
})({
    0: function(e, t, o) {
        e.exports = o("56d7")
    },
    "034f": function(e, t, o) {
        "use strict";
        var i = o("8a23"),
            s = o.n(i);
        s.a
    },
    "03ad": function(e, t, o) {},
    "040a": function(e, t, o) {
        "use strict";
        var i = o("bf59"),
            s = o.n(i);
        s.a
    },
    "0c2a": function(e, t, o) {
        "use strict";
        var i = o("4627"),
            s = o.n(i);
        s.a
    },
    "1f65": function(e, t, o) {},
    2820: function(e, t, o) {
        "use strict";
        var i = o("a05d"),
            s = o.n(i);
        s.a
    },
    "2f00": function(e, t, o) {
        "use strict";
        var i = o("03ad"),
            s = o.n(i);
        s.a
    },
    "38f6": function(e, t, o) {},
    "3b78": function(e, t, o) {
        "use strict";
        var i = o("a27d"),
            s = o.n(i);
        s.a
    },
    "3e44": function(e, t, o) {
        "use strict";
        var i = o("5aea"),
            s = o.n(i);
        s.a
    },
    4627: function(e, t, o) {},
    "4c61": function(e, t, o) {},
    "56d7": function(e, t, o) {
        "use strict";
        o.r(t);
        o("e260"), o("e6cf"), o("cca6"), o("a79d");
        var i = o("2b0e"),
            s = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-app", ["" == e.currentComponent ? o("v-row", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        persistent: "",
                        "max-width": "900px"
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-text", [o("v-container", [o("v-row", {
                    staticStyle: {
                        "text-align": "center"
                    },
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("span", [o("h1", [e._v("[Mod] Interactive CYOA Creator Plus")]), o("h6", [e._v("Created by MeanDelay / Modified by Wahaha303")])])]), e._l(e.menuComponentButtons, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        attrs: {
                            cols: "12"
                        }
                    }, [o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        attrs: {
                            small: ""
                        },
                        on: {
                            click: function(o) {
                                e.currentComponent = t.component
                            }
                        }
                    }, [e._v(e._s(t.text))])], 1)
                })), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Download Latest Viewer : "), o("a", {
                    attrs: {
                        href: "https://github.com/wahaha303/ICCPlus/releases/latest",
						target: "_blank"
                    }
                }, [e._v(" Ver 1.18.9 ")])]), o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 09.02.2025")]), o("v-col", {
                    staticClass: "pt-0 pb-0",
					staticStyle: {
						color: "blue"
					},
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Feature: ")]), o("v-col", {
                    staticClass: "pt-0 pb-0 text-left",
                    attrs: {
                        cols: "10",
						margin: "0 auto"
                    }
                }, [e._v(" The build load feature and backpack will be automatically enabled when creating a new project. "), o("br"), e._v(" Added a feature to set a custom requirement description. "), o("br"), e._v(" Added a feature to display the addon's requirements. "), o("br"), e._v(" Added a feature to display the addon even if the requirements are not met. "), o("br"), e._v(" Added a feature to fade transition in the choice function. ")]), o("v-col", {
                    staticClass: "pt-0 pb-0",
					staticStyle: {
						color: "red"
					},
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pt-0 pb-0 text-left",
                    attrs: {
                        cols: "10"
                    }
                }, [e._v(" Fixed an issue where the random select feature of the row button was not working properly. "), o("br"), e._v(" Fixed an issue where the BGM mute feature was not working properly. "), o("br"), e._v(" Fixed an issue where the number in the multi-select choice was not vertically centered. ")]), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Can support me "), o("a", {
                    attrs: {
                        href: "https://ko-fi.com/wahaha303",
                        target: "_blank"
                    }
                }, [e._v("Here")])])], 2)], 1)], 1)], 1)], 1)], 1) : e._e(), o(e.currentComponent, {
                    tag: "component",
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1)
            },
            r = [],
            a = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("div", {
                    staticClass: "ab-0",
                    staticStyle: {
                        "text-align": "center",
						"font-size": e.app.useVW ? "0.835vw" : "16px",
						"padding-top": e.app.showMusicPlayer ? "32px" : "",
						"padding-bottom": (e.app.pointTypes.length > 0 || e.app.backpack.length > 0 || e.app.importedChoicesIsOpen) ? "56px" : ""
                    },
                    style: e.background
                }, [o("div", {
					class: "fadeOverlay",
					style: e.fadeOverlay
				}, 1), o("v-navigation-drawer", {
					staticStyle: {
						top: e.app.showMusicPlayer ? "32px" : "0px",
						"max-height": e.app.showMusicPlayer ? "calc(100% - 32px)" : "calc(100% - 0px)"
					},
                    attrs: {
                        "data-html2canvas-ignore": "",
                        "expand-on-hover": "",
                        permanent: e.drawer,
                        "mini-variant": e.mini,
                        app: ""
                    },
                    model: {
                        value: e.drawer,
                        callback: function(t) {
                            e.drawer = t
                        },
                        expression: "drawer"
                    }
                }, [o("v-layout", {
                    attrs: {
                        column: "",
                        "fill-height": ""
                    }
                }, [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", e._g({
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-chevron-left")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Return To Menu ")])], 1)], 1), o("v-divider"), o("v-list-item", e._g({
                    on: {
                        click: e.createNewRow
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-file-plus")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Create New Row")])], 1)], 1), e._l(e.navComponentButtons, (function(t) {
                    return o("v-list-item", {
                        key: t.title,
                        on: {
                            click: function(o) {
                                e.currentComponent = t.component
                            }
                        }
                    }, [o("v-list-item-icon", e._g({}, e.on), [o("v-icon", [e._v(e._s(t.icon))])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v(e._s(t.text))])], 1)], 1)
                }))], 2), o("v-spacer"), o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", e._g({
                    on: {
                        click: function(t) {
							e.currentComponent = "appGlobalSettings"
						}
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-cog")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Configure Global Settings")])], 1)], 1), o("v-list-item", e._g({
                    on: {
                        click: e.cleanSelectedChoices
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-select-off")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Clean Selected Choices")])], 1)], 1), o("v-list-item", e._g({
                    on: {
                        click: function(t) {
                            e.currentComponent = "appIdSearch"
                        }
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-clipboard-list")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v(" See ID/Title List ")])], 1)], 1), o("v-list-item", e._g({
                    on: {
                        click: function(t) {
							if (!e.app.disableAlterMenu) e.drawer = !e.drawer
                        }
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-menu")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v(" Use Alternate Menu ")])], 1)], 1)], 1)], 1)], 1), o("v-main", [e.drawer ? e._e() : o("v-row", {
                    staticStyle: {
                        "background-color": "lightgrey"
                    },
                    attrs: {
                        "data-html2canvas-ignore": ""
                    }
                }, [o("v-col", e._g({
                    staticClass: "text-center",
                    attrs: {
                        icon: ""
                    }
                }, e.on), [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        small: ""
                    },
                    on: {
                        click: function(t) {
                            return e.cleanCurrentComponent()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-left")])], 1)], 1), o("v-col", e._g({
                    staticClass: "text-center",
                    attrs: {
                        icon: ""
                    }
                }, e.on), [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        small: ""
                    },
                    on: {
                        click: function(t) {
                            return e.cleanSelectedChoices()
                        }
                    }
                }, [e._v(" De-select Choices ")])], 1), o("v-col", e._g({
                    staticClass: "text-center",
                    attrs: {
                        icon: ""
                    }
                }, e.on), [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        small: ""
                    },
                    on: {
                        click: function(t) {
                            e.drawer = !e.drawer
                        }
                    }
                }, [o("v-icon", [e._v("mdi-menu")])], 1)], 1), o("v-col", {
                    staticClass: "text-center"
                }, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        small: ""
                    },
                    on: {
                        click: e.createNewRow
                    }
                }, [e._v("New Row")])], 1), e._l(e.navComponentButtons, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "text-center"
                    }, [o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        attrs: {
                            small: ""
                        },
                        on: {
                            click: function(o) {
                                e.currentComponent = t.component
                            }
                        }
                    }, [e._v(e._s(t.text))])], 1)
                }))], 2), o("v-row", {
                    staticStyle: {
                        "background-color": "lightgrey"
                    },
                    attrs: {
                        "data-html2canvas-ignore": ""
                    }
                }, [o(e.currentDesignComponent, {
                    tag: "component",
                    attrs: {
                        "data-html2canvas-ignore": ""
                    },
                    on: {
                        cleanCurrentDesignComponent: function(t) {
                            e.$store.state.currentDesignComponent = t
                        }
                    }
                })], 1), e.app.pointTypes.length > 0 || e.app.backpack.length > 0 || e.app.importedChoicesIsOpen ? o("v-bottom-navigation", {
                    style: e.pointBar,
                    attrs: {
                        "data-html2canvas-ignore": "",
                        fixed: ""
                    }
                }, [o("v-col", [o("v-btn", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.app.importedChoicesIsOpen,
                        expression: "app.importedChoicesIsOpen"
                    }],
                    attrs: {
                        text: "",
                        icon: "",
                        "x-large": ""
                    },
					style: e.pointBarIcon,
                    on: {
                        click: function(t) {
                            e.currentComponent = "appActivatedViewer"
                        }
                    }
                }, [o("v-icon", [e._v("mdi-format-list-checks")])], 1)], 1), e._l(e.app.pointTypes, (function(t) {
                    return o("v-col", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.isPointtypeActivated(t),
                            expression: "\n            score.activatedId == '' ||\n            app.activated.includes(score.activatedId)\n          "
                        }],
                        key: t.index,
                        style: e.pointBarText
                    }, [o("span", {
						style: t.pointPrivateColorIsOn && "undefined" !== typeof t.privateColor ? ("color: " + t.privateColor.hexa + ";") : ""
					}, [t.iconIsOn && !t.imageOnSide && !t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e(), e._v(" " + e._s(t.beforeText) + " "), t.iconIsOn && t.imageOnSide && !t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e(), o("span", {
						staticClass: "notranslate",
                        style: t.startingSum >= 0 ? "undefined" !== typeof e.app.styling.barPointPos ? "color: " + e.app.styling.barPointPos.hex : "" : "undefined" !== typeof e.app.styling.barPointNeg ? "color: " + e.app.styling.barPointNeg.hex : ""
                    }, [e._v(e._s(" " + Math.round(t.startingSum) + " "))]), t.iconIsOn && !t.imageOnSide && t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e(), e._v(" " + e._s(t.afterText) + " "), t.iconIsOn && t.imageOnSide && t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e()])])
                })), o("v-col", [o("v-btn", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.app.backpack.length > 0 && (("undefined" === typeof e.app.hideBackpackBtn || e.app.hideBackpackBtn == 0) || (e.app.hideBackpackBtn > 0 && e.app.hideBackpackBtn == e.app.btnBackpackIsOn)),
                        expression: "app.backpack.length > 0"
                    }],
                    attrs: {
                        text: "",
                        icon: "",
                        "x-large": ""
                    },
					style: e.pointBarIcon,
                    on: {
                        click: function(t) {
							if (e.app.preloadImages) e.$set(e.app, "printThis", !0);
                            e.currentComponent = "appBackpackPreview"
                        }
                    }
                }, [o("v-icon", [e._v("mdi-checkbox-marked-circle-outline")])], 1)], 1)], 1) : e._e(), o(e.currentComponent, {
                    tag: "component",
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-row", {
                    staticClass: "pa-0",
                    attrs: {
                        "data-html2canvas-ignore": ""
                    }
                }, e._l(e.app.rows, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        class: e.window.width > 1200 && t.width ? "col-6 pt-0 pb-0" : "col-12 pt-0 pb-0",
                    }, [o("v-toolbar", {
                        staticClass: "overflow--auto grey ma-2 " + (e.$vuetify.theme.isDark ? "darken" : "lighten") + "-2"
                    }, [o("v-toolbar-title", {
                        domProps: {
                            innerHTML: e._s(e.$sanitize((("undefined" !== typeof t.debugTitle && t.debugTitle !== "") ? t.debugTitle + " " : "") + t.title))
                        }
                    }), o("v-spacer"), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(e) {
                                            t.isEditModeOn = !t.isEditModeOn
                                        }
                                    }
                                }, s), [t.isEditModeOn ? o("v-icon", [e._v("mdi-keyboard-backspace")]) : o("v-icon", [e._v("mdi-wrench")])], 1)]
                            }
                        }], null, !0)
                    }, [t.isEditModeOn ? o("span", [e._v("Preview")]) : o("span", [e._v("Edit Row")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.deleteRow(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-delete-forever")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Delete Row")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.cloneRow(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-content-copy")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Clone Row")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.moveRowUp(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-chevron-up")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Move Row Up")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.moveRowDown(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-chevron-down")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Move Row Down")])])], 1), o("app-Row", {
                        attrs: {
                            row: t
                        },
                        on: {
                            rowWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1), o("ConfirmDlg", {
                    ref: "confirm"
                })], 1), e.app.showMusicPlayer ? o("v-bottom-navigation", {
					staticClass: "v-bottom-navigation--top",
					staticStyle: {
						overflow: "hidden",
						height: "32px"
					},
					attrs: {
                        "data-html2canvas-ignore": "",
                        fixed: ""
                    }
				}, [o("v-row", [o("v-toolbar", {
					staticClass: "px-4 " + (e.$vuetify.theme.isDark ? "grey darken-2" : "grey lighten-5"),
					attrs: {
						height: "32"
					}
				}, [o("v-btn", {
					staticStyle: {
						"min-width": "32px",
						"border-radius": "50%",
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
                    attrs: {
                        icon: "",
						small: ""
                    },
                    on: {
                        click: function(t) {
							if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.curBgmLength !== 0) {
								e.app.bgmIsPlaying ? bgmPlayer.pauseVideo() : bgmPlayer.playVideo();
								e.$set(e.app, "bgmIsPlaying", !e.app.bgmIsPlaying);
								if (e.app.bgmIsPlaying) {
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
									let k = 0,
										o = 0;
									e.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !e.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== e.app.curBgmTime) {
												if (k !== curTime) {
													e.$set(e.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > e.app.curBgmLength) o = 1;
													e.$set(e.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												e.$set(e.app, "curBgmTime", o);
											}
										}
									}, 1000);
								} else {
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
								}
							}
                        }
                    }
                }, [o("v-icon", [e.app.bgmIsPlaying ? e._v("mdi-pause") : e._v("mdi-play")])], 1), o("v-btn", {
					staticStyle: {
						"min-width": "32px",
						"border-radius": "50%",
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
                    attrs: {
                        icon: "",
						small: ""
                    },
                    on: {
                        click: function(t) {
							if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.curBgmLength !== 0) {
								bgmPlayer.stopVideo();
								e.$set(e.app, "bgmIsPlaying", !1);
								if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
								e.$set(e.app, "curBgmTime", 0);
							}
                        }
                    }
                }, [o("v-icon", [e._v("mdi-stop")])], 1), o("v-btn", {
					staticStyle: {
						"min-width": "32px",
						"border-radius": "50%",
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
                    attrs: {
                        icon: "",
						small: ""
                    },
                    on: {
                        click: function(t) {
							if ("undefined" !== typeof bgmPlayer) {
								if (!e.app.isMute && "undefined" !== typeof bgmPlayer.mute) {
									e.$set(e.app, "isMute", !0);
									bgmPlayer.mute();
								} else if (e.app.isMute && "undefined" !== typeof bgmPlayer.unMute) {
									e.$set(e.app, "isMute", !1);
									bgmPlayer.unMute();
								}
							}
                        }
                    }
                }, [o("v-icon", [e.app.isMute ? e._v("mdi-volume-off") : e._v("mdi-volume-high")])], 1), o("v-slider", {
					staticStyle: {
						"max-width": "104px",
						"padding-right": "4px"
					},
					attrs: {
						"hide-details": "",
						max: 100,
						min: 0,
						color: e.$vuetify.theme.isDark ? "white" : "black",
						"track-color": "gray",
						disabled: e.app.isMute || e.app.isFadingOut
					},
					model: {
						value: e.app.curVolume,
						expression: "app.curVolume"
					},
					on: {
						change: function(t) {
							e.$set(e.app, "curVolume", t);
							if ("undefined" !== typeof bgmPlayer.setVolume) {
								if (!e.app.isFadingOut) bgmPlayer.setVolume(t);
							}
						}
					}
				}), e.window.width > 600 ? e._e() : o("v-spacer"), o("v-col", {
					staticClass: "pa-0",
					staticStyle: {
						"max-width": "150px",
						overflow: "hidden"
					}
				}, [o("span", {
					staticClass: "scrolling-text"
				}, [e._v(e._s(e.app.bgmTitle))])], 1), e.window.width > 600 ? [o("v-slider", {
					attrs: {
						"hide-details": "",
						max: e.app.curBgmLength,
						min: 0,
						color: e.$vuetify.theme.isDark ? "white" : "black",
						"track-color": "gray",
						disabled: "undefined" === typeof bgmPlayer || "undefined" === typeof bgmPlayer.playerInfo.videoData || e.app.curBgmLength === 0 || !e.app.bgmIsPlaying
					},
					model: {
						value: e.app.curBgmTime,
						expression: "app.curBgmTime"
					},
					on: {
						change: function(t) {
							e.$set(e.app, "curBgmTime", t);
							bgmPlayer.seekTo(t, true);
						},
						mousedown: function(t) {
							e.$set(e.app, "isSeeking", !0);
						},
						mouseup: function(t) {
							setTimeout(() => {
								e.$set(e.app, "isSeeking", !1);
							}, 100);
						},
					},
				}), o("v-col", {
					staticClass: "pa-0",
					staticStyle: {
						"max-width": "150px"
					}
				}, [o("span", [e._v(e._s(e.bgmTime))])], 1)] : e._e()], 1)], 1)], 1) : e._e(), e.globalVariables.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.globalVariables.snackbar,
                        callback: function(t) {
                            e.globalVariables.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.globalVariables.text))])])], 1) : e._e()], 1)
            },
            n = [],
            l = (o("c975"), o("a434"), o("d3b7"), o("96cf"), o("1da1")),
            c = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("div", {
                    staticStyle: {
                        "text-align": "center"
                    },
                    style: e.rowBody,
					staticClass: "row-" + e.row.id + "-bg"
                }, [o("v-card", {
					ref: "panels",
                    staticClass: "my-n2"
                }, [e.row.isEditModeOn ? o("v-toolbar", {
                    staticClass: "overflow--auto grey " + (e.$vuetify.theme.isDark ? "darken" : "lighten") + "-3",
                    attrs: {
                        dense: "",
                        flat: ""
                    }
                }, [o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        return e.createNewObject(e.row)
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-file-plus")])], 1)]
                        }
                    }], null, !1, 1186034228)
                }, [o("span", [e._v("Create New Object")])]), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
                                on: {
                                    click: function(t) {
                                        return e.createNewObjectMultiple(e.row)
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-file-multiple")])], 1)]
                        }
                    }], null, !1, 1186034228)
                }, [o("span", [e._v("Create New Objects")])]), e._l(e.rowIconButtons, (function(t) {
                    return o("v-tooltip", {
                        key: t.index,
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            e.currentComponent = t.component
                                        }
                                    }
                                }, s), [o("v-icon", [e._v(e._s(t.icon))])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v(e._s(t.text))])])
                }))], 2) : e._e(), e.row.isEditModeOn ? o("v-row", [o("v-row", {
                    staticClass: "pa-2 ma-2"
                }, [o("v-col", {
                    staticClass: "pa-2",
					attrs: {
						cols: e.pWindow.width > 1264 ? "2" : e.pWindow.width > 960 ? "3" : e.pWindow.width > 600 ? "4" : e.pWindow.width > 470 ? "6" : "12"
					}
                }, [e.row.isButtonRow ? o("v-col", {
                    staticClass: "pa-0"
                }, [o("v-btn", {
                    staticClass: "mb-2",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appButtonSettings"
                        }
                    }
                }, [e._v("Open Button Settings")])], 1) : o("v-col", {
                    staticClass: "pa-0"
                }, [o("v-img", {
                    attrs: {
                        "max-height": "140",
                        "max-width": "300",
                        contain: "",
                        src: e.row.image
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appImageUpload"
                        }
                    }
                }), o("v-btn", {
                    staticClass: "mb-2",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appImageUpload"
                        }
                    }
                }, [e._v("Change Image")])], 1)], 1), o("v-col", {
                    staticClass: "pa-2",
					attrs: {
						cols: e.pWindow.width > 1264 ? "2" : e.pWindow.width > 960 ? "3" : e.pWindow.width > 600 ? "4" : e.pWindow.width > 470 ? "6" : "12"
					}
                }, [o("v-col", [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Button?"
                    },
                    model: {
                        value: e.row.isButtonRow,
                        callback: function(t) {
                            e.$set(e.row, "isButtonRow", t)
                        },
                        expression: "row.isButtonRow"
                    }
                })], 1), o("v-col", [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Non-activatable?"
                    },
                    model: {
                        value: e.row.isInfoRow,
                        callback: function(t) {
                            e.$set(e.row, "isInfoRow", t)
                        },
                        expression: "row.isInfoRow"
                    }
                })], 1), o("v-col", [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Selected Choices?"
                    },
                    model: {
                        value: e.row.isResultRow,
                        callback: function(t) {
                            e.$set(e.row, "isResultRow", t)
                        },
                        expression: "row.isResultRow"
                    }
                })], 1), o("v-col", [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Half of the screen?"
                    },
                    model: {
                        value: e.row.width,
                        callback: function(t) {
                            e.$set(e.row, "width", t)
                        },
                        expression: "row.width"
                    }
                })], 1), e.row.isResultRow ? o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
                        "deletable-chips": "",
                        chips: "",
                        items: e.groups,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Selected Choices from Group Id",
                        placeholder: "All Rows and Objects"
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.name)])])],
					},
                    model: {
                        value: e.row.resultGroupId,
                        callback: function(t) {
                            e.$set(e.row, "resultGroupId", t)
                        },
                        expression: "row.resultGroupId"
                    }
                }) : e._e()], 1), o("v-col", {
                    staticClass: "pa-2",
					attrs: {
						cols: e.pWindow.width > 1264 ? "2" : e.pWindow.width > 960 ? "3" : e.pWindow.width > 600 ? "4" : e.pWindow.width > 470 ? "6" : "12"
					}
                }, [o("v-select", {
                    attrs: {
						"hide-details" : "",
                        items: e.templates,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Template"
                    },
                    model: {
                        value: e.row.template,
                        callback: function(t) {
                            e.$set(e.row, "template", t)
                        },
                        expression: "row.template"
                    }
                }), o("v-text-field", {
                    attrs: {
						"hide-details" : "",
                        label: "Row Title",
                        placeholder: "Placeholder",
                        filled: ""
                    },
                    model: {
                        value: e.row.title,
                        callback: function(t) {
                            e.$set(e.row, "title", t)
                        },
                        expression: "row.title"
                    }
                }), o("v-text-field", {
                    attrs: {
						"hide-details" : "",
                        label: "Debug Title",
                        placeholder: "Placeholder",
                        filled: ""
                    },
                    model: {
                        value: e.row.debugTitle,
                        callback: function(t) {
                            e.$set(e.row, "debugTitle", t)
                        },
                        expression: "row.debugTitle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Allowed Choices",
                        placeholder: "Placeholder",
                        filled: ""
                    },
                    model: {
                        value: e.row.allowedChoices,
                        callback: function(t) {
                            e.$set(e.row, "allowedChoices", e._n(t))
                        },
                        expression: "row.allowedChoices"
                    }
                })], 1), o("v-col", {
                    staticClass: "pa-2",
					attrs: {
						cols: e.pWindow.width > 1264 ? "2" : e.pWindow.width > 960 ? "3" : e.pWindow.width > 600 ? "4" : e.pWindow.width > 470 ? "6" : "12"
					}
                }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.objectWidths,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Objects Per Row"
                    },
                    model: {
                        value: e.row.objectWidth,
                        callback: function(t) {
                            e.$set(e.row, "objectWidth", t)
                        },
                        expression: "row.objectWidth"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.justify,
                        "item-text": "value",
                        "item-value": "value",
                        filled: "",
                        label: "Choices Justify"
                    },
                    model: {
                        value: e.row.rowJustify,
                        callback: function(t) {
                            e.$set(e.row, "rowJustify", t)
                        },
                        expression: "row.rowJustify"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Row Id",
                        placeholder: "Placeholder",
                        filled: "",
                    },
                    model: {
                        value: e.row.id,
                        callback: function(t) {
                            e.app.compR[t] = e.app.compR[e.row.id], e.$delete(e.app.compR, e.row.id), e.$set(e.row, "id", t)
                        },
                        expression: "row.id"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Selected Choices",
                        placeholder: "Placeholder",
                        filled: ""
                    },
                    model: {
                        value: e.row.currentChoices,
                        callback: function(t) {
                            e.$set(e.row, "currentChoices", e._n(t))
                        },
                        expression: "row.currentChoices"
                    }
                })], 1), o("v-col", {
					staticClass: "pa-2",
					attrs: {
						cols: e.pWindow.width > 1264 ? "4" : e.pWindow.width > 960 ? "12" : e.pWindow.width > 600 ? "8" : "12"
					}
                }, [o("v-textarea", {
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        rows: "8",
                        label: "Row Text"
                    },
                    model: {
                        value: e.row.titleText,
                        callback: function(t) {
                            e.$set(e.row, "titleText", t)
                        },
                        expression: "row.titleText"
                    }
                })], 1), o("v-row", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-col", [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Deselects choices when Row lack requirements?"
                    },
                    model: {
                        value: e.row.deselectChoices,
                        callback: function(t) {
                            e.$set(e.row, "deselectChoices", t)
                        },
                        expression: "row.deselectChoices"
                    }
                })], 1), o("v-col", [e.row.isResultRow ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Choices will all be 'Template Top' and Row Width"
                    },
                    model: {
                        value: e.row.choicesShareTemplate,
                        callback: function(t) {
                            e.$set(e.row, "choicesShareTemplate", t)
                        },
                        expression: "row.choicesShareTemplate"
                    }
                }) : e._e()], 1), o("v-col", [e.row.isResultRow ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the contents of the choices."
                    },
                    model: {
                        value: e.row.textIsRemoved,
                        callback: function(t) {
                            e.$set(e.row, "textIsRemoved", t);
							if (!t) {
								e.$set(e.row, "objectTitleRemoved", t), e.$set(e.row, "objectImageRemoved", t), e.$set(e.row, "objectTextRemoved", t), e.$set(e.row, "objectScoreRemoved", t), e.$set(e.row, "objectRequirementRemoved", t), e.$set(e.row, "addonTitleRemoved", t), e.$set(e.row, "addonImageRemoved", t), e.$set(e.row, "addonTextRemoved", t);
							} else {
								e.$set(e.row, "objectTitleRemoved", !1), e.$set(e.row, "objectImageRemoved", !1), e.$set(e.row, "objectTextRemoved", !1), e.$set(e.row, "objectScoreRemoved", !1), e.$set(e.row, "objectRequirementRemoved", !1), e.$set(e.row, "addonTitleRemoved", !1), e.$set(e.row, "addonImageRemoved", !1), e.$set(e.row, "addonTextRemoved", !1);
							}
                        },
                        expression: "row.textIsRemoved"
                    }
                }) : e._e()], 1), o("v-col", [e.row.isResultRow ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Show the title of the row in the choice."
                    },
                    model: {
                        value: e.row.resultShowRowTitle,
                        callback: function(t) {
                            e.$set(e.row, "resultShowRowTitle", t)
                        },
                        expression: "row.resultShowRowTitle"
                    }
                }) : e._e()], 1)], 1), o("v-row", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the title of the choices."
                    },
                    model: {
                        value: e.row.objectTitleRemoved,
                        callback: function(t) {
                            e.$set(e.row, "objectTitleRemoved", t)
                        },
                        expression: "row.objectTitleRemoved"
                    }
                }) : e._e()], 1), o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the image of the choices."
                    },
                    model: {
                        value: e.row.objectImageRemoved,
                        callback: function(t) {
                            e.$set(e.row, "objectImageRemoved", t)
                        },
                        expression: "row.objectImageRemoved"
                    }
                }) : e._e()], 1), o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the text of the choices."
                    },
                    model: {
                        value: e.row.objectTextRemoved,
                        callback: function(t) {
                            e.$set(e.row, "objectTextRemoved", t)
                        },
                        expression: "row.objectTextRemoved"
                    }
                }) : e._e()], 1), o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the scores of the choices."
                    },
                    model: {
                        value: e.row.objectScoreRemoved,
                        callback: function(t) {
                            e.$set(e.row, "objectScoreRemoved", t)
                        },
                        expression: "row.objectScoreRemoved"
                    }
                }) : e._e()], 1)], 1), o("v-row", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the requirements of the choices."
                    },
                    model: {
                        value: e.row.objectRequirementRemoved,
                        callback: function(t) {
                            e.$set(e.row, "objectRequirementRemoved", t)
                        },
                        expression: "row.objectRequirementRemoved"
                    }
                }) : e._e()], 1), o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the title of the addons."
                    },
                    model: {
                        value: e.row.addonTitleRemoved,
                        callback: function(t) {
                            e.$set(e.row, "addonTitleRemoved", t)
                        },
                        expression: "row.addonTitleRemoved"
                    }
                }) : e._e()], 1), o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the image of the addons."
                    },
                    model: {
                        value: e.row.addonImageRemoved,
                        callback: function(t) {
                            e.$set(e.row, "addonImageRemoved", t)
                        },
                        expression: "row.addonImageRemoved"
                    }
                }) : e._e()], 1), o("v-col", [e.row.textIsRemoved ? o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Remove the text of the addons."
                    },
                    model: {
                        value: e.row.addonTextRemoved,
                        callback: function(t) {
                            e.$set(e.row, "addonTextRemoved", t)
                        },
                        expression: "row.addonTextRemoved"
                    }
                }) : e._e()], 1)], 1)], 1)], 1) : e._e(), e.row.isEditModeOn ? o("v-row", {
                    staticClass: "mx-0"
                }, e._l(e.row.requireds, (function(t, i) {
                    return o("v-col", {
                        key: t.index
                    }, [o("ObjectRequirement", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            required: t
                        },
                        on: {
                            requiredWasChanged: function(e) {
                                t = e
                            }
                        }
                    }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.row.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1)
                })), 1) : e._e()], 1), o("span", [!e.row.isEditModeOn && e.checkIfDeselect(e.row) ? o("div", {
                    style: "" != e.row.title && "" != e.row.text ? e.rowBackground : ""
                }, [4 == e.row.template ? o("div", {
                    staticClass: "col nopadding" + " row-" + e.row.id
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e(), e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    ref: "rowBtn",
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])])], 1) : e._e(), 5 == e.row.template ? o("div", {
                    staticClass: "col nopadding" + " row-" + e.row.id
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    ref: "rowBtn",
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])]), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()], 1) : e._e(), 1 == e.row.template || e.window.width < 1e3 ? o("div", {
                    staticClass: "col pa-0" + " row-" + e.row.id
                }, [e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])]), "" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()], 1) : e._e(), 2 == e.row.template && e.window.width > 1e3 ? o("div", {
                    staticClass: "row nopadding" + " row-" + e.row.id
                }, [o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": (100 - e.rowImageStyling.rowImageBoxWidth) + "%"
					}
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()]), o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": e.rowImageStyling.rowImageBoxWidth + "%"
					}
                }, [e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])])], 1)]) : e._e(), 3 == e.row.template && e.window.width > 1e3 ? o("div", {
                    staticClass: "row nopadding" + " row-" + e.row.id
                }, [o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": e.rowImageStyling.rowImageBoxWidth + "%"
					}
                }, [e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    ref: "rowBtn",
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])])], 1), o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": (100 - e.rowImageStyling.rowImageBoxWidth) + "%"
					}
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()])]) : e._e()]) : e._e(), e.row.isResultRow ? o("v-row", {
                    staticClass: "display-flex row objectRow",
                    attrs: {
                        justify: e.row.rowJustify
                    }
                }, e._l(e.resultArray, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "nopadding",
                        class: "" == t.objectWidth || e.row.choicesShareTemplate ? e.row.objectWidth : t.objectWidth
                    }, [o("AppObject", {
                        class: e.objectHeight,
                        attrs: {
                            isEditModeOn: e.row.isEditModeOn,
                            activated: e.activated,
                            object: t,
                            row: e.row,
                            objects: e.row.objects
                        },
                        on: {
                            objectWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1) : o("v-row", {
                    staticClass: "display-flex row objectRow pa-0 ma-0",
                    attrs: {
                        justify: e.row.rowJustify
                    }
                }, e._l(e.row.objects, (function(t) {
                    return o("v-col", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.checkRequireds(t) || e.row.isEditModeOn || !e.filterStyling(e.row, t),
                            expression: "\n          checkRequireds(object) ||\n          row.isEditModeOn || (object.privateFilterIsOn ?\n           !object.styling.reqFilterVisibleIsOn : !styling.reqFilterVisibleIsOn) \n        "
                        }],
                        key: t.index,
                        staticClass: "nopadding",
                        class: e.objectWidthClass(t)
                    }, [o("AppObject", {
                        class: e.objectHeight,
                        attrs: {
                            isEditModeOn: e.row.isEditModeOn,
                            activated: e.activated,
                            object: t,
                            row: e.row,
                            objects: e.row.objects
                        },
                        on: {
                            objectWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        row: e.row
                    },
                    on: {
                        rowWasChanged: function(t) {
                            e.row = t
                        },
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("ConfirmDlg", {
                    ref: "confirm"
                })], 1)
            },
            d = [],
            p = (o("4160"), o("caad"), o("4d63"), o("ac1f"), o("25f0"), o("2532"), o("5319"), o("1276"), o("159b"), function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("span", [e.isEditModeOn ? o("v-row", {ref: "ThisComp"}, [o("v-card", {
                    staticClass: "ma-1",
                    attrs: {
                        width: "100%",
                        outlined: ""
                    }
                }, [e.row.isEditModeOn ? o("v-toolbar", {
                    staticClass: "overflow--auto grey " + (e.$vuetify.theme.isDark ? "darken" : "lighten") + "-3",
                    attrs: {
                        dense: "",
                        flat: ""
                    }
                }, [o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        return e.moveObjectUp()
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-chevron-left")])], 1)]
                        }
                    }], null, !1, 2634906302)
                }, [o("span", [e._v("Move Left")])]), o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        return e.deleteObject(t)
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-delete-forever")])], 1)]
                        }
                    }], null, !1, 4159154053)
                }, [o("span", [e._v("Delete Object")])]), o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        e.currentComponent = "ObjectSettings"
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-decagram")])], 1)]
                        }
                    }], null, !1, 2595464600)
                }, [o("span", [e._v("Object Settings")])]), o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        return e.cloneObject()
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-content-copy")])], 1)]
                        }
                    }], null, !1, 3053660957)
                }, [o("span", [e._v("Clone Object")])]), o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        return e.moveObjectDown()
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-chevron-right")])], 1)]
                        }
                    }], null, !1, 1579081170)
                }, [o("span", [e._v("Move Right")])]), o("v-spacer")], 1) : e._e(), o("v-col", {
                    staticClass: "pa-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e.row.isWeightedRandom && e.row.isButtonRow && e.row.buttonRandom ? o("v-text-field", {
                    attrs: {
                        type: "number",
                        placeholder: "100",
                        "hide-details": "",
                        label: "Random Weight",
                        filled: ""
                    },
                    model: {
                        value: e.object.randomWeight,
                        callback: function(t) {
                            e.$set(e.object, "randomWeight", t)
                        },
                        expression: "object.randomWeight"
                    }
                }) : e._e()], 1), o("v-col", {
                    staticClass: "pt-0 px-12",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-col", {
                    staticClass: "px-0 pt-1"
                }, [o("v-img", {
                    attrs: {
                        "max-height": "175",
                        contain: "",
                        src: e.object.image
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appImageUpload"
                        }
                    }
                })], 1), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appImageUpload"
                        }
                    }
                }, [e._v("Change Image")])], 1), o("v-col", {
                    staticClass: "pt-0 pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-textarea", {
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Object Text"
                    },
                    model: {
                        value: e.object.text,
                        callback: function(t) {
                            e.$set(e.object, "text", t)
                        },
                        expression: "object.text"
                    }
                })], 1), o("v-row", {
                    staticClass: "py-0"
                }, [o("v-col", {
                    staticClass: "col-md-6 pr-1 pb-2"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Object Title",
                        filled: ""
                    },
                    model: {
                        value: e.object.title,
                        callback: function(t) {
                            e.$set(e.object, "title", t)
                        },
                        expression: "object.title"
                    }
                })], 1), o("v-col", {
                    staticClass: "col-md-6 pl-1 pb-2"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Object Id",
                        filled: ""
                    },
                    model: {
                        value: e.object.id,
                        callback: function(t) {
							if (e.object.isMultipleUseVariable) e.$delete(e.app.objectMap, e.object.id), e.$set(e.app.objectMap, t, e.object.multipleUseVariable);
                            e.app.comp[t] = e.app.comp[e.object.id], e.$delete(e.app.comp, e.object.id), e.$set(e.object, "id", t);
							for (var a = 0; a < e.object.addons.length; a++) e.$set(e.object.addons[a], "parentId", t);
                        },
                        expression: "object.id"
                    }
                })], 1)], 1), !e.app.hideChoiceDT ? o("v-row", {
                    staticClass: "py-0"
                }, [o("v-col", {
                    staticClass: "col-12 pt-1 pb-2"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Debug Title",
						placeholder: "Placeholder",
                        filled: ""
                    },
                    model: {
                        value: e.object.debugTitle,
                        callback: function(t) {
                            e.$set(e.object, "debugTitle", t)
                        },
                        expression: "object.debugTitle"
                    }
                })], 1)], 1) : e._e(), o("v-row", {
                    staticClass: "py-0"
                }, [o("v-col", {
                    staticClass: "col-md-6 pr-1 pt-1"
                }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.templates,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Template"
                    },
                    model: {
                        value: e.object.template,
                        callback: function(t) {
                            e.$set(e.object, "template", t)
                        },
                        expression: "object.template"
                    }
                })], 1), o("v-col", {
                    staticClass: "col-md-6 pl-1 pt-1"
                }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.objectWidths,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Object Width"
                    },
                    model: {
                        value: e.object.objectWidth,
                        callback: function(t) {
                            e.$set(e.object, "objectWidth", t)
                        },
                        expression: "object.objectWidth"
                    }
                })], 1)], 1), e.row.isEditModeOn ? o("v-toolbar", {
                    staticClass: "overflow--auto grey " + (e.$vuetify.theme.isDark ? "darken" : "lighten") + "-3",
                    attrs: {
                        dense: "",
                        flat: ""
                    }
                }, [o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        return e.createNewScore()
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-numeric-9-plus-box")])], 1)]
                        }
                    }], null, !1, 2211742466)
                }, [o("span", [e._v("Create Score")])]), o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        return e.createNewAddon()
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-comment-plus")])], 1)]
                        }
                    }], null, !1, 2716776478)
                }, [o("span", [e._v("Create Addon")])]), o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
                                        e.currentComponent = "appRequirement"
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-key-plus")])], 1)]
                        }
                    }], null, !1, 971814284)
                }, [o("span", [e._v("Create Requirement")])]), o("v-spacer"), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: e.addObjectToGroup
                                }
                            }, i), [o("v-icon", [e._v("mdi-key")])], 1)]
                        }
                    }], null, !1, 593545891)
                }, [o("span", [e._v("Add To Group")])]), o("v-spacer")], 1) : e._e(), o("v-expansion-panels", {
					ref: "panels",
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [e.object.scores.length > 0 ? o("v-expansion-panel", [o("v-expansion-panel-header", {
                    domProps: {
                        innerHTML: e._s(e.$sanitize("Scores: " + e.object.scores.length, e.sanitizeArg))
                    }
                }), o("v-expansion-panel-content", e._l(e.object.scores, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-0",
                        attrs: {
                            cols: "12"
                        }
                    }, [o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            app: e.app,
                            score: t,
							scores: e.object.scores,
							isSelectableMultiple: e.object.isSelectableMultiple
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }), o("v-row", {
                        staticClass: "pa-0"
                    }, [o("v-col", {
                        staticClass: "pa-0 d-flex",
                        attrs: {
                            cols: e.pWindow.width > 301 ? "6" : "12"
                        }
                    }, [o("v-checkbox", {
                        staticClass: "shrink mr-2 mt-1",
                        attrs: {
                            label: "Show Score?"
                        },
                        model: {
                            value: t.showScore,
                            callback: function(o) {
                                e.$set(t, "showScore", o)
                            },
                            expression: "score.showScore"
                        }
                    })], 1), o("v-col", {
                        staticClass: "py-0 d-flex",
                        attrs: {
                            cols: e.pWindow.width > 301 ? "6" : "12"
                        }
                    }, [t.showScore ? o("v-checkbox", {
                        staticClass: "shrink mr-2 mt-1",
                        attrs: {
                            label: "Hide Value?"
                        },
                        model: {
                            value: t.hideValue,
                            callback: function(o) {
                                e.$set(t, "hideValue", o)
                            },
                            expression: "score.hideValue"
                        }
                    }) : e._e()], 1), o("v-col", {
                        staticClass: "pt-1",
                        attrs: {
                            cols: "12"
                        }
                    }, [o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.object.scores)
                            }
                        }
                    }, [e._v("Delete")])], 1)], 1)], 1)
                })), 1)], 1) : e._e(), e.object.addons.length > 0 ? o("v-expansion-panel", [o("v-expansion-panel-header", {
                    domProps: {
                        innerHTML: e._s(e.$sanitize("Addons: " + e.object.addons.length, e.sanitizeArg))
                    }
                }), o("v-expansion-panel-content", [o("v-col", {
					staticClass: "pa-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.justify,
                        "item-text": "value",
                        "item-value": "value",
                        filled: "",
                        label: "Addons Justify"
                    },
                    model: {
                        value: e.object.addonJustify,
                        callback: function(t) {
                            e.$set(e.object, "addonJustify", t)
                        },
                        expression: "object.addonJustify"
                    }
                })], 1), e._l(e.object.addons, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-0",
                        attrs: {
                            cols: "12"
                        }
                    }, [o("ObjectAddon", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
							addons: e.object.addons
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.object.addons)
                            }
                        }
                    }, [e._v("Delete")])], 1)
                }))], 1)], 1) : e._e(), e.object.requireds.length > 0 ? o("v-expansion-panel", [o("v-expansion-panel-header", {
                    domProps: {
                        innerHTML: e._s(e.$sanitize("Requirements: " + e.object.requireds.length, e.sanitizeArg))
                    }
                }), o("v-expansion-panel-content", [o("v-row", {
                    staticClass: "pa-0"
                }, e._l(e.object.requireds, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-2",
                        attrs: {
                            cols: ("undefined" !== typeof t.requireds && t.requireds.length > 0) || e.pWindow.width < 337 ? "12" : "6"
                        }
                    }, [o("ObjectRequirement", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            required: t,
							requireds: e.object.requireds
                        },
                        on: {
                            requiredWasChanged: function(e) {
                                t = e
                            }
                        }
                    }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.object.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1)
                })), 1)], 1)], 1) : e._e(), "undefined" !== typeof e.object.groups && e.object.groups.length > 0 ? o("v-expansion-panel", [o("v-expansion-panel-header", {
                    domProps: {
                        innerHTML: e._s(e.$sanitize("Groups: " + ("undefined" !== typeof e.object.groups ? e.object.groups.length : ""), e.sanitizeArg))
                    }
                }), o("v-expansion-panel-content", [o("v-row", {
                    staticClass: "pa-0"
                }, e._l(e.object.groups, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-2",
                        attrs: {
                            cols: e.pWindow.width > 301 ? "6" : "12"
                        }
                    }, [o("v-card", [o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
                            items: e.app.groups,
                            "item-text": "name",
                            "item-value": "id",
                            filled: "",
                            label: "Group Name"
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
								if ("undefined" !== t.id && t.id !== o) {
									for (var a = 0; a < e.app.groups.length; a++) {
										if (e.app.groups[a].id == t.id) {
											e.app.groups[a].elements = e.app.groups[a].elements.filter(item => item.id !== e.object.id);
										} else if (e.app.groups[a].id == o) {
											!e.app.groups[a].elements.includes(e.object.id) && e.app.groups[a].elements.push({id: e.object.id});
										}
									}
								}
                                e.$set(t, "id", o);
                            },
                            expression: "group.id"
                        }
                    }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
								for (var a = 0; a < e.app.groups.length; a++) {
									if (e.app.groups[a].id == e.object.groups[i].id) {
										e.app.groups[a].elements = e.app.groups[a].elements.filter(item => item.id !== e.object.id); 
										break
									}
								}
                                return e.deleteEvent(i, e.object.groups)
                            }
                        }
                    }, [e._v("Delete")])], 1)], 1)
                })), 1)], 1)], 1) : e._e(), o("v-expansion-panel", [o("v-expansion-panel-header", {
                    domProps: {
                        innerHTML: e._s("Functions: ")
                    }
                }), o("v-expansion-panel-content", [o("v-checkbox", {
                    staticClass: "mt-n2",
                    attrs: {
                        "hide-details": "",
                        label: "Expand 'Manage This choice' Functions"
                    },
                    model: {
                        value: e.object.thisChoiceFunction,
                        callback: function(t) {
                            e.$set(e.object, "thisChoiceFunction", t)
                        },
                        expression: "object.thisChoiceFunction"
                    }
                }), e.object.thisChoiceFunction ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "The choice can be selected multiple times"
                    },
                    model: {
                        value: e.object.isSelectableMultiple,
                        callback: function(t) {
                            e.$set(e.object, "isSelectableMultiple", t);
							if (!t) {
								e.$set(e.object, "isMultipleUseVariable", t), e.$set(e.object, "multipleScoreId", ""), e.$set(e.object, "hideMultipleCounter", t);
								e.$delete(e.app.objectMap, e.object.id);
							}
                        },
                        expression: "object.isSelectableMultiple"
                    }
                }), e.object.isSelectableMultiple ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Press this to use a simple variable instead of a Point-type?"
                    },
                    model: {
                        value: e.object.isMultipleUseVariable,
                        callback: function(t) {
                            e.$set(e.object, "isMultipleUseVariable", t), e.$set(e.object, "multipleScoreId", "");
							t ? e.$set(e.app.objectMap, e.object.id, e.object.multipleUseVariable) : e.$delete(e.app.objectMap, e.object.id);
                        },
                        expression: "object.isMultipleUseVariable"
                    }
                }) : e._e(), e.object.isSelectableMultiple ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Hide the counter if the choice is missing requirements?"
                    },
                    model: {
                        value: e.object.hideMultipleCounter,
                        callback: function(t) {
                            e.$set(e.object, "hideMultipleCounter", t)
                        },
                        expression: "object.hideMultipleCounter"
                    }
                }) : e._e(), e.object.isSelectableMultiple && !e.object.isMultipleUseVariable ? o("p", [e._v(" The point type used here should only be used for this choice, and it can be hidden by placing something in 'Id needed to activate' in Features -> Manage Points. ")]) : e._e(), e.object.isSelectableMultiple && !e.object.isMultipleUseVariable ? o("v-autocomplete", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type that will be used"
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.name)])])],
					},
                    model: {
                        value: e.object.multipleScoreId,
                        callback: function(t) {
                            e.$set(e.object, "multipleScoreId", t)
                        },
                        expression: "object.multipleScoreId"
                    }
                }) : e._e(), e.object.isSelectableMultiple ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Number where the minus will stop working",
                        filled: ""
                    },
                    model: {
                        value: e.object.numMultipleTimesMinus,
                        callback: function(t) {
                            e.$set(e.object, "numMultipleTimesMinus", t), e.$set(e.object, "initMultipleTimesMinus", t)
                        },
                        expression: "object.numMultipleTimesMinus"
                    }
                }) : e._e(), e.object.isSelectableMultiple ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Number where the pluss will stop working",
                        filled: ""
                    },
                    model: {
                        value: e.object.numMultipleTimesPluss,
                        callback: function(t) {
                            e.$set(e.object, "numMultipleTimesPluss", t)
                        },
                        expression: "object.numMultipleTimesPluss"
                    }
                }) : e._e(), e.object.isSelectableMultiple ? o("v-divider") : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will be impossible"
                    },
                    model: {
                        value: e.object.isNotSelectable,
                        callback: function(t) {
                            e.$set(e.object, "isNotSelectable", t)
                        },
                        expression: "object.isNotSelectable"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Once this choice is selected, it cannot be canceled."
                    },
                    model: {
                        value: e.object.selectOnce,
                        callback: function(t) {
                            e.$set(e.object, "selectOnce", t)
                        },
                        expression: "object.selectOnce"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "This choice is not deselected by the Clean Choice feature."
                    },
                    model: {
                        value: e.object.notDeselectedByClean,
                        callback: function(t) {
                            e.$set(e.object, "notDeselectedByClean", t)
                        },
                        expression: "object.notDeselectedByClean"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Multiply Points when activated:"
                    },
                    model: {
                        value: e.object.multiplyPointtypeIsOn,
                        callback: function(t) {
                            e.$set(e.object, "multiplyPointtypeIsOn", t)
                        },
                        expression: "object.multiplyPointtypeIsOn"
                    }
                }), e.object.multiplyPointtypeIsOn ? o("v-col", {
                    staticClass: "pb-0"
                }, [e._v("Not to be used on choices with scores. Wont work if the Allowed Choices on the row is bigger than 0.")]) : e._e(), e.object.multiplyPointtypeIsOn ? o("v-autocomplete", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
						multiple: "",
                        label: "Point-Type to multiply "
                    },
                    model: {
                        value: e.object.pointTypeToMultiply,
                        callback: function(t) {
                            e.$set(e.object, "pointTypeToMultiply", t)
                        },
                        expression: "object.pointTypeToMultiply"
                    }
                }) : e._e(), e.object.multiplyPointtypeIsOn && !e.object.multiplyPointtypeIsId ? o("v-text-field", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
						type: "number",
                        label: "Multiplied by X",
                        filled: ""
                    },
                    model: {
                        value: e.object.multiplyWithThis,
                        callback: function(t) {
                            e.$set(e.object, "multiplyWithThis", t)
                        },
                        expression: "object.multiplyWithThis"
                    }
                }) : e._e(), e.object.multiplyPointtypeIsOn && e.object.multiplyPointtypeIsId ? o("v-autocomplete", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Multiplied with this Point-Type"
                    },
                    model: {
                        value: e.object.multiplyWithThis,
                        callback: function(t) {
                            e.$set(e.object, "multiplyWithThis", t)
                        },
                        expression: "object.multiplyWithThis"
                    }
                }) : e._e(), e.object.multiplyPointtypeIsOn ? o("v-checkbox", {
                    staticClass: "mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Is point-type id, multiplies by the sum."
                    },
                    model: {
                        value: e.object.multiplyPointtypeIsId,
                        callback: function(t) {
                            e.$set(e.object, "multiplyPointtypeIsId", t)
                        },
                        expression: "object.multiplyPointtypeIsId"
                    }
                }) : e._e(), e.object.multiplyPointtypeIsOn ? o("v-divider") : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Divide Points when activated:"
                    },
                    model: {
                        value: e.object.dividePointtypeIsOn,
                        callback: function(t) {
                            e.$set(e.object, "dividePointtypeIsOn", t)
                        },
                        expression: "object.dividePointtypeIsOn"
                    }
                }), e.object.dividePointtypeIsOn ? o("v-autocomplete", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type"
                    },
                    model: {
                        value: e.object.pointTypeToDivide,
                        callback: function(t) {
                            e.$set(e.object, "pointTypeToDivide", t)
                        },
                        expression: "object.pointTypeToDivide"
                    }
                }) : e._e(), e.object.dividePointtypeIsOn ? o("v-text-field", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Divided by X",
                        filled: ""
                    },
                    model: {
                        value: e.object.divideWithThis,
                        callback: function(t) {
                            e.$set(e.object, "divideWithThis", t)
                        },
                        expression: "object.divideWithThis"
                    }
                }) : e._e()] : e._e(), o("v-divider"), o("v-checkbox", {
                    staticClass: "mt-n2",
                    attrs: {
                        "hide-details": "",
                        label: "Expand 'Manage Other choice' Functions"
                    },
                    model: {
                        value: e.object.otherChoiceFunction,
                        callback: function(t) {
                            e.$set(e.object, "otherChoiceFunction", t)
                        },
                        expression: "object.thisChoiceFunction"
                    }
                }), e.object.otherChoiceFunction ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will de-select all other choices"
                    },
                    model: {
                        value: e.object.cleanACtivatedOnSelect,
                        callback: function(t) {
                            e.$set(e.object, "cleanACtivatedOnSelect", t)
                        },
                        expression: "object.cleanACtivatedOnSelect"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Forces another choice active:"
                    },
                    model: {
                        value: e.object.activateOtherChoice,
                        callback: function(t) {
                            e.$set(e.object, "activateOtherChoice", t)
                        },
                        expression: "object.activateOtherChoice"
                    }
                }), e.object.activateOtherChoice ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Press this to activate choice at random?"
                    },
                    model: {
                        value: e.object.isActivateRandom,
                        callback: function(t) {
                            e.$set(e.object, "isActivateRandom", t),
							e.$set(e.object, "numActivateRandom", 1)
                        },
                        expression: "object.isActivateRandom"
                    }
                }) : e._e(), e.object.isActivateRandom ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
						type: "number",
                        label: "How many choices do you want to activate?",
						filled: "",
						min: 1
                    },
                    model: {
                        value: e.object.numActivateRandom,
                        callback: function(t) {
                            e.$set(e.object, "numActivateRandom", Math.max(t, 1))
                        },
                        expression: "object.isActivateRandom"
                    }
                }) : e._e(), e.object.activateOtherChoice ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Cancel this choice will not deactivate other choices?"
                    },
                    model: {
                        value: e.object.isNotDeactivate,
                        callback: function(t) {
                            e.$set(e.object, "isNotDeactivate", t)
                        },
                        expression: "object.isNotDeactivate"
                    }
                }) : e._e(), e.object.activateOtherChoice ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Allow deselecting the activated choices?"
                    },
                    model: {
                        value: e.object.isAllowDeselect,
                        callback: function(t) {
                            e.$set(e.object, "isAllowDeselect", t)
                        },
                        expression: "object.isAllowDeselect"
                    }
                }) : e._e(), e.object.activateOtherChoice ? o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Works badly if multiple of these have the same ID, or if the target has requirements attached. You can use comma to activate multiple (ID,ID,ID/ON#1).")]) : e._e(), e.object.activateOtherChoice ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Id of the choice that will be activated",
                        filled: ""
                    },
                    model: {
                        value: e.object.activateThisChoice,
                        callback: function(t) {
                            e.$set(e.object, "activateThisChoice", t)
                        },
                        expression: "object.activateThisChoice"
                    }
                }) : e._e(), e.object.activateOtherChoice ? o("v-divider") : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Will make another choice unselected:"
                    },
                    model: {
                        value: e.object.deactivateOtherChoice,
                        callback: function(t) {
                            e.$set(e.object, "deactivateOtherChoice", t)
                        },
                        expression: "object.deactivateOtherChoice"
                    }
                }), e.object.deactivateOtherChoice ? o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Will be useful if the target has scores with requirements, use a Group Id to turn off multiple. You can use comma to deactivate multiple (ID,ID,ID).")]) : e._e(), e.object.deactivateOtherChoice ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Id of the choice that will be deactivated",
                        filled: ""
                    },
                    model: {
                        value: e.object.deactivateThisChoice,
                        callback: function(t) {
                            e.$set(e.object, "deactivateThisChoice", t)
                        },
                        expression: "object.deactivateThisChoice"
                    }
                }) : e._e(), e.object.deactivateOtherChoice ? o("v-divider") : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Discount other choices:"
                    },
                    model: {
                        value: e.object.discountOther,
                        callback: function(t) {
                            e.$set(e.object, "discountOther", t), e.$set(e.object, "discountGroups", []), e.$set(e.object, "discountPointTypes", []), e.$set(e.object, "discountLowLimitIsOn", !1),  e.$set(e.object, "discountOperator", ""), e.$set(e.object, "discountValue", 0), e.$set(e.object, "discountShow", !1);
                        },
                        expression: "object.discountOther"
                    }
                }), e.object.discountOther ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Press this to set low limit?"
                    },
                    model: {
                        value: e.object.discountLowLimitIsOn,
                        callback: function(t) {
                            e.$set(e.object, "discountLowLimitIsOn", t), e.$set(e.object, "discountLowLimit", 0)
                        },
                        expression: "object.discountLowLimitIsOn"
                    }
                }), e.object.discountLowLimitIsOn ? [o("v-text-field", {
					staticClass: "pb-1",
                    attrs: {
                        "hide-details": "",
						type: "number",
                        label: "Low limit",
						filled: ""
                    },
                    model: {
                        value: e.object.discountLowLimit,
                        callback: function(t) {
                            e.$set(e.object, "discountLowLimit", t)
                        },
                        expression: "object.discountLowLimit"
                    }
                })] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Change the score displayed?"
                    },
                    model: {
                        value: e.object.discountShow,
                        callback: function(t) {
                            e.$set(e.object, "discountShow", t), e.$set(e.object, "discountBeforeText", ""), e.$set(e.object, "discountAfterText", "")
                        },
                        expression: "object.discountShow"
                    }
                }), e.object.discountShow ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Display duplicated text only once"
                    },
                    model: {
                        value: e.object.discountTextDuplicated,
                        callback: function(t) {
                            e.$set(e.object, "discountTextDuplicated", t)
                        },
                        expression: "object.discountTextDuplicated"
                    }
                }), o("v-row", [o("v-col", {
					staticClass: "pa-1",
					attrs: {
						cols: 6
					}
				}, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
						label: "Added Text Before",
						filled: ""
                    },
                    model: {
                        value: e.object.discountBeforeText,
                        callback: function(t) {
                            e.$set(e.object, "discountBeforeText", t)
                        },
                        expression: "object.discountBeforeText"
                    }
                })], 1), o("v-col", {
					staticClass: "pa-1",
					attrs: {
						cols: 6
					}
				}, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Added Text After",
						filled: ""
                    },
                    model: {
                        value: e.object.discountAfterText,
                        callback: function(t) {
                            e.$set(e.object, "discountAfterText", t)
                        },
                        expression: "object.discountAfterText"
                    }
                })], 1)], 1)] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Can discounts be stacked?"
                    },
                    model: {
                        value: e.object.stackableDiscount,
                        callback: function(t) {
                            e.$set(e.object, "stackableDiscount", t)
                        },
                        expression: "object.stackableDiscount"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Select choices directly instead of groups"
                    },
                    model: {
                        value: e.object.isDisChoices,
                        callback: function(t) {
                            e.$set(e.object, "isDisChoices", t)
                        },
                        expression: "object.isDisChoices"
                    }
                }), e.object.isDisChoices ? o("v-autocomplete", {
					attrs: {
						"hide-details": "",
						label: "Object Id",
						filled: "",
						"small-chips": "",
						"deletable-chips": "",
						items: [...e.app.rows.flatMap(row => row.objects), ...e.app.backpack.flatMap(backpack => backpack.objects)],
						"item-text": "id",
						"item-value": "id",
						multiple: "",
						enableSelectAll: !0
					},							
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
					},
					model: {
						value: e.object.discountChoices,
						callback: function(t) {
							e.$set(e.object, "discountChoices", t)
						},
						expression: "elements.id"
					}
				}) : o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: this.app.groups,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
						multiple: "",
						label: "Id of the groups that will be discounted"
                    },
                    model: {
                        value: e.object.discountGroups,
                        callback: function(t) {
                            e.$set(e.object, "discountGroups", t)
                        },
                        expression: "object.discountGroups"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: this.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
						multiple: "",
						label: "Name of the PointTypes that will be discounted"
                    },
                    model: {
                        value: e.object.discountPointTypes,
                        callback: function(t) {
                            e.$set(e.object, "discountPointTypes", t)
                        },
                        expression: "object.discountPointTypes"
                    }
                }), o("v-row", [o("v-col", {
                    staticClass: "pb-0 pr-1",
					attrs: {
						cols: "6"
					}
                }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
						items: e.discountOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
						label: "Operator"
                    },
                    model: {
                        value: e.object.discountOperator,
                        callback: function(t) {
                            e.$set(e.object, "discountOperator", t)
                        },
                        expression: "object.discountOperator"
                    }
                })]), o("v-col", {
                    staticClass: "pb-0 pl-1",
					attrs: {
						cols: "6"
					}
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
						type: "number",
                        label: "Value",
						filled: ""
                    },
                    model: {
                        value: e.object.discountValue,
                        callback: function(t) {
                            e.$set(e.object, "discountValue", t)
                        },
                        expression: "object.discountValue"
                    }
                })])])] : e._e()] : e._e(), o("v-divider"), o("v-checkbox", {
                    staticClass: "mt-n2",
                    attrs: {
                        "hide-details": "",
                        label: "Expand Miscellaneous Functions"
                    },
                    model: {
                        value: e.object.miscFunction,
                        callback: function(t) {
                            e.$set(e.object, "miscFunction", t)
                        },
                        expression: "object.miscFunction"
                    }
                }), e.object.miscFunction ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will duplicate a row."
                    },
                    model: {
                        value: e.object.duplicateRow,
                        callback: function(t) {
                            e.$set(e.object, "duplicateRow", t)
                        },
                        expression: "object.duplicateRow"
                    }
                }), e.object.duplicateRow ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Not add /D#n to the end of the IDs of Requirements"
                    },
                    model: {
                        value: e.object.dRowAddSufReq,
                        callback: function(t) {
                            e.$set(e.object, "dRowAddSufReq", t)
                        },
                        expression: "object.dRowAddSufReq"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Not add /D#n to the end of the IDs of Functions"
                    },
                    model: {
                        value: e.object.dRowAddSufFunc,
                        callback: function(t) {
                            e.$set(e.object, "dRowAddSufFunc", t)
                        },
                        expression: "object.dRowAddSufFunc"
                    }
                }), o("v-col", {
                    staticClass: "pb-0"
                }, [e._v("The ID of duplicated row will have /D#n added to the end.")]), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: this.app.rows,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
						label: "Id of the row that will be duplicated"
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])],
					},
                    model: {
                        value: e.object.duplicateRowId,
                        callback: function(t) {
                            e.$set(e.object, "duplicateRowId", t)
                        },
                        expression: "object.duplicateRowId"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: this.app.rows,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
						label: "The duplicated row will be placed after:"
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])],
					},
                    model: {
                        value: e.object.duplicateRowPlace,
                        callback: function(t) {
                            e.$set(e.object, "duplicateRowPlace", t)
                        },
                        expression: "object.duplicateRowPlace"
                    }
                }), o("v-divider")] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will scroll to the row."
                    },
                    model: {
                        value: e.object.scrollToRow,
                        callback: function(t) {
                            e.$set(e.object, "scrollToRow", t);
							t ? e.$set(e.object, "scrollRowId", "") : (e.$delete(e.object, "scrollToRow"), e.$delete(e.object, "scrollRowId"));
                        },
                        expression: "object.scrollToRow"
                    }
                }), e.object.scrollToRow ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Scroll to the choice instead of the row."
                    },
                    model: {
                        value: e.object.scrollToObject,
                        callback: function(t) {
                            e.$set(e.object, "scrollToObject", t);
							t ? (e.$set(e.object, "scrollObjectId", ""), e.$delete(e.object, "scrollRowId")) : (e.$delete(e.object, "scrollToObject"), e.$delete(e.object, "scrollObjectId"));
                        },
                        expression: "object.scrollToRow"
                    }
                }), e.object.scrollToObject ? o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: e.app.comp[e.object.id].type == "app" ? e.app.rows.flatMap(row => row.objects) : e.app.backpack.flatMap(row => row.objects),
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
						label: "Object Id"
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])],
					},
                    model: {
                        value: e.object.scrollObjectId,
                        callback: function(t) {
                            e.$set(e.object, "scrollObjectId", t)
                        },
                        expression: "object.scrollObjectId"
                    }
                }) : o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: e.app.comp[e.object.id].type == "app" ? e.app.rows : e.app.backpack,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
						label: "Row Id"
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])],
					},
                    model: {
                        value: e.object.scrollRowId,
                        callback: function(t) {
                            e.$set(e.object, "scrollRowId", t)
                        },
                        expression: "object.scrollRowId"
                    }
                }), o("v-divider")] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will change background."
                    },
                    model: {
                        value: e.object.changeBackground,
                        callback: function(t) {
                            e.$set(e.object, "changeBackground", t), e.$set(e.object, "changeBgImage", !1), e.$set(e.object, "bgImage", "");
                        },
                        expression: "object.changeBackground"
                    }
                }), e.object.changeBackground ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Change Background Image instead?"
                    },
                    model: {
                        value: e.object.changeBgImage,
                        callback: function(t) {
                            e.$set(e.object, "changeBgImage", t), e.$set(e.object, "bgImage", "");
                        },
                        expression: "object.changeBgImage"
                    }
                }), e.object.changeBgImage ? o("v-col", {
					staticClass: "pa-0"
				}, [o("picture-input", {
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.object.bgImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Background Image"
                        }
                    },
                    on: {
                        change: function(t) {
							e.$set(e.object, "bgImage", t)
						},
                        remove: function() {
							e.object.bgImage = ""
						}
                    }
                })], 1) : o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "8 digits Hex Color Code(e.g., #000000FF)",
                        filled: ""
                    },
                    model: {
                        value: e.object.changedBgColorCode,
                        callback: function(t) {
                            e.$set(e.object, "changedBgColorCode", t)
                        },
                        expression: "object.changedBgColorCode"
                    }
                }), o("v-divider")] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will set Background Music."
                    },
                    model: {
                        value: e.object.setBgmIsOn,
                        callback: function(t) {
                            e.$set(e.object, "setBgmIsOn", t), e.$set(e.object, "bgmId", "");
							if (!t) e.$set(e.object, "bgmFadeIn", t), e.$set(e.object, "bgmFadeInSec", 0), e.$set(e.object, "bgmFadeOut", t), e.$set(e.object, "bgmFadeOutSec", 0);
                        },
                        expression: "object.setBgmIsOn"
                    }
                }), e.object.setBgmIsOn ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "No loop?"
                    },
                    model: {
                        value: e.object.bgmNoLoop,
                        callback: function(t) {
                            e.$set(e.object, "bgmNoLoop", t)
                        },
                        expression: "object.bgmNoLoop"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Enable fade-in when this choice is selected."
                    },
                    model: {
                        value: e.object.bgmFadeIn,
                        callback: function(t) {
                            e.$set(e.object, "bgmFadeIn", t), e.$set(e.object, "bgmFadeInSec", 0);
                        },
                        expression: "object.bgmFadeIn"
                    }
                }), e.object.bgmFadeIn ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
						type: "number",
                        label: "Fade-In Time (1s = 1000ms)",
						suffix: "ms",
                        filled: "",
						min: 0
                    },
                    model: {
                        value: e.object.bgmFadeInSec,
                        callback: function(t) {
                            e.$set(e.object, "bgmFadeInSec", parseInt(t))
                        },
                        expression: "object.bgmFadeInSec"
                    }
                }) : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Enable fade-out when this choice is deselected."
                    },
                    model: {
                        value: e.object.bgmFadeOut,
                        callback: function(t) {
                            e.$set(e.object, "bgmFadeOut", t), e.$set(e.object, "bgmFadeOutSec", 0);
                        },
                        expression: "object.bgmFadeOut"
                    }
                }), e.object.bgmFadeOut ? o("v-text-field", {
					staticClass: "mb-4",
                    attrs: {
                        "hide-details": "",
						type: "number",
                        label: "Fade-Out Time (1s = 1000ms)",
						suffix: "ms",
                        filled: "",
						min: 0
                    },
                    model: {
                        value: e.object.bgmFadeOutSec,
                        callback: function(t) {
                            e.$set(e.object, "bgmFadeOutSec", parseInt(t))
                        },
                        expression: "object.bgmFadeOutSec"
                    }
                }) : e._e(), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Youtube Video ID (e.g., naktUDBaHuw)",
                        filled: ""
                    },
                    model: {
                        value: e.object.bgmId,
                        callback: function(t) {
                            e.$set(e.object, "bgmId", t)
                        },
                        expression: "object.bgmId"
                    }
                }), o("v-divider")] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will mute Background Music."
                    },
                    model: {
                        value: e.object.muteBgm,
                        callback: function(t) {
                            e.$set(e.object, "muteBgm", t)
                        },
                        expression: "object.muteBgm"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will change point-bar."
                    },
                    model: {
                        value: e.object.changePointBar,
                        callback: function(t) {
                            e.$set(e.object, "changePointBar", t);
                        },
                        expression: "object.changePointBar"
                    }
                }), e.object.changePointBar ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Change Bar Background Color:"
                    },
                    model: {
                        value: e.object.changeBarBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.object, "changeBarBgColorIsOn", t), e.$set(e.object, "changedBarBgColor", "");
                        },
                        expression: "object.changeBarBgColorIsOn"
                    }
                }) : e._e(), e.object.changeBarBgColorIsOn ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "8 digits Hex Color Code(e.g., #000000FF)",
                        filled: ""
                    },
                    model: {
                        value: e.object.changedBarBgColor,
                        callback: function(t) {
                            e.$set(e.object, "changedBarBgColor", t)
                        },
                        expression: "object.changedBarBgColor"
                    }
                }) : e._e(), e.object.changePointBar ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Change Bar Text Color:"
                    },
                    model: {
                        value: e.object.changeBarTextColorIsOn,
                        callback: function(t) {
                            e.$set(e.object, "changeBarTextColorIsOn", t), e.$set(e.object, "changedBarTextColor", "");
                        },
                        expression: "object.changeBarTextColorIsOn"
                    }
                }) : e._e(), e.object.changeBarTextColorIsOn ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "8 digits Hex Color Code(e.g., #000000FF)",
                        filled: ""
                    },
                    model: {
                        value: e.object.changedBarTextColor,
                        callback: function(t) {
                            e.$set(e.object, "changedBarTextColor", t)
                        },
                        expression: "object.changedBarTextColor"
                    }
                }) : e._e(), e.object.changePointBar ? o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Change Bar Icon Color:"
                    },
                    model: {
                        value: e.object.changeBarIconColorIsOn,
                        callback: function(t) {
                            e.$set(e.object, "changeBarIconColorIsOn", t), e.$set(e.object, "changedBarIconColor", "");
                        },
                        expression: "object.changeBarIconColorIsOn"
                    }
                }) : e._e(), e.object.changeBarIconColorIsOn ? o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "8 digits Hex Color Code(e.g., #000000FF)",
                        filled: ""
                    },
                    model: {
                        value: e.object.changedBarIconColor,
                        callback: function(t) {
                            e.$set(e.object, "changedBarIconColor", t)
                        },
                        expression: "object.changedBarIconColor"
                    }
                }) : e._e(), e.object.changePointBar ? o("v-divider") : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will hide contents of rows."
                    },
                    model: {
						value: e.object.isContentHidden,
                        callback: function(t) {
							e.$set(e.object, "isContentHidden", t);
							if (!t) {
								e.$set(e.object, "hiddenContentsRow", []), e.$set(e.object, "hiddenContentsType", []);
							}
                        },
                        expression: "object.isContentHidden"
                    }
                }), e.object.isContentHidden ? [o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: e.app.compR[e.row.id].type == "app" ? e.app.rows : e.app.backpack,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
						label: "Id of the row where contents will be hidden",
						multiple: "",
						enableSelectAll: !0
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
					},
                    model: {
                        value: e.object.hiddenContentsRow,
                        callback: function(t) {
                            e.$set(e.object, "hiddenContentsRow", t)
                        },
                        expression: "object.hiddenContentsRow"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						items: e.hideContents,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
						label: "Type of contents to be hidden",
						multiple: ""
                    },
                    model: {
                        value: e.object.hiddenContentsType,
                        callback: function(t) {
                            e.$set(e.object, "hiddenContentsType", t)
                        },
                        expression: "object.hiddenContentsType"
                    }
                }), o("v-divider")] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will change variables' status."
                    },
                    model: {
						value: e.object.isChangeVariables,
                        callback: function(t) {
							e.$set(e.object, "isChangeVariables", t);
							if (!t) {
								e.$set(e.object, "changedVariables", []), e.$set(e.object, "changeType", "");
							}
                        },
                        expression: "object.isChangeVariables"
                    }
                }), e.object.isChangeVariables ? [o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						items: e.app.variables,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
						label: "Id of the Variable",
						multiple: "",
						enableSelectAll: !0
                    },
                    model: {
                        value: e.object.changedVariables,
                        callback: function(t) {
                            e.$set(e.object, "changedVariables", t)
                        },
                        expression: "object.changedVariables"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						items: e.changeType,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
						label: "Value"
                    },
                    model: {
                        value: e.object.changeType,
                        callback: function(t) {
                            e.$set(e.object, "changeType", t)
                        },
                        expression: "object.changeType"
                    }
                }), o("v-divider")] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Selecting this choice will trigger the fade transition."
                    },
                    model: {
						value: e.object.isFadeTransition,
                        callback: function(t) {
							if (t) {
								e.$set(e.object, "isFadeTransition", t);
								e.$set(e.object, "fadeTransitionColor", "#000000FF");
								e.$set(e.object, "fadeTransitionTime", 250);
							} else {
								e.$delete(e.object, "isFadeTransition");
								e.$delete(e.object, "fadeTransitionColor");
								e.$delete(e.object, "fadeTransitionTime");
							}
                        },
                        expression: "object.isFadeTransition"
                    }
                }), e.object.isFadeTransition ? [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Fade Overlay Color (8 digits Hex Color Code)",
						placeholder: "#000000FF",
                        filled: ""
                    },
                    model: {
                        value: e.object.fadeTransitionColor,
                        callback: function(t) {
                            e.$set(e.object, "fadeTransitionColor", t)
                        },
                        expression: "object.fadeTransitionColor"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
						type: "number",
                        label: "Fade-In/Out Time (1s = 1000ms)",
						suffix: "ms",
						placeholder: "250",
                        filled: "",
						min: 0
                    },
                    model: {
                        value: e.object.fadeTransitionTime,
                        callback: function(t) {
                            e.$set(e.object, "fadeTransitionTime", parseInt(t))
                        },
                        expression: "object.fadeTransitionTime"
                    }
                }), o("v-divider")] : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Word will be changed to something else at select."
                    },
                    model: {
                        value: e.object.textfieldIsOn,
                        callback: function(t) {
                            e.$set(e.object, "textfieldIsOn", t)
                        },
                        expression: "object.textfieldIsOn"
                    }
                }), e.object.textfieldIsOn ? [o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Player can set word by pressing this choice."
                    },
                    model: {
                        value: e.object.customTextfieldIsOn,
                        callback: function(t) {
                            e.$set(e.object, "customTextfieldIsOn", t), e.$set(e.object, "wordChangeSelect", "");
                        },
                        expression: "object.customTextfieldIsOn"
                    }
                }), o("v-autocomplete", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.words,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Id of word that will change"
                    },
                    model: {
                        value: e.object.idOfTheTextfieldWord,
                        callback: function(t) {
                            e.$set(e.object, "idOfTheTextfieldWord", t)
                        },
                        expression: "object.idOfTheTextfieldWord"
                    }
                })] : e._e(), e.object.customTextfieldIsOn ? o("v-text-field", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        label: "Will be shown text in prompt",
                        filled: ""
                    },
                    model: {
                        value: e.object.wordPromptText,
                        callback: function(t) {
                            e.$set(e.object, "wordPromptText", t)
                        },
                        expression: "object.wordPromptText"
                    }
                }) : e._e(), e.object.textfieldIsOn && !e.object.customTextfieldIsOn ? o("v-text-field", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        label: "Will be changed to this on select",
                        filled: ""
                    },
                    model: {
                        value: e.object.wordChangeSelect,
                        callback: function(t) {
                            e.$set(e.object, "wordChangeSelect", t)
                        },
                        expression: "object.wordChangeSelect"
                    }
                }) : e._e(), e.object.textfieldIsOn ? o("v-text-field", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        label: "Will be changed to this on deselect",
                        filled: ""
                    },
                    model: {
                        value: e.object.wordChangeDeselect,
                        callback: function(t) {
                            e.$set(e.object, "wordChangeDeselect", t)
                        },
                        expression: "object.wordChangeDeselect"
                    }
                }) : e._e(), e.object.textfieldIsOn ? o("v-divider") : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Player can upload a picture by pressing this choice."
                    },
                    model: {
                        value: e.object.isImageUpload,
                        callback: function(t) {
                            e.$set(e.object, "isImageUpload", t)
                        },
                        expression: "object.isImageUpload"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "Adds or takes away a rows Allowed Choices."
                    },
                    model: {
                        value: e.object.addToAllowChoice,
                        callback: function(t) {
                            e.$set(e.object, "addToAllowChoice", t)
                        },
                        expression: "object.addToAllowChoice"
                    }
                }), e.object.addToAllowChoice ? o("v-autocomplete", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: this.app.rows,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Id of the row whose Allowed Choices will be changed."
                    },
                    scopedSlots: e._u([{
                        key: "selection",
                        fn: function(t) {
                            return [e._v(" " + e._s(t.item.id) + " - " + e._s(t.item.title) + " ")]
                        }
                    }, {
                        key: "item",
                        fn: function(t) {
                            return [e._v(" " + e._s(t.item.id) + " - " + e._s(t.item.title) + " ")]
                        }
                    }], null, !1, 311247164),
                    model: {
                        value: e.object.idOfAllowChoice,
                        callback: function(t) {
                            e.$set(e.object, "idOfAllowChoice", t)
                        },
                        expression: "object.idOfAllowChoice"
                    }
                }) : e._e(), e.object.addToAllowChoice ? o("v-text-field", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "This numbr will be added to the Allowed Choices on select.",
                        filled: ""
                    },
                    model: {
                        value: e.object.numbAddToAllowChoice,
                        callback: function(t) {
                            e.$set(e.object, "numbAddToAllowChoice", e._n(t))
                        },
                        expression: "object.numbAddToAllowChoice"
                    }
                }) : e._e(), e.object.addToAllowChoice ? o("v-divider") : e._e(), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "If do not select this, backpack button will not appear."
                    },
                    model: {
						value: e.object.backpackBtnRequirement,
                        callback: function(t) {
							e.$set(e.object, "backpackBtnRequirement", t);
							if (t) {
								("undefined" === typeof e.app.hideBackpackBtn || e.app.hideBackpackBtn == 0) ? e.$set(e.app, "hideBackpackBtn", 1) : e.$set(e.app, "hideBackpackBtn", e.app.hideBackpackBtn + 1)
							} else {
								e.$set(e.app, "hideBackpackBtn", e.app.hideBackpackBtn - 1)
							}
                        },
                        expression: "object.BackpackButton"
                    }
                }), o("v-checkbox", {
                    attrs: {
                        "hide-details": "",
                        label: "This choice will not appear in backpack."
                    },
                    model: {
						value: e.object.isNotResult,
                        callback: function(t) {
							e.$set(e.object, "isNotResult", t)
                        },
                        expression: "object.BackpackButton"
                    }
                })] : e._e()], 1)], 1)], 1)], 1)], 1) : e.checkRequireds(e.row) ? o("span", {
                    staticClass: "row" + " row-" + e.row.id + " choice-" + e.object.id + (e.object.isActive ? " choice-selected" + (e.filterStyling.selOverlayOnImage ? " bg-overlay" : "") : " choice-unselected") + (!e.checkRequireds(e.object) ? " choice-disabled" + (e.filterStyling.reqOverlayOnImage ? " bg-overlay" : "") : " choice-enabled"),
                    style: e.objectBackground,
                    on: {
                        click: function(t) {
                            e.row.isInfoRow || e.object.isNotSelectable || e.object.isSelectableMultiple || e.object.forcedActivated || e.object.isButtonObject ? !1 : e.activateObject(e.object, e.row);
                        }
                    }
                }, [4 == e.object.template ? o("span", {
                    staticClass: "ma-0 d-flex flex-column align-center",
                    staticStyle: {
                        width: "100%"
                    }
                }, [e.row.resultShowRowTitle ? o("div", {
                    style: e.rowBody
                }, [o("v-col", {
                    staticClass: "pa-0",
                    style: e.scoreText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.findRowTitle, e.sanitizeArg))
                    }
                })], 1) : e._e(), o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    staticClass: "mb-0",
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "py-0"
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticClass: "my-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.textFieldIsOn ? o("v-text-field", {
                    attrs: {
                        type: "number",
                        placeholder: "100",
                        "hide-details": "",
                        label: "Random Weight",
                        filled: ""
                    },
                    on: {
                        change: e.changeTheWord
                    },
                    model: {
                        value: e.object.randomWeight,
                        callback: function(t) {
                            e.$set(e.object, "randomWeight", t)
                        },
                        expression: "object.randomWeight"
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
						key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 1) : 5 == e.object.template ? o("span", {
                    staticClass: "ma-0 d-flex flex-column align-center",
                    staticStyle: {
                        width: "100%"
                    }
                }, [e.row.resultShowRowTitle ? o("div", {
                    style: e.rowBody
                }, [o("v-col", {
                    staticClass: "pa-0",
                    style: e.scoreText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.findRowTitle, e.sanitizeArg))
                    }
                })], 1) : e._e(), o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    staticClass: "mb-0",
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "py-0"
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticClass: "my-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.textFieldIsOn ? o("v-text-field", {
                    attrs: {
                        type: "number",
                        placeholder: "100",
                        "hide-details": "",
                        label: "Random Weight",
                        filled: ""
                    },
                    on: {
                        change: e.changeTheWord
                    },
                    model: {
                        value: e.object.randomWeight,
                        callback: function(t) {
                            e.$set(e.object, "randomWeight", t)
                        },
                        expression: "object.randomWeight"
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
						key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 1) : 1 == e.object.template || e.window.width < 1e3 || e.row.choicesShareTemplate ? o("span", {
                    staticClass: "ma-0 d-flex flex-column align-center",
                    staticStyle: {
                        width: "100%"
                    }
                }, [e.row.resultShowRowTitle ? o("div", {
                    style: e.rowBody
                }, [o("v-col", {
                    staticClass: "pa-0",
                    style: e.scoreText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.findRowTitle, e.sanitizeArg))
                    }
                })], 1) : e._e(), "" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e(), o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    staticClass: "mb-0",
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "py-0"
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticClass: "my-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.textFieldIsOn ? o("v-text-field", {
                    attrs: {
                        type: "number",
                        placeholder: "100",
                        "hide-details": "",
                        label: "Random Weight",
                        filled: ""
                    },
                    on: {
                        change: e.changeTheWord
                    },
                    model: {
                        value: e.object.randomWeight,
                        callback: function(t) {
                            e.$set(e.object, "randomWeight", t)
                        },
                        expression: "object.randomWeight"
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
						key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 1) : 2 == e.object.template && e.window.width > 1e3 ? o("v-row", {
                    staticClass: "ma-0 pa-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("v-col", {
                    staticClass: "pa-0 mb-0",
					staticStyle: {
						"max-width": e.objectImageStyling.objectImageBoxWidth + "%"
					}
                }, ["" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e()], 1), o("v-col", {
                    staticClass: "pa-1 d-flex flex-column align-center",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
                }, [o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    },
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
                        key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2)], 2) : 3 == e.object.template && e.window.width > 1e3 ? o("v-row", {
                    staticClass: "ma-0 pa-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("v-col", {
                    staticClass: "pa-1 d-flex flex-column align-center",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
                }, [o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
                        key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
                    staticClass: "pa-0 mb-0",
					staticStyle: {
						"max-width": e.objectImageStyling.objectImageBoxWidth + "%"
					}
                }, ["" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e()], 1)], 2) : e._e()], 1) : e._e(), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        row: e.object
                    },
                    on: {
                        rowWasChanged: function(t) {
                            e.object = t
                        },
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), e.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.snackbar,
                        callback: function(t) {
                            e.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.text))])])], 1) : e._e(), o("ConfirmDlg", {
                    ref: "confirm"
                })], 1)
            }),
            u = [],
            h = (o("b0c0"), function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("span", [e.isEditModeOn ? o("v-col", {
                    staticClass: "pa-0 pb-1"
                }, [o("v-row", {
					ref: "dialog",
					staticClass: "pb-0"
				}, [o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            return e.moveAddonUp()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-up")])], 1), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            e.currentComponent = "appRequirement"
                        }
                    }
                }, [o("v-icon", [e._v("mdi-key-plus")])], 1), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
										e.$set(e.app, "tmpRequired", e.addon.required);
										e.globalVariables.text = "The requirement is copied.", e.globalVariables.snackbar = !0;
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-clipboard-outline")])], 1)]
                        }
                    }], null, !1, 971814284)
                }, [o("span", [e._v("Copy Requirement")])]), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            return e.moveAddonDown()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-down")])], 1)], 1), o("span", [o("v-checkbox", {
					staticClass: "pt-0 mt-0",
					attrs: {
						"hide-details": "",
						label: "Always show this addon"
					},
					model: {
						value: e.addon.showAddon,
						callback: function(t) {
							e.$set(e.addon, "showAddon", t)
						},
						expression: "required.showAddon"
					}
				})], 1), o("v-col", {
                    staticClass: "pt-0 px-12",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-col", {
                    staticClass: "px-0 pt-1"
                }, [o("v-img", {
                    attrs: {
                        "max-height": "175",
                        contain: "",
                        src: e.addon.image
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appImageUpload"
                        }
                    }
                })], 1), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appImageUpload"
                        }
                    }
                }, [e._v("Change Image")])], 1), o("v-select", {
                    attrs: {
						"hide-details" : "",
                        items: e.templates,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Template"
                    },
                    model: {
                        value: e.addon.template,
                        callback: function(t) {
                            e.$set(e.addon, "template", t)
                        },
                        expression: "addon.template"
                    }
                }), o("v-text-field", {
                    staticClass: "pb-1",
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Addon Title"
                    },
                    model: {
                        value: e.addon.title,
                        callback: function(t) {
                            e.$set(e.addon, "title", t)
                        },
                        expression: "addon.title"
                    }
                }), o("v-textarea", {
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Addon Text"
                    },
                    model: {
                        value: e.addon.text,
                        callback: function(t) {
                            e.$set(e.addon, "text", t)
                        },
                        expression: "addon.text"
                    }
                }), o("v-row", e._l(e.addon.requireds, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-2",
                        attrs: {
                            cols: e.window.width > 301 ? "6" : "12"
                        }
                    }, [o("v-card", {
						attrs: {
							flat: ""
						}
					}, ["id" == t.type ? o("span", [o("v-checkbox", {
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Show Requirement"
						},
						model: {
							value: t.showRequired,
							callback: function(o) {
								e.$set(t, "showRequired", o);
								if (!o) e.$set(t, "hideRequired", o);
							},
							expression: "required.showRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Hide when requirement is met"
						},
						model: {
							value: t.hideRequired,
							callback: function(o) {
								e.$set(t, "hideRequired", o)
							},
							expression: "required.hideRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Use custom requirement text"
						},
						model: {
							value: t.customTextIsOn,
							callback: function(o) {
								e.$set(t, "customTextIsOn", o)
							},
							expression: "required.customTextIsOn"
						}
					}), o("v-text-field", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired && t.customTextIsOn,
							expression: "required.showRequired"
						}],
						attrs: {
							"hide-details": "",
							filled: "",
							label: "Custom Text"
						},
						model: {
							value: t.customText,
							callback: function(o) {
								e.$set(t, "customText", o)
							},
							expression: "required.customText"
						}
					}), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text Before"
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "required.beforeText"
                        }
                    }), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text After"
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "required.afterText"
                        }
                    }), o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: t.required ? "Selected Id" : "Not Selected Id",
                            filled: ""
                        },
                        model: {
                            value: t.reqId,
                            callback: function(o) {
                                e.$set(t, "reqId", o)
                            },
                            expression: "required.reqId"
                        }
                    }), o("v-btn", {
                        staticClass: "pa-0",
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "points" == t.type ? o("span", [o("v-checkbox", {
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Show Requirement"
						},
						model: {
							value: t.showRequired,
							callback: function(o) {
								e.$set(t, "showRequired", o);
								if (!o) e.$set(t, "hideRequired", o);
							},
							expression: "required.showRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Hide when requirement is met"
						},
						model: {
							value: t.hideRequired,
							callback: function(o) {
								e.$set(t, "hideRequired", o)
							},
							expression: "required.hideRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Use custom requirement text"
						},
						model: {
							value: t.customTextIsOn,
							callback: function(o) {
								e.$set(t, "customTextIsOn", o)
							},
							expression: "required.customTextIsOn"
						}
					}), o("v-text-field", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired && t.customTextIsOn,
							expression: "required.showRequired"
						}],
						attrs: {
							"hide-details": "",
							filled: "",
							label: "Custom Text"
						},
						model: {
							value: t.customText,
							callback: function(o) {
								e.$set(t, "customText", o)
							},
							expression: "required.customText"
						}
					}), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text Before"
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "required.beforeText"
                        }
                    }), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text After"
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "required.afterText"
                        }
                    }), o("v-select", {
                        attrs: {
                            "hide-details": "",
                            items: e.pointReqOperators,
                            "item-text": "text",
                            "item-value": "value",
                            filled: "",
                            label: "Operator"
                        },
                        model: {
                            value: t.operator,
                            callback: function(o) {
                                e.$set(t, "operator", o)
                            },
                            expression: "required.operator"
                        }
                    }), o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
                            items: e.pointTypes,
                            "item-text": "name",
                            "item-value": "id",
                            filled: "",
                            label: "Point Type"
                        },
                        model: {
                            value: t.reqId,
                            callback: function(o) {
                                e.$set(t, "reqId", o)
                            },
                            expression: "required.reqId"
                        }
                    }), o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: t.required ? "More Than" : "Less Than",
                            filled: ""
                        },
                        model: {
                            value: t.reqPoints,
                            callback: function(o) {
                                e.$set(t, "reqPoints", o)
                            },
                            expression: "required.reqPoints"
                        }
                    }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "pointCompare" == t.type ? o("span", [o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(o) {
							if ("undefined" === typeof t.more) e.$set(t, "more", []);
							t.more.push({operator: "1", type: "id", id: ""});
						}
					}
				}, [e._v("Add Point Type")]), o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(o) {
							if ("undefined" === typeof t.more) e.$set(t, "more", []);
							t.more.push({operator: "1", type: "points", points: 0});
						}
					}
				}, [e._v("Add Point")]), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Target Point"
                    },
                    model: {
                        value: t.reqId,
                        callback: function(o) {
                            e.$set(t, "reqId", o)
                        },
                        expression: "required.reqId"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.pointComOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: t.operator,
                        callback: function(o) {
                            e.$set(t, "operator", o)
                        },
                        expression: "required.operator"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type"
                    },
                    model: {
                        value: t.reqId1,
                        callback: function(o) {
                            e.$set(t, "reqId1", o)
                        },
                        expression: "required.reqId1"
                    }
                }), e._l(t.more, (function(s) {
                    return o("span", {
                        key: s.index
                    }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.moreOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: s.operator,
                        callback: function(o) {
                            e.$set(s, "operator", o)
                        },
                        expression: "s.oprator"
                    }
                }), "id" == s.type ? o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
							items: e.pointTypes,
							"item-text": "name",
							"item-value": "id",
							filled: "",
							label: "Point Type"
                        },
                        model: {
                            value: s.id,
                            callback: function(o) {
                                e.$set(s, "id", o)
                            },
                            expression: "s.id"
                        }
                    }) : o("v-text-field", {
                        attrs: {
                            "hide-details": "",
							type: "number",
							filled: "",
							label: "Value"
                        },
                        model: {
                            value: s.points,
                            callback: function(o) {
                                e.$set(s, "points", o)
                            },
                            expression: "s.points"
                        }
                    })], 1)
                })), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 2) : "or" == t.type ? o("span", [o("v-checkbox", {
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Show Requirement"
						},
						model: {
							value: t.showRequired,
							callback: function(o) {
								e.$set(t, "showRequired", o);
								if (!o) e.$set(t, "hideRequired", o);
							},
							expression: "required.showRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Hide when requirement is met"
						},
						model: {
							value: t.hideRequired,
							callback: function(o) {
								e.$set(t, "hideRequired", o)
							},
							expression: "required.hideRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Use custom requirement text"
						},
						model: {
							value: t.customTextIsOn,
							callback: function(o) {
								e.$set(t, "customTextIsOn", o)
							},
							expression: "required.customTextIsOn"
						}
					}), o("v-text-field", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired && t.customTextIsOn,
							expression: "required.showRequired"
						}],
						attrs: {
							"hide-details": "",
							filled: "",
							label: "Custom Text"
						},
						model: {
							value: t.customText,
							callback: function(o) {
								e.$set(t, "customText", o)
							},
							expression: "required.customText"
						}
					}), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text Before"
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "required.beforeText"
                        }
                    }), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text After"
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "required.afterText"
                        }
                    }), o("v-row", {
					staticClass: "ma-0 pa-0"
				}, [o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(o) {
							if (t.orRequired.length > 1) {
								t.orRequired.pop();
							}
                        }
                    }
                }, [o("v-icon", [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(o) {
                            t.orRequired.push({req: ""});
                        }
                    }
                }, [o("v-icon", [e._v("mdi-plus")])], 1)], 1), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "X",
						filled: "",
						min: 0,
						max: t.orRequired.length
					},
					model: {
						value: t.orNum,
						callback: function(o) {
							e.$set(t, "orNum", Math.min(Math.max(o, 0), t.orRequired.length))
						}
					}
				}), e._l(t.orRequired, (function(i) {
                        return o("span", {
                            key: i.index
                        }, [o("v-text-field", {
                            attrs: {
                                label: t.required ? "Selected Choice Id" : "Not Selected Choice Id",
                                "hide-details": "",
                                placeholder: t.required ? "Selected Id" : "Not Selected Id",
                                filled: ""
                            },
                            model: {
                                value: i.req,
                                callback: function(t) {
                                    e.$set(i, "req", t)
                                },
                                expression: "orRequired.req"
                            }
                        })], 1)
                    })), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 2) : "selFromGroups" == t.type ? o("span", [o("v-checkbox", {
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Show Requirement"
						},
						model: {
							value: t.showRequired,
							callback: function(o) {
								e.$set(t, "showRequired", o);
								if (!o) e.$set(t, "hideRequired", o);
							},
							expression: "required.showRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Hide when requirement is met"
						},
						model: {
							value: t.hideRequired,
							callback: function(o) {
								e.$set(t, "hideRequired", o)
							},
							expression: "required.hideRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Use custom requirement text"
						},
						model: {
							value: t.customTextIsOn,
							callback: function(o) {
								e.$set(t, "customTextIsOn", o)
							},
							expression: "required.customTextIsOn"
						}
					}), o("v-text-field", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired && t.customTextIsOn,
							expression: "required.showRequired"
						}],
						attrs: {
							"hide-details": "",
							filled: "",
							label: "Custom Text"
						},
						model: {
							value: t.customText,
							callback: function(o) {
								e.$set(t, "customText", o)
							},
							expression: "required.customText"
						}
					}), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text Before"
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "required.beforeText"
                        }
                    }), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text After"
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "required.afterText"
                        }
                    }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Groups",
						filled: "",
						items: e.app.groups,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + item.name)])])]],
					},
                    model: {
                        value: t.selGroups,
                        callback: function(o) {
                            e.$set(t, "selGroups", o)
                        },
                        expression: "required.selGroups"
                    }
                }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "selFromRows" == t.type ? o("span", [o("v-checkbox", {
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Show Requirement"
						},
						model: {
							value: t.showRequired,
							callback: function(o) {
								e.$set(t, "showRequired", o);
								if (!o) e.$set(t, "hideRequired", o);
							},
							expression: "required.showRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Hide when requirement is met"
						},
						model: {
							value: t.hideRequired,
							callback: function(o) {
								e.$set(t, "hideRequired", o)
							},
							expression: "required.hideRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Use custom requirement text"
						},
						model: {
							value: t.customTextIsOn,
							callback: function(o) {
								e.$set(t, "customTextIsOn", o)
							},
							expression: "required.customTextIsOn"
						}
					}), o("v-text-field", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired && t.customTextIsOn,
							expression: "required.showRequired"
						}],
						attrs: {
							"hide-details": "",
							filled: "",
							label: "Custom Text"
						},
						model: {
							value: t.customText,
							callback: function(o) {
								e.$set(t, "customText", o)
							},
							expression: "required.customText"
						}
					}), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text Before"
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "required.beforeText"
                        }
                    }), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text After"
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "required.afterText"
                        }
                    }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Rows",
						filled: "",
						items: e.app.rows,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
					},
                    model: {
                        value: t.selRows,
                        callback: function(o) {
                            e.$set(t, "selRows", o)
                        },
                        expression: "required.selRows"
                    }
                }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "selFromWhole" == t.type ? o("span", [o("v-checkbox", {
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Show Requirement"
						},
						model: {
							value: t.showRequired,
							callback: function(o) {
								e.$set(t, "showRequired", o);
								if (!o) e.$set(t, "hideRequired", o);
							},
							expression: "required.showRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Hide when requirement is met"
						},
						model: {
							value: t.hideRequired,
							callback: function(o) {
								e.$set(t, "hideRequired", o)
							},
							expression: "required.hideRequired"
						}
					}), o("v-checkbox", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired,
							expression: "required.showRequired"
						}],
						staticClass: "pt-0 mt-0",
						attrs: {
							"hide-details": "",
							label: "Use custom requirement text"
						},
						model: {
							value: t.customTextIsOn,
							callback: function(o) {
								e.$set(t, "customTextIsOn", o)
							},
							expression: "required.customTextIsOn"
						}
					}), o("v-text-field", {
						directives: [{
							name: "show",
							rawName: "v-show",
							value: t.showRequired && t.customTextIsOn,
							expression: "required.showRequired"
						}],
						attrs: {
							"hide-details": "",
							filled: "",
							label: "Custom Text"
						},
						model: {
							value: t.customText,
							callback: function(o) {
								e.$set(t, "customText", o)
							},
							expression: "required.customText"
						}
					}), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text Before"
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "required.beforeText"
                        }
                    }), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired && !t.customTextIsOn,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text After"
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "required.afterText"
                        }
                    }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "gid" == t.type ? o("span", [o("v-autocomplete", {
						attrs: {
							"hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
							label: "Global Requirement",
							filled: "",
							items: e.app.globalRequirements,
							"item-text": "id",
							"item-value": "id"
						},
						model: {
							value: t.reqId,
							callback: function(o) {
								e.$set(t, "reqId", o)
							},
							expression: "required.reqId"
						}
					}), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.addon.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : e._e()])], 1)
                })), 1)], 1) : e.addon.showAddon || e.checkRequireds(e.addon) ? o("div", {
					style: e.addonBackground
				}, [4 == e.addon.template ? o("span", {
                    staticClass: "ma-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("span", ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()]), "" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"	
                                }],
                                style: e.objectImage
                            }, i)) : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                }) : e._e()], 1) : 5 == e.addon.template ? o("span", {
                    staticClass: "ma-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("span", ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), "" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i)) : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
				}) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()])], 1) : 1 == e.addon.template || window.innerWidth < 1e3 || e.row.choicesShareTemplate ? o("span", {
                    staticClass: "ma-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, ["" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i)) : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                }) : e._e(), o("span", ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()])], 1) : 2 == e.addon.template && window.innerWidth > 1e3 ? o("v-row", {
					staticClass: "ma-0 pa-0",
					staticStyle: {
						width: "100%"
					}
				}, [o("v-col", {
					staticClass: "pa-0 mb-0",
					staticStyle: {
						"maxWidth": e.objectImageStyling.objectImageBoxWidth + "%"
					}
				}, ["" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i)) : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                }) : e._e()], 1), o("v-col", {
					staticClass: "pa-1",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
				}, ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()], 1)], 2) : 3 == e.addon.template && window.innerWidth > 1e3 ? o("v-row", {
					staticClass: "ma-0 pa-0",
					staticStyle: {
						width: "100%"
					}
				}, [o("v-col", {
					staticClass: "pa-1",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
				}, ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()], 1), o("v-col", {
					staticClass: "pa-0 mb-0",
					staticStyle: {
						"maxWidth": e.objectImageStyling.objectImageBoxWidth + "%"
					}
				}, ["" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i)) : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                }) : e._e()], 1)], 2) : e._e()]) : e._e(), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        row: e.addon,
                        object: e.addon
                    },
                    on: {
                        rowWasChanged: function(t) {
                            e.object = t
                        },
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1)
            }),
            g = [],
            b = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        "max-width": "1000px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Create Requirement")]), o("v-card-text", [o("v-container", [o("v-row", [o("p", [e._v("Requirements are conditions that will decide if the player can select the choice or not, these use the ID of choices and variables, and the design of the filter placed on non-selectable choices can be changed in filter design.")]), o("v-col", {
                    attrs: {
                        cols: e.window.width > 900 ? "6" : "12"
                    }
                }, [o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                staticClass: "pa-0 btn",
								staticStyle: {
									color: e.$vuetify.theme.isDark ? "white" : "black"
								},
								attrs: {
									type: "button"
								},
								on: {
									click: function(t) {
										return e.pasteRequired(e.row, e.row.requireds)
									}
								}
                            }, i), [e._v("Paste the copied requirement (Ref)")])]
                        }
                    }], null, !1, 971814284)
                }, [o("span", [e._v("Modifying a requirement will update all connected requirements.")])])], 1), o("v-col", {
                    attrs: {
                        cols: e.window.width > 900 ? "6" : "12"
                    }
                }, [o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                staticClass: "pa-0 btn",
								staticStyle: {
									color: e.$vuetify.theme.isDark ? "white" : "black"
								},
								attrs: {
									type: "button"
								},
								on: {
									click: function(t) {
										return e.pasteRequiredCopy(e.row, e.row.requireds)
									}
								}
                            }, i), [e._v("Paste the copied requirement (Copy)")])]
                        }
                    }], null, !1, 971814284)
                }, [o("span", [e._v("Modifying a requirement will not affect other requirements.")])])], 1), "undefined" === typeof e.row.type || e.row.type != "gRequire" ? o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "gid", !0, "")
                        }
                    }
                }, [e._v("Add Global Requirement")])], 1) : e._e(), o("v-card-text", {
                    staticClass: "mb-n5"
                }, [e._v("Choice Requirements")]), o("v-col", {
                    attrs: {
						cols: e.window.width > 900 ? "6" : "12"
                    }
                }, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "id", !0, "")
                        }
                    }
                }, [e._v("Add selected Choice requirement")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 900 ? "6" : "12"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "id", !1, "")
                        }
                    }
                }, [e._v("Add non-selected Choice requirement")])], 1), o("v-col", {
                    attrs: {
                        cols: e.window.width > 900 ? "6" : "12"
                    }
                }, [o("v-row", [o("v-card-text", {
                    staticClass: "mb-n5"
                }, [e._v(" Point Requirements "), o("br")]), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "4" : "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "points", !0, "3")
                        }
                    }
                }, [e._v("= Equal to")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "4" : "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "points", !0, "1")
                        }
                    }
                }, [e._v("+ More than")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "4" : "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "points", !0, "5")
                        }
                    }
                }, [e._v("- Less than")])], 1), o("v-col", {
					attrs: {
						cols: "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "points", !0, "2")
                        }
                    }
                }, [e._v("+= More or equal")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "6" : "12"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "points", !0, "4")
                        }
                    }
                }, [e._v("-= Less or equal")])], 1)], 1)], 1), o("v-col", {
                    attrs: {
                        cols: e.window.width > 900 ? "6" : "12"
                    }
                }, [o("v-row", [o("v-card-text", {
                    staticClass: "mb-n5"
                }, [e._v(" Point Comparison Requirements "), o("br")]), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "4" : "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "pointCompare", !0, "2")
                        }
                    }
                }, [e._v("= Equal to")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "4" : "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "pointCompare", !0, "1")
                        }
                    }
                }, [e._v("+ More than")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "4" : "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "pointCompare", !0, "5")
                        }
                    }
                }, [e._v("- Less than")])], 1), o("v-col", {
					attrs: {
						cols: "6"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "pointCompare", !0, "3")
                        }
                    }
                }, [e._v("+= More or equal")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 400 ? "6" : "12"
					}
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "pointCompare", !0, "4")
                        }
                    }
                }, [e._v("-= Less or equal")])], 1)], 1)], 1), o("v-card-text", {
                    staticClass: "mb-n5"
                }, [e._v("'X of these' Requirements")]), o("v-col", {
					attrs: {
                        cols: e.window.width > 900 ? "6" : "12"
                    }
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "or", !0, "")
                        }
                    }
                }, [e._v("'X of these is selected' Requirement")])], 1), o("v-col", {
					attrs: {
                        cols: e.window.width > 900 ? "6" : "12"
                    }
				}, [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "or", !1, "")
                        }
                    }
                }, [e._v("'X of these is not selected' Requirement")])], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Number of requirements",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.numberOfOrRequireds,
                        callback: function(t) {
                            e.numberOfOrRequireds = t
                        },
                        expression: "numberOfOrRequireds"
                    }
                })], 1), o("v-card-text", {
                    staticClass: "mb-n5"
                }, [e._v("'Selected X or more From' Requirements")]), o("v-col", [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "selFromGroups", !0, "")
                        }
                    }
                }, [e._v("From Groups")])], 1), o("v-col", [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "selFromRows", !0, "")
                        }
                    }
                }, [e._v("From Rows")])], 1), o("v-col", [o("v-btn", {
                    staticClass: "pa-0 btn",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.addNewRequired(e.row.requireds, "selFromWhole", !0, "")
                        }
                    }
                }, [e._v("From All")])], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Number of Selection",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.numberOfSelection,
                        callback: function(t) {
                            e.numberOfSelection = t
                        },
                        expression: "numberOfSelection"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-spacer"), o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1), e.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.snackbar,
                        callback: function(t) {
                            e.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.text))])])], 1) : e._e()], 1)
            },
            v = [],
            m = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
                        numberOfOrRequireds: 4,
						numberOfSelection: 1,
						text: "",
						snackbar: !1,
						window: {
                            width: 0,
                            height: 0
                        },
                    }
                },
                components: {},
                computed: {
                    app: function() {
                        return this.$store.state.app
                    },
					globalVariables: function() {
						return this.$store.state.globalVariables
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    addNewRequired: function(e, t, o, i) {
                        for (var s = [], r = 0; r < this.numberOfOrRequireds; r++) s.push({
                            req: ""
                        });
                        console.log(i), e.push({
                            required: o,
                            requireds: [],
                            orRequired: s,
                            id: "",
                            type: t,
                            reqId: "",
                            reqId1: "",
                            reqId2: "",
                            reqId3: "",
                            reqPoints: 0,
                            showRequired: !1,
                            operator: i,
                            afterText: this.app.defaultAfterReq,
                            beforeText: this.app.defaultBeforeReq,
							orNum: 1,
							selNum: this.numberOfSelection,
							selFromOperators: "1",
							more: []
                        });
                    },
					pasteRequired: function(e, t) {
						if ("undefined" === typeof this.app.tmpRequired || this.app.tmpRequired.length === 0) {
							this.globalVariables.text = "The clipboard is empty.", this.globalVariables.snackbar = !0;
						} else {
							if (this.app.tmpRequired.length > 1) {
								for (var a = 0; a < Object.keys(this.app.tmpRequired).length; a++) {
									t.push(this.app.tmpRequired[a]);
								}
							} else {
								if ("undefined" === typeof e.text) {
									const o = Object.assign({}, this.app.tmpRequired, {requireds: []});
									t.push(o[0]);
								} else {
									t.push(this.app.tmpRequired[0]);
								}
							}
						}
					},
					pasteRequiredCopy: function(e, t) {
						if ("undefined" === typeof this.app.tmpRequired || this.app.tmpRequired.length === 0) {
							this.globalVariables.text = "The clipboard is empty.", this.globalVariables.snackbar = !0;
						} else {
							var tmpRequired = JSON.parse(JSON.stringify(this.app.tmpRequired));
							if (tmpRequired.length > 1) {
								for (var a = 0; a < Object.keys(tmpRequired).length; a++) {
									t.push(tmpRequired[a]);
								}
							} else {
								if ("undefined" === typeof e.text) {
									const o = Object.assign({}, tmpRequired, {requireds: []});
									t.push(o[0]);
								} else {
									t.push(tmpRequired[0]);
								}
							}
						}
					}
                }
            },
            f = m,
            w = o("2877"),
            y = o("6544"),
            x = o.n(y),
            C = o("8336"),
            T = o("b0af"),
            j = o("99d9"),
            I = o("62ad"),
            k = o("a523"),
            B = o("169a"),
            S = o("0fd9"),
            O = o("2fa4"),
            R = o("8654"),
			li = o("ce7e"),
			vo = o("23a7"),
			Ac = o("c6a6"),
			Ct = o("2db4"),
			Q = o("3a2f"),
            F = Object(w["a"])(f, b, v, !1, null, null, null),
            _ = F.exports;
        x()(F, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VTooltip: Q["a"],
            VRow: S["a"],
            VSpacer: O["a"],
			VSnackbar: Ct["a"],
            VTextField: R["a"]
        });
        var q = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Image")]), o("v-card-text", [o("v-container", [o("v-switch", {
                    attrs: {
                        label: "Uploaded Image or External URL"
                    },
                    model: {
                        value: e.row.imageIsUrl,
                        callback: function(t) {
                            e.$set(e.row, "imageIsUrl", t)
                        },
                        expression: "row.imageIsUrl"
                    }
                }), o("v-row", [e.row.imageIsUrl ? o("v-col", {
                    staticClass: "col-sm-4 col-12"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        placeholder: "",
                        label: "External Image URL"
                    },
                    model: {
                        value: e.row.imageLink,
                        callback: function(t) {
                            e.$set(e.row, "imageLink", t)
                        },
                        expression: "row.imageLink"
                    }
                }), o("v-btn", {
                    staticClass: "mb-2",
                    on: {
                        click: function(t) {
                            e.row.image = e.row.imageLink
                        }
                    }
                }, [e._v("Make This The Image")])], 1) : o("v-col", {
                    staticClass: "col-lg-4"
                }, [o("picture-input", {
                    ref: "pictureInput",
                    attrs: {
                        hideChangeButton: !0,
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        removable: !0,
                        zIndex: 0,
                        crop: !1,
                        prefill: "undefined" !== typeof e.row.image && e.row.image.length > 1e3 ? e.row.image : "",
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Image"
                        }
                    },
                    on: {
                        change: e.onImageChange,
                        remove: e.onImageRemoval
                    }
                }), e.img ? o("v-col", {
                    staticStyle: {
                        "text-align": "center"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [o("b", [e._v("Before:")]), o("span", [e._v(e._s(e.original.size))]), o("span", [e._v("|")]), o("b", [e._v("After:")]), o("span", [e._v(e._s(e.compressed.size))])]) : e._e(), o("v-text-field", {
                    attrs: {
                        filled: "",
                        label: "Tooltip That Shows When Hovering over it"
                    },
                    model: {
                        value: e.row.imageSourceTooltip,
                        callback: function(t) {
                            e.$set(e.row, "imageSourceTooltip", t)
                        },
                        expression: "row.imageSourceTooltip"
                    }
                }), 1 == e.currentItem ? o("span", [e._v("Compressing will remove transparency from images.")]) : e._e()], 1), e.row.imageIsUrl ? o("v-col", {
                    staticClass: "col-lg-8"
                }, [e.row.image.length > 0 ? [o("clazy-load", {
                    attrs: {
                        src: e.row.image
                    }
                }, [o("img", e._g({
                    attrs: {
                        src: e.row.image
                    }
                }, e.on))]), o("v-btn", {
					staticClass: "my-3",
                    on: {
                        click: e.onImageRemoval
                    }
                }, [e._v("Remove Photo")]), o("v-text-field", {
                    attrs: {
						"hide-details": "",
                        filled: "",
                        label: "Tooltip That Shows When Hovering over it"
                    },
                    model: {
                        value: e.row.imageSourceTooltip,
                        callback: function(t) {
                            e.$set(e.row, "imageSourceTooltip", t)
                        },
                        expression: "row.imageSourceTooltip"
                    }
                })] : e._e()], 1) : o("v-col", {
                    staticClass: "col-lg-8"
                }, [o("v-tabs", {
                    attrs: {
                        grow: ""
                    },
                    model: {
                        value: e.currentItem,
                        callback: function(t) {
                            e.currentItem = t
                        },
                        expression: "currentItem"
                    }
                }, [o("v-tab", [e._v("Cropper")]), o("v-tab", [e._v("Compress")]), o("v-tab-item", [o("v-card", {
                    attrs: {
                        flat: ""
                    }
                }, [o("v-card-text", [o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-col", [o("v-text-field", {
                    attrs: {
                        type: "number",
                        "hide-details": "",
                        filled: "",
                        label: "Width Aspect"
                    },
                    model: {
                        value: e.aspectHeight,
                        callback: function(t) {
                            e.aspectHeight = t
                        },
                        expression: "aspectHeight"
                    }
                })], 1), o("v-col", [o("v-text-field", {
                    attrs: {
                        type: "number",
                        "hide-details": "",
                        filled: "",
                        label: "Height Aspect"
                    },
                    model: {
                        value: e.aspectWidth,
                        callback: function(t) {
                            e.aspectWidth = t
                        },
                        expression: "aspectWidth"
                    }
                })], 1), o("v-col", [o("v-btn", {
                    staticClass: "mb-2",
                    attrs: {
                        height: "100%"
                    },
                    on: {
                        click: e.ChangeAspect
                    }
                }, [e._v("Change Aspect")])], 1), o("v-btn", {
                    staticClass: "mt-2",
                    on: {
                        click: e.cropImage
                    }
                }, [e._v("Crop Image")]), 0 == e.currentItem ? o("cropper", {
                    ref: "cropper",
                    staticClass: "cropper",
                    attrs: {
                        src: e.row.image,
                        "stencil-props": {
                            aspectRatio: e.aH / e.aW
                        }
                    }
                }) : e._e()], 1)], 1)], 1)], 1), o("v-tab-item", [o("v-card", {
                    staticClass: "pa-0",
                    attrs: {
                        flat: ""
                    }
                }, [o("v-card-text", [o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-col", [o("v-text-field", {
                    attrs: {
                        type: "number",
                        "hide-details": "",
                        filled: "",
                        label: "Image Scale"
                    },
                    model: {
                        value: e.scale,
                        callback: function(t) {
                            e.scale = t
                        },
                        expression: "scale"
                    }
                })], 1), o("v-col", [o("v-text-field", {
                    attrs: {
                        type: "number",
                        "hide-details": "",
                        filled: "",
                        label: "Image Quality"
                    },
                    model: {
                        value: e.quality,
                        callback: function(t) {
                            e.quality = t
                        },
                        expression: "quality"
                    }
                })], 1), o("v-col", [o("v-btn", {
                    staticClass: "mb-2",
                    attrs: {
                        height: "100%"
                    },
                    on: {
                        click: e.compressImage
                    }
                }, [e._v("Compress Image")])], 1), e.img ? o("v-col", {
                    staticClass: "pt-0",
                    staticStyle: {
                        width: "100%"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e.img ? o("img", {
                    attrs: {
                        alt: "",
                        src: e.img
                    }
                }) : e._e()]) : e._e()], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            A = [],
            $ = (o("3ca3"), o("ddb0"), o("2b3d"), o("e597")),
            M = o("a2c1"),
            V = o("90a4"),
            P = o.n(V),
            D = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        dialog: !0,
                        aH: this.aspectHeight,
                        aW: this.aspectWidth,
                        currentItem: 0,
                        img: "",
                        scale: 100,
                        quality: 90,
                        originalSize: !0,
                        original: {},
                        compressed: {},
                        file: {},
                        result: {},
                        reader: {},
                        imgSrc: "",
						autoCompressFlag: false
                    }
                },
                mounted: function() {
                    if ("undefined" !== typeof this.row.image && this.row.image.length > 10) this.img = this.row.image, this.onChange()
                },
                watch: {
                    scale: function() {
                        return this.redraw()
                    },
                    quality: function() {
                        return this.redraw()
                    }
                },
                components: {
                    PictureInput: $["a"],
                    Cropper: M["a"]
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    rows: function() {
						var rowId = "undefined" !== typeof this.row.parentId ? this.row.parentId : this.row.id;
						if ("undefined" !== typeof this.app.compR[rowId]) {
							var co = this.app.compR[rowId];
							return co.type == "app" ? this.$store.state.app.rows : this.$store.state.app.backpack
						} else if ("undefined" !== typeof this.app.comp[rowId]) {
							var co = this.app.comp[rowId];
							return co.type == "app" ? this.$store.state.app.rows : this.$store.state.app.backpack
						}
						return this.$store.state.app.rows
                    },
					app: function() {
                        return this.$store.state.app
                    },
                    aspectHeight: {
                        get: function() {
                            for (var e = 0; e < this.rows.length; e++) {
                                if (this.rows[e] == this.row) return this.rows[e].defaultAspectHeight;
                                for (var t = 0; t < this.rows[e].objects.length; t++) {
                                    if (this.rows[e].objects[t] == this.row) return this.rows[e].defaultAspectHeight;
                                    for (var o = 0; o < this.rows[e].objects[t].addons.length; o++)
                                        if (this.rows[e].objects[t].addons[o] == this.row) return this.rows[e].defaultAspectHeight
                                }
                            }
                            return 1
                        },
                        set: function(e) {
                            for (var t = 0; t < this.rows.length; t++) {
                                this.rows[t] == this.row && (this.rows[t].defaultAspectHeight = e);
                                for (var o = 0; o < this.rows[t].objects.length; o++) {
                                    this.rows[t].objects[o] == this.row && (this.rows[t].defaultAspectHeight = e);
                                    for (var i = 0; i < this.rows[t].objects[o].addons.length; i++) this.rows[t].objects[o].addons[i] == this.row && (this.rows[t].defaultAspectHeight = e)
                                }
                            }
                        }
                    },
                    aspectWidth: {
                        get: function() {
                            for (var e = 0; e < this.rows.length; e++) {
                                if (this.rows[e] == this.row) return this.rows[e].defaultAspectWidth;
                                for (var t = 0; t < this.rows[e].objects.length; t++) {
                                    if (this.rows[e].objects[t] == this.row) return this.rows[e].defaultAspectWidth;
                                    for (var o = 0; o < this.rows[e].objects[t].addons.length; o++)
                                        if (this.rows[e].objects[t].addons[o] == this.row) return this.rows[e].defaultAspectWidth
                                }
                            }
                            return 1
                        },
                        set: function(e) {
                            for (var t = 0; t < this.rows.length; t++) {
                                this.rows[t] == this.row && (this.rows[t].defaultAspectWidth = e);
                                for (var o = 0; o < this.rows[t].objects.length; o++) {
                                    this.rows[t].objects[o] == this.row && (this.rows[t].defaultAspectWidth = e);
                                    for (var i = 0; i < this.rows[t].objects[o].addons.length; i++) this.rows[t].objects[o].addons[i] == this.row && (this.rows[t].defaultAspectWidth = e)
                                }
                            }
                        }
                    }
                },
                methods: {
                    onChange: function() {
                        this.file = this.row.image, this.reader = new FileReader, this.reader.readAsDataURL(P()(this.file.split(",")[1], "image/webp")), this.reader.onload = this.fileOnLoad
                    },
                    drawImage: function(e) {
                        var t = document.createElement("canvas");
						var sf = this;
                        this.canvas = t;
                        var o = this.canvas.getContext("2d"),
                            i = new Image;
						
						i.onload = function() {
							var s = sf.scale / 100,
								r = i.width * s,
								a = i.height * s;
							sf.canvas.setAttribute("width", r), sf.canvas.setAttribute("height", a), o.drawImage(i, 0, 0, r, a);
							var n = sf.quality ? sf.quality / 100 : 1,
								l = sf.canvas.toDataURL("image/webp", n),
								c = sf.result.file.name;
							c = ".webp";
							var d = l.length - "data:image/webp;base64,".length,
								p = 4 * Math.ceil(d / 3) * .5624896334383812,
								u = {
									canvas: sf.canvas,
									original: sf.result,
									compressed: {
										blob: l,
										base64: l,
										name: c,
										file: sf.buildFile(sf.toBlob(l), c)
									}
								};
							u.compressed.size = Math.round(p / 1e3) + " kB", u.compressed.type = "image/webp", sf.getFiles(u);
							if(sf.autoCompressFlag) {
								if(sf.file.split(",")[0].includes("image/jpeg") || sf.file.split(",")[0].includes("image/png")) sf.compressImage();
								sf.autoCompressFlag = false;
							}
						}
                        i.src = e;
                    },
                    redraw: function() {
                        this.result.base64 && this.drawImage(this.result.base64)
                    },
                    fileOnLoad: function() {
                        var e = this.file,
                            t = this.reader.result.length - "data:image/webp;base64,".length,
                            o = 4 * Math.ceil(t / 3) * .5624896334383812,
                            i = {
                                name: e.name,
                                type: e.type,
                                size: Math.round(o / 1e3) + " kB",
                                base64: this.reader.result,
                                file: e
                            };
                        this.result = i, this.drawImage(this.result.base64)
                    },
                    toBlob: function(e) {
                        var t = P()(e.split(",")[1], "image/webp"),
                            o = window.URL.createObjectURL(t);
                        return o
                    },
                    buildFile: function(e, t) {
                        return new File([e], t)
                    },
                    compressImage: function() {
                        this.row.image = this.compressed.blob, this.rowWasChanged()
                    },
                    getFiles: function(e) {
                        this.img = e.compressed.blob, this.original = e.original, this.compressed = e.compressed
                    },
                    onImageChange: function(e) {
                        this.row.image = e;
						this.app.compressImageAuto ? this.autoCompressFlag = true : this.autoCompressFlag = false;
						this.onChange(), this.rowWasChanged(), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
                    onImageRemoval: function() {
                        this.row.image = "", this.rowWasChanged()
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    rowWasChanged: function() {
                        this.$emit("rowWasChanged", this.row)
                    },
                    cropImage: function() {
                        var e = this.$refs.cropper.getResult(),
                            t = e.coordinates,
                            o = e.canvas;
                        this.coordinates = t, this.row.image = o.toDataURL("image/webp", .93), this.onChange()
                    },
                    ChangeAspect: function() {
                        this.aH = this.aspectHeight, this.aW = this.aspectWidth, this.row.defaultAspectWidth = this.aspectWidth, this.row.defaultAspectHeight = this.aspectHeight
                    }
                }
            },
            z = D,
            L = (o("3e44"), o("b73d")),
            W = o("71a3"),
            H = o("c671"),
            E = o("fe57"),
            N = Object(w["a"])(z, q, A, !1, null, "47ce5319", null),
            G = N.exports;
        x()(N, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSwitch: L["a"],
            VTab: W["a"],
            VTabItem: H["a"],
            VTabs: E["a"],
            VTextField: R["a"]
        });
        var U = {
                props: {
                    addon: Object,
                    isEditModeOn: Boolean,
                    row: Object,
					addons: Array
                },
                data: function() {
                    return {
                        window: {
                            width: 0,
                            height: 0
                        },
                        currentComponent: "",
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        },
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }],
						templates: [{
                            text: "Image top",
                            value: 1
                        }, {
                            text: "Image left",
                            value: 2
                        }, {
                            text: "Image right",
                            value: 3
                        }, {
							text: "Image bottom",
							value: 4
						}, {
							text: "Image center",
							value: 5
						}]
                    }
                },
                components: {
                    AppRequirement: _,
                    AppImageUpload: G
                },
                computed: {
					objectImage: function() {
						if (this.addonImageStyling.useAddonImage) {
							var e = "width:" + this.addonImageStyling.addonImageWidth + "%;margin-top:" + this.addonImageStyling.addonImageMarginTop + "%;margin-bottom:" + this.addonImageStyling.addonImageMarginBottom + "%;";
							this.addonImageStyling.addonImgObjectFillIsOn && (e += "object-fit:" + this.addonImageStyling.addonImgObjectFillStyle + ";height:" + this.row.objectImgObjectFillHeight + "px;");
							var t = this.addonImageStyling.addonImgBorderRadiusIsPixels ? "px" : "%";
							return 1 == this.addon.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.addonImageStyling.addonImgBorderRadiusTopLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomLeft + 0 + t + ";" : 2 == this.addon.template ? e += "border-radius: " + this.addonImageStyling.addonImgBorderRadiusTopLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.addonImageStyling.addonImgBorderRadiusBottomLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomRight + 0 + t + "; ", this.addonImageStyling.addonImgOverflowIsOn && (e += "overflow:hidden;"), this.addonImageStyling.addonImgBorderIsOn && (e += "border: " + this.addonImageStyling.addonImgBorderWidth + "px " + this.addonImageStyling.addonImgBorderStyle + " " + this.addonImageStyling.addonImgBorderColor + ";"), e
						} else {
							var e = "width:" + this.objectImageStyling.objectImageWidth + "%;margin-top:" + this.objectImageStyling.objectImageMarginTop + "%;margin-bottom:" + this.objectImageStyling.objectImageMarginBottom + "%;";
							this.objectImageStyling.objectImgObjectFillIsOn && (e += "object-fit:" + this.objectImageStyling.objectImgObjectFillStyle + ";height:" + this.row.objectImgObjectFillHeight + "px;");
							var t = this.objectImageStyling.objectImgBorderRadiusIsPixels ? "px" : "%";
							return 1 == this.addon.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + ";" : 2 == this.addon.template ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + "; ", this.objectImageStyling.objectImgOverflowIsOn && (e += "overflow:hidden;"), this.objectImageStyling.objectImgBorderIsOn && (e += "border: " + this.objectImageStyling.objectImgBorderWidth + "px " + this.objectImageStyling.objectImgBorderStyle + " " + this.objectImageStyling.objectImgBorderColor + ";"), e
						}
                    },
                    activated: function() {
                        return this.$store.state.app.activated
                    },
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
                    app: function() {
                        return this.$store.state.app
                    },
					object: function() {
						return this.$parent.object
					},
					addonStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateAddonIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateAddonIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id];
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateAddonIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateAddonIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling
					},
					addonImageStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateAddonImageIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateAddonImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateAddonImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateAddonImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					backgroundStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateBackgroundIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					objectStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id];
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling
					},
					objectImageStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectImageIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
                    textStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateTextIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateTextIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					filterStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateFilterIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateFilterIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					addonBackground: function() {
						var e = "",
							t = this.addonStyling.addonBorderRadiusIsPixels ? "px" : "%",
							o = this.checkRequireds(this.object);
						if (this.addonStyling.useAddonDesign) {
							e += (this.addonStyling.addonBorderImage ? 'border-image: url("' + this.addonStyling.addonBorderImage + '") ' + this.addonStyling.addonBorderImageSliceTop + ' ' + this.addonStyling.addonBorderImageSliceRight + ' ' + this.addonStyling.addonBorderImageSliceBottom + ' ' + this.addonStyling.addonBorderImageSliceLeft + ' / ' + this.addonStyling.addonBorderImageWidth + 'px ' + this.addonStyling.addonBorderImageRepeat + '; border-style: solid; padding: ' + this.addonStyling.addonBorderImageWidth + 'px; ' : "padding: 0px; ") + ((this.addonStyling.useAddonBackgroundImage && this.addonStyling.addonBackgroundImage && !(this.object.isActive && this.filterStyling.selBgColorIsOn && !this.filterStyling.selOverlayOnImage)) ? 'background-image: url("' + this.addonStyling.addonBackgroundImage + '");' + (this.addonStyling.isAddonBackgroundRepeat ? "background-repeat: repeat;" : (this.addonStyling.isAddonBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) : "") + (this.object.isActive ? (this.filterStyling.selBgColorIsOn ? "background-color: " + this.filterStyling.selFilterBgColor + "; " : "") : (!this.addonStyling.useAddonBackgroundImage && this.addonStyling.addonBgColorIsOn ? "background-color: " + this.addonStyling.addonBgColor + "; " : "")) + "margin:" + this.addonStyling.addonMargin + "px;";
							1 == this.addon.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.addonStyling.addonBorderRadiusTopLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusTopRight + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomRight + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomLeft + 0 + t + "; " : 2 == this.addon.template ? e += "border-radius: " + this.addonStyling.addonBorderRadiusTopLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomRight + 0 + t + " " + this.addonStyling.addonBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.addonStyling.addonBorderRadiusBottomLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusTopLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusTopRight + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomRight + 0 + t + "; ", this.addonStyling.addonOverflowIsOn && (e += "overflow:hidden;"), (this.addonStyling.addonBorderIsOn && ((this.object.isActive && this.filterStyling.selBorderColorIsOn) || (!o && this.filterStyling.reqBorderColorIsOn))) && (e += "border: " + this.addonStyling.addonBorderWidth + "px " + this.addonStyling.addonBorderStyle + " " + (!o && this.filterStyling.reqBorderColorIsOn ? this.filterStyling.reqFilterBorderColor : (this.object.isActive && this.filterStyling.selBorderColorIsOn ? this.filterStyling.selFilterBorderColor : this.addonStyling.addonBorderColor)) + ";"), e += "filter: ", this.addonStyling.addonDropShadowIsOn && (e += "drop-shadow(" + this.addonStyling.addonDropShadowH + "px " + this.addonStyling.addonDropShadowV + "px " + this.addonStyling.addonDropShadowBlur + "px " + this.addonStyling.addonDropShadowColor + ")");
							if (!this.object.isActive && o) e += this.filterStyling.unselFilterBlurIsOn ? "blur(" + this.filterStyling.unselFilterBlur + "px)" : "", e += this.filterStyling.unselFilterBrightIsOn ? "brightness(" + this.filterStyling.unselFilterBright + "%)" : "", e += this.filterStyling.unselFilterContIsOn ? "contrast(" + this.filterStyling.unselFilterCont + "%)" : "", e += this.filterStyling.unselFilterGrayIsOn ? "grayscale(" + this.filterStyling.unselFilterGray + "%)" : "", e += this.filterStyling.unselFilterHueIsOn ? "hue-rotate(" + this.filterStyling.unselFilterHue + "deg)" : "", e += this.filterStyling.unselFilterInvertIsOn ? "invert(" + this.filterStyling.unselFilterInvert + "%)" : "", e += this.filterStyling.unselFilterOpacIsOn ? "opacity(" + this.filterStyling.unselFilterOpac + "%)" : "", e += this.filterStyling.unselFilterSaturIsOn ? "saturate(" + this.filterStyling.unselFilterSatur + ")" : "", e += this.filterStyling.unselFilterSepiaIsOn ? "sepia(" + this.filterStyling.unselFilterSepia + "%)" : "", this.addonStyling.addonGradientIsOn && (e += ";background-image: linear-gradient(" + this.addonStyling.addonGradient + ")");
							else if (this.object.isActive && o) e += this.filterStyling.selFilterBlurIsOn ? "blur(" + this.filterStyling.selFilterBlur + "px)" : "", e += this.filterStyling.selFilterBrightIsOn ? "brightness(" + this.filterStyling.selFilterBright + "%)" : "", e += this.filterStyling.selFilterContIsOn ? "contrast(" + this.filterStyling.selFilterCont + "%)" : "", e += this.filterStyling.selFilterGrayIsOn ? "grayscale(" + this.filterStyling.selFilterGray + "%)" : "", e += this.filterStyling.selFilterHueIsOn ? "hue-rotate(" + this.filterStyling.selFilterHue + "deg)" : "", e += this.filterStyling.selFilterInvertIsOn ? "invert(" + this.filterStyling.selFilterInvert + "%)" : "", e += this.filterStyling.selFilterOpacIsOn ? "opacity(" + this.filterStyling.selFilterOpac + "%)" : "", e += this.filterStyling.selFilterSaturIsOn ? "saturate(" + this.filterStyling.selFilterSatur + ")" : "", e += this.filterStyling.selFilterSepiaIsOn ? "sepia(" + this.filterStyling.selFilterSepia + "%)" : "", this.addonStyling.addonGradientIsOn && (e += ";background-image: linear-gradient(" + this.addonStyling.addonGradientOnSelect + ")");
						}
						if (this.addon.showAddon) {
							if (!this.checkRequireds(this.addon) && o) {
								if (e === "") e = "filter: ";
								e += this.filterStyling.reqFilterBlurIsOn ? "blur(" + this.filterStyling.reqFilterBlur + "px)" : "", e += this.filterStyling.reqFilterBrightIsOn ? "brightness(" + this.filterStyling.reqFilterBright + "%)" : "", e += this.filterStyling.reqFilterContIsOn ? "contrast(" + this.filterStyling.reqFilterCont + "%)" : "", e += this.filterStyling.reqFilterGrayIsOn ? "grayscale(" + this.filterStyling.reqFilterGray + "%)" : "", e += this.filterStyling.reqFilterHueIsOn ? "hue-rotate(" + this.filterStyling.reqFilterHue + "deg)" : "", e += this.filterStyling.reqFilterInvertIsOn ? "invert(" + this.filterStyling.reqFilterInvert + "%)" : "", e += this.filterStyling.reqFilterOpacIsOn ? "opacity(" + this.filterStyling.reqFilterOpac + "%)" : "", e += this.filterStyling.reqFilterSaturIsOn ? "saturate(" + this.filterStyling.reqFilterSatur + ")" : "", e += this.filterStyling.reqFilterSepiaIsOn ? "sepia(" + this.filterStyling.reqFilterSepia + "%)" : "", e += (this.filterStyling.reqBgColorIsOn ? ";background-color: " + this.filterStyling.reqFilterBgColor : ""), this.addonStyling.addonGradientIsOn && (e += ";background-image: linear-gradient(" + this.addonStyling.addonGradientOnReq + ")");
								e += (this.addonStyling.useAddonDesign && this.addonStyling.addonBgColorIsOn ? "; background-color: " + this.addonStyling.addonBgColor : (this.backgroundStyling.objectBgColorIsOn ? "; background-color: " + this.backgroundStyling.objectBgColor : ""));
							}
						}
						return e += ";", e
					},
                    addonTitle: function() {
						var e = this.checkRequireds(this.object);
						if (this.addonStyling.useAddonDesign) {
							return 'font-family: "' + this.textStyling.addonTitle + '";font-size: ' + this.textStyling.addonTitleTextSize + "%;text-align: " + this.textStyling.addonTitleAlign + ";color: " + (!e && this.filterStyling.reqATitleColorIsOn ? this.filterStyling.reqFilterATitleColor : (this.object.isActive && this.filterStyling.selATitleColorIsOn ? this.filterStyling.selFilterATitleColor : this.textStyling.addonTitleColor)) + ";" + (this.addonStyling.addonTitlePaddingIsOn ? ("padding: " + this.addonStyling.objectTextPadding + "px;") : "")
						} else {
							return 'font-family: "' + this.textStyling.addonTitle + '";font-size: ' + this.textStyling.addonTitleTextSize + "%;text-align: " + this.textStyling.addonTitleAlign + ";color: " + (!e && this.filterStyling.reqATitleColorIsOn ? this.filterStyling.reqFilterATitleColor : (this.object.isActive && this.filterStyling.selATitleColorIsOn ? this.filterStyling.selFilterATitleColor : this.textStyling.addonTitleColor)) + ";" + (this.objectStyling.titlePaddingIsOn ? ("padding: " + this.objectStyling.objectTextPadding + "px;") : "")
						}
                    },
                    addonText: function() {
						var e = this.checkRequireds(this.object);
						if (this.addonStyling.useAddonDesign) {
							return 'font-family: "' + this.textStyling.addonText + '";font-size: ' + this.textStyling.addonTextTextSize + "%;text-align: " + this.textStyling.addonTextAlign + ";color: " + (!e && this.filterStyling.reqATextColorIsOn ? this.filterStyling.reqFilterATextColor : (this.object.isActive && this.filterStyling.selATextColorIsOn ? this.filterStyling.selFilterATextColor : this.textStyling.addonTextColor)) + ";padding: " + this.addonStyling.addonTextPadding + "px;" + (this.addonStyling.addonRemoveSpaceAddonIsOn ? "margin-bottom: 0px;padding-top: 0px;padding-bottom: 0px;" : "")
						} else {
							return 'font-family: "' + this.textStyling.addonText + '";font-size: ' + this.textStyling.addonTextTextSize + "%;text-align: " + this.textStyling.addonTextAlign + ";color: " + (!e && this.filterStyling.reqATextColorIsOn ? this.filterStyling.reqFilterATextColor : (this.object.isActive && this.filterStyling.selATextColorIsOn ? this.filterStyling.selFilterATextColor : this.textStyling.addonTextColor)) + ";padding: " + this.objectStyling.objectTextPadding + "px;" + (this.objectStyling.removeSpaceAddonIsOn ? "margin-bottom: 0px;padding-top: 0px;padding-bottom: 0px;" : "")
						}
                    },
                    styling: function() {
                        return this.row.isPrivateStyling ? this.row.styling : this.$store.state.app.styling
                    },
                    replaceAddonTitle: function() {
                        var e = this.addon.title;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    replaceAddonText: function() {
                        var e = this.addon.text;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
					globalVariables: function() {
						return this.$store.state.globalVariables
					},
					scoreText: function() {
                        return 'font-family: "' + this.textStyling.scoreText + '";font-size: ' + this.textStyling.scoreTextSize + "%;text-align: " + this.textStyling.scoreTextAlign + ";color: " + this.textStyling.scoreTextColor + ";"
                    }
                },
				watch: {
					isEditModeOn: function(e) {
						e ? this.setupResizeObserver() : this.cleanupResizeObserver()
					}
				},
				mounted: function() {
					if (this.isEditModeOn) {
						this.setupResizeObserver()
					}
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
					setupResizeObserver: function() {
						this.$nextTick(() => {
							if (this.$refs.dialog) {
								this.resizeObserver = new ResizeObserver((e) => {
									for (var t of e) {
										this.window.width = t.contentRect.width;
										this.window.hegiht = t.contentRect.height;
									}
								});
								this.resizeObserver.observe(this.$refs.dialog);
							}
						})
					},
					cleanupResizeObserver: function() {
						if (this.resizeObserver && this.$refs.panels) {
							this.resizeObserver.disconnect();
						}
					},
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
					getChoiceTitle: function(e) {
                        var t, o, g = !0;
						if (e.hideRequired) {
							g = !this.checkRequireds(this.addon);
						}
                        if (e.showRequired && g)
							if (e.customTextIsOn) {
								return "undefined" !== typeof e.customText ? e.customText : ""
							} else {
								if ("id" == e.type) {
									var rId = e.reqId.split("/ON#");
									if ("undefined" !== typeof this.app.comp[rId[0]]) {
										var	co = this.app.comp[rId[0]],
											coR = this.app.rows[co.rows],
											coO = coR.objects[co.objects];
										return e.beforeText + " " + (rId.length > 1 ? rId[1] + " " : "") + coO.title + " " + e.afterText
									}
								} else if ("points" == e.type) {
									for (t = 0; t < this.app.pointTypes.length; t++)
										if (e.reqId == this.app.pointTypes[t].id) return e.beforeText + " " + e.reqPoints + " " + this.app.pointTypes[t].name + " " + e.afterText
								} else if ("or" == e.type) {
									var i = [];
									for (var s = 0; s < e.orRequired.length; s++) {
										var rId = e.orRequired[s].req.split("/ON#");
										if ("undefined" !== typeof this.app.comp[rId[0]]) {
											var	co = this.app.comp[rId[0]],
												coR = this.app.rows[co.rows],
												coO = coR.objects[co.objects];
											o = rId.length > 1 ? rId[1] + " " : "";
											i.push((o + coO.title));
										}
									}
									if (this.app.orderOrReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + ("undefined" !== typeof e.orNum ? this.app.defaultOrReq + " " + e.orNum : this.app.defaultOrReq + " 1") + " " + e.afterText
									} else {
										return e.beforeText + " " + ("undefined" !== typeof e.orNum ? e.orNum + " " + this.app.defaultOrReq : "1 " + this.app.defaultOrReq) + " "  + i.join(", ") + " "+ e.afterText
									}
								} else if ("selFromGroups" == e.type && "undefined" !== typeof e.selGroups) {
									var i = [];
									for (var s = 0; s < e.selGroups.length; s++) {
										if ("undefined" !== typeof this.app.compG[e.selGroups[s]]) {
											var co = this.app.compG[e.selGroups[s]],
												coG = this.app.groups[co.groups];
											i.push(coG.name);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromRows" == e.type && "undefined" !== typeof e.selRows) {
									var i = [];
									for (var s = 0; s < e.selRows.length; s++) {
										if ("undefined" !== typeof this.app.compR[e.selRows[s]]) {
											var co = this.app.compR[e.selRows[s]],
												coR = this.app.rows[co.rows];
											i.push(coR.title);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromWhole" == e.type) {
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + e.afterText
									}
								}
							}
                        return ""
                    },
					moveAddonUp: function() {
						var e = this.addons.indexOf(this.addon);
                        if (e > 0) {
                            var t = this.addons[e];
                            this.$set(this.addons, e, this.addons[e - 1]), this.$set(this.addons, e - 1, t);
                        }
					},
					moveAddonDown: function() {
						var e = this.addons.indexOf(this.addon);
                        if (-1 !== e && e < this.addons.length - 1) {
                            var t = this.addons[e];
                            this.$set(this.addons, e, this.addons[e + 1]), this.$set(this.addons, e + 1, t);
                        }
					}
                }
            },
            Y = U,
            J = (o("040a"), o("132d")),
            X = o("adda"),
            K = o("b974"),
            Z = o("a844"),
			ae = (o("c16f"), o("ac7c")),
            ee = Object(w["a"])(Y, h, g, !1, null, "8bccda0e", null),
            te = ee.exports;
        x()(ee, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VIcon: J["a"],
            VImg: X["a"],
            VRow: S["a"],
            VSelect: K["a"],
			VSpacer: O["a"],
            VTextField: R["a"],
            VTextarea: Z["a"],
            VTooltip: Q["a"]
        });
        var oe = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("span", [o("v-col", {
                    staticClass: "pa-0 pb-1"
                }, [o("v-row", {
					staticClass: "pb-0"
				}, [o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            return e.moveRequireUp()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-left")])], 1), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            e.currentComponent = "appRequirement"
                        }
                    }
                }, [o("v-icon", [e._v("mdi-key-plus")])], 1), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
										e.$set(e.app, "tmpRequired", []);
										e.app.tmpRequired.push(e.required);
										e.globalVariables.text = "The requirement is copied.", e.globalVariables.snackbar = !0;
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-clipboard-outline")])], 1)]
                        }
                    }], null, !1, 971814284)
                }, [o("span", [e._v("Copy Requirement")])]), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            return e.moveRequireDown()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-right")])], 1)], 1), "id" == e.required.type ? o("span", [o("v-checkbox", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Show Requirement"
                    },
                    model: {
                        value: e.required.showRequired,
                        callback: function(t) {
                            e.$set(e.required, "showRequired", t);
							if (!t) e.$set(e.required, "hideRequired", t);
                        },
                        expression: "required.showRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Hide when requirement is met"
                    },
                    model: {
                        value: e.required.hideRequired,
                        callback: function(t) {
                            e.$set(e.required, "hideRequired", t)
                        },
                        expression: "required.hideRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Use custom requirement text"
                    },
                    model: {
                        value: e.required.customTextIsOn,
                        callback: function(t) {
                            e.$set(e.required, "customTextIsOn", t)
                        },
                        expression: "required.customTextIsOn"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Custom Text"
                    },
                    model: {
                        value: e.required.customText,
                        callback: function(t) {
                            e.$set(e.required, "customText", t)
                        },
                        expression: "required.customText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text Before"
                    },
                    model: {
                        value: e.required.beforeText,
                        callback: function(t) {
                            e.$set(e.required, "beforeText", t)
                        },
                        expression: "required.beforeText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text After"
                    },
                    model: {
                        value: e.required.afterText,
                        callback: function(t) {
                            e.$set(e.required, "afterText", t)
                        },
                        expression: "required.afterText"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: e.required.required ? "Selected Id" : "Not Selected Id",
                        filled: ""
                    },
                    model: {
                        value: e.required.reqId,
                        callback: function(t) {
                            e.$set(e.required, "reqId", t)
                        },
                        expression: "required.reqId"
                    }
                })], 1) : "points" == e.required.type ? o("span", [o("v-checkbox", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Show Requirement"
                    },
                    model: {
                        value: e.required.showRequired,
                        callback: function(t) {
                            e.$set(e.required, "showRequired", t);
							if (!t) e.$set(e.required, "hideRequired", t);
                        },
                        expression: "required.showRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Hide when requirement is met"
                    },
                    model: {
                        value: e.required.hideRequired,
                        callback: function(t) {
                            e.$set(e.required, "hideRequired", t)
                        },
                        expression: "required.hideRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Use custom requirement text"
                    },
                    model: {
                        value: e.required.customTextIsOn,
                        callback: function(t) {
                            e.$set(e.required, "customTextIsOn", t)
                        },
                        expression: "required.customTextIsOn"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Custom Text"
                    },
                    model: {
                        value: e.required.customText,
                        callback: function(t) {
                            e.$set(e.required, "customText", t)
                        },
                        expression: "required.customText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text Before"
                    },
                    model: {
                        value: e.required.beforeText,
                        callback: function(t) {
                            e.$set(e.required, "beforeText", t)
                        },
                        expression: "required.beforeText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text After"
                    },
                    model: {
                        value: e.required.afterText,
                        callback: function(t) {
                            e.$set(e.required, "afterText", t)
                        },
                        expression: "required.afterText"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.pointReqOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: e.required.operator,
                        callback: function(t) {
                            e.$set(e.required, "operator", t)
                        },
                        expression: "required.operator"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type"
                    },
                    model: {
                        value: e.required.reqId,
                        callback: function(t) {
                            e.$set(e.required, "reqId", t)
                        },
                        expression: "required.reqId"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.required.reqPoints,
                        callback: function(t) {
                            e.$set(e.required, "reqPoints", t)
                        },
                        expression: "required.reqPoints"
                    }
                })], 1) : "pointCompare" == e.required.type ? o("span", [o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(t) {
							if ("undefined" === typeof e.required.more) e.$set(e.required, "more", []);
							e.required.more.push({operator: "1", type: "id", id: ""});
						}
					}
				}, [e._v("Add Point Type")]), o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(t) {
							if ("undefined" === typeof e.required.more) e.$set(e.required, "more", []);
							e.required.more.push({operator: "1", type: "points", points: 0});
						}
					}
				}, [e._v("Add Point")]), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Target Point"
                    },
                    model: {
                        value: e.required.reqId,
                        callback: function(t) {
                            e.$set(e.required, "reqId", t)
                        },
                        expression: "required.reqId"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.pointComOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: e.required.operator,
                        callback: function(t) {
                            e.$set(e.required, "operator", t)
                        },
                        expression: "required.operator"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type"
                    },
                    model: {
                        value: e.required.reqId1,
                        callback: function(t) {
                            e.$set(e.required, "reqId1", t)
                        },
                        expression: "required.reqId1"
                    }
                }), e._l(e.required.more, (function(i) {
                    return o("span", {
                        key: i.index
                    }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.moreOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: i.operator,
                        callback: function(o) {
                            e.$set(i, "operator", o)
                        },
                        expression: "i.oprator"
                    }
                }), "id" == i.type ? o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
							items: e.app.pointTypes,
							"item-text": "name",
							"item-value": "id",
							filled: "",
							label: "Point Type"
                        },
                        model: {
                            value: i.id,
                            callback: function(o) {
                                e.$set(i, "id", o)
                            },
                            expression: "i.id"
                        }
                    }) : o("v-text-field", {
                        attrs: {
                            "hide-details": "",
							type: "number",
							filled: "",
							label: "Value"
                        },
                        model: {
                            value: i.points,
                            callback: function(o) {
                                e.$set(i, "points", o)
                            },
                            expression: "i.points"
                        }
                    })], 1)
                }))], 2) : "or" == e.required.type ? o("span", [o("v-checkbox", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Show Requirement"
                    },
                    model: {
                        value: e.required.showRequired,
                        callback: function(t) {
                            e.$set(e.required, "showRequired", t);
							if (!t) e.$set(e.required, "hideRequired", t);
                        },
                        expression: "required.showRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Hide when requirement is met"
                    },
                    model: {
                        value: e.required.hideRequired,
                        callback: function(t) {
                            e.$set(e.required, "hideRequired", t)
                        },
                        expression: "required.hideRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Use custom requirement text"
                    },
                    model: {
                        value: e.required.customTextIsOn,
                        callback: function(t) {
                            e.$set(e.required, "customTextIsOn", t)
                        },
                        expression: "required.customTextIsOn"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Custom Text"
                    },
                    model: {
                        value: e.required.customText,
                        callback: function(t) {
                            e.$set(e.required, "customText", t)
                        },
                        expression: "required.customText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text Before"
                    },
                    model: {
                        value: e.required.beforeText,
                        callback: function(t) {
                            e.$set(e.required, "beforeText", t)
                        },
                        expression: "required.beforeText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text After"
                    },
                    model: {
                        value: e.required.afterText,
                        callback: function(t) {
                            e.$set(e.required, "afterText", t)
                        },
                        expression: "required.afterText"
                    }
                }), o("v-row", {
					staticClass: "ma-0 pa-0"
				}, [o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
							if (e.required.orRequired.length > 1) {
								e.required.orRequired.pop();
							}
                        }
                    }
                }, [o("v-icon", [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            e.required.orRequired.push({req: ""});
                        }
                    }
                }, [o("v-icon", [e._v("mdi-plus")])], 1)], 1), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "X",
						filled: "",
						min: 0,
						max: e.required.orRequired.length
					},
					model: {
						value: e.required.orNum,
						callback: function(t) {
							e.$set(e.required, "orNum", Math.min(Math.max(t, 0), e.required.orRequired.length))
						}
					}
				}), e._l(e.required.orRequired, (function(t) {
                    return o("span", {
                        key: t.index
                    }, [o("v-text-field", {
                        attrs: {
                            label: e.required.required ? "Selected Choice Id" : "Not Selected Choice Id",
                            "hide-details": "",
                            placeholder: e.required.required ? "Selected Id" : "Not Selected Id",
                            filled: ""
                        },
                        model: {
                            value: t.req,
                            callback: function(o) {
                                e.$set(t, "req", o)
                            },
                            expression: "orRequired.req"
                        }
                    })], 1)
                }))], 2) : "selFromGroups" == e.required.type ? o("span", [o("v-checkbox", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Show Requirement"
                    },
                    model: {
                        value: e.required.showRequired,
                        callback: function(t) {
                            e.$set(e.required, "showRequired", t);
							if (!t) e.$set(e.required, "hideRequired", t);
                        },
                        expression: "required.showRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Hide when requirement is met"
                    },
                    model: {
                        value: e.required.hideRequired,
                        callback: function(t) {
                            e.$set(e.required, "hideRequired", t)
                        },
                        expression: "required.hideRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Use custom requirement text"
                    },
                    model: {
                        value: e.required.customTextIsOn,
                        callback: function(t) {
                            e.$set(e.required, "customTextIsOn", t)
                        },
                        expression: "required.customTextIsOn"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Custom Text"
                    },
                    model: {
                        value: e.required.customText,
                        callback: function(t) {
                            e.$set(e.required, "customText", t)
                        },
                        expression: "required.customText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text Before"
                    },
                    model: {
                        value: e.required.beforeText,
                        callback: function(t) {
                            e.$set(e.required, "beforeText", t)
                        },
                        expression: "required.beforeText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text After"
                    },
                    model: {
                        value: e.required.afterText,
                        callback: function(t) {
                            e.$set(e.required, "afterText", t)
                        },
                        expression: "required.afterText"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: e.required.selFromOperators,
                        callback: function(t) {
                            e.$set(e.required, "selFromOperators", t)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: e.required.selNum,
						callback: function(t) {
							e.$set(e.required, "selNum", Math.max(t, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Groups",
						filled: "",
						items: e.app.groups,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + item.name)])])]],
					},
                    model: {
                        value: e.required.selGroups,
                        callback: function(t) {
                            e.$set(e.required, "selGroups", t)
                        },
                        expression: "required.selGroups"
                    }
                })], 1) : "selFromRows" == e.required.type ? o("span", [o("v-checkbox", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Show Requirement"
                    },
                    model: {
                        value: e.required.showRequired,
                        callback: function(t) {
                            e.$set(e.required, "showRequired", t);
							if (!t) e.$set(e.required, "hideRequired", t);
                        },
                        expression: "required.showRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Hide when requirement is met"
                    },
                    model: {
                        value: e.required.hideRequired,
                        callback: function(t) {
                            e.$set(e.required, "hideRequired", t)
                        },
                        expression: "required.hideRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Use custom requirement text"
                    },
                    model: {
                        value: e.required.customTextIsOn,
                        callback: function(t) {
                            e.$set(e.required, "customTextIsOn", t)
                        },
                        expression: "required.customTextIsOn"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Custom Text"
                    },
                    model: {
                        value: e.required.customText,
                        callback: function(t) {
                            e.$set(e.required, "customText", t)
                        },
                        expression: "required.customText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text Before"
                    },
                    model: {
                        value: e.required.beforeText,
                        callback: function(t) {
                            e.$set(e.required, "beforeText", t)
                        },
                        expression: "required.beforeText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text After"
                    },
                    model: {
                        value: e.required.afterText,
                        callback: function(t) {
                            e.$set(e.required, "afterText", t)
                        },
                        expression: "required.afterText"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: e.required.selFromOperators,
                        callback: function(t) {
                            e.$set(e.required, "selFromOperators", t)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: e.required.selNum,
						callback: function(t) {
							e.$set(e.required, "selNum", Math.max(t, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Rows",
						filled: "",
						items: e.app.rows,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
					},
                    model: {
                        value: e.required.selRows,
                        callback: function(t) {
                            e.$set(e.required, "selRows", t)
                        },
                        expression: "required.selRows"
                    }
                })], 1) : "selFromWhole" == e.required.type ? o("span", [o("v-checkbox", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Show Requirement"
                    },
                    model: {
                        value: e.required.showRequired,
                        callback: function(t) {
                            e.$set(e.required, "showRequired", t);
							if (!t) e.$set(e.required, "hideRequired", t);
                        },
                        expression: "required.showRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Hide when requirement is met"
                    },
                    model: {
                        value: e.required.hideRequired,
                        callback: function(t) {
                            e.$set(e.required, "hideRequired", t)
                        },
                        expression: "required.hideRequired"
                    }
                }), o("v-checkbox", {
					directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired,
                        expression: "required.showRequired"
                    }],
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Use custom requirement text"
                    },
                    model: {
                        value: e.required.customTextIsOn,
                        callback: function(t) {
                            e.$set(e.required, "customTextIsOn", t)
                        },
                        expression: "required.customTextIsOn"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Custom Text"
                    },
                    model: {
                        value: e.required.customText,
                        callback: function(t) {
                            e.$set(e.required, "customText", t)
                        },
                        expression: "required.customText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text Before"
                    },
                    model: {
                        value: e.required.beforeText,
                        callback: function(t) {
                            e.$set(e.required, "beforeText", t)
                        },
                        expression: "required.beforeText"
                    }
                }), o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.required.showRequired && !e.required.customTextIsOn,
                        expression: "required.showRequired"
                    }],
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text After"
                    },
                    model: {
                        value: e.required.afterText,
                        callback: function(t) {
                            e.$set(e.required, "afterText", t)
                        },
                        expression: "required.afterText"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: e.required.selFromOperators,
                        callback: function(t) {
                            e.$set(e.required, "selFromOperators", t)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: e.required.selNum,
						callback: function(t) {
							e.$set(e.required, "selNum", Math.max(t, 0))
						}
					}
				})], 1) : "gid" == e.required.type ? o("span", [o("v-checkbox", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Show Requirement"
                    },
                    model: {
                        value: e.required.showRequired,
                        callback: function(t) {
                            e.$set(e.required, "showRequired", t);
                        },
                        expression: "required.showRequired"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Global Requirement",
						filled: "",
						items: e.app.globalRequirements,
						"item-text": "id",
						"item-value": "id"
                    },
                    model: {
                        value: e.required.reqId,
                        callback: function(t) {
                            e.$set(e.required, "reqId", t)
                        },
                        expression: "required.globalRequirements"
                    }
                })], 1) : e._e(), o("v-row", {
                    staticClass: "pa-0 ma-0"
                }, e._l(e.required.requireds, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-2",
                        attrs: {
                            cols: "6"
                        }
                    }, ["id" == t.type ? o("span", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: t.required ? "Selected Id" : "Not Selected Id",
                            filled: ""
                        },
                        model: {
                            value: t.reqId,
                            callback: function(o) {
                                e.$set(t, "reqId", o)
                            },
                            expression: "requiredReq.reqId"
                        }
                    }), o("v-btn", {
                        staticClass: "pa-0",
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "points" == t.type ? o("span", [o("v-select", {
                        attrs: {
                            "hide-details": "",
                            items: e.pointReqOperators,
                            "item-text": "text",
                            "item-value": "value",
                            filled: "",
                            label: "Operator"
                        },
                        model: {
                            value: t.operator,
                            callback: function(o) {
                                e.$set(t, "operator", o)
                            },
                            expression: "requiredReq.operator"
                        }
                    }), o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
                            items: e.app.pointTypes,
                            "item-text": "name",
                            "item-value": "id",
                            filled: "",
                            label: "Point Type"
                        },
                        model: {
                            value: t.reqId,
                            callback: function(o) {
                                e.$set(t, "reqId", o)
                            },
                            expression: "requiredReq.reqId"
                        }
                    }), o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            type: "number",
                            filled: ""
                        },
                        model: {
                            value: t.reqPoints,
                            callback: function(o) {
                                e.$set(t, "reqPoints", o)
                            },
                            expression: "requiredReq.reqPoints"
                        }
                    }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "pointCompare" == t.type ? o("span", [o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(o) {
							if ("undefined" === typeof t.more) e.$set(t, "more", []);
							t.more.push({operator: "1", type: "id", id: ""});
						}
					}
				}, [e._v("Add Point Type")]), o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(o) {
							if ("undefined" === typeof t.more) e.$set(t, "more", []);
							t.more.push({operator: "1", type: "points", points: 0});
						}
					}
				}, [e._v("Add Point")]), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Target Point"
                    },
                    model: {
                        value: t.reqId,
                        callback: function(o) {
                            e.$set(t, "reqId", o)
                        },
                        expression: "t.reqId"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.pointComOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: t.operator,
                        callback: function(o) {
                            e.$set(t, "operator", o)
                        },
                        expression: "t.operator"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.app.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type"
                    },
                    model: {
                        value: t.reqId1,
                        callback: function(o) {
                            e.$set(t, "reqId1", o)
                        },
                        expression: "required.reqId1"
                    }
                }), e._l(t.more, (function(s) {
                    return o("span", {
                        key: s.index
                    }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.moreOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: s.operator,
                        callback: function(o) {
                            e.$set(s, "operator", o)
                        },
                        expression: "s.oprator"
                    }
                }), "id" == s.type ? o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
							items: e.app.pointTypes,
							"item-text": "name",
							"item-value": "id",
							filled: "",
							label: "Point Type"
                        },
                        model: {
                            value: s.id,
                            callback: function(o) {
                                e.$set(s, "id", o)
                            },
                            expression: "s.id"
                        }
                    }) : o("v-text-field", {
                        attrs: {
                            "hide-details": "",
							type: "number",
							filled: "",
							label: "Value"
                        },
                        model: {
                            value: s.points,
                            callback: function(o) {
                                e.$set(s, "points", o)
                            },
                            expression: "s.points"
                        }
                    })], 1)
                })), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 2) : "or" == t.type ? o("span", [o("v-row", {
					staticClass: "ma-0 pa-0"
				}, [o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(o) {
							if (t.orRequired.length > 1) {
								t.orRequired.pop();
							}
                        }
                    }
                }, [o("v-icon", [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(o) {
                            t.orRequired.push({req: ""});
                        }
                    }
                }, [o("v-icon", [e._v("mdi-plus")])], 1)], 1), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "X",
						filled: "",
						min: 0,
						max: t.orRequired.length
					},
					model: {
						value: t.orNum,
						callback: function(o) {
							e.$set(t, "orNum", Math.min(Math.max(o, 0), t.orRequired.length))
						}
					}
				}), e._l(t.orRequired, (function(i) {
                        return o("span", {
                            key: i.index
                        }, [o("v-text-field", {
                            attrs: {
                                label: t.required ? "Selected Choice Id" : "Not Selected Choice Id",
                                "hide-details": "",
                                placeholder: t.required ? "Selected Id" : "Not Selected Id",
                                filled: ""
                            },
                            model: {
                                value: i.req,
                                callback: function(t) {
                                    e.$set(i, "req", t)
                                },
                                expression: "orRequired.req"
                            }
                        })], 1)
                    })), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 2) : "selFromGroups" == t.type ? o("span", [o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Groups",
						filled: "",
						items: e.app.groups,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + item.name)])])]],
					},
                    model: {
                        value: t.selGroups,
                        callback: function(o) {
                            e.$set(t, "selGroups", o)
                        },
                        expression: "required.selGroups"
                    }
                }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "selFromRows" == t.type ? o("span", [o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }),  o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Rows",
						filled: "",
						items: e.app.rows,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
					},
                    model: {
                        value: t.selRows,
                        callback: function(o) {
                            e.$set(t, "selRows", o)
                        },
                        expression: "required.selRows"
                    }
                }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "selFromWhole" == t.type ? o("span", [o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "gid" == t.type ? o("span", [o("v-autocomplete", {
						attrs: {
							"hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
							label: "Global Requirement",
							filled: "",
							items: e.app.globalRequirements,
							"item-text": "id",
							"item-value": "id"
						},
						model: {
							value: t.reqId,
							callback: function(o) {
								e.$set(t, "reqId", o)
							},
							expression: "required.reqId"
						}
					}), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.required.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : e._e()])
                })), 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        row: e.required,
                        object: e.required
                    },
                    on: {
                        rowWasChanged: function(t) {
                            e.required = t
                        },
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1)
            },
            ie = [],
            se = {
                props: {
                    required: Object,
                    isEditModeOn: Boolean,
                    row: Object,
					requireds: Array
                },
                data: function() {
                    return {
                        currentComponent: "",
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }]
                    }
                },
                components: {
                    AppRequirement: _
                },
                computed: {
                    activated: function() {
                        return this.$store.state.app.activated
                    },
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
                    app: function() {
                        return this.$store.state.app
                    },
                    styling: function() {
                        return this.row.isPrivateStyling ? this.row.styling : this.$store.state.app.styling
                    },
					globalVariables: function() {
						return this.$store.state.globalVariables
					}
                },
                methods: {
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
					moveRequireUp: function() {
						var e = this.requireds.indexOf(this.required);
                        if (e > 0) {
                            var t = this.requireds[e];
                            this.$set(this.requireds, e, this.requireds[e - 1]), this.$set(this.requireds, e - 1, t);
                        }
					},
					moveRequireDown: function() {
						var e = this.requireds.indexOf(this.required);
                        if (-1 !== e && e < this.requireds.length - 1) {
                            var t = this.requireds[e];
                            this.$set(this.requireds, e, this.requireds[e + 1]), this.$set(this.requireds, e + 1, t);
                        }
					}
                }
            },
            re = se,
            ne = Object(w["a"])(re, oe, ie, !1, null, "9ac8589a", null),
            le = ne.exports;
        x()(ne, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VIcon: J["a"],
            VRow: S["a"],
            VSelect: K["a"],
			VSpacer: O["a"],
            VTextField: R["a"],
            VTooltip: Q["a"]
        });
        var ce = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-col", {
                    staticClass: "pa-0"
                }, [e.isEditModeOn ? o("v-row", {
					ref: "dialog",
                    staticClass: "pt-0 px-0 fl-c",
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-row", {
					staticClass: "ml-2 mr-2"
				}, [o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            return e.moveScoreUp()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-up")])], 1), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            e.currentComponent = "appRequirement"
                        }
                    }
                }, [o("v-icon", [e._v("mdi-key-plus")])], 1), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-btn", e._g({
                                attrs: {
                                    icon: ""
                                },
								on: {
                                    click: function(t) {
										e.$set(e.app, "tmpRequired", e.score.requireds);
										e.globalVariables.text = "The requirement is copied.", e.globalVariables.snackbar = !0;
                                    }
                                }
                            }, i), [o("v-icon", [e._v("mdi-clipboard-outline")])], 1)]
                        }
                    }], null, !1, 971814284)
                }, [o("span", [e._v("Copy Requirement")])]), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(t) {
                            return e.moveScoreDown()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-down")])], 1)], 1), o("v-row", [o("v-col", {
                    staticClass: "py-0",
					attrs: {
						cols: e.window.width > 420 ? "6" : "12"
					}
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 ml-0",
                    attrs: {
						"hide-details": "",
                        label: "at Random?"
                    },
                    model: {
                        value: e.score.isRandom,
                        callback: function(t) {
                            e.$set(e.score, "isRandom", t),
							e.$set(e.score, "minValue", "0"),
							e.$set(e.score, "maxValue", "0"),
							e.$set(e.score, "setValue", false)
                        },
                        expression: "score.isRandom"
                    }
                })], 1), o("v-col", {
                    staticClass: "py-0",
					attrs: {
						cols: e.window.width > 420 ? "6" : "12"
					}
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 ml-0" + (e.window.width > 420 ? "" : " mt-0"),
                    attrs: {
						"hide-details": "",
                        label: "Not allow to discount?"
                    },
                    model: {
                        value: e.score.isNotDiscountable,
                        callback: function(t) {
                            e.$set(e.score, "isNotDiscountable", t)
                        },
                        expression: "score.isNotDiscountable"
                    }
                })], 1), o("v-col", {
                    staticClass: "py-0",
					attrs: {
						cols: e.isSelectableMultiple && e.window.width > 420 ? "6" : "12"
					}
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 ml-0 mt-0",
                    attrs: {
						"hide-details": "",
                        label: "Not allow to recalculate?"
                    },
                    model: {
                        value: e.score.isNotRecalculatable,
                        callback: function(t) {
                            e.$set(e.score, "isNotRecalculatable", t)
                        },
                        expression: "score.isNotRecalculatable"
                    }
                })], 1), e.isSelectableMultiple ? o("v-col", {
                    staticClass: "py-0",
					attrs: {
						cols: e.window.width > 420 ? "6" : "12"
					}
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 ml-0 mt-0",
                    attrs: {
						"hide-details": "",
                        label: "Multiply by number of selections?"
                    },
                    model: {
                        value: e.score.multiplyByTimes,
                        callback: function(t) {
                            e.$set(e.score, "multiplyByTimes", t)
                        },
                        expression: "score.multiplyByTimes"
                    }
                })], 1) : e._e(), o("v-col", {
                    staticClass: "py-0" + (e.window.width > 301 ? " pr-1" : ""),
					attrs: {
						cols: e.window.width > 301 ? "6" : "12"
					}
                }, [o("v-autocomplete", {
                    staticClass: "my-1",
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type"
                    },
                    model: {
                        value: e.score.id,
                        callback: function(t) {
                            e.$set(e.score, "id", t)
                        },
                        expression: "score.id"
                    }
                }), e.score.isRandom ? [o("v-text-field", {
                    staticClass: "my-1",
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        filled: "",
                        label: "Minimum Value"
                    },
                    model: {
                        value: e.score.minValue,
                        callback: function(t) {
                            e.$set(e.score, "minValue", t)
                        },
                        expression: "score.minValue"
                    }
                }), o("v-text-field", {
                    staticClass: "my-1",
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        filled: "",
                        label: "Maximum Value"
                    },
                    model: {
                        value: e.score.maxValue,
                        callback: function(t) {
                            e.$set(e.score, "maxValue", t)
                        },
                        expression: "score.maxValue"
                    }
                })] : o("v-text-field", {
                    staticClass: "my-1",
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        filled: "",
                        label: "Value"
                    },
                    model: {
                        value: e.score.value,
                        callback: function(t) {
                            e.$set(e.score, "value", t)
                        },
                        expression: "score.value"
                    }
                })], 1), o("v-col", {
                    staticClass: "py-0" + (e.window.width > 301 ? " pl-2" : ""),
					attrs: {
						cols: e.window.width > 301 ? "6" : "12"
					}
                }, [o("v-text-field", {
                    staticClass: "my-1",
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text Before"
                    },
                    model: {
                        value: e.score.beforeText,
                        callback: function(t) {
                            e.$set(e.score, "beforeText", t)
                        },
                        expression: "score.beforeText"
                    }
                }), o("v-text-field", {
                    staticClass: "my-1",
                    attrs: {
                        "hide-details": "",
                        filled: "",
                        label: "Text After"
                    },
                    model: {
                        value: e.score.afterText,
                        callback: function(t) {
                            e.$set(e.score, "afterText", t)
                        },
                        expression: "score.afterText"
                    }
                })], 1)], 1), o("v-row", e._l(e.score.requireds, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-2",
                        attrs: {
                            cols: e.window.width > 301 ? "6" : "12"
                        }
                    }, [o("v-card", ["id" == t.type ? o("span", [o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text Before"
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "required.beforeText"
                        }
                    }), o("v-text-field", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: t.showRequired,
                            expression: "required.showRequired"
                        }],
                        attrs: {
                            "hide-details": "",
                            filled: "",
                            label: "Text After"
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "required.afterText"
                        }
                    }), o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: t.required ? "Selected Id" : "Not Selected Id",
                            filled: ""
                        },
                        model: {
                            value: t.reqId,
                            callback: function(o) {
                                e.$set(t, "reqId", o)
                            },
                            expression: "required.reqId"
                        }
                    }), o("v-btn", {
                        staticClass: "pa-0",
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "points" == t.type ? o("span", [o("v-select", {
                        attrs: {
                            "hide-details": "",
                            items: e.pointReqOperators,
                            "item-text": "text",
                            "item-value": "value",
                            filled: "",
                            label: "Operator"
                        },
                        model: {
                            value: t.operator,
                            callback: function(o) {
                                e.$set(t, "operator", o)
                            },
                            expression: "required.operator"
                        }
                    }), o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
                            items: e.pointTypes,
                            "item-text": "name",
                            "item-value": "id",
                            filled: "",
                            label: "Point Type"
                        },
                        model: {
                            value: t.reqId,
                            callback: function(o) {
                                e.$set(t, "reqId", o)
                            },
                            expression: "required.reqId"
                        }
                    }), o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            type: "number",
                            label: t.required ? "More Than" : "Less Than",
                            filled: ""
                        },
                        model: {
                            value: t.reqPoints,
                            callback: function(o) {
                                e.$set(t, "reqPoints", o)
                            },
                            expression: "required.reqPoints"
                        }
                    }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "pointCompare" == t.type ? o("span", [o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(o) {
							if ("undefined" === typeof t.more) e.$set(t, "more", []);
							t.more.push({operator: "1", type: "id", id: ""});
						}
					}
				}, [e._v("Add Point Type")]), o("v-btn", {
					staticClass: "mt-01",
					staticStyle: {
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
					on: {
						click: function(o) {
							if ("undefined" === typeof t.more) e.$set(t, "more", []);
							t.more.push({operator: "1", type: "points", points: 0});
						}
					}
				}, [e._v("Add Point")]), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Target Point"
                    },
                    model: {
                        value: t.reqId,
                        callback: function(o) {
                            e.$set(t, "reqId", o)
                        },
                        expression: "required.reqId"
                    }
                }), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.pointComOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: t.operator,
                        callback: function(o) {
                            e.$set(t, "operator", o)
                        },
                        expression: "required.operator"
                    }
                }), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point Type"
                    },
                    model: {
                        value: t.reqId1,
                        callback: function(o) {
                            e.$set(t, "reqId1", o)
                        },
                        expression: "required.reqId1"
                    }
                }), e._l(t.more, (function(s) {
                    return o("span", {
                        key: s.index
                    }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.moreOperators,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Operator"
                    },
                    model: {
                        value: s.operator,
                        callback: function(o) {
                            e.$set(s, "operator", o)
                        },
                        expression: "s.oprator"
                    }
                }), "id" == s.type ? o("v-autocomplete", {
                        attrs: {
                            "hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
							items: e.pointTypes,
							"item-text": "name",
							"item-value": "id",
							filled: "",
							label: "Point Type"
                        },
                        model: {
                            value: s.id,
                            callback: function(o) {
                                e.$set(s, "id", o)
                            },
                            expression: "s.id"
                        }
                    }) : o("v-text-field", {
                        attrs: {
                            "hide-details": "",
							type: "number",
							filled: "",
							label: "Value"
                        },
                        model: {
                            value: s.points,
                            callback: function(o) {
                                e.$set(s, "points", o)
                            },
                            expression: "s.points"
                        }
                    })], 1)
                })), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 2) : "or" == t.type ? o("span", [o("v-row", {
					staticClass: "ma-0 pa-0"
				}, [o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(o) {
							if (t.orRequired.length > 1) {
								t.orRequired.pop();
							}
                        }
                    }
                }, [o("v-icon", [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-btn", {
                    attrs: {
                        icon: ""
                    },
					on: {
                        click: function(o) {
                            t.orRequired.push({req: ""});
                        }
                    }
                }, [o("v-icon", [e._v("mdi-plus")])], 1)], 1), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "X",
						filled: "",
						min: 0,
						max: t.orRequired.length
					},
					model: {
						value: t.orNum,
						callback: function(o) {
							e.$set(t, "orNum", Math.min(Math.max(o, 0), t.orRequired.length))
						}
					}
				}), e._l(t.orRequired, (function(i) {
                        return o("span", {
                            key: i.index
                        }, [o("v-text-field", {
                            attrs: {
                                label: t.required ? "Selected Choice Id" : "Not Selected Choice Id",
                                "hide-details": "",
                                placeholder: t.required ? "Selected Id" : "Not Selected Id",
                                filled: ""
                            },
                            model: {
                                value: i.req,
                                callback: function(t) {
                                    e.$set(i, "req", t)
                                },
                                expression: "orRequired.req"
                            }
                        })], 1)
                    })), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 2) : "selFromGroups" == t.type ? o("span", [o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Groups",
						filled: "",
						items: e.app.groups,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + item.name)])])]],
					},
                    model: {
                        value: t.selGroups,
                        callback: function(o) {
                            e.$set(t, "selGroups", o)
                        },
                        expression: "required.selGroups"
                    }
                }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "selFromRows" == t.type ? o("span", [o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
						label: "Selected from Rows",
						filled: "",
						items: e.app.rows,
						"item-text": "id",
						"item-value": "id",
						multiple: ""
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__action mr-2"
							}, [o("div", {
								staticClass: "v-simple-checkbox"
							}, [o("div", {
								staticClass: "v-input--selection-controls__ripple primary--text"
							}), o("i", {
								staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
								attrs: {
									"aria-hidden": "true"
								}
							})])]), [o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
					},
                    model: {
                        value: t.selRows,
                        callback: function(o) {
                            e.$set(t, "selRows", o)
                        },
                        expression: "required.selRows"
                    }
                }), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "selFromWhole" == t.type ? o("span", [o("v-select", {
                    attrs: {
                        "hide-details": "",
						label: "Operator",
						filled: "",
						items: e.selFromOperators,
						"item-text": "text",
						"item-value": "value"
                    },
                    model: {
                        value: t.selFromOperators,
                        callback: function(o) {
                            e.$set(t, "selFromOperators", o)
                        },
                        expression: "required.selFromOperators"
                    }
                }), o("v-text-field", {
					attrs: {
						"hide-details": "",
						type: "number",
						label: "Number of Selection",
						filled: "",
						min: 0
					},
					model: {
						value: t.selNum,
						callback: function(o) {
							e.$set(t, "selNum", Math.max(o, 0))
						}
					}
				}), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : "gid" == t.type ? o("span", [o("v-autocomplete", {
						attrs: {
							"hide-details": "",
							"small-chips": "",
							"deletable-chips": "",
							label: "Global Requirement",
							filled: "",
							items: e.app.globalRequirements,
							"item-text": "id",
							"item-value": "id"
						},
						model: {
							value: t.reqId,
							callback: function(o) {
								e.$set(t, "reqId", o)
							},
							expression: "required.reqId"
						}
					}), o("v-btn", {
                        staticStyle: {
                            color: e.$vuetify.theme.isDark ? "white" : "black"
                        },
                        on: {
                            click: function(t) {
                                return e.deleteEvent(i, e.score.requireds)
                            }
                        }
                    }, [e._v("Delete")])], 1) : e._e()])], 1)
                })), 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        row: e.score,
                        object: e.score
                    },
                    on: {
                        rowWasChanged: function(t) {
                            e.object = t
                        },
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1) : e.pointType.iconIsOn && !e.pointType.imageSidePlacement && e.score.showScore && e.isPointtypeActivated ? o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    staticClass: "pa-0 ma-0",
                    style: e.scoreText
                }, [o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:3px;padding-right:3px" : "padding-left:1px;padding-right:2px"
                }, [e.pointType.iconIsOn && !e.pointType.imageOnSide ? o("img", {
                    style: "float: left; width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()]), o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.beforeText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountBeforeText : "") + " ", e.sanitizeArg))
                    }
                })]), o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:3px;padding-right:3px" : "padding-left:1px;padding-right:2px"
                }, [e.pointType.iconIsOn && e.pointType.imageOnSide ? o("img", {
                    style: "width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()]), o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize((e.score.hideValue ? "" : (e.score.isRandom && !e.score.setValue ? (e.score.maxValue < 0 ? (e.scoreMaxValue + " ~ " + e.scoreMinValue) : (e.scoreMinValue + " ~ " + e.scoreMaxValue)) : e.scoreValue)) + " " + e.score.afterText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountAfterText : ""), e.sanitizeArg))
                    }
                })])])], 1) : e.pointType.iconIsOn && e.pointType.imageSidePlacement && e.score.showScore && e.isPointtypeActivated ? o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    staticClass: "pa-0 ma-0",
                    style: e.scoreText
                }, [o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.beforeText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountBeforeText : "") + " " + (e.score.hideValue ? "" : (e.score.isRandom && !e.score.setValue ? (e.score.maxValue < 0 ? (e.scoreMaxValue + " ~ " + e.scoreMinValue) : (e.scoreMinValue + " ~ " + e.scoreMaxValue)) : e.scoreValue)) + " ", e.sanitizeArg))
                    }
                })]), o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:1px;padding-right:2px" : "padding-left:3px;padding-right:3px"
                }, [e.pointType.iconIsOn && !e.pointType.imageOnSide ? o("img", {
                    style: "width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()]), o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.afterText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountAfterText : "") + " ", e.sanitizeArg))
                    }
                })]), o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:3px;padding-right:3px" : "padding-left:1px;padding-right:2px"
                }, [e.pointType.iconIsOn && e.pointType.imageOnSide ? o("img", {
                    style: "width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()])])], 1) : e.score.showScore && !e.pointType.iconIsOn && e.isPointtypeActivated ? o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    staticClass: "pa-0 ma-0",
                    style: e.scoreText
                }, [o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.beforeText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountBeforeText : "") + " " + (e.score.hideValue ? "" : (e.score.isRandom && !e.score.setValue ? (e.score.maxValue < 0 ? (e.scoreMaxValue + " ~ " + e.scoreMinValue) : (e.scoreMinValue + " ~ " + e.scoreMaxValue)) : e.scoreValue)) + " " + e.score.afterText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountAfterText : "") + " ", e.sanitizeArg))
                    }
                })])])], 1) : e._e()], 1)
            },
            de = [],
            pe = {
                props: {
                    score: Object,
                    isEditModeOn: Boolean,
					scores: Array,
					isSelectableMultiple: Boolean
                },
                data: function() {
                    return {
                        currentComponent: "",
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }],
                        pointType: {
                            id: "text",
                            name: "Points",
                            startingSum: 0,
                            initValue: 0,
                            activatedId: "",
                            afterText: ""
                        },
                        posOrNeg: null,
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        },
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                components: {
                    AppRequirement: _
                },
                created: function() {
                    for (var e = 0; e < this.pointTypes.length; e++) this.pointTypes[e].id == this.score.id && (this.pointType = this.pointTypes[e]);
                    this.posOrNeg = this.score.value < 0
                },
				watch: {
					isEditModeOn: function(e) {
						e ? this.setupResizeObserver() : this.cleanupResizeObserver()
					}
				},
				mounted: function() {
					if (this.isEditModeOn) {
						this.setupResizeObserver()
					}
				},
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                computed: {
					checkPosOrNeg: function() {
						var e = this.score.discountShow ? this.score.discountScore : this.score.value;
						return e < 0
					},
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    scoreText: function() {
                        var e = 'font-family: "' + this.styling.scoreText + '";font-size: ' + this.styling.scoreTextSize + "%;text-align: " + this.styling.scoreTextAlign + ";display: flex; align-items: " + this.styling.scoreTextAlign + "; justify-content:" + this.styling.scoreTextAlign + ";";
                        return "undefined" !== typeof this.pointType && (this.pointType.pointColorsIsOn ? this.checkPosOrNeg ? e += "color: " + this.pointType.positiveColor.hex + ";" : e += "color: " + this.pointType.negativeColor.hex + ";" : e += "color: " + this.styling.scoreTextColor + ";"), e
                    },
                    scoreValue: function() {
						var s = this.score.discountShow ? this.score.discountScore : this.score.value;
                        var e = s < 0 ? -1 * s : s;
                        return this.pointType.plussOrMinusAdded && (e = this.checkPosOrNeg && !this.pointType.plussOrMinusInverted || this.pointType.plussOrMinusInverted && !this.checkPosOrNeg ? "+" + e : "-" + e), e
                    },
					scoreMinValue: function() {
						var minPosOrNeg = this.score.minValue < 0,
							e = minPosOrNeg ? -1 * this.score.minValue : this.score.minValue;
						return this.pointType.plussOrMinusAdded && (e = minPosOrNeg && !this.pointType.plussOrMinusInverted || this.pointType.plussOrMinusInverted && !minPosOrNeg ? "+" + e : "-" + e), e
					},
					scoreMaxValue: function() {
						var maxPosOrNeg = this.score.maxValue < 0,
							e = maxPosOrNeg ? -1 * this.score.maxValue : this.score.maxValue;
						return this.pointType.plussOrMinusAdded && (e = maxPosOrNeg && !this.pointType.plussOrMinusInverted || this.pointType.plussOrMinusInverted && !maxPosOrNeg ? "+" + e : "-" + e), e
					},
                    activated: function() {
                        return this.$store.state.app.activated
                    },
                    isPointtypeActivated: function() {
                        for (var e = 0; e < this.pointTypes.length; e++)
                            if (this.pointTypes[e].id == this.score.id) {
								if ("" != this.pointTypes[e].activatedId) {
									if ("undefined" !== typeof this.app.compGR[this.pointTypes[e].activatedId]) {
										var co = this.app.compGR[this.pointTypes[e].activatedId],
											cGR = this.app.globalRequirements[co.globalRequirements];
										return this.checkRequireds(cGR);
									} else {
										return (this.activated.includes(this.pointTypes[e].activatedId) || !this.pointTypes[e].isNotShownObjects);
									}
								} else {
									return !this.pointTypes[e].isNotShownObjects;
								}
							}
                        return !0
                    },
					app: function() {
                        return this.$store.state.app
                    },
					globalVariables: function() {
						return this.$store.state.globalVariables
					}
                },
                methods: {
					setupResizeObserver: function() {
						this.$nextTick(() => {
							if (this.$refs.dialog) {
								this.resizeObserver = new ResizeObserver((e) => {
									for (var t of e) {
										this.window.width = t.contentRect.width;
										this.window.hegiht = t.contentRect.height;
									}
								});
								this.resizeObserver.observe(this.$refs.dialog);
							}
						})
					},
					cleanupResizeObserver: function() {
						if (this.resizeObserver && this.$refs.panels) {
							this.resizeObserver.disconnect();
						}
					},
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
                    updateObject: function() {
                        this.$emit("scoreWasChanged", this.score)
                    },
                    changedOption: function(e) {
                        this.score.name = e.target.options[e.target.options.selectedIndex].text
                    },
					checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
					moveScoreUp: function() {
						var e = this.scores.indexOf(this.score);
                        if (e > 0) {
                            var t = this.scores[e];
                            this.$set(this.scores, e, this.scores[e - 1]), this.$set(this.scores, e - 1, t);
                        }
					},
					moveScoreDown: function() {
						var e = this.scores.indexOf(this.score);
                        if (-1 !== e && e < this.scores.length - 1) {
                            var t = this.scores[e];
                            this.$set(this.scores, e, this.scores[e + 1]), this.$set(this.scores, e + 1, t);
                        }
					}
                }
            },
            ue = pe,
            he = Object(w["a"])(ue, ce, de, !1, null, null, null),
            ge = he.exports;
        x()(he, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VIcon: J["a"],
            VRow: S["a"],
            VSelect: K["a"],
			VSpacer: O["a"],
            VTextField: R["a"],
			VTooltip: Q["a"]
        });
        var be = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Choice Settings")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Move Choice In This Row "), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
						"small-chips": "",
						"deletable-chips": "",
                        items: e.tRow.objects,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Move this to..."
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + item.title)])])],
					},
                    model: {
                        value: e.newObject,
                        callback: function(t) {
                            e.newObject = t
                        },
                        expression: "newObject"
                    }
                }), o("v-row", {
                    staticClass: "pa-0"
                }, [o("v-col", {
					attrs: {
						cols: "6"
					}
				}, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.moveObjectBefore()
                        }
                    }
                }, [e._v("Move before")])], 1), o("v-col", {
					attrs: {
						cols: "6"
					}
				}, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.moveObjectAfter()
                        }
                    }
                }, [e._v("Move after")])], 1)], 1), e._v(" Copy Choice Into Another Row "), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
                        items: e.rows,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Copy this choice into..."
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])],
					},
                    model: {
                        value: e.newRow,
                        callback: function(t) {
                            e.newRow = t
                        },
                        expression: "newRow"
                    }
                }), o("v-row", {
                    staticClass: "pa-0"
                }, [o("v-col", [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.mergeObject()
                        }
                    }
                }, [e._v("Copy")])], 1)], 1)], 1)], 1)], 1), o("v-container", [o("v-col", [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Use private styling?"
                    },
                    model: {
                        value: e.row.isPrivateStyling,
                        callback: function(t) {
							e.$set(e.row, "isPrivateStyling", t);
							e.$set(e.row, "styling", {});
							e.$set(e.row, "privateFilterIsOn", !1);
							e.$set(e.row, "privateTextIsOn", !1);
							e.$set(e.row, "privateObjectImageIsOn", !1);
							e.$set(e.row, "privateObjectIsOn", !1);
							e.$set(e.row, "privateAddonImageIsOn", !1);
							e.$set(e.row, "privateAddonIsOn", !1);
							e.$set(e.row, "privateBackgroundIsOn", !1);
                        },
                        expression: "row.isPrivateStyling"
                    }
                })], 1), e.row.isPrivateStyling ? o("v-row", [o("v-col", {
					attrs: {
                        cols: "12"
                    }
				}, [o("v-file-input", {
					attrs: {
						"hide-details": "",
						label: "Import Design",
						multiple: "",
						placeholder: "Select your project",
						"prepend-icon": "mdi-paperclip",
						outlined: "",
						"show-size": 1e3
					},
					on: {
						change: e.importFromProject
					},
					scopedSlots: e._u([{
						key: "selection",
						fn: function(t) {
							var i = t.index,
								s = t.text;
							return [i < 2 ? o("v-chip", {
								attrs: {
									dark: "",
									label: "",
									small: ""
								}
							}, [e._v(e._s(s))]) : e._e()]
						}
					}]),
					model: {
						value: e.files,
						callback: function(t) {
							e.files = t
						},
						expression: "files"
					}
				})], 1), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    attrs: {
										cols: "12"
									}
                                }, [o("v-btn", e._g({
                                    staticStyle: {
                                        color: e.$vuetify.theme.isDark ? "white" : "black"
                                    },
                                    on: {
                                        click: function(o) {
                                            return e.exportDesign()
                                        }
                                    }
                                }, s), [e._v(e._s("Export Design"))])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Here you can export your design.")
                        }
                    })]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appFilter"
                                    }
                                }
                            }, i), [e._v("Manage Filter Design")])], 1)]
                        }
                    }], null, !1, 3225312638)
                }, [o("span", [e._v(" Here you can change the filters for choices that are selected "), o("br"), e._v("and the one's you dont have the requirements for. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appText"
                                    }
                                }
                            }, i), [e._v("Manage Text Design")])], 1)]
                        }
                    }], null, !1, 268359582)
                }, [o("span", [e._v(" Here you can change the size, font and "), o("br"), e._v("color of the text on titles and text. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectDesign"
                                    }
                                }
                            }, i), [e._v("Manage Choice Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on choices. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectImage"
                                    }
                                }
                            }, i), [e._v("Manage Choices Image Design")])], 1)]
                        }
                    }], null, !1, 1468014515)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on objects. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonDesign"
                                    }
                                }
                            }, i), [e._v("Manage Addon Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonImage"
                                    }
                                }
                            }, i), [e._v("Manage Addon Image Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appMultiChoice"
                                    }
                                }
                            }, i), [e._v("Manage Multi Choice Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the size and font of "), o("br"), e._v(" the choices that can be selected multiple times. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appBackground"
                                    }
                                }
                            }, i), [e._v("Manage Background Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the color and place images in "), o("br"), e._v("the background of rows, choices and the whole project. ")])])], 1) : e._e()], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        from: "private",
                        row: e.row,
                        currentComponent: e.currentComponent
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            ve = [],
            me = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateFilterIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateFilterIsOn", t);
							if (t) {
								Object.keys(e.filterStyling).forEach(key => {
									if (e.app.styling.hasOwnProperty(key)) {
										e.$set(e.styling, key, e.app.styling[key]);
									}
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.filterStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateFilterIsOn"
                    }
                }), e._v("Filter")]), o("v-card-text", {
					staticClass: !e.row.privateFilterIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", {
                    attrs: {
                        align: "center"
                    }
                }, [o("v-col", [o("v-row", {
                    staticClass: "modal-header"
                }, [o("h5", {
                    staticClass: "modal-title"
                }, [e._v("Filter on Choice that is selected")])]), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterBlurIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBlurIsOn", t)
                        },
                        expression: "styling.selFilterBlurIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Blur",
                        suffix: "px",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterBlur,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBlur", t)
                        },
                        expression: "styling.selFilterBlur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterBrightIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBrightIsOn", t)
                        },
                        expression: "styling.selFilterBrightIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Brightness",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterBright,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBright", t)
                        },
                        expression: "styling.selFilterBright"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterContIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterContIsOn", t)
                        },
                        expression: "styling.selFilterContIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Contrast",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterCont,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterCont", t)
                        },
                        expression: "styling.selFilterCont"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterHueIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterHueIsOn", t)
                        },
                        expression: "styling.selFilterHueIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Hue-rotate",
                        suffix: "deg",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterHue,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterHue", t)
                        },
                        expression: "styling.selFilterHue"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterInvertIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterInvertIsOn", t)
                        },
                        expression: "styling.selFilterInvertIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Invert",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterInvert,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterInvert", t)
                        },
                        expression: "styling.selFilterInvert"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterSepiaIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSepiaIsOn", t)
                        },
                        expression: "styling.selFilterSepiaIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Sepia",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterSepia,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSepia", t)
                        },
                        expression: "styling.selFilterSepia"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterOpacIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterOpacIsOn", t)
                        },
                        expression: "styling.selFilterOpacIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Opacity",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterOpac,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterOpac", t)
                        },
                        expression: "styling.selFilterOpac"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterSaturIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSaturIsOn", t)
                        },
                        expression: "styling.selFilterSaturIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Saturate",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterSatur,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSatur", t)
                        },
                        expression: "styling.selFilterSatur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterGrayIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterGrayIsOn", t)
                        },
                        expression: "styling.selFilterGrayIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Greyscale",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterGray,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterGray", t)
                        },
                        expression: "styling.selFilterGray"
                    }
                })], 1), o("v-row", {
					staticClass: "ma-0 container--fluid"
				}, [o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Background Color"
                    },
                    model: {
                        value: e.styling.selBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selBgColorIsOn", t)
                        },
                        expression: "styling.selBgColorIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Overlay on Image?",
						disabled: !e.styling.selBgColorIsOn
                    },
                    model: {
                        value: e.styling.selOverlayOnImage,
                        callback: function(t) {
                            e.$set(e.styling, "selOverlayOnImage", t)
                        },
                        expression: "styling.selOverlayOnImage"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selBgColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBgColor", t)
                        },
                        expression: "styling.selFilterBgColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Border Color"
                    },
                    model: {
                        value: e.styling.selBorderColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selBorderColorIsOn", t)
                        },
                        expression: "styling.selBorderColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selBorderColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBorderColor", t)
                        },
                        expression: "styling.selFilterBorderColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Title Color"
                    },
                    model: {
                        value: e.styling.selCTitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selCTitleColorIsOn", t)
                        },
                        expression: "styling.selCTitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selCTitleColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterCTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterCTitleColor", t)
                        },
                        expression: "styling.selFilterCTitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Text Color"
                    },
                    model: {
                        value: e.styling.selCTextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selCTextColorIsOn", t)
                        },
                        expression: "styling.selCTextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selCTextColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterCTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterCTextColor", t)
                        },
                        expression: "styling.selFilterCTextColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Title Color"
                    },
                    model: {
                        value: e.styling.selATitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selATitleColorIsOn", t)
                        },
                        expression: "styling.selATitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selATitleColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterATitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterATitleColor", t)
                        },
                        expression: "styling.selFilterATitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Text Color"
                    },
                    model: {
                        value: e.styling.selATextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selATextColorIsOn", t)
                        },
                        expression: "styling.selATextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selATextColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterATextColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterATextColor", t)
                        },
                        expression: "styling.selFilterATextColor"
                    }
                })], 1)])], 1), o("v-row", {
                    staticClass: "modal-header"
                }, [o("h5", {
                    staticClass: "modal-title"
                }, [e._v("Filter on Choice that is missing its required")])]), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterBlurIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBlurIsOn", t)
                        },
                        expression: "styling.reqFilterBlurIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Blur",
                        suffix: "px",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterBlur,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBlur", t)
                        },
                        expression: "styling.reqFilterBlur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterBrightIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBrightIsOn", t)
                        },
                        expression: "styling.reqFilterBrightIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Brightness",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterBright,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBright", t)
                        },
                        expression: "styling.reqFilterBright"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterContIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterContIsOn", t)
                        },
                        expression: "styling.reqFilterContIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Contrast",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterCont,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterCont", t)
                        },
                        expression: "styling.reqFilterCont"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterHueIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterHueIsOn", t)
                        },
                        expression: "styling.reqFilterHueIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Hue-rotate",
                        suffix: "deg",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterHue,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterHue", t)
                        },
                        expression: "styling.reqFilterHue"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterInvertIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterInvertIsOn", t)
                        },
                        expression: "styling.reqFilterInvertIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Invert",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterInvert,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterInvert", t)
                        },
                        expression: "styling.reqFilterInvert"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterSepiaIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSepiaIsOn", t)
                        },
                        expression: "styling.reqFilterSepiaIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Sepia",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterSepia,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSepia", t)
                        },
                        expression: "styling.reqFilterSepia"
                    }
                }), o("v-switch", {
                    attrs: {
                        label: "Hide The Choice Completely"
                    },
                    model: {
                        value: e.styling.reqFilterVisibleIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterVisibleIsOn", t)
                        },
                        expression: "styling.reqFilterVisibleIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterOpacIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterOpacIsOn", t)
                        },
                        expression: "styling.reqFilterOpacIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Opacity",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterOpac,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterOpac", t)
                        },
                        expression: "styling.reqFilterOpac"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterSaturIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSaturIsOn", t)
                        },
                        expression: "styling.reqFilterSaturIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Saturate",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterSatur,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSatur", t)
                        },
                        expression: "styling.reqFilterSatur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterGrayIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterGrayIsOn", t)
                        },
                        expression: "styling.reqFilterGrayIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Greyscale",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterGray,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterGray", t)
                        },
                        expression: "styling.reqFilterGray"
                    }
                })], 1), o("v-row", {
					staticClass: "ma-0 container--fluid"
				}, [o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Background Color"
                    },
                    model: {
                        value: e.styling.reqBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqBgColorIsOn", t)
                        },
                        expression: "styling.reqBgColorIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Overlay on Image?",
						disabled: !e.styling.reqBgColorIsOn
                    },
                    model: {
                        value: e.styling.reqOverlayOnImage,
                        callback: function(t) {
                            e.$set(e.styling, "reqOverlayOnImage", t)
                        },
                        expression: "styling.reqOverlayOnImage"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqBgColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBgColor", t)
                        },
                        expression: "styling.reqFilterBgColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Border Color"
                    },
                    model: {
                        value: e.styling.reqBorderColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqBorderColorIsOn", t)
                        },
                        expression: "styling.reqBorderColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqBorderColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBorderColor", t)
                        },
                        expression: "styling.reqFilterBorderColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Title Color"
                    },
                    model: {
                        value: e.styling.reqCTitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqCTitleColorIsOn", t)
                        },
                        expression: "styling.reqCTitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqCTitleColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterCTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterCTitleColor", t)
                        },
                        expression: "styling.reqFilterCTitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Text Color"
                    },
                    model: {
                        value: e.styling.reqCTextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqCTextColorIsOn", t)
                        },
                        expression: "styling.reqCTextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqCTextColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterCTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterCTextColor", t)
                        },
                        expression: "styling.reqFilterCTextColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Title Color"
                    },
                    model: {
                        value: e.styling.reqATitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqATitleColorIsOn", t)
                        },
                        expression: "styling.reqATitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqATitleColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterATitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterATitleColor", t)
                        },
                        expression: "styling.reqFilterATitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : e.window.width > 719 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Text Color"
                    },
                    model: {
                        value: e.styling.reqATextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqATextColorIsOn", t)
                        },
                        expression: "styling.reqATextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqATextColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterATextColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterATextColor", t)
                        },
                        expression: "styling.reqFilterATextColor"
                    }
                })], 1)])], 1), o("v-row", {
                    staticClass: "modal-header"
                }, [o("h5", {
                    staticClass: "modal-title"
                }, [e._v("Filter on Choice that is unselected")])]), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterBlurIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBlurIsOn", t)
                        },
                        expression: "styling.unselFilterBlurIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Blur",
                        suffix: "px",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterBlur,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBlur", t)
                        },
                        expression: "styling.unselFilterBlur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterBrightIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBrightIsOn", t)
                        },
                        expression: "styling.unselFilterBrightIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Brightness",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterBright,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBright", t)
                        },
                        expression: "styling.unselFilterBright"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterContIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterContIsOn", t)
                        },
                        expression: "styling.unselFilterContIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Contrast",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterCont,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterCont", t)
                        },
                        expression: "styling.unselFilterCont"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterHueIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterHueIsOn", t)
                        },
                        expression: "styling.unselFilterHueIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Hue-rotate",
                        suffix: "deg",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterHue,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterHue", t)
                        },
                        expression: "styling.unselFilterHue"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterInvertIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterInvertIsOn", t)
                        },
                        expression: "styling.unselFilterInvertIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Invert",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterInvert,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterInvert", t)
                        },
                        expression: "styling.unselFilterInvert"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterSepiaIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSepiaIsOn", t)
                        },
                        expression: "styling.unselFilterSepiaIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Sepia",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterSepia,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSepia", t)
                        },
                        expression: "styling.unselFilterSepia"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterOpacIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterOpacIsOn", t)
                        },
                        expression: "styling.unselFilterOpacIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Opacity",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterOpac,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterOpac", t)
                        },
                        expression: "styling.unselFilterOpac"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterSaturIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSaturIsOn", t)
                        },
                        expression: "styling.unselFilterSaturIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Saturate",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterSatur,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSatur", t)
                        },
                        expression: "styling.unselFilterSatur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterGrayIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterGrayIsOn", t)
                        },
                        expression: "styling.unselFilterGrayIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Greyscale",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterGray,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterGray", t)
                        },
                        expression: "styling.unselFilterGray"
                    }
                })], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            fe = [],
            we = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
						if ("private" === this.from) if("undefined" === typeof this.row.styling) this.$set(this.row, "styling", {});
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
					filterStyling: function() {
						return this.$store.state.filterStyling
					},
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateFilterIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.filterStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            ye = we,
            xe = o("03a4"),
            Ce = Object(w["a"])(ye, me, fe, !1, null, null, null),
            Te = Ce.exports;
        x()(Ce, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var je = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateTextIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateTextIsOn", t);
							if (t) {
								Object.keys(e.textStyling).forEach(key => {
									if (e.app.styling.hasOwnProperty(key)) {
										e.$set(e.styling, key, e.app.styling[key]);
									}
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.textStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateTextIsOn"
                    }
                }), e._v("Text")]), o("v-card-text", {
					staticClass: !e.row.privateTextIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", [o("v-col", {
                }, [e._v(" Row Title "), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customRowTitle,
						callback: function(t) {
							e.$set(e.styling, "customRowTitle", t)
						},
						expression: "styling.customRowTitle"
					}
				}), e.styling.customRowTitle ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.rowTitle,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitle", t)
                        },
                        expression: "styling.rowTitle"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.rowTitle,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitle", t)
                        },
                        expression: "styling.rowTitle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowTitleTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitleTextSize", t)
                        },
                        expression: "styling.rowTitleTextSize"
                    }
                }, [e._v("%")]), o("v-select", {
                    attrs: {
                        items: e.textAlignment,
                        filled: "",
                        label: "Text Alignment"
                    },
                    model: {
                        value: e.styling.rowTitleAlign,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitleAlign", t)
                        },
                        expression: "styling.rowTitleAlign"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.rowTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitleColor", t)
                        },
                        expression: "styling.rowTitleColor"
                    }
                })], 1), o("v-col", {
                }, [e._v(" Row Text "), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customRowText,
						callback: function(t) {
							e.$set(e.styling, "customRowText", t)
						},
						expression: "styling.customRowText"
					}
				}), e.styling.customRowText ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.rowText,
                        callback: function(t) {
                            e.$set(e.styling, "rowText", t)
                        },
                        expression: "styling.rowText"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.rowText,
                        callback: function(t) {
                            e.$set(e.styling, "rowText", t)
                        },
                        expression: "styling.rowText"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowTextTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextTextSize", t)
                        },
                        expression: "styling.rowTextTextSize"
                    }
                }), o("v-select", {
                    attrs: {
                        items: e.textAlignment,
                        filled: "",
                        label: "Text Alignment"
                    },
                    model: {
                        value: e.styling.rowTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextAlign", t)
                        },
                        expression: "styling.rowTextAlign"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.rowTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextColor", t)
                        },
                        expression: "styling.rowTextColor"
                    }
                })], 1), o("v-col", {
                }, [e._v(" Choice Title "), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customObjectTitle,
						callback: function(t) {
							e.$set(e.styling, "customObjectTitle", t)
						},
						expression: "styling.customObjectTitle"
					}
				}), e.styling.customObjectTitle ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.objectTitle,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitle", t)
                        },
                        expression: "styling.objectTitle"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.objectTitle,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitle", t)
                        },
                        expression: "styling.objectTitle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTitleTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitleTextSize", t)
                        },
                        expression: "styling.objectTitleTextSize"
                    }
                }), o("v-select", {
                    attrs: {
                        items: e.textAlignment,
                        filled: "",
                        label: "Text Alignment"
                    },
                    model: {
                        value: e.styling.objectTitleAlign,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitleAlign", t)
                        },
                        expression: "styling.objectTitleAlign"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.objectTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitleColor", t)
                        },
                        expression: "styling.objectTitleColor"
                    }
                })], 1), o("v-col", {
                }, [e._v(" Choice Text "), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customObjectText,
						callback: function(t) {
							e.$set(e.styling, "customObjectText", t)
						},
						expression: "styling.customObjectText"
					}
				}), e.styling.customObjectText ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.objectText,
                        callback: function(t) {
                            e.$set(e.styling, "objectText", t)
                        },
                        expression: "styling.objectText"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.objectText,
                        callback: function(t) {
                            e.$set(e.styling, "objectText", t)
                        },
                        expression: "styling.objectText"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTextTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextTextSize", t)
                        },
                        expression: "styling.objectTextTextSize"
                    }
                }), o("v-select", {
                    attrs: {
                        items: e.textAlignment,
                        filled: "",
                        label: "Text Alignment"
                    },
                    model: {
                        value: e.styling.objectTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextAlign", t)
                        },
                        expression: "styling.objectTextAlign"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.objectTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextColor", t)
                        },
                        expression: "styling.objectTextColor"
                    }
                })], 1), o("v-col", {
                }, [e._v(" Addon Title "), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customAddonTitle,
						callback: function(t) {
							e.$set(e.styling, "customAddonTitle", t)
						},
						expression: "styling.customAddonTitle"
					}
				}), e.styling.customAddonTitle ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.addonTitle,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitle", t)
                        },
                        expression: "styling.addonTitle"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.addonTitle,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitle", t)
                        },
                        expression: "styling.addonTitle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonTitleTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitleTextSize", t)
                        },
                        expression: "styling.addonTitleTextSize"
                    }
                }), o("v-select", {
                    attrs: {
                        items: e.textAlignment,
                        filled: "",
                        label: "Text Alignment"
                    },
                    model: {
                        value: e.styling.addonTitleAlign,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitleAlign", t)
                        },
                        expression: "styling.addonTitleAlign"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.addonTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitleColor", t)
                        },
                        expression: "styling.addonTitleColor"
                    }
                })], 1), o("v-col", {
                }, [e._v(" Addon Text "), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customAddonText,
						callback: function(t) {
							e.$set(e.styling, "customAddonText", t)
						},
						expression: "styling.customAddonText"
					}
				}), e.styling.customAddonText ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.addonText,
                        callback: function(t) {
                            e.$set(e.styling, "addonText", t)
                        },
                        expression: "styling.addonText"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.addonText,
                        callback: function(t) {
                            e.$set(e.styling, "addonText", t)
                        },
                        expression: "styling.addonText"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonTextTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextTextSize", t)
                        },
                        expression: "styling.addonTextTextSize"
                    }
                }), o("v-select", {
                    attrs: {
                        items: e.textAlignment,
                        filled: "",
                        label: "Text Alignment"
                    },
                    model: {
                        value: e.styling.addonTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextAlign", t)
                        },
                        expression: "styling.addonTextAlign"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.addonTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextColor", t)
                        },
                        expression: "styling.addonTextColor"
                    }
                })], 1), o("v-col", {
                }, [e._v(" Score and Requirement Text "), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customScoreText,
						callback: function(t) {
							e.$set(e.styling, "customScoreText", t)
						},
						expression: "styling.customScoreText"
					}
				}), e.styling.customScoreText ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.scoreText,
                        callback: function(t) {
                            e.$set(e.styling, "scoreText", t)
                        },
                        expression: "styling.scoreText"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.scoreText,
                        callback: function(t) {
                            e.$set(e.styling, "scoreText", t)
                        },
                        expression: "styling.scoreText"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.scoreTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "scoreTextSize", t)
                        },
                        expression: "styling.scoreTextSize"
                    }
                }), o("v-select", {
                    attrs: {
                        items: e.textAlignment,
                        filled: "",
                        label: "Text Alignment"
                    },
                    model: {
                        value: e.styling.scoreTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "scoreTextAlign", t)
                        },
                        expression: "styling.scoreTextAlign"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.scoreTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "scoreTextColor", t)
                        },
                        expression: "styling.scoreTextColor"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Ie = [],
            ke = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        textAlignment: [{
                            text: "Center",
                            value: "center"
                        }, {
                            text: "Left",
                            value: "left"
                        }, {
                            text: "Right",
                            value: "right"
                        }, {
                            text: "Justify",
                            value: "justify"
                        }],
                        textFonts: [{
                            text: "Times New Roman",
                            value: "Times New Roman"
                        }, {
                            text: "Arial",
                            value: "Arial"
                        }, {
                            text: "Roboto",
                            value: "Roboto"
                        }, {
                            text: "Courier New",
                            value: "Courier New"
                        }, {
                            text: "Courier",
                            value: "Courier"
                        }, {
                            text: "Verdana",
                            value: "Verdana"
                        }, {
                            text: "Georgia",
                            value: "Georgia"
                        }, {
                            text: "Comic Sans MS(NO!)",
                            value: "Comic Sans MS"
                        }, {
                            text: "Candara",
                            value: "Candara"
                        }, {
                            text: "Arial Black",
                            value: "Arial Black"
                        }, {
                            text: "Impact",
                            value: "Impact"
                        }, {
                            text: "Helvetica",
                            value: "Helvetica"
                        }, {
                            text: "Calibri",
                            value: "Calibri"
                        }, {
                            text: "Cambria",
                            value: "Cambria"
                        }, {
                            text: "Trebuchet MS",
                            value: "Trebuchet MS"
                        }, {
                            text: "Tahoma",
                            value: "Tahoma"
                        }]
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
					textStyling: function() {
						return this.$store.state.textStyling
					},
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.fontImport()
				},
				destroyed: function() {
					if (!this.row.privateTextIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.textStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
				},
                methods: {
					fontImport: function() {
						for (var a = 0; a < this.app.googleFonts.length; a++) {
							this.textFonts.push({text: this.app.googleFonts[a], value: this.app.googleFonts[a]});
						}
					},
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            Be = ke,
            Se = Object(w["a"])(Be, je, Ie, !1, null, null, null),
            Oe = Se.exports;
        x()(Se, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VTextField: R["a"]
        });
        var Re = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateObjectImageIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateObjectImageIsOn", t);
							if (t) {
								Object.keys(e.objectImageStyling).forEach(key => {
									if (e.app.styling.hasOwnProperty(key)) {
										e.$set(e.styling, key, e.app.styling[key]);
									}
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.objectImageStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateObjectImageIsOn"
                    }
                }), e._v("Choice Images")]), o("v-card-text", {
					staticClass: !e.row.privateObjectImageIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", [o("v-col", {
					staticClass: e.window.width > 400 ? "" : "col-12"
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Style of the border"
                    },
                    model: {
                        value: e.styling.objectImgBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderStyle", t)
                        },
                        expression: "styling.objectImgBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        suffix: "px",
                        type: "number",
                        label: "Thickness of the border",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderWidth", t)
                        },
                        expression: "styling.objectImgBorderWidth"
                    }
                }, [e._v("px")]), o("v-col", {
                    staticClass: "pt-2 pb-0"
                }, [e._v("Size and Margin of the choice image")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image inside of a choice",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageWidth", t)
                        },
                        expression: "styling.objectImageWidth"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Top of choice and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImageMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageMarginTop", t)
                        },
                        expression: "styling.objectImageMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Title and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImageMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageMarginBottom", t)
                        },
                        expression: "styling.objectImageMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Works only with the Image Left/Right template.")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image box inside of choice",
                        suffix: "%",
						placeholder: 50,
                        type: "number",
                        filled: "",
						min: 0,
						max: 100
                    },
                    model: {
                        value: e.styling.objectImageBoxWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageBoxWidth", Math.min(Math.max(0, t), 100));
                        },
                        expression: "styling.objectImageBoxWidth"
                    }
                })], 1), o("v-col", {
					staticClass: e.window.width > 400 ? "" : "col-12"
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusTopLeft", t)
                        },
                        expression: "styling.objectImgBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusTopRight", t)
                        },
                        expression: "styling.objectImgBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusBottomRight", t)
                        },
                        expression: "styling.objectImgBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.objectImgBorderRadiusBottomLeft"
                    }
                }), o("v-switch", {
                    staticClass: "auto shrink mt-n3",
                    attrs: {
                        label: "Pixels or Percents",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusIsPixels", t)
                        },
                        expression: "styling.objectImgBorderRadiusIsPixels"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border Is On"
                    },
                    model: {
                        value: e.styling.objectImgBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderIsOn", t)
                        },
                        expression: "styling.objectImgBorderIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Cut off overflow images/text"
                    },
                    model: {
                        value: e.styling.objectImgOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgOverflowIsOn", t)
                        },
                        expression: "styling.objectImgOverflowIsOn"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.objectImgBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderColor", t)
                        },
                        expression: "styling.objectImgBorderColor"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
                    staticClass: "py-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Object Fit"), o("br"), e._v(" How the images fit inside of the choice."), o("br"), e._v(" A textfield where you can decide the Size of the container will appear in Row Settings when the switch is on.")]), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-select", {
                    attrs: {
                        items: e.objectFitStyles,
                        "item-value": "value",
                        "item-text": "text",
                        filled: "",
                        "hide-details": "",
                        label: "Object Fill"
                    },
                    model: {
                        value: e.styling.objectImgObjectFillStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgObjectFillStyle", t)
                        },
                        expression: "styling.objectImgObjectFillStyle"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Object Fit Is On"
                    },
                    model: {
                        value: e.styling.objectImgObjectFillIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgObjectFillIsOn", t)
                        },
                        expression: "styling.objectImgObjectFillIsOn"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Fe = [],
            _e = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
                        objectFitStyles: [{
                            value: "fill",
                            text: "Fill: The replaced content is sized to fill the element's content box. If necessary, the object will be stretched or squished to fit"
                        }, {
                            value: "contain",
                            text: "Contain: The replaced content is scaled to maintain its aspect ratio while fitting within the element's content box"
                        }, {
                            value: "cover",
                            text: "Cover: The replaced content is sized to maintain its aspect ratio while filling the element's entire content box. The object will be clipped to fit"
                        }, {
                            value: "scale-down",
                            text: "Scale-down: The content is sized as if none or contain were specified (would result in a smaller concrete object size)"
                        }, {
                            value: "none",
                            text: "None: The replaced content is not resized"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.objectImgBorderRadiusIsPixels ? "px" : "%"
                    },
					app: function() {
						return this.$store.state.app
					},
					objectImageStyling: function() {
						return this.$store.state.objectImageStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateObjectImageIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.objectImageStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            qe = _e,
            Ae = Object(w["a"])(qe, Re, Fe, !1, null, null, null),
            $e = Ae.exports;
        x()(Ae, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var Me = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateRowImageIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateRowImageIsOn", t);
							if (t) {
								Object.keys(e.rowImageStyling).forEach(key => {
									if (e.app.styling.hasOwnProperty(key)) {
										e.$set(e.styling, key, e.app.styling[key]);
									}
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.rowImageStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateRowImageIsOn"
                    }
                }), e._v("Row Images")]), o("v-card-text", {
					staticClass: !e.row.privateRowImageIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", [o("v-col", {
					staticClass: e.window.width > 400 ? "" : "col-12"
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Style of the border"
                    },
                    model: {
                        value: e.styling.rowImgBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderStyle", t)
                        },
                        expression: "styling.rowImgBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        placeholder: "0",
                        suffix: "px",
                        label: "Thickness of the border",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowImgBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderWidth", t)
                        },
                        expression: "styling.rowImgBorderWidth"
                    }
                }), o("v-col", {
                    staticClass: "pt-2 pb-0"
                }, [e._v("Size and Margin of the row image")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image inside of a choice",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageWidth", t)
                        },
                        expression: "styling.rowImageWidth"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Top of row and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImageMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageMarginTop", t)
                        },
                        expression: "styling.rowImageMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Title and Image",
                        suffix: "%",
                        placeholder: "0",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImageMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageMarginBottom", t)
                        },
                        expression: "styling.rowImageMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Works only with the Image Left/Right template.")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image box inside of row",
                        suffix: "%",
						placeholder: 50,
                        type: "number",
                        filled: "",
						min: 0,
						max: 100
                    },
                    model: {
                        value: e.styling.rowImageBoxWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageBoxWidth", Math.min(Math.max(0, t), 100));
                        },
                        expression: "styling.rowImageBoxWidth"
                    }
                })], 1), o("v-col", {
					staticClass: e.window.width > 400 ? "" : "col-12"
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusTopLeft", t)
                        },
                        expression: "styling.rowImgBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusTopRight", t)
                        },
                        expression: "styling.rowImgBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusBottomRight", t)
                        },
                        expression: "styling.rowImgBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.rowImgBorderRadiusBottomLeft"
                    }
                }), o("v-switch", {
                    staticClass: "auto shrink mt-n3",
                    attrs: {
                        label: "Pixels or Percents",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusIsPixels", t)
                        },
                        expression: "styling.rowImgBorderRadiusIsPixels"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border Is On"
                    },
                    model: {
                        value: e.styling.rowImgBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderIsOn", t)
                        },
                        expression: "styling.rowImgBorderIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Cut off overflow images/text"
                    },
                    model: {
                        value: e.styling.rowImgOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgOverflowIsOn", t)
                        },
                        expression: "styling.rowImgOverflowIsOn"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.rowImgBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderColor", t)
                        },
                        expression: "styling.rowImgBorderColor"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Ve = [],
            Pe = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.rowImgBorderRadiusIsPixels ? "px" : "%"
                    },
					app: function() {
						return this.$store.state.app
					},
					rowImageStyling: function() {
						return this.$store.state.rowImageStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateRowImageIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.rowImageStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            De = Pe,
            ze = Object(w["a"])(De, Me, Ve, !1, null, null, null),
            Le = ze.exports;
        x()(ze, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
		var Bo = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1000px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateMultiChoiceIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateMultiChoiceIsOn", t);
							if (t) {
								Object.keys(e.multiChoiceStyling).forEach(key => {
									e.$set(e.styling, key, e.multiChoiceStyling[key]);
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.multiChoiceStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateMultiChoiceIsOn"
                    }
                }), e._v("Multi Choice Design")]), o("v-card-text", {
					staticClass: !e.row.privateMultiChoiceIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", [o("v-col", {
                    staticClass: "col-md-12"
                }, [e._v(" Tier number "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customMultiTextFont,
						callback: function(t) {
							e.$set(e.styling, "customMultiTextFont", t)
						},
						expression: "styling.customMultiTextFont"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [e.styling.customMultiTextFont ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.multiChoiceTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceTextFont", t)
                        },
                        expression: "styling.multiChoiceTextFont"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.multiChoiceTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceTextFont", t)
                        },
                        expression: "styling.multiChoiceTextFont"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.multiChoiceTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceTextSize", t)
                        },
                        expression: "styling.multiChoiceTextSize"
                    }
                }, [e._v("%")])], 1), o("v-col", {
                    staticClass: "col-12"
                }, [e._v(" Counter "), o("v-row", [o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.counterPositions,
                        filled: "",
                        label: "Counter's Position"
                    },
                    model: {
                        value: e.styling.multiChoiceCounterPosition,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceCounterPosition", t);
                        },
                        expression: "styling.multiChoiceCounterPosition"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Counter Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.multiChoiceCounterSize,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceCounterSize", t)
                        },
                        expression: "styling.multiChoiceCounterSize"
                    }
                }, [e._v("%")])], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            So = [],
            Oo = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        textFonts: [{
                            text: "Times New Roman",
                            value: "Times New Roman"
                        }, {
                            text: "Arial",
                            value: "Arial"
                        }, {
                            text: "Roboto",
                            value: "Roboto"
                        }, {
                            text: "Courier New",
                            value: "Courier New"
                        }, {
                            text: "Courier",
                            value: "Courier"
                        }, {
                            text: "Verdana",
                            value: "Verdana"
                        }, {
                            text: "Georgia",
                            value: "Georgia"
                        }, {
                            text: "Comic Sans MS(NO!)",
                            value: "Comic Sans MS"
                        }, {
                            text: "Candara",
                            value: "Candara"
                        }, {
                            text: "Arial Black",
                            value: "Arial Black"
                        }, {
                            text: "Impact",
                            value: "Impact"
                        }, {
                            text: "Helvetica",
                            value: "Helvetica"
                        }, {
                            text: "Calibri",
                            value: "Calibri"
                        }, {
                            text: "Cambria",
                            value: "Cambria"
                        }, {
                            text: "Trebuchet MS",
                            value: "Trebuchet MS"
                        }, {
                            text: "Tahoma",
                            value: "Tahoma"
                        }],
						counterPositions: [{
							text: "Bottom of Choice Title",
							value: 0
						}, {
							text: "Bottom of Choice Scores",
							value: 1
						}, {
							text: "Bottom of Choice Requirements",
							value: 2
						}, {
							text: "Bottom of Choice Text",
							value: 3
						}, {
							text: "Bottom of Choice Addons",
							value: 4
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
					app: function() {
						return this.$store.state.app
					},
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
					multiChoiceStyling: function() {
						return this.$store.state.multiChoiceStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
					this.fontImport();
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateMultiChoiceIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.multiChoiceStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
					fontImport: function() {
						for (var a = 0; a < this.app.googleFonts.length; a++) {
							this.textFonts.push({text: this.app.googleFonts[a], value: this.app.googleFonts[a]});
						}
					},
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            Ro = Oo,
            Fo = Object(w["a"])(Ro, Bo, So, !1, null, null, null),
            _o = Fo.exports;
        x()(Fo, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VTextField: R["a"]
        });
		var aRe = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateAddonImageIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateAddonImageIsOn", t);
							if (t) {
								Object.keys(e.addonImageStyling).forEach(key => {
									e.$set(e.styling, key, e.addonImageStyling[key]);
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.addonImageStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateAddonImageIsOn"
                    }
                }), e._v("Addon Images")]), o("v-card-text", {
					staticClass: !e.row.privateAddonImageIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", [o("v-col", {
					staticClass: e.window.width > 400 ? "" : "col-12"
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Style of the border"
                    },
                    model: {
                        value: e.styling.addonImgBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderStyle", t)
                        },
                        expression: "styling.addonImgBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        suffix: "px",
                        type: "number",
                        label: "Thickness of the border",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImgBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderWidth", t)
                        },
                        expression: "styling.addonImgBorderWidth"
                    }
                }, [e._v("px")]), o("v-col", {
                    staticClass: "pt-2 pb-0"
                }, [e._v("Size and Margin of the addon image")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image inside of a addon",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageWidth", t)
                        },
                        expression: "styling.addonImageWidth"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Top of addon and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImageMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageMarginTop", t)
                        },
                        expression: "styling.addonImageMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Title and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImageMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageMarginBottom", t)
                        },
                        expression: "styling.addonImageMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Works only with the Image Left/Right template.")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image box inside of choice",
                        suffix: "%",
						placeholder: 50,
                        type: "number",
                        filled: "",
						min: 0,
						max: 100
                    },
                    model: {
                        value: e.styling.addonImageBoxWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageBoxWidth", Math.min(Math.max(0, t), 100));
                        },
                        expression: "styling.addonImageBoxWidth"
                    }
                })], 1), o("v-col", {
					staticClass: e.window.width > 400 ? "" : "col-12"
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the addons")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusTopLeft", t)
                        },
                        expression: "styling.addonImgBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusTopRight", t)
                        },
                        expression: "styling.addonImgBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusBottomRight", t)
                        },
                        expression: "styling.addonImgBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.addonImgBorderRadiusBottomLeft"
                    }
                }), o("v-switch", {
                    staticClass: "auto shrink mt-n3",
                    attrs: {
                        label: "Pixels or Percents",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusIsPixels", t)
                        },
                        expression: "styling.addonImgBorderRadiusIsPixels"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border Is On"
                    },
                    model: {
                        value: e.styling.addonImgBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderIsOn", t)
                        },
                        expression: "styling.addonImgBorderIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Cut off overflow images/text"
                    },
                    model: {
                        value: e.styling.addonImgOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgOverflowIsOn", t)
                        },
                        expression: "styling.addonImgOverflowIsOn"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.addonImgBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderColor", t)
                        },
                        expression: "styling.addonImgBorderColor"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
                    staticClass: "py-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Object Fit"), o("br"), e._v(" How the images fit inside of the addon."), o("br"), e._v(" A textfield where you can decide the Size of the container will appear in Row Settings when the switch is on.")]), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-select", {
                    attrs: {
                        items: e.objectFitStyles,
                        "item-value": "value",
                        "item-text": "text",
                        filled: "",
                        "hide-details": "",
                        label: "Object Fill"
                    },
                    model: {
                        value: e.styling.addonImgObjectFillStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgObjectFillStyle", t)
                        },
                        expression: "styling.addonImgObjectFillStyle"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Object Fit Is On"
                    },
                    model: {
                        value: e.styling.addonImgObjectFillIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgObjectFillIsOn", t)
                        },
                        expression: "styling.addonImgObjectFillIsOn"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            aFe = [],
            a_e = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
                        objectFitStyles: [{
                            value: "fill",
                            text: "Fill: The replaced content is sized to fill the element's content box. If necessary, the object will be stretched or squished to fit"
                        }, {
                            value: "contain",
                            text: "Contain: The replaced content is scaled to maintain its aspect ratio while fitting within the element's content box"
                        }, {
                            value: "cover",
                            text: "Cover: The replaced content is sized to maintain its aspect ratio while filling the element's entire content box. The object will be clipped to fit"
                        }, {
                            value: "scale-down",
                            text: "Scale-down: The content is sized as if none or contain were specified (would result in a smaller concrete object size)"
                        }, {
                            value: "none",
                            text: "None: The replaced content is not resized"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.objectImgBorderRadiusIsPixels ? "px" : "%"
                    },
					app: function() {
						return this.$store.state.app
					},
					addonImageStyling: function() {
						return this.$store.state.addonImageStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateAddonImageIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.addonImageStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            aqe = a_e,
            aAe = Object(w["a"])(aqe, aRe, aFe, !1, null, null, null),
            a$e = aAe.exports;
        x()(aAe, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
		var aYe = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateAddonIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateAddonIsOn", t);
							if (t) {
								if (e.app.styling.useAddonDesign) {
									Object.keys(e.addonStyling).forEach(key => {
										if (e.app.styling.hasOwnProperty(key)) {
											e.$set(e.styling, key, e.app.styling[key]);
										}
									});
								} else {
									Object.keys(e.addonStyling).forEach(key => {
										e.$set(e.styling, key, e.addonStyling[key]);
									});
								}
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.addonStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateAddonIsOn"
                    }
                }), e._v("Addon Design")]), o("v-card-text", {
					staticClass: !e.row.privateAddonIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", [o("v-col", [o("v-switch", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        label: "Advanced Design?"
                    },
                    model: {
                        value: e.styling.addonDesignIsAdvanced,
                        callback: function(t) {
                            e.$set(e.styling, "addonDesignIsAdvanced", t)
                        },
                        expression: "styling.addonDesignIsAdvanced"
                    }
                })], 1)], 1), e.styling.addonDesignIsAdvanced ? o("v-row", [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the addons")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Margin",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonMargin,
                        callback: function(t) {
                            e.$set(e.styling, "addonMargin", t)
                        },
                        expression: "styling.addonMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Padding",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextPadding", t)
                        },
                        expression: "styling.addonTextPadding"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n6"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.addonBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderStyle", t)
                        },
                        expression: "styling.addonBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderWidth", t)
                        },
                        expression: "styling.addonBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.addonBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderIsOn", t)
                        },
                        expression: "styling.addonBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Horizontal Shadow",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowH", t)
                        },
                        expression: "styling.addonDropShadowH"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Vertical Shadow",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonDropShadowV,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowV", t)
                        },
                        expression: "styling.addonDropShadowV"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Blur",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonDropShadowBlur,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowBlur", t)
                        },
                        expression: "styling.addonDropShadowBlur"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Spread",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonDropShadowSpread,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowSpread", t)
                        },
                        expression: "styling.addonDropShadowSpread"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.addonDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowIsOn", t)
                        },
                        expression: "styling.addonDropShadowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the addons")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusTopLeft", t)
                        },
                        expression: "styling.addonBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusTopRight", t)
                        },
                        expression: "styling.addonBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusBottomRight", t)
                        },
                        expression: "styling.addonBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.addonBorderRadiusBottomLeft"
                    }
                }), o("v-switch", {
                    staticClass: "auto shrink mt-n3",
                    attrs: {
                        label: "Border-Radius Percent or Pixels?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.addonBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusIsPixels", t)
                        },
                        expression: "styling.addonBorderRadiusIsPixels"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border-Radius Cuts off overflow"
                    },
                    model: {
                        value: e.styling.addonOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonOverflowIsOn", t)
                        },
                        expression: "styling.addonOverflowIsOn"
                    }
                })], 1)], 1)], 1) : o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the addons")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the addons",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonMargin,
                        callback: function(t) {
                            e.$set(e.styling, "addonMargin", t)
                        },
                        expression: "styling.addonMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the text in the addons and its border",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextPadding", t)
                        },
                        expression: "styling.addonTextPadding"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n4"
                }, [e._v("Shadow that the addon makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "The Higher the number the bigger the shadow will be.",
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.shadowIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.addonDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowH", t)
                        },
                        expression: "styling.addonDropShadowH"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.addonBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderStyle", t)
                        },
                        expression: "styling.addonBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderWidth", t)
                        },
                        expression: "styling.addonBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.addonBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderIsOn", t)
                        },
                        expression: "styling.addonBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the addons")]), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the top of each addon",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.topBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.addonBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusTopLeft", t)
                        },
                        expression: "styling.addonBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the bottom of each addon",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.bottomBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.addonBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.addonBorderRadiusBottomLeft"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.addonDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowIsOn", t)
                        },
                        expression: "styling.addonDropShadowIsOn"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the Drop Shadow")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.addonDropShadowColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowColor", t)
                        },
                        expression: "styling.addonDropShadowColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Apply padding to the Addon Title"
                    },
                    model: {
                        value: e.styling.addonTitlePaddingIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitlePaddingIsOn", t)
                        },
                        expression: "styling.addonTitlePaddingIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Remove the space below the addon text"
                    },
                    model: {
                        value: e.styling.addonRemoveSpaceAddonIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonRemoveSpaceAddonIsOn", t)
                        },
                        expression: "styling.addonRemoveSpaceAddonIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Addon Gradient is turned on"
                    },
                    model: {
                        value: e.styling.addonGradientIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradientIsOn", t)
                        },
                        expression: "styling.addonGradientIsOn"
                    }
                }), e.styling.objectGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when not selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.addonGradient,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradient", t)
                        },
                        expression: "styling.addonGradient"
                    }
                }, [e._v("px")]) : e._e(), e.styling.addonGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.addonGradientOnSelect,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradientOnSelect", t)
                        },
                        expression: "styling.addonGradientOnSelect"
                    }
                }, [e._v("px")]) : e._e(), e.styling.addonGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when missing requirement",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.addonGradientOnReq,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradientOnReq", t)
                        },
                        expression: "styling.addonGradientOnReq"
                    }
                }, [e._v("px")]) : e._e(), e.styling.addonGradientIsOn ? o("span", [e._v("You might need to leave for the main menu if things stop updating, using the background colors for filters does not work well, so you'll need to place gradients in ALL of them, but using something like (green, green) works. "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.w3schools.com/css/css3_gradients.asp"
                    }
                }, [e._v("https://www.w3schools.com/css/css3_gradients.asp")])]) : e._e()], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the choice border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.addonBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderColor", t)
                        },
                        expression: "styling.addonBorderColor"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					staticClass: "text-center",
					attrs: {
						cols: "12"
					}
				}, [e.window.width > 911 ? e._v("Background & Border Image") : e._v("Background")], 1), o("v-col", {
					staticClass: "pt-0",
					attrs: {
						cols: e.window.width > 911 ? "3" : "12"
					}
				}, [o("v-switch", {
                    staticClass: "mt-0 pt-0 auto shrink",
                    attrs: {
                        label: "Use a Background Image?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.useAddonBackgroundImage,
                        callback: function(t) {
                            e.$set(e.styling, "useAddonBackgroundImage", t)
							if (!t) e.$delete(e.styling, "addonBackgroundImage");
                        },
                        expression: "styling.useAddonBackgroundImage"
                    }
                }), e.styling.useAddonBackgroundImage ? [o("v-col", {
					staticClass: "pa-0"
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Does it repeat?"
                    },
                    model: {
                        value: e.styling.isAddonBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isAddonBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isAddonBackgroundFitIn", !t);
                        },
                        expression: "styling.isAddonBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isAddonBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isAddonBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isAddonBackgroundRepeat", !t);
                        },
                        expression: "styling.isAddonBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.addonBackgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Addon Background Image"
                        }
                    },
                    on: {
                        change: e.onImageChangeAddon,
                        remove: e.onImageRemovalAddon
                    }
                })], 1)] : [o("v-checkbox", {
                    staticClass: "auto shrink mt-0 pt-0",
                    attrs: {
						"hide-details": "",
                        label: "Color of the addon backgrounds"
                    },
                    model: {
                        value: e.styling.addonBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonBgColorIsOn", t)
                        },
                        expression: "styling.addonBgColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
					attrs: {
						disabled: !e.styling.addonBgColorIsOn
					},
                    model: {
                        value: e.styling.addonBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonBgColor", t)
                        },
                        expression: "styling.addonBgColor"
                    }
                })]], 1), e.window.width > 911 ? e._e() : o("v-col", {
					staticClass: "text-center",
					attrs: {
						cols: "12"
					}
				}, [e._v("Border Image")], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "3" : "12"
					}
				}, [o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.addonBorderImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Addon Border Image"
                        },
                    },
                    on: {
                        change: e.onBorderImageChangeAddon,
                        remove: e.onBorderImageRemovalAddon
                    }
                })], 1), o("v-col", {
					staticClass: "pa-0",
					attrs: {
						cols: e.window.width > 911 ? "6" : "12"
					}
				}, [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 450 ? "4" : "12"
					}
				}, [o("v-select", {
                    attrs: {
                        items: e.borderImageRepeat,
                        "item-value": "text",
                        filled: "",
                        label: "Repeat"
                    },
                    model: {
                        value: e.styling.addonBorderImageRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageRepeat", t)
                        },
                        expression: "styling.addonBorderImageRepeat"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageWidth", t)
                        },
                        expression: "styling.addonBorderImageWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 450 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Top",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceTop,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceTop", t)
                        },
                        expression: "styling.addonBorderImageSliceTop"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Bottom",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceBottom,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceBottom", t)
                        },
                        expression: "styling.addonBorderImageSliceBottom"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 450 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Left",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceLeft", t)
                        },
                        expression: "styling.addonBorderImageSliceLeft"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Right",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceRight", t)
                        },
                        expression: "styling.addonBorderImageSliceRight"
                    }
                }, [e._v("px")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            aJe = [],
            aXe = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						borderImageRepeat: [{
							text: "stretch"
						}, {
							text: "repeat"
						}, {
							text: "round"
						}, {
							text: "space"
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
				components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.objectBorderRadiusIsPixels ? "px" : "%"
                    },
					app: function() {
						return this.$store.state.app
					},
					addonStyling: function() {
						return this.$store.state.addonStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateAddonIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.addonStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
                    shadowIsChanged: function() {
                        this.styling.objectDropShadowV = this.styling.objectDropShadowH, this.styling.objectDropShadowSpread = this.styling.objectDropShadowH, this.styling.objectDropShadowBlur = this.styling.objectDropShadowH
                    },
                    topBorderIsChanged: function() {
                        this.styling.objectBorderRadiusTopRight = this.styling.objectBorderRadiusTopLeft
                    },
                    bottomBorderIsChanged: function() {
                        this.styling.objectBorderRadiusBottomRight = this.styling.objectBorderRadiusBottomLeft
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					onBorderImageChangeAddon: function(e) {
						this.$set(this.styling, "objectBorderImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
					},
					onBorderImageRemovalAddon: function() {
						this.$set(this.styling, "objectBorderImage", "")
					},
					onBorderImageChangeAddon: function(e) {
						this.$set(this.styling, "objectBorderImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
					},
					onBorderImageRemovalAddon: function() {
						this.$set(this.styling, "objectBorderImage", "")
					}
                }
            },
            aKe = aXe,
            aZe = (o("bb36"), Object(w["a"])(aKe, aYe, aJe, !1, null, "adbdef3c", null)),
            aQe = aZe.exports;
        x()(aZe, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var We = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateBackgroundIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateBackgroundIsOn", t);
							if (t) {
								Object.keys(e.backgroundStyling).forEach(key => {
									if (e.app.styling.hasOwnProperty(key)) {
										e.$set(e.styling, key, e.app.styling[key]);
									}
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.backgroundStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
							e.$set(e.styling, "backgroundImage", "");
                        },
                        expression: "row.privateBackgroundIsOn"
                    }
                }), e._v("Backgrounds")]), o("v-card-text", {
					staticClass: !e.row.privateBackgroundIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", {
                    attrs: {
                        align: "center"
                    }
                }, [o("v-col", [o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Color of the background"
                    },
                    model: {
                        value: e.styling.bgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "bgColorIsOn", t)
                        },
                        expression: "styling.bgColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
					attrs: {
                        disabled: !e.styling.bgColorIsOn
                    },
                    model: {
                        value: e.styling.backgroundColor,
                        callback: function(t) {
                            e.$set(e.styling, "backgroundColor", t)
                        },
                        expression: "styling.backgroundColor"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it repeat?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isBackgroundFitIn", !t);
                        },
                        expression: "styling.isBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isBackgroundRepeat", !t);
                        },
                        expression: "styling.isBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.backgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Background Image"
                        }
                    },
                    on: {
                        change: e.onImageChangeBackground,
                        remove: e.onImageRemoval
                    }
                })], 1)], 1), o("v-col", [o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Color of the row backgrounds"
                    },
                    model: {
                        value: e.styling.rowBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowBgColorIsOn", t)
                        },
                        expression: "styling.rowBgColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        disabled: !e.styling.rowBgColorIsOn
                    },
                    model: {
                        value: e.styling.rowBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowBgColor", t)
                        },
                        expression: "styling.rowBgColor"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it repeat?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isRowBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isRowBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isRowBackgroundFitIn", !t);
                        },
                        expression: "styling.isRowBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isRowBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isRowBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isRowBackgroundRepeat", !t);
                        },
                        expression: "styling.isRowBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.rowBackgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Row Background Image"
                        }
                    },
                    on: {
                        change: e.onImageChangeRow,
                        remove: e.onImageRemovalRow
                    }
                })], 1)], 1), o("v-col", [o("v-col", [o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Color of the choice backgrounds",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.objectBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectBgColorIsOn", t)
                        },
                        expression: "styling.objectBgColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        disabled: !e.styling.objectBgColorIsOn
                    },
                    model: {
                        value: e.styling.objectBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectBgColor", t)
                        },
                        expression: "styling.objectBgColor"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it repeat?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isObjectBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isObjectBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isObjectBackgroundFitIn", !t);
                        },
                        expression: "styling.isObjectBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isObjectBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isObjectBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isObjectBackgroundRepeat", !t);
                        },
                        expression: "styling.isObjectBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.objectBackgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Object Background Image"
                        }
                    },
                    on: {
                        change: e.onImageChangeObject,
                        remove: e.onImageRemovalObject
                    }
                })], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            He = [],
            Ee = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0
                    }
                },
                components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
					app: function() {
						return this.$store.state.app
					},
					backgroundStyling: function() {
						return this.$store.state.backgroundStyling
					}
                },
				destroyed: function() {
					if (!this.row.privateBackgroundIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.backgroundStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
				},
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    onImageChangeBackground: function(e) {
                        this.$set(this.styling, "backgroundImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
                    onImageChangeObject: function(e) {
                        this.$set(this.styling, "objectBackgroundImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
                    onImageChangeRow: function(e) {
                        this.$set(this.styling, "rowBackgroundImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
                    onImageRemoval: function() {
                        this.$set(this.styling, "backgroundImage", "")
                    },
                    onImageRemovalObject: function() {
                        this.$set(this.styling, "objectBackgroundImage", "")
                    },
                    onImageRemovalRow: function() {
                        this.$set(this.styling, "rowBackgroundImage", "")
                    }
                }
            },
            Ne = Ee,
            Ge = Object(w["a"])(Ne, We, He, !1, null, null, null),
            Ue = Ge.exports;
        x()(Ge, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"]
        });
        var Ye = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateObjectIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateObjectIsOn", t);
							if (t) {
								Object.keys(e.objectStyling).forEach(key => {
									if (e.app.styling.hasOwnProperty(key)) {
										e.$set(e.styling, key, e.app.styling[key]);
									}
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.objectStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateObjectIsOn"
                    }
                }), e._v("Choice Design")]), o("v-card-text", {
					staticClass: !e.row.privateObjectIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-row", [o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "If this is checked then every choice in a row will have identical height."
                    },
                    model: {
                        value: e.styling.objectHeight,
                        callback: function(t) {
                            e.$set(e.styling, "objectHeight", t)
                        },
                        expression: "styling.objectHeight"
                    }
                })], 1), o("v-col", [o("v-switch", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        label: "Advanced Design?"
                    },
                    model: {
                        value: e.styling.objectDesignIsAdvanced,
                        callback: function(t) {
                            e.$set(e.styling, "objectDesignIsAdvanced", t)
                        },
                        expression: "styling.objectDesignIsAdvanced"
                    }
                })], 1)], 1), e.styling.objectDesignIsAdvanced ? o("v-row", [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the choices")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Margin",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectMargin,
                        callback: function(t) {
                            e.$set(e.styling, "objectMargin", t)
                        },
                        expression: "styling.objectMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Padding",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextPadding", t)
                        },
                        expression: "styling.objectTextPadding"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n6"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.objectBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderStyle", t)
                        },
                        expression: "styling.objectBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderWidth", t)
                        },
                        expression: "styling.objectBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.objectBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderIsOn", t)
                        },
                        expression: "styling.objectBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Horizontal Shadow",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowH", t)
                        },
                        expression: "styling.objectDropShadowH"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Vertical Shadow",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowV,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowV", t)
                        },
                        expression: "styling.objectDropShadowV"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Blur",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowBlur,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowBlur", t)
                        },
                        expression: "styling.objectDropShadowBlur"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Spread",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowSpread,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowSpread", t)
                        },
                        expression: "styling.objectDropShadowSpread"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.objectDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowIsOn", t)
                        },
                        expression: "styling.objectDropShadowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusTopLeft", t)
                        },
                        expression: "styling.objectBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusTopRight", t)
                        },
                        expression: "styling.objectBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusBottomRight", t)
                        },
                        expression: "styling.objectBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.objectBorderRadiusBottomLeft"
                    }
                }), o("v-switch", {
                    staticClass: "auto shrink mt-n3",
                    attrs: {
                        label: "Border-Radius Percent or Pixels?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusIsPixels", t)
                        },
                        expression: "styling.objectBorderRadiusIsPixels"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border-Radius Cuts off overflow"
                    },
                    model: {
                        value: e.styling.objectOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectOverflowIsOn", t)
                        },
                        expression: "styling.objectOverflowIsOn"
                    }
                })], 1)], 1)], 1) : o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the choices")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the choices",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectMargin,
                        callback: function(t) {
                            e.$set(e.styling, "objectMargin", t)
                        },
                        expression: "styling.objectMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the text in the choices and its border",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextPadding", t)
                        },
                        expression: "styling.objectTextPadding"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n4"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "The Higher the number the bigger the shadow will be.",
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.shadowIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.objectDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowH", t)
                        },
                        expression: "styling.objectDropShadowH"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.objectBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderStyle", t)
                        },
                        expression: "styling.objectBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderWidth", t)
                        },
                        expression: "styling.objectBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.objectBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderIsOn", t)
                        },
                        expression: "styling.objectBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the top of each choice",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.topBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.objectBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusTopLeft", t)
                        },
                        expression: "styling.objectBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the bottom of each choice",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.bottomBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.objectBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.objectBorderRadiusBottomLeft"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.objectDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowIsOn", t)
                        },
                        expression: "styling.objectDropShadowIsOn"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the Drop Shadow")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.objectDropShadowColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowColor", t)
                        },
                        expression: "styling.objectDropShadowColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Apply padding to the Choice Title"
                    },
                    model: {
                        value: e.styling.titlePaddingIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "titlePaddingIsOn", t)
                        },
                        expression: "styling.titlePaddingIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Remove the space below the addon text"
                    },
                    model: {
                        value: e.styling.removeSpaceAddonIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "removeSpaceAddonIsOn", t)
                        },
                        expression: "styling.removeSpaceAddonIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Object Gradient is turned on"
                    },
                    model: {
                        value: e.styling.objectGradientIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradientIsOn", t)
                        },
                        expression: "styling.objectGradientIsOn"
                    }
                }), e.styling.objectGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when not selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.objectGradient,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradient", t)
                        },
                        expression: "styling.objectGradient"
                    }
                }, [e._v("px")]) : e._e(), e.styling.objectGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.objectGradientOnSelect,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradientOnSelect", t)
                        },
                        expression: "styling.objectGradientOnSelect"
                    }
                }, [e._v("px")]) : e._e(), e.styling.objectGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when missing requirement",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.objectGradientOnReq,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradientOnReq", t)
                        },
                        expression: "styling.objectGradientOnReq"
                    }
                }, [e._v("px")]) : e._e(), e.styling.objectGradientIsOn ? o("span", [e._v("You might need to leave for the main menu if things stop updating, using the background colors for filters does not work well, so you'll need to place gradients in ALL of them, but using something like (green, green) works. "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.w3schools.com/css/css3_gradients.asp"
                    }
                }, [e._v("https://www.w3schools.com/css/css3_gradients.asp")])]) : e._e()], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 719 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the choice border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.objectBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderColor", t)
                        },
                        expression: "styling.objectBorderColor"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					staticClass: "text-center",
					attrs: {
						cols: "12"
					}
				}, [e._v("Border Image")], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 570 ? "4" : "12"
					}
				}, [o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.objectBorderImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Object Border Image"
                        }
                    },
                    on: {
                        change: e.onBorderImageChangeObject,
                        remove: e.onBorderImageRemovalObject
                    }
                })], 1), o("v-col", {
					staticClass: "pa-0",
					attrs: {
						cols: e.window.width > 570 ? "8" : "12"
					}
				}, [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 450 ? "4" : "12"
					}
				}, [o("v-select", {
                    attrs: {
                        items: e.borderImageRepeat,
                        "item-value": "text",
                        filled: "",
                        label: "Repeat"
                    },
                    model: {
                        value: e.styling.objectBorderImageRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageRepeat", t)
                        },
                        expression: "styling.objectBorderImageRepeat"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageWidth", t)
                        },
                        expression: "styling.objectBorderImageWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 450 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Top",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceTop,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceTop", t)
                        },
                        expression: "styling.objectBorderImageSliceTop"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Bottom",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceBottom,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceBottom", t)
                        },
                        expression: "styling.objectBorderImageSliceBottom"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 450 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Left",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceLeft", t)
                        },
                        expression: "styling.objectBorderImageSliceLeft"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Right",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceRight", t)
                        },
                        expression: "styling.objectBorderImageSliceRight"
                    }
                }, [e._v("px")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Je = [],
            Xe = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						borderImageRepeat: [{
							text: "stretch"
						}, {
							text: "repeat"
						}, {
							text: "round"
						}, {
							text: "space"
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
				components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.objectBorderRadiusIsPixels ? "px" : "%"
                    },
					app: function() {
						return this.$store.state.app
					},
					objectStyling: function() {
						return this.$store.state.objectStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateObjectIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.objectStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
                    shadowIsChanged: function() {
                        this.styling.objectDropShadowV = this.styling.objectDropShadowH, this.styling.objectDropShadowSpread = this.styling.objectDropShadowH, this.styling.objectDropShadowBlur = this.styling.objectDropShadowH
                    },
                    topBorderIsChanged: function() {
                        this.styling.objectBorderRadiusTopRight = this.styling.objectBorderRadiusTopLeft
                    },
                    bottomBorderIsChanged: function() {
                        this.styling.objectBorderRadiusBottomRight = this.styling.objectBorderRadiusBottomLeft
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					onBorderImageChangeObject: function(e) {
						this.$set(this.styling, "objectBorderImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
					},
					onBorderImageRemovalObject: function() {
						this.$set(this.styling, "objectBorderImage", "")
					}
                }
            },
            Ke = Xe,
            Ze = (o("bb36"), Object(w["a"])(Ke, Ye, Je, !1, null, "adbdef3c", null)),
            Qe = Ze.exports;
        x()(Ze, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var et = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.privateRowIsOn,
                        callback: function(t) {
                            e.$set(e.row, "privateRowIsOn", t);
							if (t) {
								Object.keys(e.rowStyling).forEach(key => {
									if (e.app.styling.hasOwnProperty(key)) {
										e.$set(e.styling, key, e.app.styling[key]);
									}
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.rowStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "row.privateRowIsOn"
                    }
                }), e._v("Row Design")]), o("v-card-text", {
					staticClass: !e.row.privateRowIsOn ? "v-card--disabled" : ""
				}, [o("v-container", [o("v-switch", {
                    attrs: {
                        label: "Advanced Design?"
                    },
                    model: {
                        value: e.styling.rowDesignIsAdvanced,
                        callback: function(t) {
                            e.$set(e.styling, "rowDesignIsAdvanced", t)
                        },
                        expression: "styling.rowDesignIsAdvanced"
                    }
                }), e.styling.rowDesignIsAdvanced ? o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 767 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Margin and Padding")]), o("v-text-field", {
                    attrs: {
                        label: "Text Margin",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowMargin,
                        callback: function(t) {
                            e.$set(e.styling, "rowMargin", t)
                        },
                        expression: "styling.rowMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Row Left and Right Margin",
                        filled: "",
                        type: "number",
                        suffix: "px"
                    },
                    model: {
                        value: e.styling.rowBodyMarginSides,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginSides", t)
                        },
                        expression: "styling.rowBodyMarginSides"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        label: "Row Top Margin",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBodyMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginTop", t)
                        },
                        expression: "styling.rowBodyMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Row Bottom Margin",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBodyMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginBottom", t)
                        },
                        expression: "styling.rowBodyMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Text Padding")]), o("v-text-field", {
                    attrs: {
                        label: "Text Left and Right Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingY,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingY", t)
                        },
                        expression: "styling.rowTextPaddingY"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Text Top and Bottom Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingX,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingX", t)
                        },
                        expression: "styling.rowTextPaddingX"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border-Radius Cuts off overflow"
                    },
                    model: {
                        value: e.styling.rowOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowOverflowIsOn", t)
                        },
                        expression: "styling.rowOverflowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 767 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the row makes")]), o("v-text-field", {
                    attrs: {
                        label: "Horizontal Shadow",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowH", t)
                        },
                        expression: "styling.rowDropShadowH"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Vertical Shadow",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowV,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowV", t)
                        },
                        expression: "styling.rowDropShadowV"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Shadow Blur",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowBlur,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowBlur", t)
                        },
                        expression: "styling.rowDropShadowBlur"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Shadow Spread",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowSpread,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowSpread", t)
                        },
                        expression: "styling.rowDropShadowSpread"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("The Width and Height of the buttons")]), o("v-text-field", {
                    attrs: {
                        label: "Button Height",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowButtonXPadding,
                        callback: function(t) {
                            e.$set(e.styling, "rowButtonXPadding", t)
                        },
                        expression: "styling.rowButtonXPadding"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Button Width",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowButtonYPadding,
                        callback: function(t) {
                            e.$set(e.styling, "rowButtonYPadding", t)
                        },
                        expression: "styling.rowButtonYPadding"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.rowDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowIsOn", t)
                        },
                        expression: "styling.rowDropShadowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 767 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusTopLeft", t)
                        },
                        expression: "styling.rowBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusTopRight", t)
                        },
                        expression: "styling.rowBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusBottomRight", t)
                        },
                        expression: "styling.rowBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.rowBorderRadiusBottomLeft"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Border Style and Width")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.rowBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderStyle", t)
                        },
                        expression: "styling.rowBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        label: "Border Width",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderWidth", t)
                        },
                        expression: "styling.rowBorderWidth"
                    }
                }, [e._v("px")]), o("v-switch", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Border-Radius Percent or Pixels?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.rowBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusIsPixels", t)
                        },
                        expression: "styling.rowBorderRadiusIsPixels"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.rowBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderIsOn", t)
                        },
                        expression: "styling.rowBorderIsOn"
                    }
                })], 1)], 1) : o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 767 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Size of the row")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the row top.",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowMargin,
                        callback: function(t) {
                            e.$set(e.styling, "rowMargin", t)
                        },
                        expression: "styling.rowMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Space at the right and left of the rows",
                        filled: "",
                        type: "number",
                        suffix: "%"
                    },
                    model: {
                        value: e.styling.rowBodyMarginSides,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginSides", t)
                        },
                        expression: "styling.rowBodyMarginSides"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        label: "Space Between Rows",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBodyMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginBottom", t)
                        },
                        expression: "styling.rowBodyMarginBottom"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.rowBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderIsOn", t)
                        },
                        expression: "styling.rowBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 767 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Padding of the text inside of row")]), o("v-text-field", {
                    attrs: {
                        label: "Text Left and Right Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingY,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingY", t)
                        },
                        expression: "styling.rowTextPaddingY"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Text Top and Bottom Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingX,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingX", t)
                        },
                        expression: "styling.rowTextPaddingX"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n5"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "The Higher the number the bigger the shadow will be.",
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.shadowIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.rowDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowH", t)
                        },
                        expression: "styling.rowDropShadowH"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.rowDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowIsOn", t)
                        },
                        expression: "styling.rowDropShadowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 767 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.rowBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderStyle", t)
                        },
                        expression: "styling.rowBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderWidth", t)
                        },
                        expression: "styling.rowBorderWidth"
                    }
                }, [e._v("px")]), o("v-col", {
                    staticClass: "py-0 mt-n5"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the top of each row",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.topBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.rowBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusTopLeft", t)
                        },
                        expression: "styling.rowBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the bottom of each row",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.bottomBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.rowBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.rowBorderRadiusBottomLeft"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Border Color")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.rowBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderColor", t)
                        },
                        expression: "styling.rowBorderColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Object Gradient is turned on"
                    },
                    model: {
                        value: e.styling.rowGradientIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowGradientIsOn", t)
                        },
                        expression: "styling.rowGradientIsOn"
                    }
                }), e.styling.rowGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.rowGradient,
                        callback: function(t) {
                            e.$set(e.styling, "rowGradient", t)
                        },
                        expression: "styling.rowGradient"
                    }
                }, [e._v("px")]) : e._e(), e.styling.rowGradientIsOn ? o("span", [e._v("You might need to leave for the main menu if things stop updating, using something like (green, green) works. "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.w3schools.com/css/css3_gradients.asp"
                    }
                }, [e._v("https://www.w3schools.com/css/css3_gradients.asp")])]) : e._e()], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 911 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the choice shadow")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.rowDropShadowColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowColor", t)
                        },
                        expression: "styling.rowDropShadowColor"
                    }
                })], 1)], 1)], 1), o("v-row", [o("v-col", {
					staticClass: "text-center",
					attrs: {
						cols: "12"
					}
				}, [e._v("Border Image")], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 630 ? "4" : "12"
					}
				}, [o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.rowBorderImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Row Border Image"
                        }
                    },
                    on: {
                        change: e.onBorderImageChangeRow,
                        remove: e.onBorderImageRemovalRow
                    }
                })], 1), o("v-col", {
					staticClass: "pa-0",
					attrs: {
						cols: e.window.width > 630 ? "8" : "12"
					}
				}, [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-select", {
                    attrs: {
                        items: e.borderImageRepeat,
                        "item-value": "text",
                        filled: "",
                        label: "Repeat"
                    },
                    model: {
                        value: e.styling.rowBorderImageRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageRepeat", t)
                        },
                        expression: "styling.rowBorderImageRepeat"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageWidth", t)
                        },
                        expression: "styling.rowBorderImageWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Top",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceTop,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceTop", t)
                        },
                        expression: "styling.rowBorderImageSliceTop"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Bottom",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceBottom", t)
                        },
                        expression: "styling.rowBorderImageSliceBottom"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Left",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceLeft", t)
                        },
                        expression: "styling.rowBorderImageSliceLeft"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Right",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceRight", t)
                        },
                        expression: "styling.rowBorderImageSliceRight"
                    }
                }, [e._v("px")])], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            tt = [],
            ot = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						borderImageRepeat: [{
							text: "stretch"
						}, {
							text: "repeat"
						}, {
							text: "round"
						}, {
							text: "space"
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
				components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.rowBorderRadiusIsPixels ? "px" : "%"
                    },
					app: function() {
						return this.$store.state.app
					},
					rowStyling: function() {
						return this.$store.state.rowStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					if (!this.row.privateRowIsOn) {
						Object.keys(this.styling).forEach(key => {
							if ((key in this.rowStyling)) {
								this.$delete(this.styling, key);
							}
						});
					}
                },
                methods: {
                    shadowIsChanged: function() {
                        this.styling.rowDropShadowV = this.styling.rowDropShadowH, this.styling.rowDropShadowSpread = this.styling.rowDropShadowH, this.styling.rowDropShadowBlur = this.styling.rowDropShadowH
                    },
                    topBorderIsChanged: function() {
                        this.styling.rowBorderRadiusTopRight = this.styling.rowBorderRadiusTopLeft
                    },
                    bottomBorderIsChanged: function() {
                        this.styling.rowBorderRadiusBottomRight = this.styling.rowBorderRadiusBottomLeft
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					onBorderImageChangeRow: function(e) {
						this.$set(this.styling, "rowBorderImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
					},
					onBorderImageRemovalRow: function() {
						this.$set(this.styling, "rowBorderImage", "")
					}
                }
            },
            it = ot,
            st = (o("8ab2"), Object(w["a"])(it, et, tt, !1, null, "280a1940", null)),
            rt = st.exports;
        x()(st, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var at = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Point Bar")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
                    staticClass: "col-6"
                }, [e._v(" Style of text inside the point-bar "), o("v-text-field", {
                    attrs: {
                        label: "Bar Text Padding",
                        suffix: "px",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "barTextPadding", t)
                        },
                        expression: "styling.barTextPadding"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Bar Text Margin",
                        suffix: "px",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barTextMargin,
                        callback: function(t) {
                            e.$set(e.styling, "barTextMargin", t)
                        },
                        expression: "styling.barTextMargin"
                    }
                }), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customBarTextFont,
						callback: function(t) {
							e.$set(e.styling, "customBarTextFont", t)
						},
						expression: "styling.customBarTextFont"
					}
				}), e.styling.customBarTextFont ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.barTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "barTextFont", t)
                        },
                        expression: "styling.barTextFont"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.barTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "barTextFont", t)
                        },
                        expression: "styling.barTextFont"
                    }
                }), e._v("Bar Text Color "), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.barTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "barTextColor", t)
                        },
                        expression: "styling.barTextColor"
                    }
                })], 1), o("v-col", {
                    staticClass: "col-6"
                }, [e._v(" Style of the bar itself "), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Bar Padding",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barPadding,
                        callback: function(t) {
                            e.$set(e.styling, "barPadding", t)
                        },
                        expression: "styling.barPadding"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Bar Margin",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barMargin,
                        callback: function(t) {
                            e.$set(e.styling, "barMargin", t)
                        },
                        expression: "styling.barMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Bar Text Size",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "barTextSize", t)
                        },
                        expression: "styling.barTextSize"
                    }
                }), e._v("Bar Background Color "), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.barBackgroundColor,
                        callback: function(t) {
                            e.$set(e.styling, "barBackgroundColor", t)
                        },
                        expression: "styling.barBackgroundColor"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            nt = [],
            lt = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        textFonts: [{
                            text: "Times New Roman",
                            value: "Times New Roman"
                        }, {
                            text: "Arial",
                            value: "Arial"
                        }, {
                            text: "Roboto",
                            value: "Roboto"
                        }, {
                            text: "Courier New",
                            value: "Courier New"
                        }, {
                            text: "Courier",
                            value: "Courier"
                        }, {
                            text: "Verdana",
                            value: "Verdana"
                        }, {
                            text: "Georgia",
                            value: "Georgia"
                        }, {
                            text: "Comic Sans MS(NO!)",
                            value: "Comic Sans MS"
                        }, {
                            text: "Candara",
                            value: "Candara"
                        }, {
                            text: "Arial Black",
                            value: "Arial Black"
                        }, {
                            text: "Impact",
                            value: "Impact"
                        }, {
                            text: "Helvetica",
                            value: "Helvetica"
                        }, {
                            text: "Calibri",
                            value: "Calibri"
                        }, {
                            text: "Cambria",
                            value: "Cambria"
                        }, {
                            text: "Trebuchet MS",
                            value: "Trebuchet MS"
                        }, {
                            text: "Tahoma",
                            value: "Tahoma"
                        }]
                    }
                },
                computed: {
					app: function() {
						return this.$store.state.app
					},
                    styling: function() {
                        return this.$store.state.app.styling
                    }
                },
				mounted: function() {
					this.fontImport()
				},
                methods: {
					fontImport: function() {
						for (var a = 0; a < this.app.googleFonts.length; a++) {
							this.textFonts.push({text: this.app.googleFonts[a], value: this.app.googleFonts[a]});
						}
					},
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            ct = lt,
            dt = Object(w["a"])(ct, at, nt, !1, null, null, null),
            pt = dt.exports;
        x()(dt, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VTextField: R["a"]
        });
        var ut = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
                        sortType: 1,
                        newRow: "",
						newObject: "",
                        sort: [{
                            text: "Object Width - Biggest to smallest.",
                            value: "1"
                        }, {
                            text: "Object Width - Smallest to Biggest.",
                            value: "2"
                        }, {
                            text: "Text Length - Longest to Shortest.",
                            value: "3"
                        }, {
                            text: "Text Length - Shortest to Longest.",
                            value: "4"
                        }],
						window: {
							width: 600,
							height: 0
						}
                    }
                },
                components: {
                    appFilter: Te,
                    appText: Oe,
                    appObjectImage: $e,
                    appBackground: Ue,
                    appObjectDesign: Qe,
                    appRowDesign: rt,
                    appPointBar: pt,
                    appRowImage: Le,
					appAddonImage: a$e,
					appAddonDesign: aQe,
					appMultiChoice: _o
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    groups: function() {
                        return this.$store.state.app.groups
                    },
					app: function() {
						return this.$store.state.app
					},
					filterStyling: function() {
						return this.$store.state.filterStyling
					},
					textStyling: function() {
						return this.$store.state.textStyling
					},
					objectImageStyling: function() {
						return this.$store.state.objectImageStyling
					},
					backgroundStyling: function() {
						return this.$store.state.backgroundStyling
					},
					objectStyling: function() {
						return this.$store.state.objectStyling
					},
					addonImageStyling: function() {
						return this.$store.state.addonImageStyling
					},
					addonStyling: function() {
						return this.$store.state.addonStyling
					},
					multiChoiceStyling: function() {
						return this.$store.state.multiChoiceStyling
					},
					tRow: function() {
						if ("undefined" !== typeof this.app.comp[this.row.id]) {
							var co = this.app.comp[this.row.id],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
							return coR
						}
					},
					tObject: function() {
						if ("undefined" !== typeof this.app.comp[this.newObject]) {
							var co = this.app.comp[this.newObject],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
								coO = coR.objects[co.objects];
							return coO
						}
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    mergeObject: function() {
						var t = "",
							o = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateObjectId() {
							var s = "";
							for (var r = 0; r < th.app.objectIdLength; r++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.comp[s]) {
								return generateObjectId()
							} else {
								return s
							}
						}						
						if ("undefined" !== typeof this.app.compR[this.newRow]) {
							var co = this.app.compR[this.newRow],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
							coR.objects.push(JSON.parse(JSON.stringify(this.row)));
                            t = generateObjectId();
							coR.objects[coR.objects.length - 1].id = t;
							this.app.comp[t] = {rows: co.rows, objects: coR.objects.length - 1, type: co.type};
						}
                    },
					moveObjectBefore: function() {
						if (this.row !== this.tObject) {
							var e = this.tRow.objects.indexOf(this.row);
							var t = this.tRow.objects.indexOf(this.tObject);
							if (e > t) {
								for (var a = e; a > t; a--) {
									var tmpObject = this.tRow.objects[a];
									this.$set(this.tRow.objects, a, this.tRow.objects[a - 1]), this.$set(this.tRow.objects, a - 1, tmpObject);
									this.app.comp[this.tRow.objects[a].id].objects = a, this.app.comp[this.tRow.objects[a - 1].id].objects = a - 1;
								}
							} else {
								for (var a = e; a < t - 1; a++) {
									var tmpObject = this.tRow.objects[a];
									this.$set(this.tRow.objects, a, this.tRow.objects[a + 1]), this.$set(this.tRow.objects, a + 1, tmpObject);
									this.app.comp[this.tRow.objects[a].id].objects = a, this.app.comp[this.tRow.objects[a + 1].id].objects = a + 1;
								}
							}
							this.$emit("cleanCurrentComponent", "")
						}
					},
					moveObjectAfter: function() {
						if (this.row !== this.tObject) {
							var e = this.tRow.objects.indexOf(this.row);
							var t = this.tRow.objects.indexOf(this.tObject);
							if (e > t) {
								for (var a = e; a > t + 1; a--) {
									var tmpObject = this.tRow.objects[a];
									this.$set(this.tRow.objects, a, this.tRow.objects[a - 1]), this.$set(this.tRow.objects, a - 1, tmpObject);
									this.app.comp[this.tRow.objects[a].id].objects = a, this.app.comp[this.tRow.objects[a - 1].id].objects = a - 1;
								}
							} else {
								for (var a = e; a < t; a++) {
									var tmpObject = this.tRow.objects[a];
									this.$set(this.tRow.objects, a, this.tRow.objects[a + 1]), this.$set(this.tRow.objects, a + 1, tmpObject);
									this.app.comp[this.tRow.objects[a].id].objects = a, this.app.comp[this.tRow.objects[a + 1].id].objects = a + 1;
								}
							}
							this.$emit("cleanCurrentComponent", "")
						}
					},
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    rowWasChanged: function() {
                        this.$emit("rowWasChanged", this.row)
                    },
					importFromProject: function() {
                        var e = this;
                        var t = new FileReader;
                        t.onload = function() {
							o = JSON.parse(t.result);
							Object.keys(e.filterStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateFilterIsOn) e.$set(e.row, "privateFilterIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});							
							Object.keys(e.textStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateTextIsOn) e.$set(e.row, "privateTextIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectImageIsOn) e.$set(e.row, "privateObjectImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.backgroundStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateBackgroundIsOn) e.$set(e.row, "privateBackgroundIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectIsOn) e.$set(e.row, "privateObjectIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonImageIsOn) e.$set(e.row, "privateAddonImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonIsOn) e.$set(e.row, "privateAddonIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.multiChoiceStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateMultiChoiceIsOn) e.$set(e.row, "privateMultiChoiceIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
                        }, t.readAsText(this.files[0]);
                    },
					exportDesign: function() {
						var e = JSON.parse(JSON.stringify(this.row.styling)),
							t = {styling: e},
							o = new Blob([JSON.stringify(t)], {
                                type: "text/plain"
                            }),
                            i = document.createEvent("MouseEvents"),
                            s = document.createElement("a");
                        s.download = "choice_design.json", s.href = window.URL.createObjectURL(o), s.dataset.downloadurl = ["text/json", s.download, s.href].join(":"), i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(i)
					}
                }
            },
            ht = ut,
            gt = Object(w["a"])(ht, be, ve, !1, null, null, null),
            bt = gt.exports;
        x()(gt, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VFileInput: vo["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTooltip: Q["a"]
        });
		var wji = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
						persistent: "",
                        "max-width": "600px"
                    },					
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-text", {
					staticClass: "pb-0"
				}, [o("v-container", [o("v-row", [o("v-col", [e.row.wordPromptText ? o("span", {
					staticStyle: {
						"font-size": "120%"
					},
					domProps: {
						innerHTML: e._s(e.row.wordPromptText)
					}
				}) : e._e(), o("v-textarea", {
					staticClass: "pt-4",
                    attrs: {
                        label: "",
                        filled: "",
						noResize: !0,
                        "hide-details": ""
                    },
                    model: {
                        value: e.row.wordChangeSelect,
                        callback: function(t) {
                            e.$set(e.row, "wordChangeSelect", t)
                        },
                        expression: "object.wordChangeSelect"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "blue darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Confirm")])], 1)], 1)], 1)
            },
            wIi = [],
            wki = {
				props: {
                    row: Object
                },
                data: function() {
                    return {
                        dialog: !0
                    }
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    }
                },
				created: function() {
					var e = this;
					this.$set(this.row, "wordChangeSelect", "");
					return new Promise((function(t) {
						e.resolve = t
					}))
				},
                methods: {
					open: function() {
						var e = this;
						this.$set(this.row, "wordChangeSelect", "");
						return this.dialog = !0, new Promise((function(t) {
							e.resolve = t
						}))
					},
                    cleanCurrentComponent: function() {
						this.$set(this.app, "wordChangeComplete", !0);
						this.resolve(!0);
                        this.$emit("cleanCurrentComponent", "");
                    }
                }
            },
            wBi = wki,
            wSi = Object(w["a"])(wBi, wji, wIi, !1, null, null, null),
            wOi = wSi.exports;
        x()(wSi, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VTextField: R["a"],
			VTextarea: Z["a"],
        });
        var vt = {
                props: {
                    object: Object,
                    objects: Array,
                    isEditModeOn: Boolean,
                    activated: Array,
                    row: Object
                },
                data: function() {
                    return {
                        window: {
                            width: 0,
                            height: 0
                        },
						pWindow: {
							width: 0,
							height: 0
						},
                        buttonHasBeenPressed: !1,
                        snackbar: !1,
                        text: "",
                        selectedThisManyTimesProp: 0,
                        multipleUseVariable: 0,
                        templates: [{
                            text: "Image top",
                            value: 1
                        }, {
                            text: "Image left",
                            value: 2
                        }, {
                            text: "Image right",
                            value: 3
                        }, {
							text: "Image bottom",
							value: 4
						}, {
							text: "Image center",
							value: 5
						}],
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						discountOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }],
						hideContents: [{
							text: "Title of Choice",
							value: "1"
						}, {
							text: "Image of Choice",
							value: "2"
						}, {
							text: "Text of Choice",
							value: "3"
						}, {
							text: "Score of Choice",
							value: "4"
						}, {
							text: "Requirement of Choice",
							value: "5"
						}, {
							text: "Title of Addon",
							value: "6"
						}, {
							text: "Image of Addon",
							value: "7"
						}, {
							text: "Text of Addon",
							value: "8"
						}],
						changeType: [{
							text: "True",
							value: "1"
						}, {
							text: "False",
							value: "2"
						}, {
							text: "Toggle",
							value: "3"
						}],
						justify: [{
                            value: "start"
                        }, {
                            value: "center"
                        }, {
                            value: "end"
                        }, {
                            value: "space-around"
                        }, {
                            value: "space-between"
                        }],
                        currentComponent: "",
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        },
						scoreUpdate: "",
						exceptedObjects: [],
						exceptedScores: [],
						linkedObjects: []
                    }
                },
                components: {
                    PictureInput: $["a"],
                    ObjectAddon: te,
                    ObjectScore: ge,
                    AppRequirement: _,
                    AppImageUpload: G,
                    ObjectRequirement: le,
                    ObjectSettings: bt,
					ConfirmDlg: function() {
                        return o.e("chunk-2d0e6102").then(o.bind(null, "96c2"))
                    }
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
					activated: function() {
						return this.$store.state.app.activated
					},
					objectStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id];
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling
					},
					objectImageStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectImageIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					filterStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateFilterIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateFilterIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					backgroundStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateBackgroundIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					textStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateTextIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateTextIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					multiChoiceStyling: function() {
						if (this.object.privateMultiChoiceIsOn) return this.object.styling;
						if (this.row.privateMultiChoiceIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateMultiChoiceIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateMultiChoiceIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
                    objectWidths: function() {
                        return this.$store.state.objectWidths
                    },
                    objectTitle: function() {
						var e = this.checkRequireds(this.object);
                        return 'font-family: "' + this.textStyling.objectTitle + '";font-size: ' + this.textStyling.objectTitleTextSize + "%;text-align: " + this.textStyling.objectTitleAlign + ";color: " + (!e && this.filterStyling.reqCTitleColorIsOn ? this.filterStyling.reqFilterCTitleColor : (this.object.isActive && this.filterStyling.selCTitleColorIsOn ? this.filterStyling.selFilterCTitleColor : this.textStyling.objectTitleColor)) + ";" + (this.objectStyling.titlePaddingIsOn ? ("padding: " + this.objectStyling.objectTextPadding + "px;") : "")
                    },
                    multiChoiceText: function() {
                        return 'font-family: "' + this.multiChoiceStyling.multiChoiceTextFont + '";color: ' + this.textStyling.scoreTextColor + ";font-size: " + this.multiChoiceStyling.multiChoiceTextSize + "%;align-content: center;"
                    },
                    multiChoiceButton: function() {
                        return "color: " + this.textStyling.scoreTextColor + ";"
                    },
					multiChoiceCounter: function() {
						if (this.object.hideMultipleCounter) {
							return this.checkRequireds(this.object)
						}
						return !0
					},
                    objectText: function() {
						var e = this.checkRequireds(this.object);
                        return 'font-family: "' + this.textStyling.objectText + '";text-align: ' + this.textStyling.objectTextAlign + ";font-size: " + this.textStyling.objectTextTextSize + "%;color: " + (!e && this.filterStyling.reqCTextColorIsOn ? this.filterStyling.reqFilterCTextColor : (this.object.isActive && this.filterStyling.selCTextColorIsOn ? this.filterStyling.selFilterCTextColor : this.textStyling.objectTextColor)) + ";padding: " + this.objectStyling.objectTextPadding + "px;"
                    },
                    objectBackground: function() {
                        var e = (this.objectStyling.objectBorderImage ? 'border-image: url("' + this.objectStyling.objectBorderImage + '") ' + this.objectStyling.objectBorderImageSliceTop + ' ' + this.objectStyling.objectBorderImageSliceRight + ' ' + this.objectStyling.objectBorderImageSliceBottom + ' ' + this.objectStyling.objectBorderImageSliceLeft + ' / ' + this.objectStyling.objectBorderImageWidth + 'px ' + this.objectStyling.objectBorderImageRepeat + '; border-style: solid; padding: ' + this.objectStyling.objectBorderImageWidth + 'px; ' : "padding: 0px; ") + ((this.backgroundStyling.objectBackgroundImage && !(this.object.isActive && this.filterStyling.selBgColorIsOn && !this.filterStyling.selOverlayOnImage)) ? 'background-image: url("' + this.backgroundStyling.objectBackgroundImage + '");' + (this.backgroundStyling.isObjectBackgroundRepeat ? "background-repeat: repeat;" : (this.backgroundStyling.isObjectBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) : "") + (this.object.isActive ? (this.filterStyling.selBgColorIsOn ? "background-color: " + this.filterStyling.selFilterBgColor + "; " : "") : (this.backgroundStyling.objectBgColorIsOn ? "background-color: " + this.backgroundStyling.objectBgColor + "; " : "")) + "margin:" + this.objectStyling.objectMargin + "px;",
							t = this.objectStyling.objectBorderRadiusIsPixels ? "px" : "%",
							o = this.checkRequireds(this.object);
						1 == this.object.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.objectStyling.objectBorderRadiusTopLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusTopRight + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomRight + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomLeft + 0 + t + "; " : 2 == this.object.template ? e += "border-radius: " + this.objectStyling.objectBorderRadiusTopLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomRight + 0 + t + " " + this.objectStyling.objectBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.objectStyling.objectBorderRadiusBottomLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusTopLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusTopRight + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomRight + 0 + t + "; ", this.objectStyling.objectOverflowIsOn && (e += "overflow:hidden;"), (this.objectStyling.objectBorderIsOn || (this.object.isActive && this.filterStyling.selBorderColorIsOn) || (!o && this.filterStyling.reqBorderColorIsOn)) && (e += "border: " + this.objectStyling.objectBorderWidth + "px " + this.objectStyling.objectBorderStyle + " " + (!o && this.filterStyling.reqBorderColorIsOn ? this.filterStyling.reqFilterBorderColor : (this.object.isActive && this.filterStyling.selBorderColorIsOn ? this.filterStyling.selFilterBorderColor : this.objectStyling.objectBorderColor)) + ";"), e += "filter: ", this.objectStyling.objectDropShadowIsOn && (e += "drop-shadow(" + this.objectStyling.objectDropShadowH + "px " + this.objectStyling.objectDropShadowV + "px " + this.objectStyling.objectDropShadowBlur + "px " + this.objectStyling.objectDropShadowColor + ")");
						if (!this.object.isActive && o) e += this.filterStyling.unselFilterBlurIsOn ? "blur(" + this.filterStyling.unselFilterBlur + "px)" : "", e += this.filterStyling.unselFilterBrightIsOn ? "brightness(" + this.filterStyling.unselFilterBright + "%)" : "", e += this.filterStyling.unselFilterContIsOn ? "contrast(" + this.filterStyling.unselFilterCont + "%)" : "", e += this.filterStyling.unselFilterGrayIsOn ? "grayscale(" + this.filterStyling.unselFilterGray + "%)" : "", e += this.filterStyling.unselFilterHueIsOn ? "hue-rotate(" + this.filterStyling.unselFilterHue + "deg)" : "", e += this.filterStyling.unselFilterInvertIsOn ? "invert(" + this.filterStyling.unselFilterInvert + "%)" : "", e += this.filterStyling.unselFilterOpacIsOn ? "opacity(" + this.filterStyling.unselFilterOpac + "%)" : "", e += this.filterStyling.unselFilterSaturIsOn ? "saturate(" + this.filterStyling.unselFilterSatur + ")" : "", e += this.filterStyling.unselFilterSepiaIsOn ? "sepia(" + this.filterStyling.unselFilterSepia + "%)" : "", this.objectStyling.objectGradientIsOn && (e += ";background-image: linear-gradient(" + this.objectStyling.objectGradient + ")");
						else if (this.object.isActive && o) e += this.filterStyling.selFilterBlurIsOn ? "blur(" + this.filterStyling.selFilterBlur + "px)" : "", e += this.filterStyling.selFilterBrightIsOn ? "brightness(" + this.filterStyling.selFilterBright + "%)" : "", e += this.filterStyling.selFilterContIsOn ? "contrast(" + this.filterStyling.selFilterCont + "%)" : "", e += this.filterStyling.selFilterGrayIsOn ? "grayscale(" + this.filterStyling.selFilterGray + "%)" : "", e += this.filterStyling.selFilterHueIsOn ? "hue-rotate(" + this.filterStyling.selFilterHue + "deg)" : "", e += this.filterStyling.selFilterInvertIsOn ? "invert(" + this.filterStyling.selFilterInvert + "%)" : "", e += this.filterStyling.selFilterOpacIsOn ? "opacity(" + this.filterStyling.selFilterOpac + "%)" : "", e += this.filterStyling.selFilterSaturIsOn ? "saturate(" + this.filterStyling.selFilterSatur + ")" : "", e += this.filterStyling.selFilterSepiaIsOn ? "sepia(" + this.filterStyling.selFilterSepia + "%)" : "", this.objectStyling.objectGradientIsOn && (e += ";background-image: linear-gradient(" + this.objectStyling.objectGradientOnSelect + ")");
						else if (!o) {
							var rm = 'background-image: url("' + this.backgroundStyling.objectBackgroundImage + '");' + (this.backgroundStyling.isObjectBackgroundRepeat ? "background-repeat: repeat;" : (this.backgroundStyling.isObjectBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) + (this.object.isActive ? (this.filterStyling.selBgColorIsOn ? "background-color: " + this.filterStyling.selFilterBgColor + "; " : "") : (this.backgroundStyling.objectBgColorIsOn ? "background-color: " + this.backgroundStyling.objectBgColor + "; " : ""));
							if (this.backgroundStyling.objectBackgroundImage && this.filterStyling.reqBgColorIsOn && !this.filterStyling.reqOverlayOnImage) e = e.replace(rm, "");
							e += this.filterStyling.reqFilterBlurIsOn ? "blur(" + this.filterStyling.reqFilterBlur + "px)" : "", e += this.filterStyling.reqFilterBrightIsOn ? "brightness(" + this.filterStyling.reqFilterBright + "%)" : "", e += this.filterStyling.reqFilterContIsOn ? "contrast(" + this.filterStyling.reqFilterCont + "%)" : "", e += this.filterStyling.reqFilterGrayIsOn ? "grayscale(" + this.filterStyling.reqFilterGray + "%)" : "", e += this.filterStyling.reqFilterHueIsOn ? "hue-rotate(" + this.filterStyling.reqFilterHue + "deg)" : "", e += this.filterStyling.reqFilterInvertIsOn ? "invert(" + this.filterStyling.reqFilterInvert + "%)" : "", e += this.filterStyling.reqFilterOpacIsOn ? "opacity(" + this.filterStyling.reqFilterOpac + "%)" : "", e += this.filterStyling.reqFilterSaturIsOn ? "saturate(" + this.filterStyling.reqFilterSatur + ")" : "", e += this.filterStyling.reqFilterSepiaIsOn ? "sepia(" + this.filterStyling.reqFilterSepia + "%)" : "", e += (this.filterStyling.reqBgColorIsOn ? ";background-color: " + this.filterStyling.reqFilterBgColor : ""), this.objectStyling.objectGradientIsOn && (e += ";background-image: linear-gradient(" + this.objectStyling.objectGradientOnReq + ")");
						}
						e += (o && this.app.isPointerCursor && !this.object.isNotSelectable && !this.object.isSelectableMultiple ? ";cursor: pointer;" : ";");
						return e
                    },
                    findRowTitle: function() {
						var e = "";
						if ("undefined" !== typeof this.app.comp[this.object.id]) {
							var co = this.app.comp[this.object.id],
								coR = this.app.rows[co.rows];
							return coR.title;
						}
                        return e
                    },
                    objectImage: function() {
                        var e = "width:" + this.objectImageStyling.objectImageWidth + "%;margin-top:" + this.objectImageStyling.objectImageMarginTop + "%;margin-bottom:" + this.objectImageStyling.objectImageMarginBottom + "%;";
                        this.objectImageStyling.objectImgObjectFillIsOn && (e += "object-fit:" + this.objectImageStyling.objectImgObjectFillStyle + ";height:" + this.row.objectImgObjectFillHeight + "px;");
                        var t = this.objectImageStyling.objectImgBorderRadiusIsPixels ? "px" : "%";
                        return 1 == this.object.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + ";" : 2 == this.object.template ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + "; ", this.objectImageStyling.objectImgOverflowIsOn && (e += "overflow:hidden;"), this.objectImageStyling.objectImgBorderIsOn && (e += "border: " + this.objectImageStyling.objectImgBorderWidth + "px " + this.objectImageStyling.objectImgBorderStyle + " " + this.objectImageStyling.objectImgBorderColor + ";"), e
                    },
                    scoreText: function() {
                        return 'font-family: "' + this.textStyling.scoreText + '";font-size: ' + this.textStyling.scoreTextSize + "%;text-align: " + this.textStyling.scoreTextAlign + ";color: " + this.textStyling.scoreTextColor + ";"
                    },
                    app: function() {
                        return this.$store.state.app
                    },
                    replaceObjectText: function() {
                        var e = this.object.text;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    replaceObjectTitleText: function() {
                        var e = this.object.title;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    }
                },
				watch: {
					isEditModeOn: function(e) {
						e ? this.setupResizeObserver() : this.cleanupResizeObserver()
					}
				},
				mounted: function() {
					if (this.isEditModeOn) {
						this.setupResizeObserver()
					}
                },
                created: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize(), "undefined" !== typeof this.object.multipleUseVariable && (this.$set(this.object, "selectedThisManyTimesProp", this.object.multipleUseVariable));
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize);
					if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    changeTheWord: function() {},
					setupResizeObserver: function() {
						this.$nextTick(() => {
							if (this.$refs.panels) {
								this.resizeObserver = new ResizeObserver((e) => {
									for (var t of e) {
										this.pWindow.width = t.contentRect.width;
										this.pWindow.hegiht = t.contentRect.height;
									}
								});
								this.resizeObserver.observe(this.$refs.panels.$el);
							}
						})
					},
					cleanupResizeObserver: function() {
						if (this.resizeObserver && this.$refs.panels) {
							this.resizeObserver.disconnect();
						}
					},
                    multiplyOrDivide: function(e) {
                        var t;
                        if (e.multiplyPointtypeIsOnCheck)
                            for (e.multiplyPointtypeIsOnCheck = !1, t = 0; t < this.app.pointTypes.length; t++) this.app.pointTypes[t].id == e.pointTypeToMultiply && (this.app.pointTypes[t].startingSum -= e.startingSumAtMultiply, console.log("Multiply:" + e.startingSumAtMultiply));
                        if (e.dividePointtypeIsOnCheck)
                            for (e.dividePointtypeIsOnCheck = !1, t = 0; t < this.app.pointTypes.length; t++) this.app.pointTypes[t].id == e.pointTypeToDivide && (this.app.pointTypes[t].startingSum *= e.divideWithThis, console.log("Divide:"))
                    },
                    handleResize: function() {
                        this.window.width = window.innerWidth, this.window.height = window.innerHeight;
                    },
                    setFalse: function(e) {
                        e.isNotSelectable = !1
                    },
                    getChoiceTitle: function(e) {
                        var t, o, g = !0;
						if (e.hideRequired) {
							g = !this.checkRequireds(this.object);
						}
                        if (e.showRequired && g)
							if (e.customTextIsOn) {
								return "undefined" !== typeof e.customText ? e.customText : ""
							} else {
								if ("id" == e.type) {
									var rId = e.reqId.split("/ON#");
									if ("undefined" !== typeof this.app.comp[rId[0]]) {
										var	co = this.app.comp[rId[0]],
											coR = this.app.rows[co.rows],
											coO = coR.objects[co.objects];
										return e.beforeText + " " + (rId.length > 1 ? rId[1] + " " : "") + coO.title + " " + e.afterText
									}
								} else if ("points" == e.type) {
									for (t = 0; t < this.app.pointTypes.length; t++)
										if (e.reqId == this.app.pointTypes[t].id) return e.beforeText + " " + e.reqPoints + " " + this.app.pointTypes[t].name + " " + e.afterText
								} else if ("or" == e.type) {
									var i = [];
									for (var s = 0; s < e.orRequired.length; s++) {
										var rId = e.orRequired[s].req.split("/ON#");
										if ("undefined" !== typeof this.app.comp[rId[0]]) {
											var	co = this.app.comp[rId[0]],
												coR = this.app.rows[co.rows],
												coO = coR.objects[co.objects];
											o = rId.length > 1 ? rId[1] + " " : "";
											i.push((o + coO.title));
										}
									}
									if (this.app.orderOrReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + ("undefined" !== typeof e.orNum ? this.app.defaultOrReq + " " + e.orNum : this.app.defaultOrReq + " 1") + " " + e.afterText
									} else {
										return e.beforeText + " " + ("undefined" !== typeof e.orNum ? e.orNum + " " + this.app.defaultOrReq : "1 " + this.app.defaultOrReq) + " "  + i.join(", ") + " "+ e.afterText
									}
								} else if ("selFromGroups" == e.type && "undefined" !== typeof e.selGroups) {
									var i = [];
									for (var s = 0; s < e.selGroups.length; s++) {
										if ("undefined" !== typeof this.app.compG[e.selGroups[s]]) {
											var co = this.app.compG[e.selGroups[s]],
												coG = this.app.groups[co.groups];
											i.push(coG.name);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromRows" == e.type && "undefined" !== typeof e.selRows) {
									var i = [];
									for (var s = 0; s < e.selRows.length; s++) {
										if ("undefined" !== typeof this.app.compR[e.selRows[s]]) {
											var co = this.app.compR[e.selRows[s]],
												coR = this.app.rows[co.rows];
											i.push(coR.title);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromWhole" == e.type) {
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + e.afterText
									}
								}
							}
                        return ""
                    },
                    createNewAddon: function() {
                        this.object.addons.push({
                            id: "",
                            title: this.app.defaultAddonTitle,
                            text: this.app.defaultAddonText,
                            template: 1,
                            image: "",
                            requireds: [],
							parentId: this.object.id
                        })
                    },
                    createNewScore: function() {
                        this.object.scores.push({
                            id: "",
                            value: 0,
                            type: "",
                            requireds: [],
                            beforeText: this.app.defaultBeforePoint,
                            afterText: this.app.defaultAfterPoint,
                            showScore: !0
                        })
                    },
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
                    moveObjectUp: function() {
                        var e = this.objects.indexOf(this.object);
                        if (e > 0) {
                            var t = this.objects[e];
                            this.$set(this.objects, e, this.objects[e - 1]), this.$set(this.objects, e - 1, t);
							this.app.comp[this.objects[e].id].objects = e, this.app.comp[this.objects[e - 1].id].objects = e - 1;
                        }
                    },
                    moveObjectDown: function() {
                        var e = this.objects.indexOf(this.object);
                        if (-1 !== e && e < this.objects.length - 1) {
                            var t = this.objects[e];
                            this.$set(this.objects, e, this.objects[e + 1]), this.$set(this.objects, e + 1, t);
							this.app.comp[this.objects[e].id].objects = e, this.app.comp[this.objects[e + 1].id].objects = e + 1;
                        }
                    },
                    deleteObject: function(e) {
                        var t = this;
						if (t.app.checkDeleteObject) {
							return Object(l["a"])(regeneratorRuntime.mark((function o() {
								return regeneratorRuntime.wrap((function(o) {
									while (1) switch (o.prev = o.next) {
										case 0:
											return o.next = 2, t.$refs.confirm.open("Confirm", "Are you sure you want to delete this object?");
										case 2:
											if (!o.sent) {
												o.next = 4;
												break
											}
											var s = t.objects.indexOf(t.object);											
											if (t.object.isActive) t.activateObject(t.object, t.row);
											if ("undefined" !== typeof t.app.compR[t.row.id]) {
												var co = t.app.compR[t.row.id],
													coR = co.type == "backpack" ? t.app.backpack[co.rows] : t.app.rows[co.rows];
												for (var i = s + 1; i < coR.objects.length; i++) {
													if ("undefined" !== typeof t.app.comp[coR.objects[i].id]) {
														t.app.comp[coR.objects[i].id].objects = i - 1;
													}
												}
												if (t.object.backpackBtnRequirement) t.$set(t.app, "hideBackpackBtn", t.app.hideBackpackBtn - 1);
												t.$delete(t.app.comp, t.object.id);
												t.$delete(t.app.objectMap, t.object.id);
												t.objects.splice(t.objects.indexOf(t.object), 1);
											}
										case 4:
										case "end":
											return o.stop()
									}
								}), o)
							})))()
						} else {
							var s = t.objects.indexOf(t.object);
							if (t.object.isActive) t.activateObject(t.object, t.row);
							if ("undefined" !== typeof t.app.compR[t.row.id]) {
								var co = t.app.compR[t.row.id],
									coR = co.type == "backpack" ? t.app.backpack[co.rows] : t.app.rows[co.rows];
								for (var i = s + 1; i < coR.objects.length; i++) {
									if ("undefined" !== typeof t.app.comp[coR.objects[i].id]) {
										t.app.comp[coR.objects[i].id].objects = i - 1;
									}
								}
								if (t.object.backpackBtnRequirement) t.$set(t.app, "hideBackpackBtn", t.app.hideBackpackBtn - 1);
								t.$delete(t.app.comp, t.object.id);
								t.$delete(t.app.objectMap, t.object.id);
								t.objects.splice(t.objects.indexOf(t.object), 1);
							}
						}
                    },
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    checkPoints: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum - parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					checkPointsR: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum + parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					playBgm: function(e, t, i) {
						function bgmFadeIn(th, f) {
							let v = 0,
								k = 0,
								o = 0;
							if (th.app.isFadingOut) {
								const lastTime = parseInt(th.app.lastFadeTime);
								if (th.app.bgmFadeTimer !== 0) clearTimeout(th.app.bgmFadeTimer), th.app.bgmFadeTimer = 0;
								th.app.bgmFadeTimer = setTimeout(() => {
									if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
									if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
										const iTime = e.bgmFadeInSec / 20;
										th.app.lastFadeTime = e.bgmFadeInSec;
										bgmPlayer.setVolume(0);
										bgmPlayer.playVideo();
										if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										if (th.app.isFadingOut) th.app.isFadingOut = !1;
										th.app.bgmFadeInterval = setInterval(() => {
											if (bgmPlayer.playerInfo.playerState === 1) {
												if (v < th.app.curVolume) {
													v += 5;
													bgmPlayer.setVolume(v);
													th.app.lastFadeTime = th.app.lastFadeTime - iTime;
												} else {
													bgmPlayer.setVolume(th.app.curVolume);
													clearInterval(th.app.bgmFadeInterval);
													th.app.bgmFadeInterval = 0;
													th.app.lastFadeTime = 0;
												}
											}
										}, iTime);
									} else {
										if (th.app.isFadingOut) th.app.isFadingOut = !1, clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										bgmPlayer.playVideo();
										bgmPlayer.setVolume(th.app.curVolume);
									}
									th.$set(th.app, "bgmObjectId", e.id);
									if (th.app.showMusicPlayer) {
										if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
										th.app.bgmTitleInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
												if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
													th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
													th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
													clearInterval(th.app.bgmTitleInterval);
													th.app.bgmTitleInterval = 0;
												}
											}
										}, 1000);
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										th.app.bgmPlayInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
												const curTime = parseInt(bgmPlayer.getCurrentTime());
												if (curTime !== th.app.curBgmTime) {
													if (k !== curTime) {
														th.$set(th.app, "curBgmTime", curTime);
													} else {
														o++;
														if (o > th.app.curBgmLength) o = 1;
														th.$set(th.app, "curBgmTime", o);
													}
												} else {
													k = curTime;
													o = curTime + 1;
													th.$set(th.app, "curBgmTime", o);
												}
											}
										}, 1000);
									}
								}, lastTime);
							} else {
								if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
								if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
									const iTime = e.bgmFadeInSec / 20;
									th.app.lastFadeTime = e.bgmFadeInSec;
									bgmPlayer.setVolume(0);
									bgmPlayer.playVideo();
									if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									if (th.app.isFadingOut) th.app.isFadingOut = !1;
									th.app.bgmFadeInterval = setInterval(() => {
										if (bgmPlayer.playerInfo.playerState === 1) {
											if (v < th.app.curVolume) {
												v += 5;
												bgmPlayer.setVolume(v);
												th.app.lastFadeTime = th.app.lastFadeTime - iTime;
											} else {
												bgmPlayer.setVolume(th.app.curVolume);
												clearInterval(th.app.bgmFadeInterval);
												th.app.bgmFadeInterval = 0;
												th.app.lastFadeTime = 0;
											}
										}
									}, iTime);
								} else {
									bgmPlayer.playVideo();
									bgmPlayer.setVolume(th.app.curVolume);
								}
								th.$set(th.app, "bgmObjectId", e.id);
								if (th.app.showMusicPlayer) {
									if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
									th.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
											if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
												th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(th.app.bgmTitleInterval);
												th.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									th.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== th.app.curBgmTime) {
												if (k !== curTime) {
													th.$set(th.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > th.app.curBgmLength) o = 1;
													th.$set(th.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												th.$set(th.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							}
						}
						function bgmFadeOut(th) {
							const steps = th.app.curVolume / 5;
							if (e.bgmFadeOut && e.bgmFadeOutSec > 0 && steps > 0) {
								const iTime = e.bgmFadeOutSec / steps;
								let v = th.app.curVolume;
								th.app.lastFadeTime = e.bgmFadeOutSec;
								th.app.isFadingOut = !0;
								if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
								th.app.bgmFadeInterval = setInterval(() => {
									if (v > 0 && "undefined" !== typeof bgmPlayer.setVolume) {
										v -= 5;
										bgmPlayer.setVolume(v);
										th.app.lastFadeTime = th.app.lastFadeTime - iTime;
									} else {
										if (th.app.isFadingOut) {
											bgmPlayer.pauseVideo();
											bgmPlayer.setVolume(th.app.curVolume);
											clearInterval(th.app.bgmFadeInterval);
											th.app.bgmFadeInterval = 0;
											th.app.lastFadeTime = 0;
											th.app.isFadingOut = !1;
											if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
											if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
											th.$set(th.app, "bgmTitle", "No Audio Title");
											th.$set(th.app, "curBgmTime", 0);
											th.$set(th.app, "curBgmLength", 0);
										}
									}
								}, iTime);
							} else {
								bgmPlayer.pauseVideo();
								if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
								if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
								th.$set(th.app, "bgmTitle", "No Audio Title");
								th.$set(th.app, "curBgmTime", 0);
								th.$set(th.app, "curBgmLength", 0);
							}
						}
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							var p = this.app.bgmIsPlaying,
								s = bgmPlayer.playerInfo.videoData.video_id,
								o = bgmPlayer.playerInfo.playerState,
								v = 0,
								f = !1;
							if ("undefined" === typeof this.app.bgmObjectId) this.$set(this.app, "bgmObjectId", e.id);
							if (s == t) {
								if (this.app.bgmObjectId == e.id) {
									if (p) {
										if (o === 2) {
											bgmFadeIn(this, f);
										} else {
											bgmPlayer.stopVideo();
											bgmFadeIn(this, f);
										}
									} else {
										bgmFadeOut(this);
									}
								} else {
									if (p) {
										bgmPlayer.stopVideo(), bgmFadeIn(this, f);
									} else {
										bgmFadeOut(this);
									}
								}
							} else {
								if (p) {
									f = !0;
									bgmFadeIn(this, f);
								}
							}
						} else {
							if (i < 10) {
								i++;
								setTimeout(() => {
									this.playBgm(e, t, i);
								}, 200);
							}
						}
					},
					updateScoresC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var nH = 0, nh = 0, nR = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var af = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[af[0]]) {
								var co = this.app.comp[af[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											bE = this.checkRequireds(coS);
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						} 
					},
					updateScoresS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											var bE = this.checkRequireds(coS);
											if (bC !== bE) {
												var nC = 0;
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																	
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + parseInt(e.multipleUseVariable + 1) : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											var bE = !1;
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bE = this.checkRequireds(coS);
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
												} else {
													var aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bE = this.checkRequireds(coS);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
												}
											} else {
												var nH = this.activated.indexOf(eid);
												this.activated.splice(nH, 1);
												t.currentChoices -= 1;
												var bE = this.checkRequireds(coS);
												this.activated.splice(nH, 0, eid);
												t.currentChoices += 1;
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
													bE = this.checkRequireds(coS);
												} else {
													var aFI = this.activated[fI].split("/ON#");
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
													bE = this.checkRequireds(coS);
												}
											} else {
												this.activated.splice(nR, 1);
												t.currentChoices -= 1;
												bC = this.checkRequireds(coS);
												for (var a = 0; a < o.length; a++) {
													for (var n = 0; n < this.app.pointTypes.length; n++) {
														this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
													}
												}
												this.activated.splice(nR, 0, eid);
												t.currentChoices += 1;
												bE = this.checkRequireds(coS);
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					checkPointsMD: function(e) {
						var ei = 0,
							pT = 0;
						if (e.multiplyPointtypeIsOnCheck || e.dividePointtypeIsOnCheck) {
							if (e.multiplyPointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtMultiply[l];
													pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							} else if (e.dividePointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToDivide.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtDivide[l];
													pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							}
							if (pT < 0) return !1
						}
						return !0
					},
					discountS: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								bTempStacked = !1,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										discountedFrom.push(e.id);
										scoreVal = coS.tmpDiscount[f][2];
										bTempStacked = !0;
										tmpNum = f;
									}
								}
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										coS.discountTextA.push(e.discountAfterText);
									}
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if (coS.discountScore > stackDiscount) {
									this.$set(coS, "tmpDisScore", coS.discountScore - stackDiscount);
									this.$set(coS, "isChangeDiscount", true);
									aDiscount.push(false);
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									if ("undefined" !== typeof coS.discountTextA) this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if ("undefined" !== typeof coS.discountTextB) this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
									coS.discountedFrom.push(...discountedFrom);
									if (bTempStacked) coS.tmpDiscount.splice(tmpNum, 1);
									coS.tmpDiscount.push(aDiscount);
									this.$set(coS, "notStackableDiscount", false);
								} else {
									this.$set(coS, "isChangeDiscount", false);
									discountedFrom.push(e.id);
									if (bTempStacked) {
										coS.tmpDiscount[tmpNum][1] = discountedFrom;
										coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
										coS.tmpDiscount[tmpNum][3] = stackDiscount;
									} else {
										if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
										"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
										aDiscount.push(discountedFrom);
										aDiscount.push(stackDiscountCal);
										aDiscount.push(stackDiscount);
										coS.tmpDiscount.push(aDiscount);
									}
								}
							} else {
								scoreVal = coS.discountIsOn ? coS.discountScoreCal : parseInt(coS.value);
								var tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
										coS.discountTextA.push(e.discountAfterText);
									}
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountedFrom.push(e.id);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
								if (!coS.discountIsOn) this.$set(coS, "discountIsOn", true);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								aDiscount = [];
							if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
							if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
							else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
							else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
							else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
							stackDiscountCal = stackDiscount;
							if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
							if (coS.discountIsOn) {
								"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
								if (coS.discountScore > stackDiscount) {
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									this.$set(coS, "discountShow", e.discountShow);
									this.$set(coS, "discountBeforeText", e.discountBeforeText);
									this.$set(coS, "discountAfterText", e.discountAfterText);
									this.$set(coS, "discountedFrom", e.id);
									this.$set(coS, "notStackableDiscount", true);
								} else {
									aDiscount.push(e.id);
									aDiscount.push(stackDiscountCal);
									aDiscount.push(stackDiscount);
									if (e.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
								}
								coS.tmpDiscount.push(aDiscount);
							} else {
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								if (e.discountShow) this.$set(coS, "discountShow", e.discountShow), this.$set(coS, "discountBeforeText", e.discountBeforeText), this.$set(coS, "discountAfterText", e.discountAfterText);
								this.$set(coS, "discountIsOn", true);
								this.$set(coS, "discountedFrom", e.id);
								this.$set(coS, "notStackableDiscount", true);
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
					discountC: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										scoreVal = coS.tmpDiscount[f][2];
										tmpNum = f;
									}
								}
								discountedFrom.splice(discountedFrom.indexOf(e.id), 1);
								if (discountedFrom.length > 0) {
									for (var f = 0; f < discountedFrom.length; f++) {
										if ("undefined" !== typeof this.app.comp[discountedFrom[f]]) {
											var coT = this.app.comp[discountedFrom[f]],
												coTR = co.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
											else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
											else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
											else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
											stackDiscountCal = stackDiscount;
											if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
										}
									}
									coS.tmpDiscount[tmpNum][1] = discountedFrom;
									coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
									coS.tmpDiscount[tmpNum][3] = stackDiscount;
								} else {
									coS.tmpDiscount.splice(tmpNum, 1);
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								this.$set(coS, "isChangeDiscount", false);
							} else {
								var scoreVal = parseInt(coS.value),
									indexId = coS.discountedFrom.indexOf(e.id),
									tmpDisScore = coS.discountScore,
									stackDiscount = 0,
									stackDiscountCal = 0,
									tmpNum = 0,
									bTempChanged = !1,
									discountedFrom = "";
								coS.discountedFrom.splice(indexId, 1);
								if (coS.discountedFrom.length > 0) {
									for (var d = 0; d < coS.discountedFrom.length; d++) {
										if ("undefined" !== typeof this.app.comp[coS.discountedFrom[d]]) {
											var coT = this.app.comp[coS.discountedFrom[d]],
												coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (coTO.stackableDiscount) {
												if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
												else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
												else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
												else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
												stackDiscountCal = stackDiscount;
												scoreVal = stackDiscountCal;
												if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
											}
										}
									}
								} else {
									stackDiscountCal = parseInt(coS.value);
									stackDiscount = parseInt(coS.value);
								}
								if ("undefined" !== typeof coS.tmpDiscount) {
									for (var f = 0; f < coS.tmpDiscount.length; f++) {
										if (!coS.tmpDiscount[f][0]) {
											if (stackDiscount > coS.tmpDiscount[f][3]) {
												discountedFrom = coS.tmpDiscount[f][1];
												stackDiscountCal = coS.tmpDiscount[f][2];
												stackDiscount = coS.tmpDiscount[f][3];
												tmpNum = f;
												bTempChanged = !0;
											}
										}
									}
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								if (bTempChanged) {
									if (discountedFrom.length == 0) {
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", discountedFrom);
										if (coS.tmpDiscount[tmpNum][4]) {
											this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
											this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
										}
										coS.tmpDiscount.splice(tmpNum, 1);
										coS.notStackableDiscount = true;
									}
								} else {
									this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if (coS.discountedFrom.length == 0) this.$set(coS, "discountIsOn", false);
								}
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountScore,
								tmpNum = 0,
								bChanged = !1;
							if (coS.notStackableDiscount) {
								if (coS.discountedFrom == e.id) {
									if ("undefined" !== typeof coS.tmpDiscount && coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[0][3];
										bChanged = !0;
										for (var f = 1; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										this.$set(coS, "notStackableDiscount", !coS.tmpDiscount[tmpNum][0]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", "");
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", scoreVal);
										this.$set(coS, "discountBeforeText", "");
										this.$set(coS, "discountAfterText", "");
										this.$set(coS, "discountIsOn", false);
										this.$set(coS, "notStackableDiscount", false);
									}
								} else {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
								}
							} else {
								if ("undefined" !== typeof coS.tmpDiscount) {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
									if (coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[f][3];
										bChanged = !0;
										for (var f = 0; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[f][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[f][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									}
								}
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
					forceActivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
							if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
						}
						if (this.checkRequireds(coO) && this.checkPoints(coO)) {
							if (coO.isSelectableMultiple) {
								var ee = o;
								if (ee > 0) {
									for (var n = 0; n < ee; n++) {
										this.selectedOneMore(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else if (ee < 0) {
									for (var pp = 0; pp < -1 * ee; pp++) {
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
										this.selectedOneLess(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								}
							} else {
								if (!coO.isActive) this.activateObject(coO, coR);
								if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
							}
							if(!coO.isActive) {
								if(coO.isSelectableMultiple) {
									if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
									e.cancelForcedActivated.push(coO.id + "/ON#" + o);
								}
								this.$set(coO, "forcedActivated", !1);
							}
						} else {
							if(coO.isSelectableMultiple) {
								if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
								e.cancelForcedActivated.push(coO.id + "/ON#" + o);
							}
							this.$set(coO, "forcedActivated", !1);
						}
					},
					forceDeactivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
					forceDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (e.selectedThisManyTimesProp == 0) {
									if (coO.isActive && !e.isNotDeactivate) {
										if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
										this.activateObject(coO, coR);
									}
								}
							}
						}
					},
					forceRandomActivate: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						this.$set(e, 'activatedRandom', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandom = rd.slice(0, nAR);
						for (var a = 0, b = 0, v = 0; v < parseInt(nAR) + b; v++) {
							var rndV = e.activatedRandom[v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[rndV[0]]) {
								var co = this.app.comp[rndV[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = rndV[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandom.splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandom.splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomActivateMul: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						if ("undefined" === typeof e.activatedRandomMul) this.$set(e, 'activatedRandomMul', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandomMul.push(rd.slice(0, nAR));
						for (var a = 0, b = 0, v = 0; v < nAR + b; v++) {
							var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp - 1][v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aRM[0]]) {
								var co = this.app.comp[aRM[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = aRM[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
                    activateObject: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						var i = this,
							s = this.checkRequireds(e),
							o = this.checkPoints(e),
							k = !0;
						if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
							var cnt = 0;
							for (var r = 0; r < t.objects.length; r++) {
								if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
									if (t.objects[r].isSelectableMultiple)
										for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
									else
										this.activateObject(t.objects[r], t);
									break
								}
								else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
							}
							if (cnt >= t.allowedChoices) k = !1;
						}
						if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices) && !this.activated.includes(eid) && e.textfieldIsOn && e.customTextfieldIsOn && !this.app.wordChangeComplete) {
							this.$refs.confirm.open("", e.wordPromptText, {noconfirm: !0, word: !0}, e.wordChangeSelect)
							.then(({result, wordText}) => {
								if (result) {
									e.wordChangeSelect = wordText;
								} else {
									e.wordChangeSelect = e.wordChangeDeselect;
								}
								i.$set(i.app, "wordChangeComplete", !0);
								i.activateObject(e, t);
								i.$set(i.app, "wordChangeComplete", !1);
							});
						} else {
							if (!(e.selectOnce && e.isActive) && !this.linkedObjects.includes(e.id)) {
								for (var g = 0; g < e.scores.length; g++)
									if ("undefined" !== typeof e.scores[g].isRandom && e.scores[g].isRandom && !e.scores[g].setValue) {
										e.scores[g].value = Math.floor(Math.random() * (parseInt(e.scores[g].maxValue) - parseInt(e.scores[g].minValue) + 1)) + parseInt(e.scores[g].minValue);
										e.scores[g].setValue = !0;
										for (var a = 0; a < this.app.pointTypes.length; a++) this.app.pointTypes[a].id == e.scores[g].id && this.app.pointTypes[a].belowZeroNotAllowed && this.app.pointTypes[a].startingSum - parseInt(e.scores[g].value) < 0 && (e.scores[g].setValue = !1);
									}
								var tmpScores = [];
								if (!this.exceptedObjects.length == 0 && !this.exceptedObjects.includes(eid)) this.exceptedObjects.push(eid);
								if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices)) {
									if (this.activated.includes(eid)) {
										if (this.checkPointsMD(e)) {
											for (var a = 0; a < e.scores.length; a++) {
												if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
													for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
											}
											var ee = 0, EE = 0;
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
													for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
														var rdV = e.activatedRandom[v].split("/ON#"),
															rdNV = rdV.length > 1 ? rdV[1] : 1;
														if ("undefined" !== typeof this.app.comp[rdV[0]]) {
															this.forceDeactivate(e, rdV[0], rdNV);
														}
													}
												} else if (!e.isActivateRandom) {
													for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
														var pv = p[v].split("/ON#"),
															pnV = pv.length > 1 ? pv[1] : 1;
														if ("undefined" !== typeof this.app.comp[pv[0]]) {
															this.forceDeactivate(e, pv[0], pnV);
														} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
															var coG = this.app.compG[pv[0]],
																coGE = this.app.groups[coG.groups].elements;
															for (var h = coGE.length - 1; h >= 0; h--) {
																if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																	this.forceDeactivate(e, coGE[h].id, pnV);
																}
															}
														}
													}
												}
											}
											for (var f = 0; f < this.activated.length; f++) {
												var af = this.activated[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[af[0]]) {
													var co = this.app.comp[af[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
													if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
														var nH = this.activated.indexOf(eid);
														this.activated.splice(nH, 1);
														t.currentChoices -= 1;
														var bR = this.checkRequireds(coO);
														this.activated.splice(nH, 0, eid);
														t.currentChoices += 1;
														if (!bR) {
															this.exceptedObjects.push(coO.id);
															if (coO.isMultipleUseVariable) {
																for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																	coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
																}
																if (coO.forcedActivated) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																}
															} else {
																if (coO.forcedActivated) coO.forcedActivated = !1;
																this.activateObject(coO, coR);
															}
															f--;
														}
													}
												}
											}
											if (e.multiplyPointtypeIsOnCheck) {
												e.multiplyPointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.dividePointtypeIsOnCheck) {
												e.dividePointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToDivide.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.isChangeVariables) {
												for (var m = 0; m < e.changedVariables.length; m++) {
													for (var n = 0; n < this.app.variables.length; n++) {
														if (e.changedVariables[m] == this.app.variables[n].id) {
															if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
															else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
															else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
														}
													}
												}
											}
											if (e.textfieldIsOn) {
												for (var m = 0; m < this.app.words.length; m++) {
													if (this.app.words[m].id == e.idOfTheTextfieldWord) {
														this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
														this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
													}
												}
											}
											if (e.addToAllowChoice)
												if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
													var co = this.app.compR[e.idOfAllowChoice],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
													var d = coR.currentChoices;
													if (d > coR.allowedChoices) {
														var u = d - coR.allowedChoices;
														for (var v = 0; v < coR.objects.length; v++) {
															if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
																if (coR.objects[v].isSelectableMultiple)
																	for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
																else
																	this.activateObject(coR.objects[v], coR);
																u--;
															}
														}
													}
												}
											if (e.discountOther) {
												if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
													if (e.isDisChoices) {
														if ("undefined" !== typeof e.discountChoices) {
															for (var a = 0; a < e.discountChoices.length; a++) {
																if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																	var co = this.app.comp[e.discountChoices[a]],
																		coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																		coO = coR.objects[co.objects];
																	for (var c = 0; c < coO.scores.length; c++) {
																		var coS = coO.scores[c];
																		if (!coS.isNotDiscountable) {
																			this.discountC(e, coS);
																		}
																	}
																}
															}
														}
													} else {
														if ("undefined" !== typeof e.discountGroups) {
															for (var a = 0; a < this.app.groups.length; a++) {
																if (e.discountGroups.includes(this.app.groups[a].id)) {
																	for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																		if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																			var co = this.app.comp[this.app.groups[a].elements[b].id],
																				coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																				coO = coR.objects[co.objects];
																			for (var c = 0; c < coO.scores.length; c++) {
																				var coS = coO.scores[c];
																				if (!coS.isNotDiscountable) {
																					this.discountC(e, coS);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
											this.updateScoresC(e, t, tmpScores, 0);
											if (e.isImageUpload) {
												this.$set(e, "image", e.defaultImage);
											}
											if (e.backpackBtnRequirement)
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.changePointBar) {
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barBackgroundColor;
													this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
													this.$set(e, "changedBarBgColor", a);
												}
												if (e.changeBarTextColorIsOn) {
													var a = this.app.styling.barTextColor;
													this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
													this.$set(e, "changedBarTextColor", a);
												}
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barIconColor;
													this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
													this.$set(e, "changedBarIconColor", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
											if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
												if ("undefined" !== typeof bgmPlayer.unMute) {
													this.$set(this.app, "isMute", !1);
													bgmPlayer.unMute();
												}
											}
											if (e.isContentHidden) {
												for (var a = 0; a < e.hiddenContentsRow.length; a++) {
													if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
														var co = this.app.compR[e.hiddenContentsRow[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														for (var b = 0; b < e.hiddenContentsType.length; b++) {
															if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
															else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
															else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
															else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
															else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
															else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
														}
													}
												}
											}
											this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1;
											e.isActive = !e.isActive, this.updateActivated();
										}
									} else {
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
														}
													}
												} else {
													if("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																for (var b = 0; b < this.app.groups[a].elements.length; b++)
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																				if (!coS.isNotDiscountable) {
																					this.discountS(e, coS);
																				}
																			}
																		}
																	}
															}
														}
													}
												} 
											}
										}
										for (var g = 0; g < e.scores.length; g++)
											if (this.checkRequireds(e.scores[g]) && !e.scores[g].isActive)
												for (var w = 0; w < this.app.pointTypes.length; w++) this.app.pointTypes[w].id == e.scores[g].id && (this.app.pointTypes[w].startingSum -= (e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)), e.scores[g].isActive = !0, tmpScores.push({id: e.scores[g].id, value: e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[w].id, this.app.pointTypes[w].startingSum), e.scores[g].isChangeDiscount && this.$set(e.scores[g], "isChangeDiscount", false));
										this.activated.push(eid), t.currentChoices += 1;
										var a, f, b, m, v, ee = 0;
										if (e.duplicateRow) {
											if ("undefined" !== typeof e.duplicateRowId && "undefined" !== typeof e.duplicateRowPlace) this.duplicateRow(e, t);
										}
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom) {
												this.forceRandomActivate(e);
											} else {
												for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
													var yv = y[v].split("/ON#"),
														yNV = yv.length > 1 ? yv[1] : 1;
													if ("undefined" !== typeof this.app.comp[yv[0]]) {
														this.forceActivate(e, yv[0], yNV);
													} else if ("undefined" !== typeof this.app.compG[yv[0]]) {
														var coG = this.app.compG[yv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var w = 0; w < coGE.length; w++) {
															if ("undefined" !== typeof this.app.comp[coGE[w].id]) {
																this.forceActivate(e, coGE[w].id, yNV);
															}
														}
													}
												}
											}
										}
										if (e.deactivateOtherChoice)
											for (var y = e.deactivateThisChoice.split(","), f = 0; f < y.length; f++) {
												var yf = y[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[yf[0]]) {
													var co = this.app.comp[yf[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
														if (!coO.forcedActivated) {
															if (coO.isSelectableMultiple) {
																var ee = yf[1];
																if (ee > 0) {
																	for (var n = 0; n < ee; n++) {
																		this.selectedOneLess(coO, coR);
																	}
																} else if (ee < 0) {
																	for (var pp = 0; pp < -1 * ee; pp++) {
																		this.selectedOneMore(coO, coR);
																	}
																}
															} else {
																if (coO.isActive) this.activateObject(coO, coR);
															}
														}
												} else if ("undefined" !== typeof this.app.compG[yf[0]]) {
													var co = this.app.compG[yf[0]],
														coG = this.app.groups[co.groups];
													for (var T = 0; T < coG.elements.length; T++) {
														if ("undefined" !== typeof this.app.comp[coG.elements[T].id]) {
															var coT = this.app.comp[coG.elements[T].id],
																coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																coTO = coTR.objects[coT.objects];
															if (!coTO.forcedActivated) {
																if (coTO.isSelectableMultiple) {
																	var ee = yf[1];
																	if (ee > 0) {
																		for (var n = 0; n < ee; n++) {
																			this.selectedOneLess(coTO, coTR);
																		}
																	} else if (ee < 0) {
																		for (var pp = 0; pp < -1 * ee; pp++) {
																			this.selectedOneMore(coTO, coTR);
																		}
																	}
																} else {
																	if (coTO.isActive) this.activateObject(coTO, coTR);
																}
															}
														}
													}
												}
											}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (!this.exceptedObjects.includes(coO.id)) {
													if (!this.checkRequireds(coO)) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOn) {
											e.multiplyPointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtMultiply) this.$set(e, "startingSumAtMultiply", []);
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++)
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														if (e.multiplyPointtypeIsId)
															for (var x = 0; x < this.app.pointTypes.length; x++) {
																if (this.app.pointTypes[x].id == e.multiplyWithThis) {
																	e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																	this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																}
															}
														else e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * e.multiplyWithThis, this.app.pointTypes[m].startingSum *= e.multiplyWithThis; this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
											}
											this.app.mdObjects.push(e);
										}
										if (e.dividePointtypeIsOn) {
											e.dividePointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtDivide) this.$set(e, "startingSumAtDivide", []);
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														e.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / e.divideWithThis;
														this.app.pointTypes[m].startingSum /= e.divideWithThis;
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.push(e);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1") this.app.variables[n].isTrue = !0;
														else if (e.changeType == "2") this.app.variables[n].isTrue = !1;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresS(e, t, tmpScores, 0);
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = e.wordChangeSelect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.isImageUpload) {
											this.$set(e, "defaultImage", e.image);
											this.currentComponent = "appImageUpload"
										}
										if (e.backpackBtnRequirement) {
											if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
										}
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.scrollToRow) {
											var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
												compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
											if (e.scrollToObject) {
												if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
													if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.comp[e.scrollObjectId];
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														if (!coR.isEditModeOn) {
															this.$nextTick(() => {
																if (coR) {
																	var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																	if (coO) {
																		if (isBackpack) {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																		} else {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																		}
																	}
																}
															});
														}
													}
												}
											} else {
												if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
													if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.compR[e.scrollRowId];
															coR = p[co.rows];
														this.$nextTick(() => {
															if (coR) {
																if (isBackpack) {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																} else {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																}
															}
														});
													}
												}
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
												this.app.bgmIsPlaying = !0;
												this.playBgm(e, e.bgmId, 0);
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.mute) {
												this.$set(this.app, "isMute", !0);
												bgmPlayer.mute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													if (!coR.textIsRemoved) this.$set(coR, "textIsRemoved", true);
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", true);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", true);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", true);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", true);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", true);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", true);
													}
												}
											}
										}
										if (e.isFadeTransition) {
											"undefined" === typeof e.fadeTransitionColor || "" === e.fadeTransitionColor ? this.$set(this.app, "fadeTransitionColor", "000000FF") : this.$set(this.app, "fadeTransitionColor", e.fadeTransitionColor);
											"undefined" === typeof e.fadeTransitionTime || "" === e.fadeTransitionTime ? this.$set(this.app, "fadeTransitionTime", 0.25) : this.$set(this.app, "fadeTransitionTime", (e.fadeTransitionTime / 1000));
											this.$set(this.app, "fadeTransitionIsOn", !0);
											this.$nextTick(() => {
												setTimeout(() => {
													this.$set(this.app, "fadeTransitionIsOn", !1);
												}, this.app.fadeTransitionTime * 1000);
											});
										}
										e.isActive = !e.isActive, this.updateActivated();
										if (e.cleanACtivatedOnSelect) this.cleanActivated();
									}
								} else if (this.activated.includes(eid)) {
									if (this.checkPointsMD(e)) {
										for (var a = 0; a < e.scores.length; a++)
											if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
												for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
												for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
													var rdV = e.activatedRandom[v].split("/ON#"),
														rdNV = rdV.length > 1 ? rdV[1] : 1;
													if ("undefined" !== typeof this.app.comp[rdV[0]]) {
														this.forceDeactivate(e, rdV[0], rdNV);
													}
												}
											} else if (!e.isActivateRandom) {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== typeof this.app.comp[pv[0]]) {
														this.forceDeactivate(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivate(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var af = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[af[0]]) {
												var co = this.app.comp[af[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
													var nH = this.activated.indexOf(eid);
													this.activated.splice(nH, 1);
													t.currentChoices -= 1;
													var bR = this.checkRequireds(coO);
													this.activated.splice(nH, 0, eid);
													t.currentChoices += 1;
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOnCheck) {
											e.multiplyPointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.dividePointtypeIsOnCheck) {
											e.dividePointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
														else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
												var d = coR.currentChoices;
												if (d > coR.allowedChoices) {
													var u = d - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) {
														if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
															if (coR.objects[v].isSelectableMultiple)
																for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
															else
																this.activateObject(coR.objects[v], coR);
															u--;
														}
													}
												}
											}
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			if (!coS.isNotDiscountable) {
																				this.discountC(e, coS);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										this.updateScoresC(e, t, tmpScores, 0);
										if (e.isImageUpload) {
											this.$set(e, "image", e.defaultImage);
										}
										if (e.backpackBtnRequirement)
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarIconColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												this.app.bgmIsPlaying = !1;
												this.playBgm(e, e.bgmId, 0)
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.unMute) {
												this.$set(this.app, "isMute", !1);
												bgmPlayer.unMute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
													}
												}
											}
										}
										this.activated.splice(this.activated.indexOf(eid), 1), e.isActive = !e.isActive, this.updateActivated(), t.currentChoices -= 1;
									}
								}
								if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
							}
							if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
						}
                    },
                    updateObject: function() {
                        this.$emit("objectWasChanged", this.object)
                    },
                    selectedOneMore: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
									var cnt = 0;
									for (var r = 0; r < t.objects.length; r++) {
										if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
											if (t.objects[r].isSelectableMultiple)
												for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
											else
												this.activateObject(t.objects[r], t);
											break
										}
										else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
									}
									if (cnt >= t.allowedChoices) 
										s = !1;
									else 
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								} else {
									e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesPluss > this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum++, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable));
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if ("undefined" === typeof this.exceptedObjects) this.$set(this, "exceptedObjects", []);
								if (!this.exceptedObjects.length == 0) this.exceptedObjects.push(e.id);
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable > 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																if (!coS.isNotDiscountable) {
																	this.discountS(e, coS);
																}
															}
														}
													}
												}
											}
										} else {
											if("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++)
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
													}
												}
											}
										} 
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp > 0) {
													if ("undefined" === typeof e.scores[i].isActiveMul) this.$set(e.scores[i], "isActiveMul", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMul[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable);
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMulMinus[tmpVariable] || e.scores[i].isActiveMulMinus[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.multipleUseVariable > e.numMultipleTimesMinus) {
										if (e.isActive == !1) {
											e.isActive = !0, t.currentChoices += 1, this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
											if (e.backpackBtnRequirement) {
												if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
											}
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.scrollToRow) {
												var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
													compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
												if (e.scrollToObject) {
													if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
														if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.comp[e.scrollObjectId];
																coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
															if (!coR.isEditModeOn) {
																this.$nextTick(() => {
																	if (coR) {
																		var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																		if (coO) {
																			if (isBackpack) {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																			} else {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																			}
																		}
																	}
																});
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
														if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.compR[e.scrollRowId];
																coR = p[co.rows];
															this.$nextTick(() => {
																if (coR) {
																	if (isBackpack) {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																	} else {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																	}
																}
															});
														}
													}
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
													this.app.bgmIsPlaying = !0;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										} else {
											if (e.multipleUseVariable == 0) {
												e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											} else {
												this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable - 1)), (e.id + "/ON#" + e.multipleUseVariable));
											}
										}
										if (e.multipleUseVariable > 0) {
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom) {
													this.forceRandomActivateMul(e);
												} else {
													for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
														var yv = y[v].split("/ON#"),
															yNV = yv.length > 1 ? yv[1] : 1;
														if ("undefined" !== typeof this.app.comp[yv[0]]) {
															this.forceActivate(e, yv[0], yNV)
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects],
													nR = this.activated.indexOf(eid);
												if (!this.exceptedObjects.includes(coO.id)) {
													var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
													if (fI !== -1) var aFI = this.activated[fI].split("/ON#");
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) + 1) : (this.activated.push(eid), t.currentChoices += 1);
													var bR = this.checkRequireds(coO);
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1);
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresMulS(e, t, tmpScores, 0);
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    selectedOneLess: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (e.numMultipleTimesMinus < e.multipleUseVariable) {
									if (e.multipleUseVariable == 0 && t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
										var cnt = 0;
										for (var r = 0; r < t.objects.length; r++) {
											if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
												if (t.objects[r].isSelectableMultiple)
													for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
												else
													this.activateObject(t.objects[r], t);
												break
											}
											else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
										}
										if (cnt >= t.allowedChoices) 
											s = !1;
										else 
											e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									} else {
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									}
								} else {
									s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesMinus < this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum--, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum;
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable) + 1);
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable >= 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (!coS.isNotDiscountable) {
																this.discountC(e, coS);
															}
														}
													}
												}
											}
										} else {
											if ("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++) {
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp < 0) {
													if ("undefined" === typeof e.scores[i].isActiveMulMinus) this.$set(e.scores[i], "isActiveMulMinus", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMulMinus[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMul[tmpVariable] || e.scores[i].isActiveMul[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.isMultipleUseVariable >= 0) {
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandomMul && e.activatedRandomMul.length > 0) {
												for (var v = e.activatedRandomMul[e.selectedThisManyTimesProp].length - 1; v >= 0; v--) {
													var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp][v].split("/ON#"),
														anRM = aRM.length > 1 ? aRM[1] : 1;
													if ("undefined" !== typeof this.app.comp[aRM[0]]) {
														this.forceRandomDeactivateMul(e, aRM[0], anRM);
													}
												}
												e.activatedRandomMul.splice(e.selectedThisManyTimesProp, 1);
											} else {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== this.app.comp[pv[0]]) {
														this.forceDeactivateMul(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivateMul(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
									}
									for (var f = 0; f < this.activated.length; f++) {
										var aF = this.activated[f].split("/ON#");
										if ("undefined" !== typeof this.app.comp[aF[0]]) {
											var co = this.app.comp[aF[0]],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											if (coO.id !== e.id && !this.exceptedObjects.includes(coO.id)) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI !== -1) {
													var	aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													var bR = this.checkRequireds(coO);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, aFI[0] + "/ON#" + aFI[1]), t.currentChoices += 1);
													if (!bR) {
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
									}
									if (e.addToAllowChoice)
										if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
											var co = this.app.compR[e.idOfAllowChoice],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
											coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
											var d = coR.currentChoices;
											if (d > coR.allowedChoices) {
												var u = d - coR.allowedChoices;
												for (var v = 0; v < coR.objects.length; v++) {
													if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
														if (coR.objects[v].isSelectableMultiple)
															for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
														else
															this.activateObject(coR.objects[v], coR);
														u--;
													}
												}
											}
										}
									this.updateScoresMulC(e, t, tmpScores, 0);
									if (e.isActive == !0) {
										if (e.multipleUseVariable == 0 && ("undefined" === typeof e.forcedActivated || e.forcedActivated == !1)) {
											e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											if (e.backpackBtnRequirement) this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										}
										else this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), (e.id + "/ON#" + e.multipleUseVariable));
									} else {
										if (e.multipleUseVariable == -1) {
											e.isActive = !0, t.currentChoices += 1;
											this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
										}
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    cloneObject: function() {
						var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateObjectId() {
							var s = "";
							for (var o = 0; o < th.app.objectIdLength; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.comp[s]) {
								return generateObjectId()
							} else {
								return s
							}
						}
                        this.row.objects.splice(this.row.objects.indexOf(this.object) + 1, 0, JSON.parse(JSON.stringify(this.object)));
                        e = generateObjectId();
                        this.row.objects[this.row.objects.indexOf(this.object) + 1].id = e;
						this.app.comp[e] = {rows: this.app.rows.indexOf(this.row), objects: this.row.objects.indexOf(this.object) + 1, type: "app"};
						for (var b = this.row.objects.indexOf(this.object) + 2; b < this.row.objects.length; b++) {
							this.app.comp[this.row.objects[b].id].objects = b;
						}
						for (var c = 0; c < this.object.groups.length; c++) {
							if ("undefined" !== typeof this.app.compG[this.object.groups[c].id]) {
								var co = this.app.compG[this.object.groups[c].id],
									coG = this.app.groups[co.groups];
								coG.elements.push({id: e});
							}
						}
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var d = 0; d < this.object.objectDesignGroups.length; d++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[d].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[d].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									coD.elements.push({id: e});
								}
							}
						}
                    },
                    updateActivated: function() {
                        this.$emit("activatedWasChanged", this.activated)
                    },
                    addObjectToGroup: function() {
                        this.object.groups.push({
                            id: ""
                        })
                    },
                    cleanActivated: function() {
                        this.$store.commit({
                            type: "cleanActivated"
                        })
                    },
					duplicateRow: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var thisRow = rowType == "app" ? this.app.rows : this.backpack;
						var c, i, j, s, fr, fo, y, z, zx, zy, zz, nR = 0, nF = 0;
						for (var b = 0; b < thisRow.length; b++) {
							if (thisRow[b].id.split("/D#")[0] == e.duplicateRowId.split("/D#")[0]) {
								nR++;
							}
							if (thisRow[b].id == e.duplicateRowPlace) {
								nF = b + 1;
							}
						}
						for (var f = 0; f < thisRow.length; f++) {
							if (thisRow[f].id == e.duplicateRowId) {
								thisRow.splice(nF, 0, JSON.parse(JSON.stringify(thisRow[f])));
								fr = thisRow[nF], fr.currentChoices = 0;
								y = fr.id.split("/D#"), fr.id = y[0] + "/D#" + nR;
								for (fr.allowedChoicesChange > 0 && (fr.allowedChoices -= fr.allowedChoicesChange), s = 0; s < fr.objects.length; s++) {
									fo = fr.objects[s], z = fo.id.split("/D#"), fo.id = z[0] + "/D#" + nR;
									if (fo.multipleUseVariable) fo.multipleUseVariable = 0, fo.selectedThisManyTimesProp = 0;
									if (fo.isActive) fo.isActive = !1;
									fo.forcedActivated = !1;
									if (!e.dRowAddSufReq) {
										if ("undefined" !== typeof fo.requireds) {
											for (i = 0; i < fo.requireds.length; i++) {
												if ("id" == fo.requireds[i].type) {
													y = fo.requireds[i].reqId.split("/ON#");
													if (y.length > 1)
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
													else
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
												}
												else if ("or" == fo.requireds[i].type)
													for (c = 0; c < fo.requireds[i].orRequired.length; c++) {
														y = fo.requireds[i].orRequired[c].req.split("/ON#");
														if (y.length > 1)
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
														else
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
													}
												if ("undefined" !== typeof fo.requireds[i].requireds)
													for (j = 0; j < fo.requireds[i].requireds.length; j++) {
														if ("id" == fo.requireds[i].requireds[j].type) {
															y = fo.requireds[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.requireds[i].requireds[j].type)
															for (c = 0; c < fo.requireds[i].requireds[j].orRequired.length; c++) {
																y = fo.requireds[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
											}
										}
										if ("undefined" !== typeof fo.scores)
											for (i = 0; i < fo.scores.length; i++)
												if ("undefined" !== fo.scores[i].requireds)
													for (j = 0; j < fo.scores[i].requireds.length; j++) {
														if ("id" == fo.scores[i].requireds[j].type) {
															y = fo.scores[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.scores[i].requireds[j].type)
															for (c = 0; c < fo.scores[i].requireds[j].orRequired.length; c++) {
																y = fo.scores[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
																
													}
										if ("undefined" !== typeof fo.addons)
											for (i = 0; i < fo.addons.length; i++)
												if ("undefined" !== fo.addons[i].requireds)
													for (j = 0; j < fo.addons[i].requireds.length; j++) {
														if ("id" == fo.addons[i].requireds[j].type) {
															y = fo.addons[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.addons[i].requireds[j].type)
															for (c = 0; c < fo.addons[i].requireds[j].orRequired.length; c++) {
																y = fo.addons[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
									}
									if (!e.dRowAddSufFunc) {
										if (fo.activateOtherChoice) {
											zz = "";
											for (y = fo.activateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.activateThisChoice = zz.slice(0, -1);
										}
										if (fo.deactivateOtherChoice) {
											zz = "";
											for (y = fo.deactivateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.deactivateThisChoice = zz.slice(0, -1);
										}
										if (fo.duplicateRow) {
											y = fo.duplicateRowId.split("/D#"), fo.duplicateRowId = y[0] + "/D#" + nR;
											y = fo.duplicateRowPlace.split("/D#"), fo.duplicateRowPlace = y[0] + "/D#" + nR;
										}
									}
								}
								break
							}
						}
						for (var m = nF; m < thisRow.length; m++) {
							this.app.compR[thisRow[m].id] = {rows: m, type: rowType};
							for (var n = 0; n < thisRow[m].objects.length; n++) {
								var d = thisRow[m].objects[n].id;
								this.app.comp[thisRow[m].objects[n].id] = {rows: m, objects: n, type: rowType};
							}
						}
					}
                }
            },
            mt = vt,
            ft = (o("2820"), o("cd55")),
            wt = o("49e2"),
            yt = o("c865"),
            xt = o("0393"),
            Tt = o("71d9"),
            jt = Object(w["a"])(mt, p, u, !1, null, "b79ff9c2", null),
            It = jt.exports;
        x()(jt, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCheckbox: ae["a"],
            VCol: I["a"],
			VDivider: li["a"],
            VExpansionPanel: ft["a"],
            VExpansionPanelContent: wt["a"],
            VExpansionPanelHeader: yt["a"],
            VExpansionPanels: xt["a"],
            VIcon: J["a"],
            VImg: X["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSnackbar: Ct["a"],
            VSpacer: O["a"],
            VTextField: R["a"],
            VTextarea: Z["a"],
            VToolbar: Tt["a"],
            VTooltip: Q["a"]
        });
        var kt = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Row Settings")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Sort The Choices In The Row "), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.sort,
                        "item-text": "text",
                        "item-value": "value",
                        filled: "",
                        label: "Sort By..."
                    },
                    model: {
                        value: e.sortType,
                        callback: function(t) {
                            e.sortType = t
                        },
                        expression: "sortType"
                    }
                }), o("v-col", {
                    staticClass: "px-0"
                }, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.sortRowObjects()
                        }
                    }
                }, [e._v("Sort")])], 1)], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Copy Choices Into Another Row "), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
                        items: e.rows,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Copy this row's objects into..."
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])],
					},
                    model: {
                        value: e.newRow,
                        callback: function(t) {
                            e.newRow = t
                        },
                        expression: "newRow"
                    }
                }), o("v-row", {
                    staticClass: "pa-0"
                }, [o("v-col", {
                    staticClass: e.window.width > 340 ? "col-4" : "col-12"
                }, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.mergeRow()
                        }
                    }
                }, [e._v("Copy")])], 1), o("v-col", {
                    staticClass: e.window.width > 340 ? "col-8" : "col-12"
                }, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.mergeAndDeleteRow()
                        }
                    }
                }, [e._v("Copy and delete")])], 1)], 1)], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Group Membership "), o("br"), e._v(" - This is for displaying in the Result Row. "), o("br"), e._v(" - For group-related functions, use Manage Groups feature. "), o("v-autocomplete", {
                    attrs: {
                        "hide-details": "",
                        "deletable-chips": "",
                        chips: "",
                        items: e.groups,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "All choices In Row Are Members Of This Group In Result Row",
                        placeholder: "All Rows and Objects"
                    },
					scopedSlots: {
						item: ({item, attrs}) => [
							o("div", {
								staticClass: "v-list-item__content"
							}, [o("div", {
								staticClass: "v-list-item__title"
							}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.name)])])],
					},
                    model: {
                        value: e.row.resultGroupId,
                        callback: function(t) {
                            e.$set(e.row, "resultGroupId", t)
                        },
                        expression: "row.resultGroupId"
                    }
                })], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e.styling.objectImgObjectFillIsOn || e.row.isPrivateStyling && e.row.styling.objectImgObjectFillIsOn ? o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Height of the image container",
                        filled: "",
                        hint: "Leave empty for no Object-Fit",
                        "persistent-hint": ""
                    },
                    model: {
                        value: e.row.objectImgObjectFillHeight,
                        callback: function(t) {
                            e.$set(e.row, "objectImgObjectFillHeight", t)
                        },
                        expression: "row.objectImgObjectFillHeight"
                    }
                }) : e._e()], 1)], 1)], 1), o("v-container", [o("v-col", [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Use private styling?"
                    },
                    model: {
                        value: e.row.isPrivateStyling,
                        callback: function(t) {
							e.$set(e.row, "isPrivateStyling", t);
							e.$set(e.row, "styling", {});
							e.$set(e.row, "privateFilterIsOn", !1);
							e.$set(e.row, "privateTextIsOn", !1);
							e.$set(e.row, "privateObjectImageIsOn", !1);
							e.$set(e.row, "privateObjectIsOn", !1);
							e.$set(e.row, "privateRowImageIsOn", !1);
							e.$set(e.row, "privateRowIsOn", !1);
							e.$set(e.row, "privateAddonImageIsOn", !1);
							e.$set(e.row, "privateAddonIsOn", !1);
							e.$set(e.row, "privateBackgroundIsOn", !1);
                        },
                        expression: "row.isPrivateStyling"
                    }
                })], 1), e.row.isPrivateStyling ? o("v-row", [o("v-col", {
					attrs: {
                        cols: "12"
                    }
				}, [o("v-file-input", {
					attrs: {
						"hide-details": "",
						label: "Import Design",
						multiple: "",
						placeholder: "Select your project",
						"prepend-icon": "mdi-paperclip",
						outlined: "",
						"show-size": 1e3
					},
					on: {
						change: e.importFromProject
					},
					scopedSlots: e._u([{
						key: "selection",
						fn: function(t) {
							var i = t.index,
								s = t.text;
							return [i < 2 ? o("v-chip", {
								attrs: {
									dark: "",
									label: "",
									small: ""
								}
							}, [e._v(e._s(s))]) : e._e()]
						}
					}]),
					model: {
						value: e.files,
						callback: function(t) {
							e.files = t
						},
						expression: "files"
					}
				})], 1), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    attrs: {
										cols: "12"
									}
                                }, [o("v-btn", e._g({
                                    staticStyle: {
                                        color: e.$vuetify.theme.isDark ? "white" : "black"
                                    },
                                    on: {
                                        click: function(o) {
                                            return e.exportDesign()
                                        }
                                    }
                                }, s), [e._v(e._s("Export Design"))])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Here you can export your design.")
                        }
                    })]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appFilter"
                                    }
                                }
                            }, i), [e._v("Manage Filter Design")])], 1)]
                        }
                    }], null, !1, 3225312638)
                }, [o("span", [e._v(" Here you can change the filters for choices that are selected "), o("br"), e._v("and the one's you dont have the requirements for. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appText"
                                    }
                                }
                            }, i), [e._v("Manage Text Design")])], 1)]
                        }
                    }], null, !1, 268359582)
                }, [o("span", [e._v(" Here you can change the size, font and "), o("br"), e._v("color of the text on titles and text. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectDesign"
                                    }
                                }
                            }, i), [e._v("Manage Choice Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on choices. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectImage"
                                    }
                                }
                            }, i), [e._v("Manage Choices Image Design")])], 1)]
                        }
                    }], null, !1, 1468014515)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on objects. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appRowDesign"
                                    }
                                }
                            }, i), [e._v("Manage Row Design")])], 1)]
                        }
                    }], null, !1, 2123780716)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on rows. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appRowImage"
                                    }
                                }
                            }, i), [e._v("Manage Row Image Design")])], 1)]
                        }
                    }], null, !1, 3359790558)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on rows. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonDesign"
                                    }
                                }
                            }, i), [e._v("Manage Addon Design")])], 1)]
                        }
                    }], null, !1, 2123780716)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonImage"
                                    }
                                }
                            }, i), [e._v("Manage Addon Image Design")])], 1)]
                        }
                    }], null, !1, 3359790558)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appMultiChoice"
                                    }
                                }
                            }, i), [e._v("Manage Multi Choice Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the size and font of "), o("br"), e._v(" the choices that can be selected multiple times. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appBackground"
                                    }
                                }
                            }, i), [e._v("Manage Background Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the color and place images in "), o("br"), e._v("the background of rows, choices and the whole project. ")])])], 1) : e._e()], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        from: "private",
                        row: e.row,
                        currentComponent: e.currentComponent
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Bt = [],
            St = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
                        sortType: 1,
                        newRow: "",
                        sort: [{
                            text: "Object Width - Biggest to smallest.",
                            value: "1"
                        }, {
                            text: "Object Width - Smallest to Biggest.",
                            value: "2"
                        }, {
                            text: "Text Length - Longest to Shortest.",
                            value: "3"
                        }, {
                            text: "Text Length - Shortest to Longest.",
                            value: "4"
                        }],
                        options: [{
                            text: "1",
                            value: "w-100"
                        }, {
                            text: "2",
                            value: "w-50"
                        }, {
                            text: "3",
                            value: "w-33"
                        }, {
                            text: "4",
                            value: "w-25"
                        }, {
                            text: "5",
                            value: "w-20"
                        }, {
                            text: "6",
                            value: "w-16"
                        }, {
                            text: "7",
                            value: "w-14"
                        }, {
                            text: "8",
                            value: "w-12"
                        }, {
                            text: "9",
                            value: "w-11"
                        }, {
                            text: "10",
                            value: "w-10"
                        }, {
                            text: "11",
                            value: "w-9"
                        }, {
                            text: "12",
                            value: "w-8"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                components: {
                    appFilter: Te,
                    appText: Oe,
                    appObjectImage: $e,
                    appBackground: Ue,
                    appObjectDesign: Qe,
                    appRowDesign: rt,
                    appPointBar: pt,
                    appRowImage: Le,
					appAddonImage: a$e,
					appAddonDesign: aQe,
					appMultiChoice: _o
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    groups: function() {
                        return this.$store.state.app.groups
                    },
					app: function() {
                        return this.$store.state.app
                    },
					filterStyling: function() {
						return this.$store.state.filterStyling
					},
					textStyling: function() {
						return this.$store.state.textStyling
					},
					objectImageStyling: function() {
						return this.$store.state.objectImageStyling
					},
					rowImageStyling: function() {
						return this.$store.state.rowImageStyling
					},
					backgroundStyling: function() {
						return this.$store.state.backgroundStyling
					},
					objectStyling: function() {
						return this.$store.state.objectStyling
					},
					rowStyling: function() {
						return this.$store.state.rowStyling
					},
					addonImageStyling: function() {
						return this.$store.state.addonImageStyling
					},
					addonStyling: function() {
						return this.$store.state.addonStyling
					},
					multiChoiceStyling: function() {
						return this.$store.state.multiChoiceStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    mergeRow: function() {
						var i = "",
							s = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateObjectId() {
							var m = "";
							for (var f = 0; f < th.app.objectIdLength; f++) {
								m += s.charAt(Math.floor(Math.random() * s.length));
							}
							if ("undefined" !== typeof th.app.comp[m]) {
								return generateObjectId()
							} else {
								return m
							}
						}
                        if ("undefined" !== this.app.compR[this.newRow]) {
							var co = this.app.compR[this.newRow],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
							for (var t = this.row.objects.length, o = 0; o < t; o++) {
								coR.objects.push(JSON.parse(JSON.stringify(this.row.objects[o])));
								i = generateObjectId();
								coR.objects[coR.objects.length - 1].id = i;
								this.app.comp[i] = {rows: co.rows, objects: coR.objects.length - 1, type: co.type};
								for (var c = 0; c < coR.objects[coR.objects.length - 1].groups.length; c++) {
									if ("undefined" !== typeof this.app.compG[coR.objects[coR.objects.length - 1].groups[c].id]) {
										var co = this.app.compG[coR.objects[coR.objects.length - 1].groups[c].id],
											coG = this.app.groups[co.groups];
										coG.elements.push({id: e});
									}
								}
								if ("undefined" !== typeof coR.objects[coR.objects.length - 1].objectDesignGroups) {
									for (var d = 0; d < coR.objects[coR.objects.length - 1].objectDesignGroups.length; d++) {
										if ("undefined" !== typeof this.app.compODG[coR.objects[coR.objects.length - 1].objectDesignGroups[d].id]) {
											var co = this.app.compODG[coR.objects[coR.objects.length - 1].objectDesignGroups[d].id],
												coD = this.app.groups[co.designGroups];
											coD.elements.push({id: e});
										}
									}
								}
							}
						}
                    },
                    mergeAndDeleteRow: function() {
						var a = this.app.rows.indexOf(this.row);
						if (this.row.id != this.newRow) {
							if ("undefined" !== this.app.compR[this.newRow]) {
								var co = this.app.compR[this.newRow],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.backpack[co.rows];
								for (var t = 0; t < this.row.objects.length; t++) {
									coR.objects.push(this.row.objects[t]);
									this.app.comp[this.row.objects[t].id] = {rows: co.rows, objects: coR.objects.length - 1, type: co.type};
								}
								this.rows.splice(this.app.rows.indexOf(this.row), 1);
								for (var f = a; f < this.app.rows.length; f++) {
									this.app.compR[this.app.rows[f].id].rows = f;
									for (var b = 0; b < this.app.rows[f].objects.length; b++) {
										this.app.comp[this.app.rows[f].objects[b].id].rows = f;
									}
								}
								this.cleanCurrentComponent();
							}
						}
                    },
                    sortRowObjects: function() {
                        var e = parseInt(this.row.objectWidth.replace(/\D/g, "")),
							th = this;
						if ("1" == this.sortType) {
							this.row.objects.sort((function(t, o) {
								var i, s;
								return s = "" != o.objectWidth ? parseInt(o.objectWidth.replace(/\D/g, "")) : e, i = "" != t.objectWidth ? parseInt(t.objectWidth.replace(/\D/g, "")) : e, i > s ? -1 : i < s ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						} else if ("2" == this.sortType) {
							this.row.objects.sort((function(t, o) {
								var i, s;
								return s = "" != o.objectWidth ? parseInt(o.objectWidth.replace(/\D/g, "")) : e, i = "" != t.objectWidth ? parseInt(t.objectWidth.replace(/\D/g, "")) : e, i < s ? -1 : i > s ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						} else if ("3" == this.sortType) {
							this.row.objects.sort((function(e, t) {
								var o = e.text.length,
									i = t.text.length;
								return o > i ? -1 : o < i ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						} else if ("4" == this.sortType) {
							this.row.objects.sort((function(e, t) {
								var o = e.text.length,
									i = t.text.length;
								return o < i ? -1 : o > i ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						}
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    rowWasChanged: function() {
                        this.$emit("rowWasChanged", this.row)
                    },
					importFromProject: function() {
                        var e = this;
                        var t = new FileReader;
                        t.onload = function() {
							o = JSON.parse(t.result);
							Object.keys(e.filterStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateFilterIsOn) e.$set(e.row, "privateFilterIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});							
							Object.keys(e.textStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateTextIsOn) e.$set(e.row, "privateTextIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectImageIsOn) e.$set(e.row, "privateObjectImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.rowImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateRowImageIsOn) e.$set(e.row, "privateRowImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.backgroundStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateBackgroundIsOn) e.$set(e.row, "privateBackgroundIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectIsOn) e.$set(e.row, "privateObjectIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.rowStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateRowIsOn) e.$set(e.row, "privateRowIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonImageIsOn) e.$set(e.row, "privateAddonImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonIsOn) e.$set(e.row, "privateAddonIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.multiChoiceStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateMultiChoiceIsOn) e.$set(e.row, "privateMultiChoiceIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
                        }, t.readAsText(this.files[0]);
                    },
					exportDesign: function() {
						var e = JSON.parse(JSON.stringify(this.row.styling)),
							t = {styling: e},
							o = new Blob([JSON.stringify(t)], {
                                type: "text/plain"
                            }),
                            i = document.createEvent("MouseEvents"),
                            s = document.createElement("a");
                        s.download = "row_design.json", s.href = window.URL.createObjectURL(o), s.dataset.downloadurl = ["text/json", s.download, s.href].join(":"), i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(i)
					}
                }
            },
            Ot = St,
            Rt = Object(w["a"])(Ot, kt, Bt, !1, null, null, null),
            Ft = Rt.exports;
        x()(Rt, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VFileInput: vo["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"],
            VTooltip: Q["a"]
        });
		var dkt = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Row Design Settings")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					attrs: {
                        cols: "12"
                    }
				}, [o("v-file-input", {
					attrs: {
						"hide-details": "",
						label: "Import Design",
						multiple: "",
						placeholder: "Select your project",
						"prepend-icon": "mdi-paperclip",
						outlined: "",
						"show-size": 1e3
					},
					on: {
						change: e.importFromProject
					},
					scopedSlots: e._u([{
						key: "selection",
						fn: function(t) {
							var i = t.index,
								s = t.text;
							return [i < 2 ? o("v-chip", {
								attrs: {
									dark: "",
									label: "",
									small: ""
								}
							}, [e._v(e._s(s))]) : e._e()]
						}
					}]),
					model: {
						value: e.files,
						callback: function(t) {
							e.files = t
						},
						expression: "files"
					}
				})], 1), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    attrs: {
										cols: "12"
									}
                                }, [o("v-btn", e._g({
                                    staticStyle: {
                                        color: e.$vuetify.theme.isDark ? "white" : "black"
                                    },
                                    on: {
                                        click: function(o) {
                                            return e.exportDesign()
                                        }
                                    }
                                }, s), [e._v(e._s("Export Design"))])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Here you can export your design.")
                        }
                    })]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appFilter"
                                    }
                                }
                            }, i), [e._v("Manage Filter Design")])], 1)]
                        }
                    }], null, !1, 3225312638)
                }, [o("span", [e._v(" Here you can change the filters for choices that are selected "), o("br"), e._v("and the one's you dont have the requirements for. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appText"
                                    }
                                }
                            }, i), [e._v("Manage Text Design")])], 1)]
                        }
                    }], null, !1, 268359582)
                }, [o("span", [e._v(" Here you can change the size, font and "), o("br"), e._v("color of the text on titles and text. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectDesign"
                                    }
                                }
                            }, i), [e._v("Manage Choice Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on choices. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectImage"
                                    }
                                }
                            }, i), [e._v("Manage Choices Image Design")])], 1)]
                        }
                    }], null, !1, 1468014515)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on objects. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appRowDesign"
                                    }
                                }
                            }, i), [e._v("Manage Row Design")])], 1)]
                        }
                    }], null, !1, 2123780716)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on rows. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appRowImage"
                                    }
                                }
                            }, i), [e._v("Manage Row Image Design")])], 1)]
                        }
                    }], null, !1, 3359790558)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on rows. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonDesign"
                                    }
                                }
                            }, i), [e._v("Manage Addon Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonImage"
                                    }
                                }
                            }, i), [e._v("Manage Addon Image Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appMultiChoice"
                                    }
                                }
                            }, i), [e._v("Manage Multi Choice Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the size and font of "), o("br"), e._v(" the choices that can be selected multiple times. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appBackground"
                                    }
                                }
                            }, i), [e._v("Manage Background Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the color and place images in "), o("br"), e._v("the background of rows, choices and the whole project. ")])])], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        from: "private",
                        row: e.row,
                        currentComponent: e.currentComponent
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            dBt = [],
            dSt = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                components: {
                    appFilter: Te,
                    appText: Oe,
                    appObjectImage: $e,
                    appBackground: Ue,
                    appObjectDesign: Qe,
                    appRowDesign: rt,
                    appPointBar: pt,
                    appRowImage: Le,
					appAddonImage: a$e,
					appAddonDesign: aQe,
					appMultiChoice: _o
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    groups: function() {
                        return this.$store.state.app.groups
                    },
					app: function() {
                        return this.$store.state.app
                    },
					filterStyling: function() {
						return this.$store.state.filterStyling
					},
					textStyling: function() {
						return this.$store.state.textStyling
					},
					objectImageStyling: function() {
						return this.$store.state.objectImageStyling
					},
					rowImageStyling: function() {
						return this.$store.state.rowImageStyling
					},
					backgroundStyling: function() {
						return this.$store.state.backgroundStyling
					},
					objectStyling: function() {
						return this.$store.state.objectStyling
					},
					rowStyling: function() {
						return this.$store.state.rowStyling
					},
					addonStyling: function() {
						return this.$store.state.addonStyling
					},
					addonImageStyling: function() {
						return this.$store.state.addonImageStyling
					},
					multiChoiceStyling: function() {
						return this.$store.state.multiChoiceStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    rowWasChanged: function() {
                        this.$emit("rowWasChanged", this.row)
                    },
					importFromProject: function() {
                        var e = this;
                        var t = new FileReader;
                        t.onload = function() {
							o = JSON.parse(t.result);
							Object.keys(e.filterStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateFilterIsOn) e.$set(e.row, "privateFilterIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});							
							Object.keys(e.textStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateTextIsOn) e.$set(e.row, "privateTextIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectImageIsOn) e.$set(e.row, "privateObjectImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.rowImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateRowImageIsOn) e.$set(e.row, "privateRowImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.backgroundStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateBackgroundIsOn) e.$set(e.row, "privateBackgroundIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectIsOn) e.$set(e.row, "privateObjectIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.rowStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateRowIsOn) e.$set(e.row, "privateRowIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonImageIsOn) e.$set(e.row, "privateAddonImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonIsOn) e.$set(e.row, "privateAddonIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.multiChoiceStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateMultiChoiceIsOn) e.$set(e.row, "privateMultiChoiceIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
                        }, t.readAsText(this.files[0]);
                    },
					exportDesign: function() {
						var e = JSON.parse(JSON.stringify(this.row.styling)),
							t = {styling: e},
							o = new Blob([JSON.stringify(t)], {
                                type: "text/plain"
                            }),
                            i = document.createEvent("MouseEvents"),
                            s = document.createElement("a");
                        s.download = "row_design.json", s.href = window.URL.createObjectURL(o), s.dataset.downloadurl = ["text/json", s.download, s.href].join(":"), i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(i)
					}
                }
            },
            dOt = dSt,
            dRt = Object(w["a"])(dOt, dkt, dBt, !1, null, null, null),
            dFt = dRt.exports;
        x()(dRt, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VFileInput: vo["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"],
            VTooltip: Q["a"]
        });
		var okt = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Choice Design Settings")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					attrs: {
                        cols: "12"
                    }
				}, [o("v-file-input", {
					attrs: {
						"hide-details": "",
						label: "Import Design",
						multiple: "",
						placeholder: "Select your project",
						"prepend-icon": "mdi-paperclip",
						outlined: "",
						"show-size": 1e3
					},
					on: {
						change: e.importFromProject
					},
					scopedSlots: e._u([{
						key: "selection",
						fn: function(t) {
							var i = t.index,
								s = t.text;
							return [i < 2 ? o("v-chip", {
								attrs: {
									dark: "",
									label: "",
									small: ""
								}
							}, [e._v(e._s(s))]) : e._e()]
						}
					}]),
					model: {
						value: e.files,
						callback: function(t) {
							e.files = t
						},
						expression: "files"
					}
				})], 1), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    attrs: {
										cols: "12"
									}
                                }, [o("v-btn", e._g({
                                    staticStyle: {
                                        color: e.$vuetify.theme.isDark ? "white" : "black"
                                    },
                                    on: {
                                        click: function(o) {
                                            return e.exportDesign()
                                        }
                                    }
                                }, s), [e._v(e._s("Export Design"))])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Here you can export your design.")
                        }
                    })]), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appFilter"
                                    }
                                }
                            }, i), [e._v("Manage Filter Design")])], 1)]
                        }
                    }], null, !1, 3225312638)
                }, [o("span", [e._v(" Here you can change the filters for choices that are selected "), o("br"), e._v("and the one's you dont have the requirements for. ")])]), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appText"
                                    }
                                }
                            }, i), [e._v("Manage Text Design")])], 1)]
                        }
                    }], null, !1, 268359582)
                }, [o("span", [e._v(" Here you can change the size, font and "), o("br"), e._v("color of the text on titles and text. ")])]), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectDesign"
                                    }
                                }
                            }, i), [e._v("Manage Choice Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on choices. ")])]), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appObjectImage"
                                    }
                                }
                            }, i), [e._v("Manage Choices Image Design")])], 1)]
                        }
                    }], null, !1, 1468014515)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on objects. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonDesign"
                                    }
                                }
                            }, i), [e._v("Manage Addon Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin, "), o("br"), e._v("padding, borders, and drop-shadow on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appAddonImage"
                                    }
                                }
                            }, i), [e._v("Manage Addon Image Design")])], 1)]
                        }
                    }], null, !1, 2942481490)
                }, [o("span", [e._v(" Here you can change the margin and padding "), o("br"), e._v("of images on addons. ")])]), o("v-tooltip", {
                    attrs: {
                        right: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appMultiChoice"
                                    }
                                }
                            }, i), [e._v("Manage Multi Choice Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the size and font of "), o("br"), e._v(" the choices that can be selected multiple times. ")])]), o("v-tooltip", {
                    attrs: {
                        bottom: "",
                        "open-delay": "300"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [o("v-col", {
								attrs: {
									cols: e.window.width > 500 ? "6" : "12"
								}
							}, [o("v-btn", e._g({
                                staticStyle: {
                                    color: e.$vuetify.theme.isDark ? "white" : "black"
                                },
                                on: {
                                    click: function(t) {
                                        e.currentComponent = "appBackground"
                                    }
                                }
                            }, i), [e._v("Manage Background Design")])], 1)]
                        }
                    }], null, !1, 187463358)
                }, [o("span", [e._v(" Here you can change the color and place images in "), o("br"), e._v("the background of rows, choices and the whole project. ")])])], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        from: "private",
                        row: e.row,
                        currentComponent: e.currentComponent
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            oBt = [],
            oSt = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                components: {
                    appFilter: Te,
                    appText: Oe,
                    appObjectImage: $e,
                    appBackground: Ue,
                    appObjectDesign: Qe,
                    appRowDesign: rt,
                    appPointBar: pt,
                    appRowImage: Le,
					appAddonImage: a$e,
					appAddonDesign: aQe,
					appMultiChoice: _o
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    groups: function() {
                        return this.$store.state.app.groups
                    },
					app: function() {
                        return this.$store.state.app
                    },					
					filterStyling: function() {
						return this.$store.state.filterStyling
					},
					textStyling: function() {
						return this.$store.state.textStyling
					},
					objectImageStyling: function() {
						return this.$store.state.objectImageStyling
					},
					backgroundStyling: function() {
						return this.$store.state.backgroundStyling
					},
					objectStyling: function() {
						return this.$store.state.objectStyling
					},
					addonStyling: function() {
						return this.$store.state.addonStyling
					},
					addonImageStyling: function() {
						return this.$store.state.addonImageStyling
					},
					multiChoiceStyling: function() {
						return this.$store.state.multiChoiceStyling
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    rowWasChanged: function() {
                        this.$emit("rowWasChanged", this.row)
                    },
					importFromProject: function() {
                        var e = this;
                        var t = new FileReader;
                        t.onload = function() {
							o = JSON.parse(t.result);
							Object.keys(e.filterStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateFilterIsOn) e.$set(e.row, "privateFilterIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});							
							Object.keys(e.textStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateTextIsOn) e.$set(e.row, "privateTextIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectImageIsOn) e.$set(e.row, "privateObjectImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.backgroundStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateBackgroundIsOn) e.$set(e.row, "privateBackgroundIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.objectStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateObjectIsOn) e.$set(e.row, "privateObjectIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonImageStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonImageIsOn) e.$set(e.row, "privateAddonImageIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.addonStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateAddonIsOn) e.$set(e.row, "privateAddonIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
							Object.keys(e.multiChoiceStyling).forEach(key => {
								if (o.styling.hasOwnProperty(key)) {
									if (!e.row.privateMultiChoiceIsOn) e.$set(e.row, "privateMultiChoiceIsOn", !0);
									e.$set(e.row.styling, key, o.styling[key]);
								}
							});
                        }, t.readAsText(this.files[0]);
                    },
					exportDesign: function() {
						var e = JSON.parse(JSON.stringify(this.row.styling)),
							t = {styling: e},
							o = new Blob([JSON.stringify(t)], {
                                type: "text/plain"
                            }),
                            i = document.createEvent("MouseEvents"),
                            s = document.createElement("a");
                        s.download = "choice_design.json", s.href = window.URL.createObjectURL(o), s.dataset.downloadurl = ["text/json", s.download, s.href].join(":"), i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(i)
					}
                }
            },
            oOt = oSt,
            oRt = Object(w["a"])(oOt, okt, oBt, !1, null, null, null),
            oFt = oRt.exports;
        x()(oRt, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VFileInput: vo["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"],
            VTooltip: Q["a"]
        });
        var _t = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Row Settings")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Button Text",
                        filled: ""
                    },
                    model: {
                        value: e.row.buttonText,
                        callback: function(t) {
                            e.$set(e.row, "buttonText", t)
                        },
                        expression: "row.buttonText"
                    }
                }), o("v-radio-group", {
                    attrs: {
                        column: ""
                    },
                    model: {
                        value: e.row.buttonTypeRadio,
                        callback: function(t) {
                            e.$set(e.row, "buttonTypeRadio", t)
                        },
                        expression: "row.buttonTypeRadio"
                    }
                }, [o("v-radio", {
                    attrs: {
                        label: "Point Type Sum Addon",
                        color: "blue",
                        value: "sumaddon"
                    }
                }), o("v-radio", {
                    attrs: {
                        label: "Other",
                        color: "blue",
                        value: "choiceselect"
                    }
                })], 1), e.row.buttonRandom ? e._e() : o("v-autocomplete", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "choiceselect" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'choiceselect'"
                    }],
                    attrs: {
                        "hide-details": "",
                        items: e.variables,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Variable"
                    },
                    model: {
                        value: e.row.buttonId,
                        callback: function(t) {
                            e.$set(e.row, "buttonId", t)
                        },
                        expression: "row.buttonId"
                    }
                }), e.row.buttonRandom && !e.row.isWeightedRandom ? o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "choiceselect" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'choiceselect'"
                    }],
                    attrs: {
                        "hide-details": "",
                        label: "Number of random choices that will be selected",
                        filled: ""
                    },
                    model: {
                        value: e.row.buttonRandomNumber,
                        callback: function(t) {
                            e.$set(e.row, "buttonRandomNumber", t)
                        },
                        expression: "row.buttonRandomNumber"
                    }
                }) : e._e(), o("v-switch", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "choiceselect" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'choiceselect'"
                    }],
                    staticClass: "ms-3",
                    attrs: {
                        "hide-details": "",
                        label: "Random or Variable?"
                    },
                    model: {
                        value: e.row.buttonRandom,
                        callback: function(t) {
                            e.$set(e.row, "buttonRandom", t)
                        },
                        expression: "row.buttonRandom"
                    }
                }), o("v-switch", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "sumaddon" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'sumaddon'"
                    }],
                    staticClass: "ms-3",
                    attrs: {
                        "hide-details": "",
                        label: "Button will add a sum to a Point-type"
                    },
                    model: {
                        value: e.row.btnPointAddon,
                        callback: function(t) {
                            e.$set(e.row, "btnPointAddon", t)
                        },
                        expression: "row.btnPointAddon"
                    }
                }), e.row.btnPointAddon ? o("v-autocomplete", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "sumaddon" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'sumaddon'"
                    }],
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        items: e.pointTypes,
                        "item-text": "name",
                        "item-value": "id",
                        filled: "",
                        label: "Point-Type to use "
                    },
                    model: {
                        value: e.row.pointTypeRandom,
                        callback: function(t) {
                            e.$set(e.row, "pointTypeRandom", t)
                        },
                        expression: "row.pointTypeRandom"
                    }
                }) : e._e(), e.row.btnPointAddon ? o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "sumaddon" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'sumaddon'"
                    }],
                    attrs: {
                        type: "number",
                        "hide-details": "",
                        label: "Button Min",
                        filled: ""
                    },
                    model: {
                        value: e.row.randomMin,
                        callback: function(t) {
                            e.$set(e.row, "randomMin", t)
                        },
                        expression: "row.randomMin"
                    }
                }) : e._e(), e.row.btnPointAddon ? o("v-text-field", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "sumaddon" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'sumaddon'"
                    }],
                    attrs: {
                        type: "number",
                        "hide-details": "",
                        label: "Random Max",
                        filled: ""
                    },
                    model: {
                        value: e.row.randomMax,
                        callback: function(t) {
                            e.$set(e.row, "randomMax", t)
                        },
                        expression: "row.randomMax"
                    }
                }) : e._e(), e.row.buttonRandom ? o("v-switch", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "choiceselect" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'choiceselect'"
                    }],
                    staticClass: "ms-3",
                    attrs: {
                        "hide-details": "",
                        label: "Uniform or Weighted?"
                    },
                    model: {
                        value: e.row.isWeightedRandom,
                        callback: function(t) {
                            e.$set(e.row, "isWeightedRandom", t)
                        },
                        expression: "row.isWeightedRandom"
                    }
                }) : e._e(), e.row.buttonRandom ? o("v-switch", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "choiceselect" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'choiceselect'"
                    }],
                    staticClass: "ms-3",
                    attrs: {
                        "hide-details": "",
                        label: "Only Unselected choices?"
                    },
                    model: {
                        value: e.row.onlyUnselectedChoices,
                        callback: function(t) {
                            e.$set(e.row, "onlyUnselectedChoices", t)
                        },
                        expression: "row.onlyUnselectedChoices"
                    }
                }) : e._e(), e.row.buttonRandom ? o("v-switch", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "choiceselect" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'choiceselect'"
                    }],
                    staticClass: "ms-3",
                    attrs: {
                        "hide-details": "",
                        label: "Button can only be pressed if no choices is selected?"
                    },
                    model: {
                        value: e.row.onlyIfNoChoices,
                        callback: function(t) {
                            e.$set(e.row, "onlyIfNoChoices", t)
                        },
                        expression: "row.onlyIfNoChoices"
                    }
                }) : e._e(), e.row.buttonRandom ? e._e() : o("v-switch", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: "choiceselect" == e.row.buttonTypeRadio,
                        expression: "row.buttonTypeRadio == 'choiceselect'"
                    }],
                    staticClass: "ms-3",
                    attrs: {
                        "hide-details": "",
                        label: "Toggleable?"
                    },
                    model: {
                        value: e.row.buttonType,
                        callback: function(t) {
                            e.$set(e.row, "buttonType", t)
                        },
                        expression: "row.buttonType"
                    }
                })], 1)], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        from: "private",
                        row: e.row,
                        currentComponent: e.currentComponent
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            qt = [],
            At = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
                        sortType: 1,
                        newRow: "",
                        sort: [{
                            text: "Object Width - Biggest to smallest.",
                            value: "1"
                        }, {
                            text: "Object Width - Smallest to Biggest.",
                            value: "2"
                        }, {
                            text: "Text Length - Longest to Shortest.",
                            value: "3"
                        }, {
                            text: "Text Length - Shortest to Longest.",
                            value: "4"
                        }],
                        options: [{
                            text: "1",
                            value: "w-100"
                        }, {
                            text: "2",
                            value: "w-50"
                        }, {
                            text: "3",
                            value: "w-33"
                        }, {
                            text: "4",
                            value: "w-25"
                        }, {
                            text: "5",
                            value: "w-20"
                        }, {
                            text: "6",
                            value: "w-16"
                        }, {
                            text: "7",
                            value: "w-14"
                        }, {
                            text: "8",
                            value: "w-12"
                        }, {
                            text: "9",
                            value: "w-11"
                        }, {
                            text: "10",
                            value: "w-10"
                        }, {
                            text: "11",
                            value: "w-9"
                        }, {
                            text: "12",
                            value: "w-8"
                        }]
                    }
                },
                components: {
                    appFilter: Te,
                    appText: Oe,
                    appObjectImage: $e,
                    appBackground: Ue,
                    appObjectDesign: Qe,
                    appRowDesign: rt,
                    appPointBar: pt,
                    appRowImage: Le
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    groups: function() {
                        return this.$store.state.app.groups
                    },
                    variables: function() {
                        return this.$store.state.app.variables
                    },
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
					app: function() {
						return this.$store.state.app
					}
                },
                methods: {
                    mergeRow: function() {
						var i = "",
							s = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateObjectId() {
							var m = "";
							for (var f = 0; f < th.app.objectIdLength; f++) {
								m += s.charAt(Math.floor(Math.random() * s.length));
							}
							if ("undefined" !== typeof th.app.comp[m]) {
								return generateObjectId()
							} else {
								return m
							}
						}
                        if ("undefined" !== this.app.compR[this.newRow]) {
							var co = this.app.compR[this.newRow],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
							for (var t = this.row.objects.length, o = 0; o < t; o++) {
								coR.objects.push(JSON.parse(JSON.stringify(this.row.objects[o])));
								i = generateObjectId();
								coR.objects[coR.objects.length - 1].id = i;
								this.app.comp[i] = {rows: co.rows, objects: coR.objects.length - 1, type: co.type};
								for (var c = 0; c < coR.objects[coR.objects.length - 1].groups.length; c++) {
									if ("undefined" !== typeof this.app.compG[coR.objects[coR.objects.length - 1].groups[c].id]) {
										var co = this.app.compG[coR.objects[coR.objects.length - 1].groups[c].id],
											coG = this.app.groups[co.groups];
										coG.elements.push({id: e});
									}
								}
								if ("undefined" !== typeof coR.objects[coR.objects.length - 1].objectDesignGroups) {
									for (var d = 0; d < coR.objects[coR.objects.length - 1].objectDesignGroups.length; d++) {
										if ("undefined" !== typeof this.app.compODG[coR.objects[coR.objects.length - 1].objectDesignGroups[d].id]) {
											var co = this.app.compODG[coR.objects[coR.objects.length - 1].objectDesignGroups[d].id],
												coD = this.app.groups[co.designGroups];
											coD.elements.push({id: e});
										}
									}
								}
							}
						}
                    },
                    mergeAndDeleteRow: function() {
						var a = this.app.rows.indexOf(this.row);
						if (this.row.id != this.newRow) {
							if ("undefined" !== this.app.compR[this.newRow]) {
								var co = this.app.compR[this.newRow],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
								for (var t = 0; t < this.row.objects.length; t++) {
									coR.objects.push(this.row.objects[t]);
									this.app.comp[this.row.objects[t].id] = {rows: co.rows, objects: coR.objects.length - 1, type: co.type};
								}
								this.rows.splice(this.app.rows.indexOf(this.row), 1);
								for (var f = a; f < this.app.rows.length; f++) {
									this.app.compR[this.app.rows[f].id].rows = f;
									for (var b = 0; b < this.app.rows[f].objects.length; b++) {
										this.app.comp[this.app.rows[f].objects[b].id].rows = f;
									}
								}
								this.cleanCurrentComponent();
							}
						}
                    },
                    sortRowObjects: function() {
                        var e = parseInt(this.row.objectWidth.replace(/\D/g, "")),
							th = this;
						if ("1" == this.sortType) {
							this.row.objects.sort((function(t, o) {
								var i, s;
								return s = "" != o.objectWidth ? parseInt(o.objectWidth.replace(/\D/g, "")) : e, i = "" != t.objectWidth ? parseInt(t.objectWidth.replace(/\D/g, "")) : e, i > s ? -1 : i < s ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						} else if ("2" == this.sortType) {
							this.row.objects.sort((function(t, o) {
								var i, s;
								return s = "" != o.objectWidth ? parseInt(o.objectWidth.replace(/\D/g, "")) : e, i = "" != t.objectWidth ? parseInt(t.objectWidth.replace(/\D/g, "")) : e, i < s ? -1 : i > s ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						} else if ("3" == this.sortType) {
							this.row.objects.sort((function(e, t) {
								var o = e.text.length,
									i = t.text.length;
								return o > i ? -1 : o < i ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						} else if ("4" == this.sortType) {
							this.row.objects.sort((function(e, t) {
								var o = e.text.length,
									i = t.text.length;
								return o < i ? -1 : o > i ? 1 : 0
							}));
							for (var b = 0; b < this.row.objects.length; b++) {
								this.app.comp[this.row.objects[b].id].objects = b;
							}
						}
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    rowWasChanged: function() {
                        this.$emit("rowWasChanged", this.row)
                    }
                }
            },
            $t = At,
            Mt = o("67b6"),
            Vt = o("43a6"),
            Pt = Object(w["a"])($t, _t, qt, !1, null, null, null),
            Dt = Pt.exports;
        x()(Pt, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRadio: Mt["a"],
            VRadioGroup: Vt["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var zt = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Choices")]), o("appDraggable", {
                    on: {
                        start: function(t) {
                            e.drag = !0
                        },
                        end: function(t) {
                            e.drag = !1
                        }
                    },
                    model: {
                        value: e.row.objects,
                        callback: function(t) {
                            e.$set(e.row, "objects", t);							
							for (var a = 0; a < e.row.objects.length; a++) {
								e.app.comp[e.row.objects[a].id].objects = a;
							}
                        },
                        expression: "row.objects"
                    }
                }, e._l(e.row.objects, (function(t, i) {
                    return o("v-list-group", {
                        key: i,
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function() {
                                return [o("v-list-item-title", {
                                    domProps: {
                                        innerHTML: e._s(e.$sanitize("" != t.title ? i + 1 + ". " + ("undefined" !== typeof t.debugTitle ? t.debugTitle + " " : "") + t.title : i + 1 + ". " + t.id))
                                    }
                                })]
                            },
                            proxy: !0
                        }], null, !0)
                    })
                })), 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1)
            },
            Lt = [],
            Wt = o("310e"),
            Ht = o.n(Wt),
            Et = {
                props: {
                    row: Object
                },
                data: function() {
                    return {
                        dialog: !0
                    }
                },
                components: {
                    appDraggable: Ht.a
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    }
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            Nt = Et,
            Gt = o("56b0"),
            Ut = o("5d23"),
            Yt = Object(w["a"])(Nt, zt, Lt, !1, null, null, null),
            Jt = Yt.exports;
        x()(Yt, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardTitle: j["c"],
            VDialog: B["a"],
            VListGroup: Gt["a"],
            VListItemTitle: Ut["c"],
            VRow: S["a"]
        });
        var Xt = {
                props: {
                    row: Object,
                    type: String
                },
                data: function() {
                    return {
                        window: {
                            width: 0,
                            height: 0
                        },
						pWindow: {
							width: 0,
							height: 0
						},
                        templates: [{
                            text: "Image Top",
                            value: 1
                        }, {
                            text: "Image Right",
                            value: 2
                        }, {
                            text: "Image Left",
                            value: 3
                        }, {
                            text: "Image Bottom",
                            value: 4
                        }, {
							text: "Image Center",
							value: 5
						}],
                        justify: [{
                            value: "start"
                        }, {
                            value: "center"
                        }, {
                            value: "end"
                        }, {
                            value: "space-around"
                        }, {
                            value: "space-between"
                        }],
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }],
                        rowIconButtons: [{
                            component: "AppObjectList",
                            icon: "mdi-format-list-bulleted",
                            text: "List of objects"
                        }, {
                            component: "appRequirement",
                            icon: "mdi-key-plus",
                            text: "Create Requirement"
                        }, {
                            component: "appRowSettings",
                            icon: "mdi-decagram",
                            text: "Open Row Settings"
                        }],
                        isEditModeOn: !0,
                        currentComponent: "",
                        activeObjectList: [],
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        },
						scoreUpdate: "",
						exceptedObjects: [],
						exceptedScores: [],
						linkedObjects: []
                    }
                },
                components: {
                    AppObject: It,
                    AppRequirement: _,
                    AppImageUpload: G,
                    AppRowSettings: Ft,
                    AppObjectList: Jt,
                    ObjectRequirement: le,
                    AppButtonSettings: Dt,
                    ConfirmDlg: function() {
                        return o.e("chunk-2d0e6102").then(o.bind(null, "96c2"))
                    }
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.pWindow.width = t.contentRect.width;
							this.pWindow.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.panels) this.resizeObserver.observe(this.$refs.panels.$el);
                },
                created: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize);
					if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                computed: {
                    objectWidths: function() {
                        return this.$store.state.objectWidths
                    },
                    rowTitle: function() {
                        return 'font-family: "' + this.textStyling.rowTitle + '";font-size: ' + this.textStyling.rowTitleTextSize + "%;text-align: " + this.textStyling.rowTitleAlign + ";color: " + this.textStyling.rowTitleColor + ";"
                    },
                    styling: function() {
                        return this.$store.state.app.styling
                    },
					rowStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateRowIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateRowIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					textStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateTextIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					rowImageStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateRowImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateRowImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					backgroundStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					rowBodyBgColor: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn && this.row.styling.bgColorIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn && coD.styling.bgColorIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return !1;
					},
					rowBodyBgImage: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn && this.row.styling.backgroundImage) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn && coD.styling.backgroundImage) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return !1;
					},
                    resultArray: function() {
                        var e, t, o = [];
                        if ("standard" == this.type) {
                            for (var i = 0; i < this.allChapters.length; i++)
                                for (var s = 0; s < this.allChapters[i].pages.length; s++) this.findAllActiveObjects(this.allChapters[i].pages[s], this.allChapters[i]);
                            o = this.activeObjectList
                        } else if ("" == this.row.resultGroupId || null == this.row.resultGroupId)
                            for (t = 0; t < this.rows.length; t++)
                                for (e = 0; e < this.rows[t].objects.length; e++) {
									if (!this.rows[t].objects[e].isNotResult) this.rows[t].objects[e].isActive ? o.push(this.rows[t].objects[e]) : this.rows[t].objects[e].isSelectableMultiple && "undefined" !== typeof this.rows[t].objects[e].multipleUseVariable && this.rows[t].objects[e].multipleUseVariable > 0 && o.push(this.rows[t].objects[e]);
								}
                        else
                            for (t = 0; t < this.rows.length; t++)
                                for (e = 0; e < this.rows[t].objects.length; e++) {
									if (!this.rows[t].objects[e].isNotResult) {
										if (this.rows[t].objects[e].isActive)
											for (var r = 0; r < this.groups.length; r++)
												if (this.row.resultGroupId == this.rows[t].resultGroupId && this.rows[t] != this.row && this.groups[r].id == this.rows[t].resultGroupId) o.push(this.rows[t].objects[e]);
												else
													for (var a = 0; a < this.rows[t].objects[e].groups.length; a++) this.rows[t].objects[e].groups[a].id == this.row.resultGroupId && this.groups[r].id == this.row.resultGroupId && o.push(this.rows[t].objects[e]);
										else if (this.rows[t].objects[e].isSelectableMultiple && ("undefined" !== typeof this.rows[t].objects[e].multipleUseVariable && this.rows[t].objects[e].multipleUseVariable > 0))
											for (var c = 0; c < this.groups.length; c++)
												if (this.row.resultGroupId == this.rows[t].resultGroupId && this.rows[t] != this.row && this.groups[c].id == this.rows[t].resultGroupId) o.push(this.rows[t].objects[e]);
												else
													for (var d = 0; d < this.rows[t].objects[e].groups.length; d++) this.rows[t].objects[e].groups[d].id == this.row.resultGroupId && this.groups[c].id == this.row.resultGroupId && o.push(this.rows[t].objects[e]);
									}
								}
                        return o
                    },
                    rowBody: function() {
                        var e = "margin-top: " + this.rowStyling.rowBodyMarginTop + "px;margin-bottom:" + this.rowStyling.rowBodyMarginBottom + "px;";
						if (this.rowBodyBgImage !== !1) e += 'background-image: url("' + this.rowBodyBgImage.backgroundImage + '")' + (this.rowBodyBgImage.isBackgroundRepeat ? ";background-repeat: repeat;" : (this.rowBodyBgImage.isBackgroundFitIn ? ";background-size: 100% 100%;" : ";background-size: cover;"));
						if (this.rowBodyBgColor !== !1) e += "background-color: " + this.rowBodyBgColor.backgroundColor + ";";
                        return this.row.isEditModeOn ? e += "margin-left: 1%;margin-right: 1%;" : e += "margin-left: " + this.rowStyling.rowBodyMarginSides + "%;margin-right: " + this.rowStyling.rowBodyMarginSides + "%;", e
                    },
                    rowText: function() {
                        var e = 'font-family: "' + this.textStyling.rowText + '";text-align: ' + this.textStyling.rowTextAlign + ";font-size: " + this.textStyling.rowTextTextSize + "%;color: " + this.textStyling.rowTextColor + ";padding-top: " + this.rowStyling.rowTextPaddingX + "px;padding-bottom: " + this.rowStyling.rowTextPaddingX + "px;";
                        return this.row.isEditModeOn || (e += "padding-left: " + this.rowStyling.rowTextPaddingY + "%;padding-right: " + this.rowStyling.rowTextPaddingY + "%;"), e
                    },
                    rowButton: function() {
                        return "padding-left: " + this.rowStyling.rowButtonYPadding + "px;padding-right: " + this.rowStyling.rowButtonYPadding + "px;padding-top: " + this.rowStyling.rowButtonXPadding + "px;padding-bottom: " + this.rowStyling.rowButtonXPadding + "px;color:" + this.$vuetify.theme.isDark ? "white;" : "black;"
                    },
                    rowBackground: function() {
                        var e = (this.rowStyling.rowBorderImage ? 'border-image: url("' + this.rowStyling.rowBorderImage + '") ' + this.rowStyling.rowBorderImageSliceTop + ' ' + this.rowStyling.rowBorderImageSliceRight + ' ' + this.rowStyling.rowBorderImageSliceBottom + ' ' + this.rowStyling.rowBorderImageSliceLeft + ' / ' + this.rowStyling.rowBorderImageWidth + 'px '+ this.rowStyling.rowBorderImageRepeat + '; border-style: solid; padding: ' + this.rowStyling.rowBorderImageWidth + 'px; ' : "") + (this.backgroundStyling.rowBackgroundImage ? 'background-image: url("' + this.backgroundStyling.rowBackgroundImage + '");' + (this.backgroundStyling.isRowBackgroundRepeat ? "background-repeat: repeat;" : (this.backgroundStyling.isRowBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) : "") + (this.backgroundStyling.rowBgColorIsOn ? "background-color: " + this.backgroundStyling.rowBgColor + ";" : "") + "margin-left:" + this.rowStyling.rowMargin + "%;margin-right: " + this.rowStyling.rowMargin + "%;",
                            t = this.rowStyling.rowBorderRadiusIsPixels ? "px" : "%";
                        return this.rowStyling.rowGradientIsOn && (e += this.rowStyling.rowGradientIsOn ? ";background-image: linear-gradient(" + this.rowStyling.rowGradient + ");" : ""), e += "border-radius: " + this.rowStyling.rowBorderRadiusTopLeft + 0 + t + " " + this.rowStyling.rowBorderRadiusTopRight + 0 + t + " " + this.rowStyling.rowBorderRadiusBottomRight + 0 + t + " " + this.rowStyling.rowBorderRadiusBottomLeft + 0 + t + ";", this.rowStyling.rowOverflowIsOn && (e += "overflow:hidden;"), this.rowStyling.rowBorderIsOn && (e += "border: " + this.rowStyling.rowBorderWidth + "px " + this.rowStyling.rowBorderStyle + " " + this.rowStyling.rowBorderColor + ";"), this.rowStyling.rowDropShadowIsOn && (e += "filter: drop-shadow(" + this.rowStyling.rowDropShadowH + "px " + this.rowStyling.rowDropShadowV + "px " + this.rowStyling.rowDropShadowBlur + "px " + this.rowStyling.rowDropShadowColor + ");"), e
                    },
                    rowImage: function() {
                        var e = "width:" + this.rowImageStyling.rowImageWidth + "%;margin-top:" + this.rowImageStyling.rowImageMarginTop + "%;margin-bottom:" + this.rowImageStyling.rowImageMarginBottom + "%;",
                            t = this.rowImageStyling.rowImgBorderRadiusIsPixels ? "px" : "%";
                        return e += "border-radius: " + this.rowImageStyling.rowImgBorderRadiusTopLeft + 0 + t + " " + this.rowImageStyling.rowImgBorderRadiusTopRight + 0 + t + " " + this.rowImageStyling.rowImgBorderRadiusBottomRight + 0 + t + " " + this.rowImageStyling.rowImgBorderRadiusBottomLeft + 0 + t + ";", this.rowImageStyling.rowImgOverflowIsOn && (e += "overflow:hidden;"), this.rowImageStyling.rowImgBorderIsOn && (e += "border: " + this.rowImageStyling.rowImgBorderWidth + "px " + this.rowImageStyling.rowImgBorderStyle + " " + this.rowImageStyling.rowImgBorderColor + ";"), e
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    app: function() {
                        return this.$store.state.app
                    },
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
                    groups: function() {
                        return this.$store.state.app.groups
                    },
                    variables: function() {
                        return this.$store.state.app.variables
                    },
                    activated: function() {
                        return this.$store.state.app.activated
                    },
                    allChapters: function() {
                        return this.$store.state.app.chapters
                    },
                    objectHeight: function() {
                        return this.$store.state.app.styling.objectHeight && !this.row.isEditModeOn ? "d-flex fullHeight" : ""
                    },
                    replaceRowTitle: function() {
                        var e = this.row.title;
						if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    replaceRowText: function() {
                        var e = this.row.titleText;
						if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    isButtonPressable: function() {
                        return !(!this.row.onlyIfNoChoices || 0 === this.row.currentChoices)
                    }
                },
                methods: {
					objectWidthToNum: function(e) {
						switch(e) {
							case "col-sm-6":
							case "col-sm-5": return 2
							case "col-md-4": return 3
							case "col-md-3": return 4
							case "w-20": return 5
							case "col-lg-2": return 6
							case "w-14": return 7
							case "w-12": return 8
							case "w-11": return 9
							case "w-10": return 10
							case "w-9": return 11
							case "col-xl-1": return 12
							default: return 1
						}
					},
					objectWidthClass: function(e) {
						var t = (e.objectWidth || this.row.objectWidth),
							o = this.objectWidthToNum(t),
							s = this.app.objectsPerRow === "col-6" ? 2 : this.app.objectsPerRow === "col-4" ? 3 : 4;
						if (this.window.width > 1280) {
							return t
						} else if (this.window.width > 960) {
							switch(o) {
								case 1: return "col-12"
								case 2: return "col-6"
								case 3: return s > 2 ? "col-4" : this.app.objectsPerRow
								case 4: return s > 3 ? "col-3" : this.app.objectsPerRow
								default: return this.app.objectsPerRow
							}
						} else if (this.window.width > 480) {
							return o === 1 ? "col-12" : "col-6"
						} else {
							return "col-12"
						}
					},
					filterStyling: function(e, t) {
						if (t.privateFilterIsOn) return t.styling.reqFilterVisibleIsOn;
						if (e.privateFilterIsOn) return e.styling.reqFilterVisibleIsOn;
						if ("undefined" !== typeof t.objectDesignGroups) {
							for (var a = 0; a < t.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[t.objectDesignGroups[a].id]) {
									var co = this.app.compODG[t.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling.reqFilterVisibleIsOn;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling.reqFilterVisibleIsOn;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof e.rowDesignGroups) {
							for (var a = 0; a < e.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[e.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[e.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling.reqFilterVisibleIsOn;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling.reqFilterVisibleIsOn;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling.reqFilterVisibleIsOn;
					},
                    handleResize: function() {
                        this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    findAllActiveObjects: function(e, t) {
                        for (var o = 0; o < e.app.rows.length; o++)
                            for (var i = 0; i < e.app.rows[o].objects.length; i++) e.app.rows[o].objects[i].isActive && this.activeObjectList.push(e.app.rows[o].objects[i]);
                        if (e && e.children && e.children.length > 0)
                            for (var s = 0; s < e.children.length; s++) this.findAllActiveObjects(e.children[s], t)
                    },
                    createNewObject: function() {
						var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateObjectId() {
							var s = "";
							for (var o = 0; o < th.app.objectIdLength; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.comp[s]) {
								return generateObjectId()
							} else {
								return s
							}
						}
						e = generateObjectId();
                        this.row.objects.push({
                            id: e,
                            title: this.app.defaultChoiceTitle,
                            text: this.app.defaultChoiceText,
							debugTitle: "",
                            image: "",
                            template: 1,
                            objectWidth: "",
                            isActive: !1,
                            isVisible: !0,
                            multipleUseVariable: 0,
							initMultipleTimesMinus: 0,
							selectedThisManyTimesProp: 0,
                            defaultAspectWidth: this.row.defaultAspectWidth,
                            defaultAspectHeight: this.row.defaultAspectHeight,
                            requireds: [],
                            addons: [],
                            scores: [],
                            groups: [],
							objectDesignGroups: []
                        });
						if ("undefined" !== typeof this.app.compR[this.row.id]) {
							var co = this.app.compR[this.row.id],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
							this.app.comp[e] = {rows: co.rows, objects: this.row.objects.length - 1, type: co.type};
						}
                    },
					createNewObjectMultiple: function() {
						var n = this,
							e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789";
						function generateObjectId() {
							var s = "";
							for (var o = 0; o < n.app.objectIdLength; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof n.app.comp[s]) {
								return generateObjectId()
							} else {
								return s
							}
						}
						this.$refs.confirm.open("Create New Objects", "", {cObjects: !0})
						.then(({result, numObjects}) => {
							if (result) {
								for (var a = 0; a < numObjects; a++) {
									e = generateObjectId();
									n.row.objects.push({
										id: e,
										title: n.app.defaultChoiceTitle,
										text: n.app.defaultChoiceText,
										image: "",
										template: 1,
										objectWidth: "",
										isActive: !1,
										isVisible: !0,
										multipleUseVariable: 0,
										initMultipleTimesMinus: 0,
										selectedThisManyTimesProp: 0,
										defaultAspectWidth: n.row.defaultAspectWidth,
										defaultAspectHeight: n.row.defaultAspectHeight,
										requireds: [],
										addons: [],
										scores: [],
										groups: [],
										objectDesignGroups: []
									});
									if ("undefined" !== typeof n.app.compR[n.row.id]) {
										var co = n.app.compR[n.row.id],
											coR = co.type == "app" ? n.app.rows[co.rows] : n.app.backpack[co.rows];
										n.app.comp[e] = {rows: co.rows, objects: n.row.objects.length - 1, type: co.type};
									}
								}
							}
						});
                    },
                    buttonActivate: function() {
                        if (this.row.btnPointAddon && "sumaddon" == this.row.buttonTypeRadio)
                            for (var e = Math.floor(Math.random() * (this.row.randomMax - this.row.randomMin) + this.row.randomMin), t = 0; t < this.app.pointTypes.length; t++) this.app.pointTypes[t].id == this.row.pointTypeRandom && (this.app.pointTypes[t].startingSum += e);
                        else if (this.row.buttonRandom) {
                            var o, i = [], k = [];
                            if (this.row.isWeightedRandom && "undefined" != typeof this.row.isWeightedRandom) {
                                var s = 0,
                                    r = 0;
                                for (o = 0; o < this.row.objects.length; o++) {
									if (this.checkRequireds(this.row.objects[o]) && !this.row.objects[o].isNotSelectable) {
										k.push(this.row.objects[o]);
										"undefined" === typeof this.row.objects[o].randomWeight || "" == this.row.objects[o].randomWeight ? s += 100 : s += parseInt(this.row.objects[o].randomWeight);
									}
								}
                                for (var a = 0; a < this.row.buttonRandomNumber; a++) {
                                    var n = Math.floor(Math.random() * s);
                                    for (o = 0; o < k.length; o++)
                                        if ("undefined" === typeof k[o].randomWeight || "" == k[o].randomWeight ? r += 100 : r += parseInt(k[o].randomWeight), n < r) {
                                            this.activateObject(k[o], this.row);
                                            break
                                        }
                                }
                            } else
                                for (o = 0; o < this.row.buttonRandomNumber; o++) {
									for (var a = 0; a < this.row.objects.length; a++)
										if (this.checkRequireds(this.row.objects[a]) && !this.row.objects[a].isNotSelectable) k.push(this.row.objects[a]);
                                    var l = Math.floor(Math.random() * k.length),
                                        c = k[l],
                                        d = 100,
                                        p = 0,
                                        u = !0;
									if ("undefined" === typeof c) break
                                    if (this.row.onlyUnselectedChoices) {
                                        while (i.includes(l) || this.activated.includes(c.id))
                                            if (p++, l = Math.floor(Math.random() * k.length), c = k[l], k.length <= o || d <= p) {
                                                u = !1;
                                                break
                                            }
                                    } else
                                        while (i.includes(l))
                                            if (p++, l = Math.floor(Math.random() * k.length), c = k[l], k.length <= o || d <= p) break;
                                    u && (i.push(l), this.activateObject(c, this.row))
                                }
                        } else this.row.buttonRandom || (this.row.buttonType && this.activated.includes(this.row.buttonId) ? this.activated.splice(this.activated.indexOf(this.row.buttonId), 1) : this.activated.push(this.row.buttonId))
                    },
                    checkIfDeselect: function(e) {
                        var t = this.$store.getters.checkRequireds(e);
                        if (e.deselectChoices && !t)
                            for (var o = 0; o < e.objects.length; o++) e.objects[o].isActive && this.activateObject(e.objects[o], e);
                        return t
                    },
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
                    checkPoints: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum - parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					checkPointsR: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum + parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					playBgm: function(e, t, i) {
						function bgmFadeIn(th, f) {
							let v = 0,
								k = 0,
								o = 0;
							if (th.app.isFadingOut) {
								const lastTime = parseInt(th.app.lastFadeTime);
								if (th.app.bgmFadeTimer !== 0) clearTimeout(th.app.bgmFadeTimer), th.app.bgmFadeTimer = 0;
								th.app.bgmFadeTimer = setTimeout(() => {
									if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
									if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
										const iTime = e.bgmFadeInSec / 20;
										th.app.lastFadeTime = e.bgmFadeInSec;
										bgmPlayer.setVolume(0);
										bgmPlayer.playVideo();
										if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										if (th.app.isFadingOut) th.app.isFadingOut = !1;
										th.app.bgmFadeInterval = setInterval(() => {
											if (bgmPlayer.playerInfo.playerState === 1) {
												if (v < th.app.curVolume) {
													v += 5;
													bgmPlayer.setVolume(v);
													th.app.lastFadeTime = th.app.lastFadeTime - iTime;
												} else {
													bgmPlayer.setVolume(th.app.curVolume);
													clearInterval(th.app.bgmFadeInterval);
													th.app.bgmFadeInterval = 0;
													th.app.lastFadeTime = 0;
												}
											}
										}, iTime);
									} else {
										if (th.app.isFadingOut) th.app.isFadingOut = !1, clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										bgmPlayer.playVideo();
										bgmPlayer.setVolume(th.app.curVolume);
									}
									th.$set(th.app, "bgmObjectId", e.id);
									if (th.app.showMusicPlayer) {
										if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
										th.app.bgmTitleInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
												if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
													th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
													th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
													clearInterval(th.app.bgmTitleInterval);
													th.app.bgmTitleInterval = 0;
												}
											}
										}, 1000);
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										th.app.bgmPlayInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
												const curTime = parseInt(bgmPlayer.getCurrentTime());
												if (curTime !== th.app.curBgmTime) {
													if (k !== curTime) {
														th.$set(th.app, "curBgmTime", curTime);
													} else {
														o++;
														if (o > th.app.curBgmLength) o = 1;
														th.$set(th.app, "curBgmTime", o);
													}
												} else {
													k = curTime;
													o = curTime + 1;
													th.$set(th.app, "curBgmTime", o);
												}
											}
										}, 1000);
									}
								}, lastTime);
							} else {
								if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
								if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
									const iTime = e.bgmFadeInSec / 20;
									th.app.lastFadeTime = e.bgmFadeInSec;
									bgmPlayer.setVolume(0);
									bgmPlayer.playVideo();
									if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									if (th.app.isFadingOut) th.app.isFadingOut = !1;
									th.app.bgmFadeInterval = setInterval(() => {
										if (bgmPlayer.playerInfo.playerState === 1) {
											if (v < th.app.curVolume) {
												v += 5;
												bgmPlayer.setVolume(v);
												th.app.lastFadeTime = th.app.lastFadeTime - iTime;
											} else {
												bgmPlayer.setVolume(th.app.curVolume);
												clearInterval(th.app.bgmFadeInterval);
												th.app.bgmFadeInterval = 0;
												th.app.lastFadeTime = 0;
											}
										}
									}, iTime);
								} else {
									bgmPlayer.playVideo();
									bgmPlayer.setVolume(th.app.curVolume);
								}
								th.$set(th.app, "bgmObjectId", e.id);
								if (th.app.showMusicPlayer) {
									if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
									th.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
											if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
												th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(th.app.bgmTitleInterval);
												th.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									th.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== th.app.curBgmTime) {
												if (k !== curTime) {
													th.$set(th.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > th.app.curBgmLength) o = 1;
													th.$set(th.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												th.$set(th.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							}
						}
						function bgmFadeOut(th) {
							const steps = th.app.curVolume / 5;
							if (e.bgmFadeOut && e.bgmFadeOutSec > 0 && steps > 0) {
								const iTime = e.bgmFadeOutSec / steps;
								let v = th.app.curVolume;
								th.app.lastFadeTime = e.bgmFadeOutSec;
								th.app.isFadingOut = !0;
								if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
								th.app.bgmFadeInterval = setInterval(() => {
									if (v > 0 && "undefined" !== typeof bgmPlayer.setVolume) {
										v -= 5;
										bgmPlayer.setVolume(v);
										th.app.lastFadeTime = th.app.lastFadeTime - iTime;
									} else {
										if (th.app.isFadingOut) {
											bgmPlayer.pauseVideo();
											bgmPlayer.setVolume(th.app.curVolume);
											clearInterval(th.app.bgmFadeInterval);
											th.app.bgmFadeInterval = 0;
											th.app.lastFadeTime = 0;
											th.app.isFadingOut = !1;
											if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
											if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
											th.$set(th.app, "bgmTitle", "No Audio Title");
											th.$set(th.app, "curBgmTime", 0);
											th.$set(th.app, "curBgmLength", 0);
										}
									}
								}, iTime);
							} else {
								bgmPlayer.pauseVideo();
								if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
								if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
								th.$set(th.app, "bgmTitle", "No Audio Title");
								th.$set(th.app, "curBgmTime", 0);
								th.$set(th.app, "curBgmLength", 0);
							}
						}
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							var p = this.app.bgmIsPlaying,
								s = bgmPlayer.playerInfo.videoData.video_id,
								o = bgmPlayer.playerInfo.playerState,
								v = 0,
								f = !1;
							if ("undefined" === typeof this.app.bgmObjectId) this.$set(this.app, "bgmObjectId", e.id);
							if (s == t) {
								if (this.app.bgmObjectId == e.id) {
									if (p) {
										if (o === 2) {
											bgmFadeIn(this, f);
										} else {
											bgmPlayer.stopVideo();
											bgmFadeIn(this, f);
										}
									} else {
										bgmFadeOut(this);
									}
								} else {
									if (p) {
										bgmPlayer.stopVideo(), bgmFadeIn(this, f);
									} else {
										bgmFadeOut(this);
									}
								}
							} else {
								if (p) {
									f = !0;
									bgmFadeIn(this, f);
								}
							}
						} else {
							if (i < 10) {
								i++;
								setTimeout(() => {
									this.playBgm(e, t, i);
								}, 200);
							}
						}
					},
					updateScoresC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var nH = 0, nh = 0, nR = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var af = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[af[0]]) {
								var co = this.app.comp[af[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											bE = this.checkRequireds(coS);
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						} 
					},
					updateScoresS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											var bE = this.checkRequireds(coS);
											if (bC !== bE) {
												var nC = 0;
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																	
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + parseInt(e.multipleUseVariable + 1) : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											var bE = !1;
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bE = this.checkRequireds(coS);
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
												} else {
													var aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bE = this.checkRequireds(coS);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
												}
											} else {
												var nH = this.activated.indexOf(eid);
												this.activated.splice(nH, 1);
												t.currentChoices -= 1;
												var bE = this.checkRequireds(coS);
												this.activated.splice(nH, 0, eid);
												t.currentChoices += 1;
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
													bE = this.checkRequireds(coS);
												} else {
													var aFI = this.activated[fI].split("/ON#");
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
													bE = this.checkRequireds(coS);
												}
											} else {
												this.activated.splice(nR, 1);
												t.currentChoices -= 1;
												bC = this.checkRequireds(coS);
												for (var a = 0; a < o.length; a++) {
													for (var n = 0; n < this.app.pointTypes.length; n++) {
														this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
													}
												}
												this.activated.splice(nR, 0, eid);
												t.currentChoices += 1;
												bE = this.checkRequireds(coS);
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					checkPointsMD: function(e) {
						var ei = 0,
							pT = 0;
						if (e.multiplyPointtypeIsOnCheck || e.dividePointtypeIsOnCheck) {
							if (e.multiplyPointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtMultiply[l];
													pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							} else if (e.dividePointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToDivide.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtDivide[l];
													pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							}
							if (pT < 0) return !1
						}
						return !0
					},
					discountS: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								bTempStacked = !1,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										discountedFrom.push(e.id);
										scoreVal = coS.tmpDiscount[f][2];
										bTempStacked = !0;
										tmpNum = f;
									}
								}
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										coS.discountTextA.push(e.discountAfterText);
									}
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if (coS.discountScore > stackDiscount) {
									this.$set(coS, "tmpDisScore", coS.discountScore - stackDiscount);
									this.$set(coS, "isChangeDiscount", true);
									aDiscount.push(false);
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									if ("undefined" !== typeof coS.discountTextA) this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if ("undefined" !== typeof coS.discountTextB) this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
									coS.discountedFrom.push(...discountedFrom);
									if (bTempStacked) coS.tmpDiscount.splice(tmpNum, 1);
									coS.tmpDiscount.push(aDiscount);
									this.$set(coS, "notStackableDiscount", false);
								} else {
									this.$set(coS, "isChangeDiscount", false);
									discountedFrom.push(e.id);
									if (bTempStacked) {
										coS.tmpDiscount[tmpNum][1] = discountedFrom;
										coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
										coS.tmpDiscount[tmpNum][3] = stackDiscount;
									} else {
										if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
										"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
										aDiscount.push(discountedFrom);
										aDiscount.push(stackDiscountCal);
										aDiscount.push(stackDiscount);
										coS.tmpDiscount.push(aDiscount);
									}
								}
							} else {
								scoreVal = coS.discountIsOn ? coS.discountScoreCal : parseInt(coS.value);
								var tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
										coS.discountTextA.push(e.discountAfterText);
									}
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountedFrom.push(e.id);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
								if (!coS.discountIsOn) this.$set(coS, "discountIsOn", true);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								aDiscount = [];
							if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
							if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
							else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
							else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
							else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
							stackDiscountCal = stackDiscount;
							if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
							if (coS.discountIsOn) {
								"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
								if (coS.discountScore > stackDiscount) {
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									this.$set(coS, "discountShow", e.discountShow);
									this.$set(coS, "discountBeforeText", e.discountBeforeText);
									this.$set(coS, "discountAfterText", e.discountAfterText);
									this.$set(coS, "discountedFrom", e.id);
									this.$set(coS, "notStackableDiscount", true);
								} else {
									aDiscount.push(e.id);
									aDiscount.push(stackDiscountCal);
									aDiscount.push(stackDiscount);
									if (e.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
								}
								coS.tmpDiscount.push(aDiscount);
							} else {
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								if (e.discountShow) this.$set(coS, "discountShow", e.discountShow), this.$set(coS, "discountBeforeText", e.discountBeforeText), this.$set(coS, "discountAfterText", e.discountAfterText);
								this.$set(coS, "discountIsOn", true);
								this.$set(coS, "discountedFrom", e.id);
								this.$set(coS, "notStackableDiscount", true);
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
					discountC: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										scoreVal = coS.tmpDiscount[f][2];
										tmpNum = f;
									}
								}
								discountedFrom.splice(discountedFrom.indexOf(e.id), 1);
								if (discountedFrom.length > 0) {
									for (var f = 0; f < discountedFrom.length; f++) {
										if ("undefined" !== typeof this.app.comp[discountedFrom[f]]) {
											var coT = this.app.comp[discountedFrom[f]],
												coTR = co.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
											else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
											else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
											else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
											stackDiscountCal = stackDiscount;
											if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
										}
									}
									coS.tmpDiscount[tmpNum][1] = discountedFrom;
									coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
									coS.tmpDiscount[tmpNum][3] = stackDiscount;
								} else {
									coS.tmpDiscount.splice(tmpNum, 1);
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								this.$set(coS, "isChangeDiscount", false);
							} else {
								var scoreVal = parseInt(coS.value),
									indexId = coS.discountedFrom.indexOf(e.id),
									tmpDisScore = coS.discountScore,
									stackDiscount = 0,
									stackDiscountCal = 0,
									tmpNum = 0,
									bTempChanged = !1,
									discountedFrom = "";
								coS.discountedFrom.splice(indexId, 1);
								if (coS.discountedFrom.length > 0) {
									for (var d = 0; d < coS.discountedFrom.length; d++) {
										if ("undefined" !== typeof this.app.comp[coS.discountedFrom[d]]) {
											var coT = this.app.comp[coS.discountedFrom[d]],
												coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (coTO.stackableDiscount) {
												if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
												else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
												else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
												else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
												stackDiscountCal = stackDiscount;
												scoreVal = stackDiscountCal;
												if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
											}
										}
									}
								} else {
									stackDiscountCal = parseInt(coS.value);
									stackDiscount = parseInt(coS.value);
								}
								if ("undefined" !== typeof coS.tmpDiscount) {
									for (var f = 0; f < coS.tmpDiscount.length; f++) {
										if (!coS.tmpDiscount[f][0]) {
											if (stackDiscount > coS.tmpDiscount[f][3]) {
												discountedFrom = coS.tmpDiscount[f][1];
												stackDiscountCal = coS.tmpDiscount[f][2];
												stackDiscount = coS.tmpDiscount[f][3];
												tmpNum = f;
												bTempChanged = !0;
											}
										}
									}
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								if (bTempChanged) {
									if (discountedFrom.length == 0) {
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", discountedFrom);
										if (coS.tmpDiscount[tmpNum][4]) {
											this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
											this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
										}
										coS.tmpDiscount.splice(tmpNum, 1);
										coS.notStackableDiscount = true;
									}
								} else {
									this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if (coS.discountedFrom.length == 0) this.$set(coS, "discountIsOn", false);
								}
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountScore,
								tmpNum = 0,
								bChanged = !1;
							if (coS.notStackableDiscount) {
								if (coS.discountedFrom == e.id) {
									if ("undefined" !== typeof coS.tmpDiscount && coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[0][3];
										bChanged = !0;
										for (var f = 1; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										this.$set(coS, "notStackableDiscount", !coS.tmpDiscount[tmpNum][0]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", "");
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", scoreVal);
										this.$set(coS, "discountBeforeText", "");
										this.$set(coS, "discountAfterText", "");
										this.$set(coS, "discountIsOn", false);
										this.$set(coS, "notStackableDiscount", false);
									}
								} else {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
								}
							} else {
								if ("undefined" !== typeof coS.tmpDiscount) {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
									if (coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[f][3];
										bChanged = !0;
										for (var f = 0; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[f][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[f][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									}
								}
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
                    forceActivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
							if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
						}
						if (this.checkRequireds(coO) && this.checkPoints(coO)) {
							if (coO.isSelectableMultiple) {
								var ee = o;
								if (ee > 0) {
									for (var n = 0; n < ee; n++) {
										this.selectedOneMore(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else if (ee < 0) {
									for (var pp = 0; pp < -1 * ee; pp++) {
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
										this.selectedOneLess(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								}
							} else {
								if (!coO.isActive) this.activateObject(coO, coR);
								if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
							}
							if(!coO.isActive) {
								if(coO.isSelectableMultiple) {
									if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
									e.cancelForcedActivated.push(coO.id + "/ON#" + o);
								}
								this.$set(coO, "forcedActivated", !1);
							}
						} else {
							if(coO.isSelectableMultiple) {
								if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
								e.cancelForcedActivated.push(coO.id + "/ON#" + o);
							}
							this.$set(coO, "forcedActivated", !1);
						}
					},
					forceDeactivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
					forceDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (e.selectedThisManyTimesProp == 0) {
									if (coO.isActive && !e.isNotDeactivate) {
										if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
										this.activateObject(coO, coR);
									}
								}
							}
						}
					},
					forceRandomActivate: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						this.$set(e, 'activatedRandom', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandom = rd.slice(0, nAR);
						for (var a = 0, b = 0, v = 0; v < parseInt(nAR) + b; v++) {
							var rndV = e.activatedRandom[v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[rndV[0]]) {
								var co = this.app.comp[rndV[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = rndV[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandom.splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandom.splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomActivateMul: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						if ("undefined" === typeof e.activatedRandomMul) this.$set(e, 'activatedRandomMul', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandomMul.push(rd.slice(0, nAR));
						for (var a = 0, b = 0, v = 0; v < nAR + b; v++) {
							var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp - 1][v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aRM[0]]) {
								var co = this.app.comp[aRM[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = aRM[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
                    activateObject: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						var i = this,
							s = this.checkRequireds(e),
							o = this.checkPoints(e),
							k = !0;
						if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
							var cnt = 0;
							for (var r = 0; r < t.objects.length; r++) {
								if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
									if (t.objects[r].isSelectableMultiple)
										for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
									else
										this.activateObject(t.objects[r], t);
									break
								}
								else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
							}
							if (cnt >= t.allowedChoices) k = !1;
						}
						if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices) && !this.activated.includes(eid) && e.textfieldIsOn && e.customTextfieldIsOn && !this.app.wordChangeComplete) {
							this.$refs.confirm.open("", e.wordPromptText, {noconfirm: !0, word: !0}, e.wordChangeSelect)
							.then(({result, wordText}) => {
								if (result) {
									e.wordChangeSelect = wordText;
								} else {
									e.wordChangeSelect = e.wordChangeDeselect;
								}
								i.$set(i.app, "wordChangeComplete", !0);
								i.activateObject(e, t);
								i.$set(i.app, "wordChangeComplete", !1);
							});
						} else {
							if (!(e.selectOnce && e.isActive) && !this.linkedObjects.includes(e.id)) {
								for (var g = 0; g < e.scores.length; g++)
									if ("undefined" !== typeof e.scores[g].isRandom && e.scores[g].isRandom && !e.scores[g].setValue) {
										e.scores[g].value = Math.floor(Math.random() * (parseInt(e.scores[g].maxValue) - parseInt(e.scores[g].minValue) + 1)) + parseInt(e.scores[g].minValue);
										e.scores[g].setValue = !0;
										for (var a = 0; a < this.app.pointTypes.length; a++) this.app.pointTypes[a].id == e.scores[g].id && this.app.pointTypes[a].belowZeroNotAllowed && this.app.pointTypes[a].startingSum - parseInt(e.scores[g].value) < 0 && (e.scores[g].setValue = !1);
									}
								var tmpScores = [];
								if (!this.exceptedObjects.length == 0 && !this.exceptedObjects.includes(eid)) this.exceptedObjects.push(eid);
								if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices)) {
									if (this.activated.includes(eid)) {
										if (this.checkPointsMD(e)) {
											for (var a = 0; a < e.scores.length; a++) {
												if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
													for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
											}
											var ee = 0, EE = 0;
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
													for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
														var rdV = e.activatedRandom[v].split("/ON#"),
															rdNV = rdV.length > 1 ? rdV[1] : 1;
														if ("undefined" !== typeof this.app.comp[rdV[0]]) {
															this.forceDeactivate(e, rdV[0], rdNV);
														}
													}
												} else if (!e.isActivateRandom) {
													for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
														var pv = p[v].split("/ON#"),
															pnV = pv.length > 1 ? pv[1] : 1;
														if ("undefined" !== typeof this.app.comp[pv[0]]) {
															this.forceDeactivate(e, pv[0], pnV);
														} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
															var coG = this.app.compG[pv[0]],
																coGE = this.app.groups[coG.groups].elements;
															for (var h = coGE.length - 1; h >= 0; h--) {
																if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																	this.forceDeactivate(e, coGE[h].id, pnV);
																}
															}
														}
													}
												}
											}
											for (var f = 0; f < this.activated.length; f++) {
												var af = this.activated[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[af[0]]) {
													var co = this.app.comp[af[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
													if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
														var nH = this.activated.indexOf(eid);
														this.activated.splice(nH, 1);
														t.currentChoices -= 1;
														var bR = this.checkRequireds(coO);
														this.activated.splice(nH, 0, eid);
														t.currentChoices += 1;
														if (!bR) {
															this.exceptedObjects.push(coO.id);
															if (coO.isMultipleUseVariable) {
																for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																	coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
																}
																if (coO.forcedActivated) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																}
															} else {
																if (coO.forcedActivated) coO.forcedActivated = !1;
																this.activateObject(coO, coR);
															}
															f--;
														}
													}
												}
											}
											if (e.multiplyPointtypeIsOnCheck) {
												e.multiplyPointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.dividePointtypeIsOnCheck) {
												e.dividePointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToDivide.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.isChangeVariables) {
												for (var m = 0; m < e.changedVariables.length; m++) {
													for (var n = 0; n < this.app.variables.length; n++) {
														if (e.changedVariables[m] == this.app.variables[n].id) {
															if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
															else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
															else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
														}
													}
												}
											}
											if (e.textfieldIsOn) {
												for (var m = 0; m < this.app.words.length; m++) {
													if (this.app.words[m].id == e.idOfTheTextfieldWord) {
														this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
														this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
													}
												}
											}
											if (e.addToAllowChoice)
												if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
													var co = this.app.compR[e.idOfAllowChoice],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
													var d = coR.currentChoices;
													if (d > coR.allowedChoices) {
														var u = d - coR.allowedChoices;
														for (var v = 0; v < coR.objects.length; v++) {
															if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
																if (coR.objects[v].isSelectableMultiple)
																	for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
																else
																	this.activateObject(coR.objects[v], coR);
																u--;
															}
														}
													}
												}
											if (e.discountOther) {
												if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
													if (e.isDisChoices) {
														if ("undefined" !== typeof e.discountChoices) {
															for (var a = 0; a < e.discountChoices.length; a++) {
																if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																	var co = this.app.comp[e.discountChoices[a]],
																		coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																		coO = coR.objects[co.objects];
																	for (var c = 0; c < coO.scores.length; c++) {
																		var coS = coO.scores[c];
																		if (!coS.isNotDiscountable) {
																			this.discountC(e, coS);
																		}
																	}
																}
															}
														}
													} else {
														if ("undefined" !== typeof e.discountGroups) {
															for (var a = 0; a < this.app.groups.length; a++) {
																if (e.discountGroups.includes(this.app.groups[a].id)) {
																	for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																		if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																			var co = this.app.comp[this.app.groups[a].elements[b].id],
																				coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																				coO = coR.objects[co.objects];
																			for (var c = 0; c < coO.scores.length; c++) {
																				var coS = coO.scores[c];
																				if (!coS.isNotDiscountable) {
																					this.discountC(e, coS);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
											this.updateScoresC(e, t, tmpScores, 0);
											if (e.isImageUpload) {
												this.$set(e, "image", e.defaultImage);
											}
											if (e.backpackBtnRequirement)
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.changePointBar) {
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barBackgroundColor;
													this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
													this.$set(e, "changedBarBgColor", a);
												}
												if (e.changeBarTextColorIsOn) {
													var a = this.app.styling.barTextColor;
													this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
													this.$set(e, "changedBarTextColor", a);
												}
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barIconColor;
													this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
													this.$set(e, "changedBarIconColor", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
											if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
												if ("undefined" !== typeof bgmPlayer.unMute) {
													this.$set(this.app, "isMute", !1);
													bgmPlayer.unMute();
												}
											}
											if (e.isContentHidden) {
												for (var a = 0; a < e.hiddenContentsRow.length; a++) {
													if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
														var co = this.app.compR[e.hiddenContentsRow[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														for (var b = 0; b < e.hiddenContentsType.length; b++) {
															if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
															else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
															else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
															else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
															else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
															else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
														}
													}
												}
											}
											this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1;
											e.isActive = !e.isActive, this.updateActivated();
										}
									} else {
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
														}
													}
												} else {
													if("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																for (var b = 0; b < this.app.groups[a].elements.length; b++)
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																				if (!coS.isNotDiscountable) {
																					this.discountS(e, coS);
																				}
																			}
																		}
																	}
															}
														}
													}
												} 
											}
										}
										for (var g = 0; g < e.scores.length; g++)
											if (this.checkRequireds(e.scores[g]) && !e.scores[g].isActive)
												for (var w = 0; w < this.app.pointTypes.length; w++) this.app.pointTypes[w].id == e.scores[g].id && (this.app.pointTypes[w].startingSum -= (e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)), e.scores[g].isActive = !0, tmpScores.push({id: e.scores[g].id, value: e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[w].id, this.app.pointTypes[w].startingSum), e.scores[g].isChangeDiscount && this.$set(e.scores[g], "isChangeDiscount", false));
										this.activated.push(eid), t.currentChoices += 1;
										var a, f, b, m, v, ee = 0;
										if (e.duplicateRow) {
											if ("undefined" !== typeof e.duplicateRowId && "undefined" !== typeof e.duplicateRowPlace) this.duplicateRow(e, t);
										}
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom) {
												this.forceRandomActivate(e);
											} else {
												for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
													var yv = y[v].split("/ON#"),
														yNV = yv.length > 1 ? yv[1] : 1;
													if ("undefined" !== typeof this.app.comp[yv[0]]) {
														this.forceActivate(e, yv[0], yNV);
													} else if ("undefined" !== typeof this.app.compG[yv[0]]) {
														var coG = this.app.compG[yv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var w = 0; w < coGE.length; w++) {
															if ("undefined" !== typeof this.app.comp[coGE[w].id]) {
																this.forceActivate(e, coGE[w].id, yNV);
															}
														}
													}
												}
											}
										}
										if (e.deactivateOtherChoice)
											for (var y = e.deactivateThisChoice.split(","), f = 0; f < y.length; f++) {
												var yf = y[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[yf[0]]) {
													var co = this.app.comp[yf[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
														if (!coO.forcedActivated) {
															if (coO.isSelectableMultiple) {
																var ee = yf[1];
																if (ee > 0) {
																	for (var n = 0; n < ee; n++) {
																		this.selectedOneLess(coO, coR);
																	}
																} else if (ee < 0) {
																	for (var pp = 0; pp < -1 * ee; pp++) {
																		this.selectedOneMore(coO, coR);
																	}
																}
															} else {
																if (coO.isActive) this.activateObject(coO, coR);
															}
														}
												} else if ("undefined" !== typeof this.app.compG[yf[0]]) {
													var co = this.app.compG[yf[0]],
														coG = this.app.groups[co.groups];
													for (var T = 0; T < coG.elements.length; T++) {
														if ("undefined" !== typeof this.app.comp[coG.elements[T].id]) {
															var coT = this.app.comp[coG.elements[T].id],
																coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																coTO = coTR.objects[coT.objects];
															if (!coTO.forcedActivated) {
																if (coTO.isSelectableMultiple) {
																	var ee = yf[1];
																	if (ee > 0) {
																		for (var n = 0; n < ee; n++) {
																			this.selectedOneLess(coTO, coTR);
																		}
																	} else if (ee < 0) {
																		for (var pp = 0; pp < -1 * ee; pp++) {
																			this.selectedOneMore(coTO, coTR);
																		}
																	}
																} else {
																	if (coTO.isActive) this.activateObject(coTO, coTR);
																}
															}
														}
													}
												}
											}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (!this.exceptedObjects.includes(coO.id)) {
													if (!this.checkRequireds(coO)) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOn) {
											e.multiplyPointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtMultiply) this.$set(e, "startingSumAtMultiply", []);
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++)
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														if (e.multiplyPointtypeIsId)
															for (var x = 0; x < this.app.pointTypes.length; x++) {
																if (this.app.pointTypes[x].id == e.multiplyWithThis) {
																	e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																	this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																}
															}
														else e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * e.multiplyWithThis, this.app.pointTypes[m].startingSum *= e.multiplyWithThis; this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
											}
											this.app.mdObjects.push(e);
										}
										if (e.dividePointtypeIsOn) {
											e.dividePointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtDivide) this.$set(e, "startingSumAtDivide", []);
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														e.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / e.divideWithThis;
														this.app.pointTypes[m].startingSum /= e.divideWithThis;
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.push(e);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1") this.app.variables[n].isTrue = !0;
														else if (e.changeType == "2") this.app.variables[n].isTrue = !1;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresS(e, t, tmpScores, 0);
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = e.wordChangeSelect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.isImageUpload) {
											this.$set(e, "defaultImage", e.image);
											this.currentComponent = "appImageUpload"
										}
										if (e.backpackBtnRequirement) {
											if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
										}
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.scrollToRow) {
											var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
												compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
											if (e.scrollToObject) {
												if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
													if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.comp[e.scrollObjectId];
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														if (!coR.isEditModeOn) {
															this.$nextTick(() => {
																if (coR) {
																	var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																	if (coO) {
																		if (isBackpack) {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																		} else {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																		}
																	}
																}
															});
														}
													}
												}
											} else {
												if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
													if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.compR[e.scrollRowId];
															coR = p[co.rows];
														this.$nextTick(() => {
															if (coR) {
																if (isBackpack) {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																} else {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																}
															}
														});
													}
												}
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
												this.app.bgmIsPlaying = !0;
												this.playBgm(e, e.bgmId, 0);
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.mute) {
												this.$set(this.app, "isMute", !0);
												bgmPlayer.mute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													if (!coR.textIsRemoved) this.$set(coR, "textIsRemoved", true);
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", true);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", true);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", true);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", true);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", true);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", true);
													}
												}
											}
										}
										if (e.isFadeTransition) {
											"undefined" === typeof e.fadeTransitionColor || "" === e.fadeTransitionColor ? this.$set(this.app, "fadeTransitionColor", "000000FF") : this.$set(this.app, "fadeTransitionColor", e.fadeTransitionColor);
											"undefined" === typeof e.fadeTransitionTime || "" === e.fadeTransitionTime ? this.$set(this.app, "fadeTransitionTime", 0.25) : this.$set(this.app, "fadeTransitionTime", (e.fadeTransitionTime / 1000));
											this.$set(this.app, "fadeTransitionIsOn", !0);
											this.$nextTick(() => {
												setTimeout(() => {
													this.$set(this.app, "fadeTransitionIsOn", !1);
												}, this.app.fadeTransitionTime * 1000);
											});
										}
										e.isActive = !e.isActive, this.updateActivated();
										if (e.cleanACtivatedOnSelect) this.cleanActivated();
									}
								} else if (this.activated.includes(eid)) {
									if (this.checkPointsMD(e)) {
										for (var a = 0; a < e.scores.length; a++)
											if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
												for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
												for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
													var rdV = e.activatedRandom[v].split("/ON#"),
														rdNV = rdV.length > 1 ? rdV[1] : 1;
													if ("undefined" !== typeof this.app.comp[rdV[0]]) {
														this.forceDeactivate(e, rdV[0], rdNV);
													}
												}
											} else if (!e.isActivateRandom) {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== typeof this.app.comp[pv[0]]) {
														this.forceDeactivate(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivate(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var af = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[af[0]]) {
												var co = this.app.comp[af[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
													var nH = this.activated.indexOf(eid);
													this.activated.splice(nH, 1);
													t.currentChoices -= 1;
													var bR = this.checkRequireds(coO);
													this.activated.splice(nH, 0, eid);
													t.currentChoices += 1;
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOnCheck) {
											e.multiplyPointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.dividePointtypeIsOnCheck) {
											e.dividePointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
														else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
												var d = coR.currentChoices;
												if (d > coR.allowedChoices) {
													var u = d - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) {
														if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
															if (coR.objects[v].isSelectableMultiple)
																for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
															else
																this.activateObject(coR.objects[v], coR);
															u--;
														}
													}
												}
											}
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			if (!coS.isNotDiscountable) {
																				this.discountC(e, coS);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										this.updateScoresC(e, t, tmpScores, 0);
										if (e.isImageUpload) {
											this.$set(e, "image", e.defaultImage);
										}
										if (e.backpackBtnRequirement)
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarIconColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												this.app.bgmIsPlaying = !1;
												this.playBgm(e, e.bgmId, 0)
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.unMute) {
												this.$set(this.app, "isMute", !1);
												bgmPlayer.unMute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
													}
												}
											}
										}
										this.activated.splice(this.activated.indexOf(eid), 1), e.isActive = !e.isActive, this.updateActivated(), t.currentChoices -= 1;
									}
								}
								if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
							}
							if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
						}
                    },
                    updateObject: function() {
                        this.$emit("objectWasChanged", this.object)
                    },
                    selectedOneMore: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
									var cnt = 0;
									for (var r = 0; r < t.objects.length; r++) {
										if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
											if (t.objects[r].isSelectableMultiple)
												for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
											else
												this.activateObject(t.objects[r], t);
											break
										}
										else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
									}
									if (cnt >= t.allowedChoices) 
										s = !1;
									else 
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								} else {
									e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesPluss > this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum++, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable));
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if ("undefined" === typeof this.exceptedObjects) this.$set(this, "exceptedObjects", []);
								if (!this.exceptedObjects.length == 0) this.exceptedObjects.push(e.id);
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable > 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																if (!coS.isNotDiscountable) {
																	this.discountS(e, coS);
																}
															}
														}
													}
												}
											}
										} else {
											if("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++)
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
													}
												}
											}
										} 
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp > 0) {
													if ("undefined" === typeof e.scores[i].isActiveMul) this.$set(e.scores[i], "isActiveMul", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMul[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable);
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMulMinus[tmpVariable] || e.scores[i].isActiveMulMinus[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.multipleUseVariable > e.numMultipleTimesMinus) {
										if (e.isActive == !1) {
											e.isActive = !0, t.currentChoices += 1, this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
											if (e.backpackBtnRequirement) {
												if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
											}
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.scrollToRow) {
												var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
													compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
												if (e.scrollToObject) {
													if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
														if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.comp[e.scrollObjectId];
																coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
															if (!coR.isEditModeOn) {
																this.$nextTick(() => {
																	if (coR) {
																		var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																		if (coO) {
																			if (isBackpack) {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																			} else {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																			}
																		}
																	}
																});
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
														if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.compR[e.scrollRowId];
																coR = p[co.rows];
															this.$nextTick(() => {
																if (coR) {
																	if (isBackpack) {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																	} else {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																	}
																}
															});
														}
													}
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
													this.app.bgmIsPlaying = !0;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										} else {
											if (e.multipleUseVariable == 0) {
												e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											} else {
												this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable - 1)), (e.id + "/ON#" + e.multipleUseVariable));
											}
										}
										if (e.multipleUseVariable > 0) {
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom) {
													this.forceRandomActivateMul(e);
												} else {
													for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
														var yv = y[v].split("/ON#"),
															yNV = yv.length > 1 ? yv[1] : 1;
														if ("undefined" !== typeof this.app.comp[yv[0]]) {
															this.forceActivate(e, yv[0], yNV)
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects],
													nR = this.activated.indexOf(eid);
												if (!this.exceptedObjects.includes(coO.id)) {
													var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
													if (fI !== -1) var aFI = this.activated[fI].split("/ON#");
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) + 1) : (this.activated.push(eid), t.currentChoices += 1);
													var bR = this.checkRequireds(coO);
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1);
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresMulS(e, t, tmpScores, 0);
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    selectedOneLess: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (e.numMultipleTimesMinus < e.multipleUseVariable) {
									if (e.multipleUseVariable == 0 && t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
										var cnt = 0;
										for (var r = 0; r < t.objects.length; r++) {
											if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
												if (t.objects[r].isSelectableMultiple)
													for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
												else
													this.activateObject(t.objects[r], t);
												break
											}
											else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
										}
										if (cnt >= t.allowedChoices) 
											s = !1;
										else 
											e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									} else {
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									}
								} else {
									s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesMinus < this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum--, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum;
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable) + 1);
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable >= 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (!coS.isNotDiscountable) {
																this.discountC(e, coS);
															}
														}
													}
												}
											}
										} else {
											if ("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++) {
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp < 0) {
													if ("undefined" === typeof e.scores[i].isActiveMulMinus) this.$set(e.scores[i], "isActiveMulMinus", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMulMinus[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMul[tmpVariable] || e.scores[i].isActiveMul[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.isMultipleUseVariable >= 0) {
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandomMul && e.activatedRandomMul.length > 0) {
												for (var v = e.activatedRandomMul[e.selectedThisManyTimesProp].length - 1; v >= 0; v--) {
													var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp][v].split("/ON#"),
														anRM = aRM.length > 1 ? aRM[1] : 1;
													if ("undefined" !== typeof this.app.comp[aRM[0]]) {
														this.forceRandomDeactivateMul(e, aRM[0], anRM);
													}
												}
												e.activatedRandomMul.splice(e.selectedThisManyTimesProp, 1);
											} else {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== this.app.comp[pv[0]]) {
														this.forceDeactivateMul(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivateMul(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
									}
									for (var f = 0; f < this.activated.length; f++) {
										var aF = this.activated[f].split("/ON#");
										if ("undefined" !== typeof this.app.comp[aF[0]]) {
											var co = this.app.comp[aF[0]],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											if (coO.id !== e.id && !this.exceptedObjects.includes(coO.id)) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI !== -1) {
													var	aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													var bR = this.checkRequireds(coO);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, aFI[0] + "/ON#" + aFI[1]), t.currentChoices += 1);
													if (!bR) {
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
									}
									if (e.addToAllowChoice)
										if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
											var co = this.app.compR[e.idOfAllowChoice],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
											coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
											var d = coR.currentChoices;
											if (d > coR.allowedChoices) {
												var u = d - coR.allowedChoices;
												for (var v = 0; v < coR.objects.length; v++) {
													if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
														if (coR.objects[v].isSelectableMultiple)
															for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
														else
															this.activateObject(coR.objects[v], coR);
														u--;
													}
												}
											}
										}
									this.updateScoresMulC(e, t, tmpScores, 0);
									if (e.isActive == !0) {
										if (e.multipleUseVariable == 0 && ("undefined" === typeof e.forcedActivated || e.forcedActivated == !1)) {
											e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											if (e.backpackBtnRequirement) this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										}
										else this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), (e.id + "/ON#" + e.multipleUseVariable));
									} else {
										if (e.multipleUseVariable == -1) {
											e.isActive = !0, t.currentChoices += 1;
											this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
										}
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    updateActivated: function() {
                        this.$emit("activatedWasChanged", this.activated)
                    },
					duplicateRow: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var thisRow = rowType == "app" ? this.app.rows : this.backpack;
						var c, i, j, s, fr, fo, y, z, zx, zy, zz, nR = 0, nF = 0;
						for (var b = 0; b < thisRow.length; b++) {
							if (thisRow[b].id.split("/D#")[0] == e.duplicateRowId.split("/D#")[0]) {
								nR++;
							}
							if (thisRow[b].id == e.duplicateRowPlace) {
								nF = b + 1;
							}
						}
						for (var f = 0; f < thisRow.length; f++) {
							if (thisRow[f].id == e.duplicateRowId) {
								thisRow.splice(nF, 0, JSON.parse(JSON.stringify(thisRow[f])));
								fr = thisRow[nF], fr.currentChoices = 0;
								y = fr.id.split("/D#"), fr.id = y[0] + "/D#" + nR;
								for (fr.allowedChoicesChange > 0 && (fr.allowedChoices -= fr.allowedChoicesChange), s = 0; s < fr.objects.length; s++) {
									fo = fr.objects[s], z = fo.id.split("/D#"), fo.id = z[0] + "/D#" + nR;
									if (fo.multipleUseVariable) fo.multipleUseVariable = 0, fo.selectedThisManyTimesProp = 0;
									if (fo.isActive) fo.isActive = !1;
									fo.forcedActivated = !1;
									if (!e.dRowAddSufReq) {
										if ("undefined" !== typeof fo.requireds) {
											for (i = 0; i < fo.requireds.length; i++) {
												if ("id" == fo.requireds[i].type) {
													y = fo.requireds[i].reqId.split("/ON#");
													if (y.length > 1)
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
													else
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
												}
												else if ("or" == fo.requireds[i].type)
													for (c = 0; c < fo.requireds[i].orRequired.length; c++) {
														y = fo.requireds[i].orRequired[c].req.split("/ON#");
														if (y.length > 1)
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
														else
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
													}
												if ("undefined" !== typeof fo.requireds[i].requireds)
													for (j = 0; j < fo.requireds[i].requireds.length; j++) {
														if ("id" == fo.requireds[i].requireds[j].type) {
															y = fo.requireds[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.requireds[i].requireds[j].type)
															for (c = 0; c < fo.requireds[i].requireds[j].orRequired.length; c++) {
																y = fo.requireds[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
											}
										}
										if ("undefined" !== typeof fo.scores)
											for (i = 0; i < fo.scores.length; i++)
												if ("undefined" !== fo.scores[i].requireds)
													for (j = 0; j < fo.scores[i].requireds.length; j++) {
														if ("id" == fo.scores[i].requireds[j].type) {
															y = fo.scores[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.scores[i].requireds[j].type)
															for (c = 0; c < fo.scores[i].requireds[j].orRequired.length; c++) {
																y = fo.scores[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
																
													}
										if ("undefined" !== typeof fo.addons)
											for (i = 0; i < fo.addons.length; i++)
												if ("undefined" !== fo.addons[i].requireds)
													for (j = 0; j < fo.addons[i].requireds.length; j++) {
														if ("id" == fo.addons[i].requireds[j].type) {
															y = fo.addons[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.addons[i].requireds[j].type)
															for (c = 0; c < fo.addons[i].requireds[j].orRequired.length; c++) {
																y = fo.addons[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
									}
									if (!e.dRowAddSufFunc) {
										if (fo.activateOtherChoice) {
											zz = "";
											for (y = fo.activateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.activateThisChoice = zz.slice(0, -1);
										}
										if (fo.deactivateOtherChoice) {
											zz = "";
											for (y = fo.deactivateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.deactivateThisChoice = zz.slice(0, -1);
										}
										if (fo.duplicateRow) {
											y = fo.duplicateRowId.split("/D#"), fo.duplicateRowId = y[0] + "/D#" + nR;
											y = fo.duplicateRowPlace.split("/D#"), fo.duplicateRowPlace = y[0] + "/D#" + nR;
										}
									}
								}
								break
							}
						}
						for (var m = nF; m < thisRow.length; m++) {
							this.app.compR[thisRow[m].id] = {rows: m, type: rowType};
							for (var n = 0; n < thisRow[m].objects.length; n++) {
								var d = thisRow[m].objects[n].id;
								this.app.comp[thisRow[m].objects[n].id] = {rows: m, objects: n, type: rowType};
							}
						}
					}
                }
            },
            Kt = Xt,
            Zt = (o("a1b2"), Object(w["a"])(Kt, c, d, !1, null, "7ecb809e", null)),
            Qt = Zt.exports;
        x()(Zt, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCol: I["a"],
            VIcon: J["a"],
            VImg: X["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSpacer: O["a"],
            VSwitch: L["a"],
            VTextField: R["a"],
            VTextarea: Z["a"],
            VToolbar: Tt["a"],
            VTooltip: Q["a"]
        });
        var eo = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        "max-width": "700px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [e.state.saveWait ? [o("v-col", {
					staticClass: "col-full"
				}, [o("v-progress-circular", {
					staticClass: "v-progress-circular-top",
					attrs: {
						size: 50,
						color: "primary",
						indeterminate: true
					}
				})])] : e._e(), o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Load/Save Project")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
                    attrs: {
                        cols: e.window.width > 500 ? "8" : "12"
                    }
                }, [o("v-file-input", {
                    attrs: {
                        "hide-details": "",
                        label: "Load Project",
                        multiple: "",
                        placeholder: "Select your project",
                        "prepend-icon": "mdi-paperclip",
                        outlined: "",
                        "show-size": 1e3
                    },
                    on: {
                        change: e.uploadFile
                    },
                    scopedSlots: e._u([{
                        key: "selection",
                        fn: function(t) {
                            var i = t.index,
                                s = t.text;
                            return [i < 2 ? o("v-chip", {
                                attrs: {
                                    dark: "",
                                    label: "",
                                    small: ""
                                }
                            }, [e._v(e._s(s))]) : e._e()]
                        }
                    }]),
                    model: {
                        value: e.files,
                        callback: function(t) {
                            e.files = t
                        },
                        expression: "files"
                    }
                })], 1), o("v-col", {
                    attrs: {
                        cols: e.window.width > 500 ? "4" : "12"
                    }
                }, [o("v-btn", {
					staticClass: e.window.width > 500 ? "v-size--x-large" : "",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.loadFromLocalStorage()
                        }
                    }
                }, [e._v("Local Storage")])], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.saveFile("project")
                        }
                    }
                }, [e._v("Save Project")])], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" You can use the button below to save when you have finished your project, it will keep the images separated from the JSON. Do not overwrite your project, as the new JSON-file inside the zip this downloads will have no pictures if loaded into the Creator. Place the JSON into the app-file like normal, and the images-folder besides the other folders. If the project has a lot of images then they might end up not showing when someone loads on the page, if so then just use the normal way, and use Image Compression in features to reduce the size of the project file. "), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.saveFileFinished("project")
                        }
                    }
                }, [e.window.width > 500 ? e._v("Download Finished Project with separate images") : e._v("Download with separate images") ])], 1), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appStats"
                        }
                    }
                }, [e._v("Project Stats")])], 1), o("br"), e._v("If you want to download the desktop version of Interactive CYOA Creator Plus or support the developer, please check below. "), o("iframe", {
                    attrs: {
                        frameborder: "0",
                        src: e.$vuetify.theme.isDark ? "https://hikawasisters.neocities.org/embed_dark/" : "https://hikawasisters.neocities.org/embed/",
                        width: "700",
                        height: "169"
                    }
                })], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-card-actions", [o("v-spacer"), o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1), e.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.snackbar,
                        callback: function(t) {
                            e.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.text))])])], 1) : e._e()], 1)
            },
            to = [],
            oo = (o("a15b"), function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        "max-width": "800px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Downloadable Version and Project Stats")]), o("v-card-text", [o("v-container", [o("v-row", {
                    staticStyle: {
                        "text-align": "center"
                    },
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-col", {
                    staticClass: "pa-0"
                }, [o("v-col", [e._v(" Character Count: "), o("br"), e._v(" " + e._s(e.characterCount) + " Characters ")]), o("v-col", [e._v(" Choices Count: "), o("br"), e._v(" " + e._s(e.choicesCount) + " Choices ")]), o("v-col", [e._v(" Images Count: "), o("br"), e._v(" " + e._s(e.imagesCount) + " Images ")]), o("v-col", [e._v(" Rows Count: "), o("br"), e._v(" " + e._s(e.app.rows.length) + " Rows ")])], 1), o("v-col", {
                    staticClass: "pa-0"
                }, [o("v-col", [e._v(" Biggest Picture: "), o("br"), e._v(" " + e._s(e.biggestImage) + " ")]), o("v-col", [e._v(" Smallest Picture: "), o("br"), e._v(" " + e._s(e.smallestImage) + " ")]), o("v-col", [e._v(" Time Guesstimate: "), o("br"), e._v(" " + e._s(Math.floor(5 * e.imagesCount + e.characterCount / 175)) + " Minutes/ " + e._s(Math.floor((5 * e.imagesCount + e.characterCount / 175) / 60)) + " Hours "), o("br"), e._v("(175 Characters Per Minute, "), o("br"), e._v("5 Minutes Per Picture) ")])], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-spacer"), o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1)
            }),
            io = [],
            so = {
                data: function() {
                    return {
                        files: [],
                        dialog: !0,
                        currentComponent: ""
                    }
                },
                components: {},
                computed: {
                    app: function() {
                        return this.$store.state.app
                    },
                    characterCount: function() {
                        for (var e = 0, t = 0; t < this.app.rows.length; t++) {
                            "undefined" !== typeof this.app.rows[t].titleText && (e += this.app.rows[t].titleText.length, e += this.app.rows[t].title.length);
                            for (var o = 0; o < this.app.rows[t].objects.length; o++)
                                if ("undefined" !== typeof this.app.rows[t].objects[o].text) {
                                    e += this.app.rows[t].objects[o].title.length, e += this.app.rows[t].objects[o].text.length;
                                    for (var i = 0; i < this.app.rows[t].objects[o].addons.length; i++) e += this.app.rows[t].objects[o].addons[i].title.length, e += this.app.rows[t].objects[o].addons[i].text.length
                                }
                        }
                        return e
                    },
                    imagesCount: function() {
                        for (var e = 0, t = 0; t < this.app.rows.length; t++) {
                            "undefined" !== typeof this.app.rows[t].image && 0 != this.app.rows[t].image.length && (e += 1);
                            for (var o = 0; o < this.app.rows[t].objects.length; o++) "undefined" !== typeof this.app.rows[t].objects[o].image && 0 != this.app.rows[t].objects[o].image.length && (e += 1)
                        }
                        return e
                    },
                    choicesCount: function() {
                        for (var e = 0, t = 0; t < this.app.rows.length; t++)
                            for (var o = 0; o < this.app.rows[t].objects.length; o++) e += 1;
                        return e
                    },
                    biggestImage: function() {
                        for (var e, t, o, i = 0, s = 0; s < this.app.rows.length; s++)
                            for (var r = 0; r < this.app.rows[s].objects.length; r++) "undefined" !== typeof this.app.rows[s].objects[r].image && 0 != this.app.rows[s].objects[r].image.length && (o = this.app.rows[s].objects[r].image.length - "data:image/png;base64,".length, t = 4 * Math.ceil(o / 3) * .5624896334383812, Math.floor(t / 1e3) > 400, i < t && (i = t, e = this.app.rows[s].objects[r].title));
                        return Math.floor(i / 1e3) + " KB, " + e
                    },
                    smallestImage: function() {
                        for (var e, t, o, i = 0, s = 0; s < this.app.rows.length; s++)
                            for (var r = 0; r < this.app.rows[s].objects.length; r++) "undefined" !== typeof this.app.rows[s].objects[r].image && 0 != this.app.rows[s].objects[r].image.length && (o = this.app.rows[s].objects[r].image.length - "data:image/png;base64,".length, t = 4 * Math.ceil(o / 3) * .5624896334383812, (i > t || 0 == i) && (i = t, e = this.app.rows[s].objects[r].title));
                        return Math.floor(i / 1e3) + " KB, " + e
                    }
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            ro = so,
            ao = Object(w["a"])(ro, oo, io, !1, null, null, null),
            no = ao.exports;
        x()(ao, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSpacer: O["a"]
        });
        var lo = o("c4e3"),
            co = o.n(lo),
            po = o("21a6"),
            uo = o.n(po),
            ho = {
                data: function() {
                    return {
                        files: [],
                        dialog: !0,
                        currentComponent: "",
						snackbar: !1,
						text: "",
						imgMap: {},
						dImage: {},
						externalImages: {},
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                components: {
                    appStats: no
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    },
					state: function() {
						return this.$store.state
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
					initializeApp: function(e) {
						this.externalImages = new Set();
						if (e.app.autoSaveInterval) clearInterval(e.app.autoSaveInterval), e.app.autoSaveInterval = null;
						if ("undefined" === typeof e.app.checkDeleteRow) e.app.checkDeleteRow = !0;
						if (e.app.autoSaveIsOn) e.$store.commit("saveAutomatically", e);
						if (e.app.darkMode) e.$set(e.$vuetify.theme, "isDark", e.app.darkMode);
						if ("undefined" === typeof e.app.mdObjects) e.$set(e.app, "mdObjects", []);
						if ("object" === typeof e.app.styling.barIconColor && "undefined" !== typeof e.app.styling.barIconColor.hexa) e.$set(e.app.styling, "barIconColor", e.app.styling.barIconColor.hexa);
						if ("undefined" === typeof e.app.styling.barIconColor) e.$set(e.app.styling, "barIconColor", "#0000008A");
						if ("undefined" === typeof e.app.styling.selFilterBorderColor) e.$set(e.app.styling, "selFilterBorderColor", "#000000FF"); else if (e.app.styling.selFilterBorderColor.length == 7) e.$set(e.app.styling, "selFilterBorderColor", e.app.styling.selFilterBorderColor + "FF");
						if ("undefined" === typeof e.app.styling.selFilterCTitleColor) e.$set(e.app.styling, "selFilterCTitleColor", "#000000FF"); else if (e.app.styling.selFilterCTitleColor.length == 7) e.$set(e.app.styling, "selFilterCTitleColor", e.app.styling.selFilterCTitleColor + "FF");
						if ("undefined" === typeof e.app.styling.selFilterCTextColor) e.$set(e.app.styling, "selFilterCTextColor", "#000000FF"); else if (e.app.styling.selFilterCTextColor.length == 7) e.$set(e.app.styling, "selFilterCTextColor", e.app.styling.selFilterCTextColor + "FF");
						if ("undefined" === typeof e.app.styling.selFilterATitleColor) e.$set(e.app.styling, "selFilterATitleColor", "#000000FF"); else if (e.app.styling.selFilterATitleColor.length == 7) e.$set(e.app.styling, "selFilterATitleColor", e.app.styling.selFilterATitleColor + "FF");
						if ("undefined" === typeof e.app.styling.selFilterATextColor) e.$set(e.app.styling, "selFilterATextColor", "#000000FF"); else if (e.app.styling.selFilterATextColor.length == 7) e.$set(e.app.styling, "selFilterATextColor", e.app.styling.selFilterATextColor + "FF");
						if ("undefined" === typeof e.app.styling.reqFilterBorderColor) e.$set(e.app.styling, "reqFilterBorderColor", "#000000FF"); else if (e.app.styling.reqFilterBorderColor.length == 7) e.$set(e.app.styling, "reqFilterBorderColor", e.app.styling.reqFilterBorderColor + "FF");
						if ("undefined" === typeof e.app.styling.reqFilterCTitleColor) e.$set(e.app.styling, "reqFilterCTitleColor", "#000000FF"); else if (e.app.styling.reqFilterCTitleColor.length == 7) e.$set(e.app.styling, "reqFilterCTitleColor", e.app.styling.reqFilterCTitleColor + "FF");
						if ("undefined" === typeof e.app.styling.reqFilterCTextColor) e.$set(e.app.styling, "reqFilterCTextColor", "#000000FF"); else if (e.app.styling.reqFilterCTextColor.length == 7) e.$set(e.app.styling, "reqFilterCTextColor", e.app.styling.reqFilterCTextColor + "FF");
						if ("undefined" === typeof e.app.styling.reqFilterATitleColor) e.$set(e.app.styling, "reqFilterATitleColor", "#000000FF"); else if (e.app.styling.reqFilterATitleColor.length == 7) e.$set(e.app.styling, "reqFilterATitleColor", e.app.styling.reqFilterATitleColor + "FF");
						if ("undefined" === typeof e.app.styling.reqFilterATextColor) e.$set(e.app.styling, "reqFilterATextColor", "#000000FF"); else if (e.app.styling.reqFilterATextColor.length == 7) e.$set(e.app.styling, "reqFilterATextColor", e.app.styling.reqFilterATextColor + "FF");
						if ("undefined" === typeof e.app.styling.unselFilterBlurIsOn) e.$set(e.app.styling, "unselFilterBlurIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterBlur) e.$set(e.app.styling, "unselFilterBlur", 0);
						if ("undefined" === typeof e.app.styling.unselFilterBrightIsOn) e.$set(e.app.styling, "unselFilterBrightIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterBright) e.$set(e.app.styling, "unselFilterBright", 100);
						if ("undefined" === typeof e.app.styling.unselFilterContIsOn) e.$set(e.app.styling, "unselFilterContIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterCont) e.$set(e.app.styling, "unselFilterCont", 100);
						if ("undefined" === typeof e.app.styling.unselFilterGrayIsOn) e.$set(e.app.styling, "unselFilterGrayIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterGray) e.$set(e.app.styling, "unselFilterGray", 0);
						if ("undefined" === typeof e.app.styling.unselFilterHueIsOn) e.$set(e.app.styling, "unselFilterHueIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterHue) e.$set(e.app.styling, "unselFilterHue", 0);
						if ("undefined" === typeof e.app.styling.unselFilterInvertIsOn) e.$set(e.app.styling, "unselFilterInvertIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterInvert) e.$set(e.app.styling, "unselFilterInvert", 0);
						if ("undefined" === typeof e.app.styling.unselFilterOpacIsOn) e.$set(e.app.styling, "unselFilterOpacIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterOpac) e.$set(e.app.styling, "unselFilterOpac", 100);
						if ("undefined" === typeof e.app.styling.unselFilterSaturIsOn) e.$set(e.app.styling, "unselFilterSaturIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterSatur) e.$set(e.app.styling, "unselFilterSatur", 0);
						if ("undefined" === typeof e.app.styling.unselFilterSepiaIsOn) e.$set(e.app.styling, "unselFilterSepiaIsOn", !1);
						if ("undefined" === typeof e.app.styling.unselFilterSepia) e.$set(e.app.styling, "unselFilterSepia", 0);
						if ("undefined" === typeof e.app.rowDesignGroups) e.$set(e.app, "rowDesignGroups", []);
						if ("undefined" === typeof e.app.objectDesignGroups) e.$set(e.app, "objectDesignGroups", []);
						if ("undefined" === typeof e.app.rowIdLength) e.$set(e.app, "rowIdLength", 4);
						if ("undefined" === typeof e.app.objectIdLength) e.$set(e.app, "objectIdLength", 4);
						if ("undefined" === typeof e.app.styling.multiChoiceCounterPosition) e.$set(e.app.styling, "multiChoiceCounterPosition", 0);
						if ("undefined" === typeof e.app.styling.multiChoiceCounterSize) e.$set(e.app.styling, "multiChoiceCounterSize", 170);
						if ("undefined" === typeof e.app.styling.multiChoiceTextFont) e.$set(e.app.styling, "multiChoiceTextFont", "Times New Roman");
						if ("undefined" === typeof e.app.styling.multiChoiceTextSize) e.$set(e.app.styling, "multiChoiceTextSize", 100);
						if ("undefined" === typeof e.app.globalRequirements) e.$set(e.app, "globalRequirements", []);
						if ("undefined" === typeof e.app.orderOrReqText) e.$set(e.app, "orderOrReqText", "0");
						if ("undefined" === typeof e.app.defaultOrReq) e.$set(e.app, "defaultOrReq", "of");
						if ("undefined" === typeof e.app.orderSelReqText) e.$set(e.app, "orderSelReqText", "0");
						if ("undefined" === typeof e.app.defaultSelReq) e.$set(e.app, "defaultSelReq", "choice from");
						if ("undefined" === typeof e.app.pointTypeMap) e.$set(e.app, "pointTypeMap", {});
						if ("undefined" === typeof e.app.wordMap) e.$set(e.app, "wordMap", {});
						if ("undefined" === typeof e.app.objectMap) e.$set(e.app, "objectMap", {});
						if (!Array.isArray(e.app.tmpRequired)) e.$set(e.app, "tmpRequired", []);
						if ("undefined" === typeof e.app.objectsPerRow) e.$set(e.app, "objectsPerRow", "col-6");
						if ("undefined" === typeof e.app.isFadingOut) e.$set(e.app, "isFadingOut", !1);
						if ("undefined" === typeof e.app.bgmFadeInterval) e.$set(e.app, "bgmFadeInterval", 0);
						if ("undefined" === typeof e.app.bgmTitleInterval) e.$set(e.app, "bgmTitleInterval", 0);
						if ("undefined" === typeof e.app.bgmPlayInterval) e.$set(e.app, "bgmPlayInterval", 0);
						if ("undefined" === typeof e.app.bgmFadeTimer) e.$set(e.app, "bgmFadeTimer", 0);
						if ("undefined" === typeof e.app.lastFadeTime) e.$set(e.app, "lastFadeTime", 0);
						if ("undefined" === typeof e.app.showMusicPlayer) e.$set(e.app, "showMusicPlayer", !1);
						if ("undefined" === typeof e.app.curVolume) e.$set(e.app, "curVolume", 100);
						if ("undefined" === typeof e.app.isMute) e.$set(e.app, "isMute", !1);
						e.$set(e.app, "bgmTitle", "No Audio Title");
						e.$set(e.app, "bgmIsPlaying", !1);
						e.$set(e.app, "curBgmTime", 0);
						e.$set(e.app, "curBgmLength", 0);
						e.$set(e.app, "isSeeking", !1);
						for (var a = 0; a < e.app.pointTypes.length; a++) {
							if ("undefined" === typeof e.app.pointTypes[a].initValue) e.app.pointTypes[a].initValue = e.app.pointTypes[a].startingSum;
							if ("" != e.app.pointTypes[a].activatedId && "undefined" === typeof e.app.pointTypes[a].isNotShownPointBar) e.app.pointTypes[a].isNotShownPointBar = !0;
							if ("" != e.app.pointTypes[a].activatedId && "undefined" === typeof e.app.pointTypes[a].isNotShownObjects) e.app.pointTypes[a].isNotShownObjects = !0;
						}
						e.$set(e.app, "comp", {});
						e.$set(e.app, "compR", {});
						e.$set(e.app, "compG", {});
						e.$set(e.app, "compODG", {});
						e.$set(e.app, "compRDG", {});
						e.$set(e.app, "compGR", {});
						if ("undefined" !== typeof e.app.pointTypes) e.app.pointTypes.forEach(pt => {e.$set(e.app.pointTypeMap, pt.id, pt.startingSum)});
						if ("undefined" !== typeof e.app.words) e.app.words.forEach(w => {e.$set(e.app.wordMap, w.id, w.replaceText)});
						if ("undefined" !== typeof e.app.rows) e.app.rows.forEach(row => {row.objects.filter(object => object.isMultipleUseVariable).forEach(o => {e.$set(e.app.objectMap, o.id, o.multipleUseVariable)})});
						window.removeEventListener("keydown", e.$store.state.handleKeydown);
						if (e.app.enableShortcut) window.addEventListener("keydown", e.$store.state.handleKeydown);
						if ("undefined" === typeof e.app.googleFonts) e.$set(e.app, "googleFonts", []);
						for (var a = 0; a < e.app.googleFonts.length; a++) {
							var fontId = e.app.googleFonts[a].replaceAll(" ", "+"),
								url = "https://fonts.googleapis.com/css2?family=" + fontId + "&display=swap";
							const l = document.createElement("link");
							l.rel = "stylesheet";
							l.href = url;
							l.crossOrigin = "anonymous";
							document.head.appendChild(l);
						}
						if ("undefined" === typeof e.app.fadeTransitionColor) e.$set(e.app, "fadeTransitionColor", "#000000FF");
						if ("undefined" === typeof e.app.fadeTransitionTime) e.$set(e.app, "isMute", 0.25);
						for (var b = 0; b < e.app.rows.length; b++) {
							var coR = e.app.rows[b],
								g = coR.id;
							e.app.compR[g] = {rows: b, type: "app"};
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateFilterIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.filterStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateFilterIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateFilterIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateTextIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.textStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateTextIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateTextIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateObjectImageIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.objectImageStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateObjectImageIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateObjectImageIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateObjectIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.objectStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateObjectIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateObjectIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateRowImageIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.rowImageStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateRowImageIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateRowImageIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateRowIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.rowStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateRowIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateRowIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateAddonImageIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.addonImageStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateAddonImageIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateAddonImageIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateAddonIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.addonStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateAddonIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateAddonIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateBackgroundIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.backgroundStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateBackgroundIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateBackgroundIsOn", !1);
										}
									});
								}
							}
							if (coR.textIsRemoved) {
								if ("undefined" === typeof coR.objectTextRemoved) e.$set(coR, "objectTextRemoved", !0);
								if ("undefined" === typeof coR.addonTextRemoved) e.$set(coR, "addonTextRemoved", !0);
							}
							if (coR.isPrivateStyling && "undefined" !== typeof coR.styling && coR.privateFilterIsOn) {
								if ("undefined" === typeof coR.styling.unselFilterBlurIsOn) e.$set(coR.styling, "unselFilterBlurIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterBlur) e.$set(coR.styling, "unselFilterBlur", 0);
								if ("undefined" === typeof coR.styling.unselFilterBrightIsOn) e.$set(coR.styling, "unselFilterBrightIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterBright) e.$set(coR.styling, "unselFilterBright", 100);
								if ("undefined" === typeof coR.styling.unselFilterContIsOn) e.$set(coR.styling, "unselFilterContIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterCont) e.$set(coR.styling, "unselFilterCont", 100);
								if ("undefined" === typeof coR.styling.unselFilterGrayIsOn) e.$set(coR.styling, "unselFilterGrayIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterGray) e.$set(coR.styling, "unselFilterGray", 0);
								if ("undefined" === typeof coR.styling.unselFilterHueIsOn) e.$set(coR.styling, "unselFilterHueIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterHue) e.$set(coR.styling, "unselFilterHue", 0);
								if ("undefined" === typeof coR.styling.unselFilterInvertIsOn) e.$set(coR.styling, "unselFilterInvertIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterInvert) e.$set(coR.styling, "unselFilterInvert", 0);
								if ("undefined" === typeof coR.styling.unselFilterOpacIsOn) e.$set(coR.styling, "unselFilterOpacIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterOpac) e.$set(coR.styling, "unselFilterOpac", 100);
								if ("undefined" === typeof coR.styling.unselFilterSaturIsOn) e.$set(coR.styling, "unselFilterSaturIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterSatur) e.$set(coR.styling, "unselFilterSatur", 0);
								if ("undefined" === typeof coR.styling.unselFilterSepiaIsOn) e.$set(coR.styling, "unselFilterSepiaIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterSepia) e.$set(coR.styling, "unselFilterSepia", 0);
							}
							if (!coR.isPrivateStyling && "undefined" !== typeof coR.styling) {
								if ("undefined" !== typeof coR.styling.objectImgObjectFillHeight) e.$set(coR, "objectImgObjectFillHeight", coR.styling.objectImgObjectFillHeight);
								e.$delete(coR, "styling");
							}
							if ("undefined" !== typeof coR.debugTitle && coR.debugTitle === "") e.$delete(coR, "debugTitle");
							for (var c = 0; c < coR.objects.length; c++) {
								var coO = coR.objects[c],
									d = coO.id;
								e.app.comp[d] = {rows: b, objects: c, type: "app"};
								if (!coO.isSelectableMultiple && coO.isMultipleUseVariable) e.$set(coO, "isMultipleUseVariable", !1);
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateFilterIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.filterStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateFilterIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateFilterIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateTextIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.textStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateTextIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateTextIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateObjectImageIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.objectImageStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateObjectImageIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateObjectImageIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateObjectIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.objectStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateObjectIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateObjectIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateAddonImageIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.addonImageStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateAddonImageIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateAddonImageIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateAddonIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.addonStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateAddonIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateAddonIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateBackgroundIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.backgroundStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateBackgroundIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateBackgroundIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" !== typeof coO.styling && coO.privateFilterIsOn) {
									if ("undefined" === typeof coO.styling.unselFilterBlurIsOn) e.$set(coO.styling, "unselFilterBlurIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterBlur) e.$set(coO.styling, "unselFilterBlur", 0);
									if ("undefined" === typeof coO.styling.unselFilterBrightIsOn) e.$set(coO.styling, "unselFilterBrightIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterBright) e.$set(coO.styling, "unselFilterBright", 100);
									if ("undefined" === typeof coO.styling.unselFilterContIsOn) e.$set(coO.styling, "unselFilterContIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterCont) e.$set(coO.styling, "unselFilterCont", 100);
									if ("undefined" === typeof coO.styling.unselFilterGrayIsOn) e.$set(coO.styling, "unselFilterGrayIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterGray) e.$set(coO.styling, "unselFilterGray", 0);
									if ("undefined" === typeof coO.styling.unselFilterHueIsOn) e.$set(coO.styling, "unselFilterHueIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterHue) e.$set(coO.styling, "unselFilterHue", 0);
									if ("undefined" === typeof coO.styling.unselFilterInvertIsOn) e.$set(coO.styling, "unselFilterInvertIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterInvert) e.$set(coO.styling, "unselFilterInvert", 0);
									if ("undefined" === typeof coO.styling.unselFilterOpacIsOn) e.$set(coO.styling, "unselFilterOpacIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterOpac) e.$set(coO.styling, "unselFilterOpac", 100);
									if ("undefined" === typeof coO.styling.unselFilterSaturIsOn) e.$set(coO.styling, "unselFilterSaturIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterSatur) e.$set(coO.styling, "unselFilterSatur", 0);
									if ("undefined" === typeof coO.styling.unselFilterSepiaIsOn) e.$set(coO.styling, "unselFilterSepiaIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterSepia) e.$set(coO.styling, "unselFilterSepia", 0);
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.styling) {
									e.$set(coO, "styling", {});
									e.$set(coO, "privateFilterIsOn", !1);
									e.$set(coO, "privateTextIsOn", !1);
									e.$set(coO, "privateObjectImageIsOn", !1);
									e.$set(coO, "privateObjectIsOn", !1);
									e.$set(coO, "privateBackgroundIsOn", !1);
								}
								if (!coO.isPrivateStyling && "undefined" !== typeof coO.styling) e.$delete(coO, "styling");
								if ("undefined" !== typeof coO.debugTitle && coO.debugTitle === "") e.$delete(coO, "debugTitle");
								if (coO.isMultipleUseVariable && "number" !== typeof coO.initMultipleTimesMinus) {
									e.$set(coO, "initMultipleTimesMinus", 0);
									e.$set(coO, "initMultipleTimesMinus", parseInt(coO.numMultipleTimesMinus));
								}
								if (coO.isMultipleUseVariable) {
									for (var g = 0; g < coO.scores.length; g++) {
										if ("undefined" === typeof coO.scores[g].isActiveMul) {
											e.$set(coO.scores[g], "isActiveMul", []);
											for (var h = 0; h <= coO.multipleUseVariable - 1; h++) coO.scores[g].isActiveMul[h] = !0;
										}
									}
								}
								if (coO.discountOther && "undefined" === typeof coO.discountPointTypes) e.$set(coO, "discountPointTypes", []);
								if (coO.multiplyPointtypeIsOn && "string" === typeof coO.pointTypeToMultiply) e.$set(coO, "pointTypeToMultiply", [coO.pointTypeToMultiply]);
								if (coO.dividePointtypeIsOn && "string" === typeof coO.pointTypeToDivide) e.$set(coO, "pointTypeToDivide", [coO.pointTypeToDivide]);
								if (coO.multiplyPointtypeIsOn && "number" === typeof coO.startingSumAtMultiply) e.$set(coO, "startingSumAtMultiply", [coO.startingSumAtMultiply]);
								if (coO.dividePointtypeIsOn && "number" === typeof coO.startingSumAtDivide) e.$set(coO, "startingSumAtDivide", [coO.startingSumAtDivide]);
								for (var f = 0; f < coO.addons.length; f++) {
									var coA = coO.addons[f];
									if ("undefined" === typeof coA.template || 0 == coA.template) e.$set(coA, "template", 1);
									if ("undefined" === typeof coA.parentId) e.$set(coA, "parentId", coO.id)
								}
							}
						}
						for (var b = 0; b < e.app.backpack.length; b++) {
							var coR = e.app.backpack[b],
								g = coR.id;
							e.app.compR[g] = {rows: b, type: "backpack"};
							if (coR.textIsRemoved) {
								if ("undefined" === typeof coR.objectTextRemoved) e.$set(coR, "objectTextRemoved", !0);
								if ("undefined" === typeof coR.addonTextRemoved) e.$set(coR, "addonTextRemoved", !0);
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateFilterIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.filterStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateFilterIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateFilterIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateTextIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.textStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateTextIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateTextIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateObjectImageIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.objectImageStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateObjectImageIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateObjectImageIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateObjectIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.objectStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateObjectIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateObjectIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateRowImageIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.rowImageStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateRowImageIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateRowImageIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateAddonImageIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.addonImageStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateAddonImageIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateAddonImageIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateAddonIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.addonStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateAddonIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateAddonIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateRowIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.rowStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateRowIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateRowIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" === typeof coR.privateBackgroundIsOn) {
								if ("undefined" !== coR.styling) {
									Object.keys(e.state.backgroundStyling).forEach(key => {
										if (coR.styling.hasOwnProperty(key)) {
											e.$set(coR, "privateBackgroundIsOn", !0);
											return;
										} else {
											e.$set(coR, "privateBackgroundIsOn", !1);
										}
									});
								}
							}
							if (coR.isPrivateStyling && "undefined" !== typeof coR.styling && coR.privateFilterIsOn) {
								if ("undefined" === typeof coR.styling.unselFilterBlurIsOn) e.$set(coR.styling, "unselFilterBlurIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterBlur) e.$set(coR.styling, "unselFilterBlur", 0);
								if ("undefined" === typeof coR.styling.unselFilterBrightIsOn) e.$set(coR.styling, "unselFilterBrightIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterBright) e.$set(coR.styling, "unselFilterBright", 100);
								if ("undefined" === typeof coR.styling.unselFilterContIsOn) e.$set(coR.styling, "unselFilterContIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterCont) e.$set(coR.styling, "unselFilterCont", 100);
								if ("undefined" === typeof coR.styling.unselFilterGrayIsOn) e.$set(coR.styling, "unselFilterGrayIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterGray) e.$set(coR.styling, "unselFilterGray", 0);
								if ("undefined" === typeof coR.styling.unselFilterHueIsOn) e.$set(coR.styling, "unselFilterHueIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterHue) e.$set(coR.styling, "unselFilterHue", 0);
								if ("undefined" === typeof coR.styling.unselFilterInvertIsOn) e.$set(coR.styling, "unselFilterInvertIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterInvert) e.$set(coR.styling, "unselFilterInvert", 0);
								if ("undefined" === typeof coR.styling.unselFilterOpacIsOn) e.$set(coR.styling, "unselFilterOpacIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterOpac) e.$set(coR.styling, "unselFilterOpac", 100);
								if ("undefined" === typeof coR.styling.unselFilterSaturIsOn) e.$set(coR.styling, "unselFilterSaturIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterSatur) e.$set(coR.styling, "unselFilterSatur", 0);
								if ("undefined" === typeof coR.styling.unselFilterSepiaIsOn) e.$set(coR.styling, "unselFilterSepiaIsOn", !1);
								if ("undefined" === typeof coR.styling.unselFilterSepia) e.$set(coR.styling, "unselFilterSepia", 0);
							}
							if (!coR.isPrivateStyling && "undefined" !== typeof coR.styling) {
								if ("undefined" !== typeof coR.styling.objectImgObjectFillHeight) e.$set(coR, "objectImgObjectFillHeight", coR.styling.objectImgObjectFillHeight);
								e.$delete(coR, "styling");
							}
							if ("undefined" !== typeof coR.debugTitle && coR.debugTitle === "") e.$delete(coR, "debugTitle");
							for (var c = 0; c < coR.objects.length; c++) {
								var coO = coR.objects[c],
									d = coO.id;
								e.app.comp[d] = {rows: b, objects: c, type: "backpack"};
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateFilterIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.filterStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateFilterIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateFilterIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateTextIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.textStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateTextIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateTextIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateObjectImageIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.objectImageStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateObjectImageIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateObjectImageIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateObjectIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.objectStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateObjectIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateObjectIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateAddonImageIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.addonImageStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateAddonImageIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateAddonImageIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateAddonIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.addonStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateAddonIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateAddonIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" === typeof coO.privateBackgroundIsOn) {
									if ("undefined" !== coO.styling) {
										Object.keys(e.state.backgroundStyling).forEach(key => {
											if (coO.styling.hasOwnProperty(key)) {
												e.$set(coO, "privateBackgroundIsOn", !0);
												return;
											} else {
												e.$set(coO, "privateBackgroundIsOn", !1);
											}
										});
									}
								}
								if (coO.isPrivateStyling && "undefined" !== typeof coO.styling && coO.privateFilterIsOn) {
									if ("undefined" === typeof coO.styling.unselFilterBlurIsOn) e.$set(coO.styling, "unselFilterBlurIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterBlur) e.$set(coO.styling, "unselFilterBlur", 0);
									if ("undefined" === typeof coO.styling.unselFilterBrightIsOn) e.$set(coO.styling, "unselFilterBrightIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterBright) e.$set(coO.styling, "unselFilterBright", 100);
									if ("undefined" === typeof coO.styling.unselFilterContIsOn) e.$set(coO.styling, "unselFilterContIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterCont) e.$set(coO.styling, "unselFilterCont", 100);
									if ("undefined" === typeof coO.styling.unselFilterGrayIsOn) e.$set(coO.styling, "unselFilterGrayIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterGray) e.$set(coO.styling, "unselFilterGray", 0);
									if ("undefined" === typeof coO.styling.unselFilterHueIsOn) e.$set(coO.styling, "unselFilterHueIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterHue) e.$set(coO.styling, "unselFilterHue", 0);
									if ("undefined" === typeof coO.styling.unselFilterInvertIsOn) e.$set(coO.styling, "unselFilterInvertIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterInvert) e.$set(coO.styling, "unselFilterInvert", 0);
									if ("undefined" === typeof coO.styling.unselFilterOpacIsOn) e.$set(coO.styling, "unselFilterOpacIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterOpac) e.$set(coO.styling, "unselFilterOpac", 100);
									if ("undefined" === typeof coO.styling.unselFilterSaturIsOn) e.$set(coO.styling, "unselFilterSaturIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterSatur) e.$set(coO.styling, "unselFilterSatur", 0);
									if ("undefined" === typeof coO.styling.unselFilterSepiaIsOn) e.$set(coO.styling, "unselFilterSepiaIsOn", !1);
									if ("undefined" === typeof coO.styling.unselFilterSepia) e.$set(coO.styling, "unselFilterSepia", 0);
								}
								if (!coO.isPrivateStyling && "undefined" !== typeof coO.styling) e.$delete(coO, "styling");
								if ("undefined" !== typeof coO.debugTitle && coO.debugTitle === "") e.$delete(coO, "debugTitle");
								if (coO.multiplyPointtypeIsOn && "string" === typeof coO.pointTypeToMultiply) e.$set(coO, "pointTypeToMultiply", [coO.pointTypeToMultiply]);
								if (coO.dividePointtypeIsOn && "string" === typeof coO.pointTypeToDivide) e.$set(coO, "pointTypeToDivide", [coO.pointTypeToDivide]);
								if (coO.multiplyPointtypeIsOn && "number" === typeof coO.startingSumAtMultiply) e.$set(coO, "startingSumAtMultiply", [coO.startingSumAtMultiply]);
								if (coO.dividePointtypeIsOn && "number" === typeof coO.startingSumAtDivide) e.$set(coO, "startingSumAtDivide", [coO.startingSumAtDivide]);
								for (var f = 0; f < coO.addons.length; f++) {
									var coA = coO.addons[f];
									if ("undefined" === typeof coA.template || 0 == coA.template) e.$set(coA, "template", 1);
									if ("undefined" === typeof coA.parentId) e.$set(coA, "parentId", coO.id)
								}
							}
						}
						for (var f = 0; f < e.app.groups.length; f++) {
							var r = e.app.groups[f].id;
							e.app.compG[r] = {groups: f};
						}
						for (var h = 0; h < e.app.objectDesignGroups.length; h++) {
							var oDG = e.app.objectDesignGroups[h],
								i = oDG.id;
							e.app.compODG[i] = {designGroups: h};
							if ("undefined" === typeof oDG.activatedId) e.$set(oDG, "activatedId", "");
							if (oDG.privateFilterIsOn) {
								if ("undefined" === typeof oDG.styling.unselFilterBlurIsOn) e.$set(oDG.styling, "unselFilterBlurIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterBlur) e.$set(oDG.styling, "unselFilterBlur", 0);
								if ("undefined" === typeof oDG.styling.unselFilterBrightIsOn) e.$set(oDG.styling, "unselFilterBrightIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterBright) e.$set(oDG.styling, "unselFilterBright", 100);
								if ("undefined" === typeof oDG.styling.unselFilterContIsOn) e.$set(oDG.styling, "unselFilterContIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterCont) e.$set(oDG.styling, "unselFilterCont", 100);
								if ("undefined" === typeof oDG.styling.unselFilterGrayIsOn) e.$set(oDG.styling, "unselFilterGrayIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterGray) e.$set(oDG.styling, "unselFilterGray", 0);
								if ("undefined" === typeof oDG.styling.unselFilterHueIsOn) e.$set(oDG.styling, "unselFilterHueIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterHue) e.$set(oDG.styling, "unselFilterHue", 0);
								if ("undefined" === typeof oDG.styling.unselFilterInvertIsOn) e.$set(oDG.styling, "unselFilterInvertIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterInvert) e.$set(oDG.styling, "unselFilterInvert", 0);
								if ("undefined" === typeof oDG.styling.unselFilterOpacIsOn) e.$set(oDG.styling, "unselFilterOpacIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterOpac) e.$set(oDG.styling, "unselFilterOpac", 100);
								if ("undefined" === typeof oDG.styling.unselFilterSaturIsOn) e.$set(oDG.styling, "unselFilterSaturIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterSatur) e.$set(oDG.styling, "unselFilterSatur", 0);
								if ("undefined" === typeof oDG.styling.unselFilterSepiaIsOn) e.$set(oDG.styling, "unselFilterSepiaIsOn", !1);
								if ("undefined" === typeof oDG.styling.unselFilterSepia) e.$set(oDG.styling, "unselFilterSepia", 0);
							}
						}
						for (var h = 0; h < e.app.rowDesignGroups.length; h++) {
							var rDG = e.app.rowDesignGroups[h],
								i = rDG.id;
							e.app.compRDG[i] = {designGroups: h};
							if ("undefined" === typeof rDG.activatedId) e.$set(rDG, "activatedId", "");
							if (rDG.privateFilterIsOn) {
								if ("undefined" === typeof rDG.styling.unselFilterBlurIsOn) e.$set(rDG.styling, "unselFilterBlurIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterBlur) e.$set(rDG.styling, "unselFilterBlur", 0);
								if ("undefined" === typeof rDG.styling.unselFilterBrightIsOn) e.$set(rDG.styling, "unselFilterBrightIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterBright) e.$set(rDG.styling, "unselFilterBright", 100);
								if ("undefined" === typeof rDG.styling.unselFilterContIsOn) e.$set(rDG.styling, "unselFilterContIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterCont) e.$set(rDG.styling, "unselFilterCont", 100);
								if ("undefined" === typeof rDG.styling.unselFilterGrayIsOn) e.$set(rDG.styling, "unselFilterGrayIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterGray) e.$set(rDG.styling, "unselFilterGray", 0);
								if ("undefined" === typeof rDG.styling.unselFilterHueIsOn) e.$set(rDG.styling, "unselFilterHueIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterHue) e.$set(rDG.styling, "unselFilterHue", 0);
								if ("undefined" === typeof rDG.styling.unselFilterInvertIsOn) e.$set(rDG.styling, "unselFilterInvertIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterInvert) e.$set(rDG.styling, "unselFilterInvert", 0);
								if ("undefined" === typeof rDG.styling.unselFilterOpacIsOn) e.$set(rDG.styling, "unselFilterOpacIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterOpac) e.$set(rDG.styling, "unselFilterOpac", 100);
								if ("undefined" === typeof rDG.styling.unselFilterSaturIsOn) e.$set(rDG.styling, "unselFilterSaturIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterSatur) e.$set(rDG.styling, "unselFilterSatur", 0);
								if ("undefined" === typeof rDG.styling.unselFilterSepiaIsOn) e.$set(rDG.styling, "unselFilterSepiaIsOn", !1);
								if ("undefined" === typeof rDG.styling.unselFilterSepia) e.$set(rDG.styling, "unselFilterSepia", 0);
							}
						}
						for (var h = 0; h < e.app.globalRequirements.length; h++) {
							var i = e.app.globalRequirements[h].id;
							e.app.compGR[i] = {globalRequirements: h};
						}
					},
					replaceImages: function(e) {
						if ("undefined" !== typeof e.app.styling.backgroundImage && "undefined" !== typeof e.imgMap[e.app.styling.backgroundImage]) {
							e.$set(e.app.styling, "backgroundImage", e.imgMap[e.app.styling.backgroundImage]);
						}
						if ("undefined" !== typeof e.app.styling.rowBackgroundImage && "undefined" !== typeof e.imgMap[e.app.styling.rowBackgroundImage]) {
							e.$set(e.app.styling, "rowBackgroundImage", e.imgMap[e.app.styling.rowBackgroundImage]);
						}
						if (e.app.styling.objectBackgroundImage && "undefined" !== typeof e.imgMap[e.app.styling.objectBackgroundImage]) {
							e.$set(e.app.styling, "objectBackgroundImage", e.imgMap[e.app.styling.objectBackgroundImage]);
						}
						if ("undefined" !== typeof e.app.styling.rowBorderImage && "undefined" !== typeof e.imgMap[e.app.styling.rowBorderImage]) {
							e.$set(e.app.styling, "rowBorderImage", e.imgMap[e.app.styling.rowBorderImage]);
						}
						if ("undefined" !== typeof e.app.styling.objectBorderImage && "undefined" !== typeof e.imgMap[e.app.styling.objectBorderImage]) {
							e.$set(e.app.styling, "objectBorderImage", e.imgMap[e.app.styling.objectBorderImage]);
						}
                        for (var s = 0; s < e.app.rows.length; s++) {
							if ("undefined" !== typeof e.app.rows[s].styling && "undefined" !== typeof e.app.rows[s].styling.rowBackgroundImage && "undefined" !== typeof e.imgMap[e.app.rows[s].styling.rowBackgroundImage]) {
								e.app.rows[s].styling.rowBackgroundImage = e.imgMap[e.app.rows[s].styling.rowBackgroundImage];
							}
							if ("undefined" !== typeof e.app.rows[s].styling && "undefined" !== typeof e.app.rows[s].styling.objectBackgroundImage && "undefined" !== typeof e.imgMap[e.app.rows[s].styling.objectBackgroundImage]) {
								e.app.rows[s].styling.objectBackgroundImage = e.imgMap[e.app.rows[s].styling.objectBackgroundImage];
							}
							if ("undefined" !== typeof e.app.rows[s].styling && "undefined" !== typeof e.app.rows[s].styling.rowBorderImage && "undefined" !== typeof e.imgMap[e.app.rows[s].styling.rowBorderImage]) {
								e.app.rows[s].styling.rowBorderImage = e.imgMap[e.app.rows[s].styling.rowBorderImage];
							}
							if ("undefined" !== typeof e.app.rows[s].styling && "undefined" !== typeof e.app.rows[s].styling.objectBorderImage && "undefined" !== typeof e.imgMap[e.app.rows[s].styling.objectBorderImage]) {
								e.app.rows[s].styling.objectBorderImage = e.imgMap[e.app.rows[s].styling.objectBorderImage];
							}
							if ("undefined" !== typeof e.app.rows[s].image && "undefined" !== typeof e.imgMap[e.app.rows[s].image]) {
								e.app.rows[s].image = e.imgMap[e.app.rows[s].image];
							}
							for (var r = 0; r < e.app.rows[s].objects.length; r++) {
								if ("undefined" !== typeof e.app.rows[s].objects[r].styling && "undefined" !== typeof e.app.rows[s].objects[r].styling.objectBackgroundImage && "undefined" !== typeof e.imgMap[e.app.rows[s].objects[r].styling.objectBackgroundImage]) {
									e.app.rows[s].objects[r].styling.objectBackgroundImage = e.imgMap[e.app.rows[s].objects[r].styling.objectBackgroundImage];
								}
								if ("undefined" !== typeof e.app.rows[s].objects[r].styling && "undefined" !== typeof e.app.rows[s].objects[r].styling.objectBorderImage && "undefined" !== typeof e.imgMap[e.app.rows[s].objects[r].styling.objectBorderImage]) {
									e.app.rows[s].objects[r].styling.objectBorderImage = e.imgMap[e.app.rows[s].objects[r].styling.objectBorderImage];
								}
								if ("undefined" !== typeof e.app.rows[s].objects[r].image && "undefined" !== typeof e.imgMap[e.app.rows[s].objects[r].image]) {
									e.app.rows[s].objects[r].image = e.imgMap[e.app.rows[s].objects[r].image];
								}
								if ("undefined" !== typeof e.app.rows[s].objects[r].bgImage && "undefined" !== typeof e.imgMap[e.app.rows[s].objects[r].bgImage]) {
									e.app.rows[s].objects[r].bgImage = e.imgMap[e.app.rows[s].objects[r].bgImage];
								}
								for (var a = 0; a < e.app.rows[s].objects[r].addons.length; a++) {
									if ("undefined" !== typeof e.app.rows[s].objects[r].addons[a].image && "undefined" !== typeof e.imgMap[e.app.rows[s].objects[r].addons[a].image]) {
										e.app.rows[s].objects[r].addons[a].image = e.imgMap[e.app.rows[s].objects[r].addons[a].image];
									}
								}
                            }
						}
						for (var s = 0; s < e.app.backpack.length; s++) {
							if ("undefined" !== typeof e.app.backpack[s].image && "undefined" !== typeof e.imgMap[e.app.backpack[s].image]) {
								e.app.backpack[s].image = e.imgMap[e.app.backpack[s].image];
							}
							if ("undefined" !== typeof e.app.backpack[s].styling && "undefined" !== typeof e.app.backpack[s].styling.rowBackgroundImage && "undefined" !== typeof e.imgMap[e.app.backpack[s].styling.rowBackgroundImage]) {
								e.app.backpack[s].styling.rowBackgroundImage = e.imgMap[e.app.backpack[s].styling.rowBackgroundImage];
							}
							if ("undefined" !== typeof e.app.backpack[s].styling && "undefined" !== typeof e.app.backpack[s].styling.objectBackgroundImage && "undefined" !== typeof e.imgMap[e.app.backpack[s].styling.objectBackgroundImage]) {
								e.app.backpack[s].styling.objectBackgroundImage = e.imgMap[e.app.backpack[s].styling.objectBackgroundImage];
							}
							if ("undefined" !== typeof e.app.backpack[s].styling && "undefined" !== typeof e.app.backpack[s].styling.rowBorderImage && "undefined" !== typeof e.imgMap[e.app.backpack[s].styling.rowBorderImage]) {
								e.app.backpack[s].styling.rowBorderImage = e.imgMap[e.app.backpack[s].styling.rowBorderImage];
							}
							if ("undefined" !== typeof e.app.backpack[s].styling && "undefined" !== typeof e.app.backpack[s].styling.objectBorderImage && "undefined" !== typeof e.imgMap[e.app.backpack[s].styling.objectBorderImage]) {
								e.app.backpack[s].styling.objectBorderImage = e.imgMap[e.app.backpack[s].styling.objectBorderImage];
							}
							for (var r = 0; r < e.app.backpack[s].objects.length; r++) {
								if ("undefined" !== typeof e.app.backpack[s].objects[r].styling && "undefined" !== typeof e.app.backpack[s].objects[r].styling.objectBackgroundImage && "undefined" !== typeof e.imgMap[e.app.backpack[s].objects[r].styling.objectBackgroundImage]) {
									e.app.backpack[s].objects[r].styling.objectBackgroundImage = e.imgMap[e.app.backpack[s].objects[r].styling.objectBackgroundImage];
								}
								if ("undefined" !== typeof e.app.backpack[s].objects[r].styling && "undefined" !== typeof e.app.backpack[s].objects[r].styling.objectBorderImage && "undefined" !== typeof e.imgMap[e.app.backpack[s].objects[r].styling.objectBorderImage]) {
									e.app.backpack[s].objects[r].styling.objectBorderImage = e.imgMap[e.app.backpack[s].objects[r].styling.objectBorderImage];
								}
								if ("undefined" !== typeof e.app.backpack[s].objects[r].image && "undefined" !== typeof e.imgMap[e.app.backpack[s].objects[r].image]) {
									e.app.backpack[s].objects[r].image = e.imgMap[e.app.backpack[s].objects[r].image];
								}
                                for (var a = 0; a < e.app.backpack[s].objects[r].addons.length; a++) {
									if ("undefined" !== typeof e.app.backpack[s].objects[r].addons[a].image && "undefined" !== typeof e.imgMap[e.app.backpack[s].objects[r].addons[a].image]) {
										e.app.backpack[s].objects[r].addons[a].image = e.imgMap[e.app.backpack[s].objects[r].addons[a].image];
									}
								}
							}
						}
						for (var s = 0; s < e.app.rowDesignGroups.length; s++) {
							if ("undefined" !== typeof e.app.rowDesignGroups[s].styling.rowBackgroundImage && "undefined" !== typeof e.imgMap[e.app.rowDesignGroups[s].styling.rowBackgroundImage]) {
								e.app.rowDesignGroups[s].styling.rowBackgroundImage = e.imgMap[e.app.rowDesignGroups[s].styling.rowBackgroundImage];
							}
							if ("undefined" !== typeof e.app.rowDesignGroups[s].styling.objectBackgroundImage && "undefined" !== typeof e.imgMap[e.app.rowDesignGroups[s].styling.objectBackgroundImage]) {
								e.app.rowDesignGroups[s].styling.objectBackgroundImage = e.imgMap[e.app.rowDesignGroups[s].styling.objectBackgroundImage];
							}
							if ("undefined" !== typeof e.app.rowDesignGroups[s].styling.rowBorderImage && "undefined" !== typeof e.imgMap[e.app.rowDesignGroups[s].styling.rowBorderImage]) {
								e.app.rowDesignGroups[s].styling.rowBorderImage = e.imgMap[e.app.rowDesignGroups[s].styling.rowBorderImage];
							}
							if ("undefined" !== typeof e.app.rowDesignGroups[s].styling.objectBorderImage && "undefined" !== typeof e.imgMap[e.app.rowDesignGroups[s].styling.objectBorderImage]) {
								e.app.rowDesignGroups[s].styling.objectBorderImage = e.imgMap[e.app.rowDesignGroups[s].styling.objectBorderImage];
							}
                        }
						for (var r = 0; r < e.app.objectDesignGroups.length; r++) {
							if ("undefined" !== typeof e.app.objectDesignGroups[r].styling.objectBackgroundImage && "undefined" !== typeof e.imgMap[e.app.objectDesignGroups[r].styling.objectBackgroundImage]) {
								e.app.objectDesignGroups[r].styling.objectBackgroundImage = e.imgMap[e.app.objectDesignGroups[r].styling.objectBackgroundImage];
							}
							if ("undefined" !== typeof e.app.objectDesignGroups[r].styling.objectBorderImage && "undefined" !== typeof e.imgMap[e.app.objectDesignGroups[r].styling.objectBorderImage]) {
								e.app.objectDesignGroups[r].styling.objectBorderImage = e.imgMap[e.app.objectDesignGroups[r].styling.objectBorderImage];
							}
						}
					},
                    uploadFile: function() {
                        var e = this;
                        var t = new FileReader;
                        t.onload = function(o) {
							var ext = e.files[0].name.split(".").pop().toLowerCase();
							if (ext == "json") {
								const d = new TextDecoder('utf-8');
								const txt = d.decode(t.result);
								if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.bgmIsPlaying) bgmPlayer.stopVideo();
								clearInterval(e.app.bgmPlayInterval);
								clearInterval(e.app.bgmTitleInterval);
								clearInterval(e.app.bgmFadeInterval);
								clearInterval(e.app.bgmFadeTimer);
								clearInterval(e.app.autoSaveInterval);
								e.$store.commit("loadApp", JSON.parse(txt));
								e.initializeApp(e);
							} else if (ext == "zip" || ext == "rar" || ext == "7z") {
								var s = new co.a;
								s.loadAsync(t.result).then(function(i) {
									var jFile, p = [];
									Object.keys(i.files).forEach(function(f) {
										var file = i.files[f];
										if (f.endsWith(".json")) {
											jFile = file;
										} else if (/\.[^\.]+$/.test(f)) {
											p.push(
												file.async("blob").then(function(b) {
													return new Promise(function(resolve) {
														var r = new FileReader();
														r.onload = function() {
															var mimeType = e.getMimeFromBlob(f);
															e.imgMap[f] = r.result.replace("data:application/octet-stream", "data:" + mimeType);
															resolve();
														}, r.readAsDataURL(b);
													});
												})
											);	
										}
									});
									Promise.all(p).then(function() {
										if (jFile) {
											jFile.async("string").then(function(f) {
												if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.bgmIsPlaying) bgmPlayer.stopVideo();
												clearInterval(e.app.bgmPlayInterval);
												clearInterval(e.app.bgmTitleInterval);
												clearInterval(e.app.bgmFadeInterval);
												clearInterval(e.app.bgmFadeTimer);
												clearInterval(e.app.autoSaveInterval);
												e.$store.commit("loadApp", JSON.parse(f));
												e.initializeApp(e);
												e.replaceImages(e);
												e.$set(e, "imgMap", {});
											});
										}
									});
								}).catch(function(err) {
									console.log(err);
								});
							}
                        }, t.readAsArrayBuffer(this.files[0]);
                    },
					loadFromLocalStorage: function() {
                        var e = this,
							h = !1;
						const request = indexedDB.open('ICCPlus', 1);
						request.onupgradeneeded = function(t) {
							const db = t.target.result;
							if (!db.objectStoreNames.contains('autoSave')) {
								db.createObjectStore('autoSave');
								h = !0;
							}
						};
						request.onsuccess = function(t) {
							const db = t.target.result;
							const transaction = db.transaction(['autoSave'], 'readonly');
							const store = transaction.objectStore('autoSave');
							if (h) {
								var o = localStorage.getItem("Auto-save");
								if (o) {
									const tr = db.transaction(['autoSave'], 'readwrite');
									const s = tr.objectStore('autoSave');
									var sv = JSON.parse(o);
									s.put(sv, '1');
									if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.bgmIsPlaying) bgmPlayer.stopVideo();
									clearInterval(e.app.bgmPlayInterval);
									clearInterval(e.app.bgmTitleInterval);
									clearInterval(e.app.bgmFadeInterval);
									clearInterval(e.app.bgmFadeTimer);
									clearInterval(e.app.autoSaveInterval);
									e.$store.commit("loadApp", sv);
									e.initializeApp(e);
								} else {
									e.text = "There is no data in local storage", e.snackbar = !0;
								}
							} else {
								const getRequest = store.get('1');
								getRequest.onsuccess = function(o) {
									const i = o.target.result;
									if (i) {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.bgmIsPlaying) bgmPlayer.stopVideo(); 
										clearInterval(e.app.bgmPlayInterval);
										clearInterval(e.app.bgmTitleInterval);
										clearInterval(e.app.bgmFadeInterval);
										clearInterval(e.app.bgmFadeTimer);
										clearInterval(e.app.autoSaveInterval);
										e.$store.commit("loadApp", i);
										e.initializeApp(e);
									} else {
										e.text = "There is no data in local storage", e.snackbar = !0;
									}
								};
								getRequest.onerror = function(event) {
									console.error('Database error:', event.target.errorCode);
								};
							}
						};
						request.onerror = function(event) {
							console.error('Database error:', event.target.errorCode);
						};
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					addImage: function(e, t, o, i) {
						if (this.dImage.has(o)) {
							return this.dImage.get(o);
						}
						else {
							this.dImage.set(o, e);
							i.file(e, t, { binary: !0 });
							return e;
						}
					},
                    saveFile: function(e) {
						var exceptedList = ["comp", "compR", "compG", "compODG", "compRDG", "compGR", "backpackDialog"],
							sv = JSON.parse(JSON.stringify(this.app, (key, value) => {
								if (exceptedList.includes(key)) {
									return undefined;
								}
								return value;
							})),
							t = JSON.stringify(sv),
							o = new Blob([t], {
                                type: "text/plain"
                            }),
                            i = document.createEvent("MouseEvents"),
                            s = document.createElement("a");
                        s.download = e + ".json", s.href = window.URL.createObjectURL(o), s.dataset.downloadurl = ["text/json", s.download, s.href].join(":"), i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(i)
                    },
                    saveFileFinished: function(e) {
						this.$set(this.state, "saveWait", !0);
						this.$nextTick(() => {
							this.processImages(e);
						});
                    },
					processImages: function(e) {
						var exceptedList = ["comp", "compR", "compG", "compODG", "compRDG", "compGR", "backpackDialog"],
							sv = JSON.parse(JSON.stringify(this.app, (key, value) => {
								if (exceptedList.includes(key)) {
									return undefined;
								}
								return value;
							})),
							ts = this;
						this.dImage = new Map();
						var t = new co.a, o = JSON.parse(JSON.stringify(sv)), i = "", m = "", ext = "";
						this.app.styling.backgroundImage && this.isDataURL(this.app.styling.backgroundImage) && (m = this.getMime(this.app.styling.backgroundImage), ext = this.getExt(m), i = P()(this.app.styling.backgroundImage.split(",")[1], m), o.styling.backgroundImage = this.addImage("images/Bg." + ext, i, o.styling.backgroundImage, t));
						this.app.styling.rowBackgroundImage && this.isDataURL(this.app.styling.rowBackgroundImage) && (m = this.getMime(this.app.styling.rowBackgroundImage), ext = this.getExt(m), i = P()(this.app.styling.rowBackgroundImage.split(",")[1], m), o.styling.rowBackgroundImage = this.addImage("images/RBg." + ext, i, o.styling.rowBackgroundImage, t));
						this.app.styling.objectBackgroundImage && this.isDataURL(this.app.styling.objectBackgroundImage) && (m = this.getMime(this.app.styling.objectBackgroundImage), ext = this.getExt(m), i = P()(this.app.styling.objectBackgroundImage.split(",")[1], m), o.styling.objectBackgroundImage = this.addImage("images/OBg." + ext, i, o.styling.objectBackgroundImage, t));
						this.app.styling.rowBorderImage && this.isDataURL(this.app.styling.rowBorderImage) && (m = this.getMime(this.app.styling.rowBorderImage), ext = this.getExt(m), i = P()(this.app.styling.rowBorderImage.split(",")[1], m), o.styling.rowBorderImage = this.addImage("images/RB." + ext, i, o.styling.rowBorderImage, t));
						this.app.styling.objectBorderImage && this.isDataURL(this.app.styling.objectBorderImage) && (m = this.getMime(this.app.styling.objectBorderImage), ext = this.getExt(m), i = P()(this.app.styling.objectBorderImage.split(",")[1], m), o.styling.objectBorderImage = this.addImage("images/OB." + ext, i, o.styling.objectBorderImage, t));
                        for (var s = 0; s < this.app.rows.length; s++) {
							var coR = this.app.rows[s],
								oRows = o.rows[s];
							coR.styling && coR.styling.rowBackgroundImage && this.isDataURL(coR.styling.rowBackgroundImage) && (m = this.getMime(coR.styling.rowBackgroundImage), ext = this.getExt(m), i = P()(coR.styling.rowBackgroundImage.split(",")[1], m), oRows.styling.rowBackgroundImage = this.addImage("images/R" + (s + 1) + "_RBg." + ext, i, oRows.styling.rowBackgroundImage, t));
							coR.styling && coR.styling.objectBackgroundImage && this.isDataURL(coR.styling.objectBackgroundImage) && (m = this.getMime(coR.styling.objectBackgroundImage), ext = this.getExt(m), i = P()(coR.styling.objectBackgroundImage.split(",")[1], m), oRows.styling.objectBackgroundImage = this.addImage("images/R" + (s + 1) + "_OBg." + ext, i, oRows.styling.objectBackgroundImage, t));
							coR.styling && coR.styling.rowBorderImage && this.isDataURL(coR.styling.rowBorderImage) && (m = this.getMime(coR.styling.rowBorderImage), ext = this.getExt(m), i = P()(coR.styling.rowBorderImage.split(",")[1], m), oRows.styling.rowBorderImage = this.addImage("images/R" + (s + 1) + "_RB." + ext, i, oRows.styling.rowBorderImage, t));
							coR.styling && coR.styling.objectBorderImage && this.isDataURL(coR.styling.objectBorderImage) && (m = this.getMime(coR.styling.objectBorderImage), ext = this.getExt(m), i = P()(coR.styling.objectBorderImage.split(",")[1], m), oRows.styling.objectBorderImage = this.addImage("images/R" + (s + 1) + "_OB." + ext, i, oRows.styling.objectBorderImage, t));
                            this.isDataURL(coR.image) && (m = this.getMime(coR.image), ext = this.getExt(m), i = P()(coR.image.split(",")[1], m), oRows.image = this.addImage("images/R" + (s + 1) + "." + ext, i, oRows.image, t));
                            for (var r = 0; r < coR.objects.length; r++) {
								var coO = coR.objects[r],
									oObjects = oRows.objects[r];
								coO.styling && coO.styling.objectBackgroundImage && this.isDataURL(coO.styling.objectBackgroundImage) && (m = this.getMime(coO.styling.objectBackgroundImage), ext = this.getExt(m), i = P()(coO.styling.objectBackgroundImage.split(",")[1], m), oObjects.styling.objectBackgroundImage = this.addImage("images/R" + (s + 1) + "C" + (r + 1) + "_OBg." + ext, i, oObjects.styling.objectBackgroundImage, t));
								coO.styling && coO.styling.objectBorderImage && this.isDataURL(coO.styling.objectBorderImage) && (m = this.getMime(coO.styling.objectBorderImage), ext = this.getExt(m), i = P()(coO.styling.objectBorderImage.split(",")[1], m), oObjects.styling.objectBorderImage = this.addImage("images/R" + (s + 1) + "C" + (r + 1) + "_OB." + ext, i, oObjects.styling.objectBorderImage, t));
                                this.isDataURL(coO.image) && (m = this.getMime(coO.image), ext = this.getExt(m), i = P()(coO.image.split(",")[1], m), oObjects.image = this.addImage("images/R" + (s + 1) + "C" + (r + 1) + "." + ext, i, oObjects.image, t));
								if ("undefined" !== typeof coO.bgImage) this.isDataURL(coO.bgImage) && (m = this.getMime(coO.bgImage), ext = this.getExt(m), i = P()(coO.bgImage.split(",")[1], m), oObjects.bgImage = this.addImage("images/R" + (s + 1) + "C" + (r + 1) + "_Change." + ext, i, oObjects.bgImage, t));
                                for (var a = 0; a < coO.addons.length; a++) {
									var coA = coO.addons[a],
										oAddons = oObjects.addons[a];
									this.isDataURL(coA.image) && (m = this.getMime(coA.image), ext = this.getExt(m), i = P()(coA.image.split(",")[1], m), oAddons.image = this.addImage("images/R" + (s + 1) + "C" + (r + 1) + "A" + (a + 1) + "." + ext, i, oAddons.image, t));
								}
                            }
                        }
						for (var s = 0; s < this.app.backpack.length; s++) {
							var coR = this.app.backpack[s],
								oRows = o.backpack[s];
							this.isDataURL(coR.image) && (m = this.getMime(coR.image), ext = this.getExt(m), i = P()(coR.image.split(",")[1], m), oRows.image = this.addImage("images/BR" + (s + 1) + "." + ext, i, oRows.image, t));
							coR.styling && coR.styling.rowBackgroundImage && this.isDataURL(coR.styling.rowBackgroundImage) && (m = this.getMime(coR.styling.rowBackgroundImage), ext = this.getExt(m), i = P()(coR.styling.rowBackgroundImage.split(",")[1], m), oRows.styling.rowBackgroundImage = this.addImage("images/BR" + (s + 1) + "_RBg." + ext, i, oRows.styling.rowBackgroundImage, t));
							coR.styling && coR.styling.objectBackgroundImage && this.isDataURL(coR.styling.objectBackgroundImage) && (m = this.getMime(coR.styling.objectBackgroundImage), ext = this.getExt(m), i = P()(coR.styling.objectBackgroundImage.split(",")[1], m), oRows.styling.objectBackgroundImage = this.addImage("images/BR" + (s + 1) + "_OBg." + ext, i, oRows.styling.objectBackgroundImage, t));
							coR.styling && coR.styling.rowBorderImage && this.isDataURL(coR.styling.rowBorderImage) && (m = this.getMime(coR.styling.rowBorderImage), ext = this.getExt(m), i = P()(coR.styling.rowBorderImage.split(",")[1], m), oRows.styling.rowBorderImage = this.addImage("images/BR" + (s + 1) + "_RB." + ext, i, oRows.styling.rowBorderImage, t));
							coR.styling && coR.styling.objectBorderImage && this.isDataURL(coR.styling.objectBorderImage) && (m = this.getMime(coR.styling.objectBorderImage), ext = this.getExt(m), i = P()(coR.styling.objectBorderImage.split(",")[1], m), oRows.styling.objectBorderImage = this.addImage("images/BR" + (s + 1) + "_OB." + ext, i, oRows.styling.objectBorderImage, t));
							for (var r = 0; r < coR.objects.length; r++) {
								var coO = coR.objects[r],
									oObjects = oRows.objects[r];
								coO.styling && coO.styling.objectBackgroundImage && this.isDataURL(coO.styling.objectBackgroundImage) && (m = this.getMime(coO.styling.objectBackgroundImage), ext = this.getExt(m), i = P()(coO.styling.objectBackgroundImage.split(",")[1], m), oObjects.styling.objectBackgroundImage = this.addImage("images/BR" + (s + 1) + "C" + (r + 1) + "_OBg." + ext, i, oObjects.styling.objectBackgroundImage, t));
								coO.styling && coO.styling.objectBorderImage && this.isDataURL(coO.styling.objectBorderImage) && (m = this.getMime(coO.styling.objectBorderImage), ext = this.getExt(m), i = P()(coO.styling.objectBorderImage.split(",")[1], m), oObjects.styling.objectBorderImage = this.addImage("images/BR" + (s + 1) + "C" + (r + 1) + "_OB." + ext, i, oObjects.styling.objectBorderImage, t));
                                this.isDataURL(coO.image) && (m = this.getMime(coO.image), ext = this.getExt(m), i = P()(coO.image.split(",")[1], m), oObjects.image = this.addImage("images/BR" + (s + 1) + "C" + (r + 1) + "." + ext, i, oObjects.image, t));
                                for (var a = 0; a < coO.addons.length; a++) {
									var coA = coO.addons[a],
										oAddons = oObjects.addons[a];
									this.isDataURL(coA.image) && (m = this.getMime(coA.image), ext = this.getExt(m), i = P()(coA.image.split(",")[1], "image/" + ext), oAddons.image = this.addImage("images/BR" + (s + 1) + "C" + (r + 1) + "A" + (a + 1) + "." + ext, i, t));
								}
							}
						}
						for (var s = 0; s < this.app.rowDesignGroups.length; s++) {
							var RD = this.app.rowDesignGroups[s],
								oRD = o.rowDesignGroups[s];
							RD.styling && RD.styling.rowBackgroundImage && this.isDataURL(RD.styling.rowBackgroundImage) && (m = this.getMime(RD.styling.rowBackgroundImage), ext = this.getExt(m), i = P()(RD.styling.rowBackgroundImage.split(",")[1], m), oRD.styling.rowBackgroundImage = this.addImage("images/RD" + (s + 1) + "_RBg." + ext, i, oRD.styling.rowBackgroundImage, t));
							RD.styling && RD.styling.objectBackgroundImage && this.isDataURL(RD.styling.objectBackgroundImage) && (m = this.getMime(RD.styling.objectBackgroundImage), ext = this.getExt(m), i = P()(RD.styling.objectBackgroundImage.split(",")[1], m), oRD.styling.objectBackgroundImage = this.addImage("images/RD" + (s + 1) + "_OBg." + ext, i, oRD.styling.objectBackgroundImage, t));
							RD.styling && RD.styling.rowBorderImage && this.isDataURL(RD.styling.rowBorderImage) && (m = this.getMime(RD.styling.rowBorderImage), ext = this.getExt(m), i = P()(RD.styling.rowBorderImage.split(",")[1], m), oRD.styling.rowBorderImage = this.addImage("images/RD" + (s + 1) + "_RB." + ext, i, oRD.styling.rowBorderImage, t));
							RD.styling && RD.styling.objectBorderImage && this.isDataURL(RD.styling.objectBorderImage) && (m = this.getMime(RD.styling.objectBorderImage), ext = this.getExt(m), i = P()(RD.styling.objectBorderImage.split(",")[1], m), oRD.styling.objectBorderImage = this.addImage("images/RD" + (s + 1) + "_OB." + ext, i, oRD.styling.objectBorderImage, t));
                        }
						for (var r = 0; r < this.app.objectDesignGroups.length; r++) {
							var OD = this.app.objectDesignGroups[r],
								oOD = o.objectDesignGroups[r];
							OD.styling && OD.styling.objectBackgroundImage && this.isDataURL(OD.styling.objectBackgroundImage) && (m = this.getMime(OD.styling.objectBackgroundImage), ext = this.getExt(m), i = P()(OD.styling.objectBackgroundImage.split(",")[1], m), oOD.styling.objectBackgroundImage = this.addImage("images/OD" + (r + 1) + "_OBg." + ext, i, oOD.styling.objectBackgroundImage, t));
							OD.styling && OD.styling.objectBorderImage && this.isDataURL(OD.styling.objectBorderImage) && (m = this.getMime(OD.styling.objectBorderImage), ext = this.getExt(m), i = P()(OD.styling.objectBorderImage.split(",")[1], m), oOD.styling.objectBorderImage = this.addImage("images/OD" + (r + 1) + "_OB." + ext, i, oOD.styling.objectBorderImage, t));
						}
						this.dImage = {};
                        var n = JSON.stringify(o),
                            l = new Blob([n], {
                                type: "text/plain"
                            });
                        t.file(e + ".json", l), t.generateAsync({
                            type: "blob"
                        }).then((function(e) {
                            uo.a.saveAs(e, "CYOA.zip"), ts.$set(ts.state, "saveWait", !1);
                        })).catch((error => {
							console.log(error), ts.$set(ts.state, "saveWait", !1);
						}));
					},
					getMime: function(e) {
						return e.match(/^data:(image\/[^;]+);/)[1];
					},
					getExt: function(e) {
						var ext = e.split("/")[1];
						const mt = {
							'svg+xml': 'svg',
							'vnd.microsoft.icon': 'ico',
							'x-icon': 'ico'
						};
						return (mt[ext] ? mt[ext] : ext);
					},
					getMimeFromBlob: function(e) {
						var ext = e.split(".").pop().toLowerCase();
						const mt = {
							'jpg': 'image/jpeg',
							'svg': 'image/svg+xml',
							'ico': 'image/x-icon'
						};
						return (mt[ext] ? mt[ext] : "image/" + ext);
					},
					isDataURL: function(e) {
						return /^data:(image\/[a-zA-Z]*);base64,/.test(e);
					}
                }
            },
            go = ho,
            bo = o("cc20"),
			pg = o("490a"),
            mo = Object(w["a"])(go, eo, to, !1, null, null, null),
            fo = mo.exports;
        x()(mo, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VChip: bo["a"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VFileInput: vo["a"],
            VRow: S["a"],
            VSpacer: O["a"],
			VSnackbar: Ct["a"],
			VProgressCircular: pg["a"]
        });
        var wo = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        "max-width": "800px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Design")]), o("v-card-text", [o("v-container", [e._v(" Hover over the buttons to see what they do. "), o("v-row", [o("v-col", {
					attrs: {
                        cols: "12"
                    }
				}, [o("v-file-input", {
					attrs: {
						"hide-details": "",
						label: "Import Design",
						multiple: "",
						placeholder: "Select your project",
						"prepend-icon": "mdi-paperclip",
						outlined: "",
						"show-size": 1e3
					},
					on: {
						change: e.importFromProject
					},
					scopedSlots: e._u([{
						key: "selection",
						fn: function(t) {
							var i = t.index,
								s = t.text;
							return [i < 2 ? o("v-chip", {
								attrs: {
									dark: "",
									label: "",
									small: ""
								}
							}, [e._v(e._s(s))]) : e._e()]
						}
					}]),
					model: {
						value: e.files,
						callback: function(t) {
							e.files = t
						},
						expression: "files"
					}
				})], 1), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    staticClass: "col-lg-12 col-12"
                                }, [o("v-btn", e._g({
                                    staticStyle: {
                                        color: e.$vuetify.theme.isDark ? "white" : "black"
                                    },
                                    on: {
                                        click: function(o) {
                                            return e.exportDesign()
                                        }
                                    }
                                }, s), [e._v(e._s("Export Design"))])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Here you can export your design.")
                        }
                    })]), e._l(e.designComponentButtons, (function(t) {
                    return o("v-tooltip", {
                        key: t.index,
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    staticClass: "col-lg-6 " + (e.window.width >= 800 ? "col-6" : "col-12")
                                }, [o("v-btn", e._g({
                                    staticStyle: {
                                        color: e.$vuetify.theme.isDark ? "white" : "black"
                                    },
                                    on: {
                                        click: function(o) {
                                            return e.selectedButton(t.component)
                                        }
                                    }
                                }, s), [e._v(e._s(t.text))])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s(t.tooltip)
                        }
                    })])
                }))], 1)], 1)], 1), o("v-card-actions", [o("v-spacer"), o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        isAdvanced: e.app.designIsAdvanced,
                        currentComponent: e.currentComponent
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1)
            },
            yo = [],
            xo = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "800px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Backpack Design")]), o("v-card-text", [o("v-container", [o("v-text-field", {
                    attrs: {
                        label: "Backpack Width",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.backPackWidth,
                        callback: function(t) {
                            e.$set(e.styling, "backPackWidth", t)
                        },
                        expression: "styling.backPackWidth"
                    }
                })], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Co = [],
            To = {
                data: function() {
                    return {
                        dialog: !0
                    }
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    }
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    addElement: function(e) {
                        e.push({
                            id: ""
                        })
                    },
                    createNewGroup: function() {
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateGroupId() {
							var s = "";
							for (var o = 0; o < 3; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.compG[s]) {
								return generateGroupId()
							} else {
								return s
							}
						}
						e = generateGroupId();
                        this.$store.commit({
                            type: "addNewGroup",
                            id: e,
                            name: "Group " + (this.groups.length + 1)
                        });
						this.app.compG[e] = {groups: this.groups.length - 1};
                    },
                    deleteGroupElement: function(e, t) {
                        t.splice(e, 1)
                    },
                    deleteGroup: function(e) {
						for (var a = 0; a < this.groups[e].elements.length; a++) {
							if ("undefined" !== typeof this.app.comp[this.groups[e].elements[a].id]) {
								var co = this.app.comp[this.groups[e].elements[a].id],
									coR = this.app.rows[co.rows],
									coO = coR.objects[co.objects];
								for (var b = 0; b < coO.groups.length; b++) {
									if (coO.groups[b].id == this.groups[e].id) {
										coO.groups.splice(b, 1);
										break
									}
								}
							}
						}
						this.$delete(this.app.compG, this.groups[e].id);
                        this.groups.splice(e, 1);
						for (var a = e; a < this.groups.length; a++) {
							var t = this.groups[a].id;
							this.app.compG[t].groups = a;
						}
                    }
                }
            },
            jo = To,
            Io = Object(w["a"])(jo, xo, Co, !1, null, null, null),
            ko = Io.exports;
        x()(Io, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VContainer: k["a"],
            VDialog: B["a"],
            VTextField: R["a"]
        });
        var qo = {
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
                        designComponentButtons: [{
                            component: "appObjectDesign",
                            text: "Manage Choice Design",
                            tooltip: "Here you can change the margin,<br />padding, borders, and drop-shadow on choices."
                        }, {
                            component: "appObjectImage",
                            text: "Manage Choices Image Design",
                            tooltip: "Here you can change the margin and padding <br />of images on objects."
                        }, {
                            component: "appRowDesign",
                            text: "Manage Row Design",
                            tooltip: "Here you can change the margin, <br />padding, borders, and drop-shadow on rows."
                        }, {
                            component: "appRowImage",
                            text: "Manage Row Image Design",
                            tooltip: "Here you can change the margin and padding <br />of images on rows."
                        }, {
                            component: "appAddonDesign",
                            text: "Manage Addon Design",
                            tooltip: "Here you can change the margin,<br />padding, borders, and drop-shadow on Addon."
                        }, {
                            component: "appAddonImage",
                            text: "Manage Addon Image Design",
                            tooltip: "Here you can change the margin and padding <br />of images on Addon."
                        }, {
                            component: "appFilter",
                            text: "Manage Filter Design",
                            tooltip: "Here you can change the filters for choices that are selected<br />and the one's you dont have the requirements for."
                        }, {
                            component: "appBackground",
                            text: "Manage Background Design",
                            tooltip: "Here you can change the color and place images in <br />the background of rows, choices and the whole project."
                        }, {
                            component: "appText",
                            text: "Manage Text Design",
                            tooltip: "Here you can change the size, font and<br />color of the text on titles and text."
                        }, {
                            component: "appPointBar",
                            text: "Manage Point-Bar Design",
                            tooltip: "Here you can change the color, postition and font of the <br />bar that holds the created points."
                        }, {
                            component: "appMultiChoice",
                            text: "Manage Multi Choice Design",
                            tooltip: "Here you can change the color, size and font of the <br /> choices that can be selected multiple times."
                        }, {
                            component: "appBackpack",
                            text: "Manage Backpack Design",
                            tooltip: "Here you can change the backpack."
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    }
                },
                components: {
                    appFilter: Te,
                    appText: Oe,
                    appObjectImage: $e,
                    appBackground: Ue,
                    appObjectDesign: Qe,
                    appRowDesign: rt,
					appAddonImage: a$e,
					appAddonDesign: aQe,
                    appPointBar: pt,
                    appBackpack: ko,
                    appRowImage: Le,
                    appMultiChoice: _o
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    selectedButton: function(e) {
                        this.$store.state.currentDesignComponent = e, this.cleanCurrentComponent()
                    },
					importFromProject: function() {
                        var e = this;
                        var t = new FileReader;
                        t.onload = function() {
							o = JSON.parse(t.result);
							e.app.styling = o.styling;
                        }, t.readAsText(this.files[0]);
                    },
					exportDesign: function() {
						var e = JSON.parse(JSON.stringify(this.app.styling)),
							t = {styling: e},
							o = new Blob([JSON.stringify(t)], {
                                type: "text/plain"
                            }),
                            i = document.createEvent("MouseEvents"),
                            s = document.createElement("a");
                        s.download = "design.json", s.href = window.URL.createObjectURL(o), s.dataset.downloadurl = ["text/json", s.download, s.href].join(":"), i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(i)
					}
                }
            },
            Ao = qo,
            $o = Object(w["a"])(Ao, wo, yo, !1, null, null, null),
            Mo = $o.exports;
        x()($o, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VFileInput: vo["a"],
            VRow: S["a"],
            VSpacer: O["a"],
            VTooltip: Q["a"]
        });
        var Vo = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Features")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("Point systems can be created and used to handle the player's ability to buy things and to keep a record of selected choices in a group or row.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appPoints"
                        }
                    }
                }, [e._v("Manage Points")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("Variables can currently only be used by adding them to buttons, which in turn can activate and deactivate them, and the variable-id can be used in requirements.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appVariables"
                        }
                    }
                }, [e._v("Manage Variables")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("Rows and objects can be added into groups, and rows that show the selected choices can then use a group to decide which choices to show.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appGroups"
                        }
                    }
                }, [e._v("Manage Groups")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("The backpack is where rows can show which choices have been selected can be placed, and the import is where selected choices can be imported.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appBackpack"
                        }
                    }
                }, [e._v("Manage Backpack and choice import")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("In defaults, you can write in default text that you want the choices and rows to be filled with when created.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appDefaults"
                        }
                    }
                }, [e._v("Manage Defaults")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("In styles, you can find the premade design-templates, that either can be used as-is or to create a new design from.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appTemplates"
                        }
                    }
                }, [e._v("Style Templates")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("Words can be changed when a choice is presssed, or in textfields by the player, and be placed around in the text.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appWords"
                        }
                    }
                }, [e._v("Words")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("Symbols will show off some of the alt-codes that can be used in your project where you can place text. This is also where you can compress all the images in your project.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appSymbols"
                        }
                    }
                }, [e._v("Symbols and Image Compression")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("Will show you a list of ID's and the names of the choices they belong to.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appIdSearch"
                        }
                    }
                }, [e._v("Id / Name list")])], 1), o("v-col", {
                    staticClass: "col-lg-6" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("In Design Groups, you can manage Private Styling in a granular way.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appDesignGroup"
                        }
                    }
                }, [e._v("Manage Design Groups")])], 1), o("v-col", {
                    staticClass: "col-lg-12" + (e.window.width > 1200 ? "" : " col-12")
                }, [o("p", [e._v("In Global Requirements, You can define requirements that are common to multiple choices.")]), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appGlobalRequirements"
                        }
                    }
                }, [e._v("Manage Global Requirements")])], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-spacer"), o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        currentComponent: e.currentComponent
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1)
            },
            Po = [],
            Do = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", [o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "1920px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Point Types")]), o("v-card-text", [o("v-container", [o("v-row", e._l(e.pointTypes, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        attrs: {
                            cols: e.window.width > 1850 ? "4" : e.window.width > 1000 ? "6" : "12"
                        }
                    }, [o("v-col", [o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "This score is not allowed to go under 0."
                        },
                        model: {
                            value: t.belowZeroNotAllowed,
                            callback: function(o) {
                                e.$set(t, "belowZeroNotAllowed", o)
                            },
                            expression: "point.belowZeroNotAllowed"
                        }
                    }), o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "This score is not shown in Point-Bar."
                        },
                        model: {
                            value: t.isNotShownPointBar,
                            callback: function(o) {
                                e.$set(t, "isNotShownPointBar", o)
                            },
                            expression: "point.isNotShownPointBar"
                        }
                    }), o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "This score is not shown in Choices."
                        },
                        model: {
                            value: t.isNotShownObjects,
                            callback: function(o) {
                                e.$set(t, "isNotShownObjects", o)
                            },
                            expression: "point.isNotShownObjects"
                        }
                    }), o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "Add a + or - in front of the scores."
                        },
                        model: {
                            value: t.plussOrMinusAdded,
                            callback: function(o) {
                                e.$set(t, "plussOrMinusAdded", o)
                            },
                            expression: "point.plussOrMinusAdded"
                        }
                    }), t.plussOrMinusAdded ? o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "Invert the + and -."
                        },
                        model: {
                            value: t.plussOrMinusInverted,
                            callback: function(o) {
                                e.$set(t, "plussOrMinusInverted", o)
                            },
                            expression: "point.plussOrMinusInverted"
                        }
                    }) : e._e(), o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "Set colors for positive or negative."
                        },
                        model: {
                            value: t.pointColorsIsOn,
                            callback: function(o) {
                                e.$set(t, "pointColorsIsOn", o)
                            },
                            expression: "point.pointColorsIsOn"
                        }
                    }), o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "This score has a Icon."
                        },
                        model: {
                            value: t.iconIsOn,
                            callback: function(o) {
                                e.$set(t, "iconIsOn", o)
                            },
                            expression: "point.iconIsOn"
                        }
                    }), o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "Set private colors in the Point-Bar."
                        },
                        model: {
                            value: t.pointPrivateColorIsOn,
                            callback: function(o) {
                                e.$set(t, "pointPrivateColorIsOn", o)
                            },
                            expression: "point.pointPrivateColorIsOn"
                        }
                    }), t.iconIsOn ? o("v-row", {
                        on: {
                            click: function(o) {
                                e.currId = t.id
                            }
                        }
                    }, [o("v-col", [o("picture-input", {
                        ref: e.pictureInput,
                        refInFor: !0,
                        staticClass: "col",
                        attrs: {
                            removeButtonClass: "v-btn v-btn--contained " + (e.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                            hideChangeButton: !0,
                            removable: !0,
                            crop: !1,
                            zIndex: 0,
							width: 100,
							height: 100,
                            prefill: t.image,
                            "custom-strings": {
                                upload: "<h1>Error!</h1>",
                                drag: "Upload Icon Image"
                            }
                        },
                        on: {
                            change: e.onImageChangeBackground,
                            remove: function(o) {
                                return e.onImageRemoval(t.id)
                            }
                        }
                    })], 1), o("v-col", [o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "Image is on Left/Right side."
                        },
                        model: {
                            value: t.imageOnSide,
                            callback: function(o) {
                                e.$set(t, "imageOnSide", o)
                            },
                            expression: "point.imageOnSide"
                        }
                    }), o("v-switch", {
                        staticClass: "mt-n2 mb-n6 ms-3",
                        attrs: {
                            label: "Image is Before/After text."
                        },
                        model: {
                            value: t.imageSidePlacement,
                            callback: function(o) {
                                e.$set(t, "imageSidePlacement", o)
                            },
                            expression: "point.imageSidePlacement"
                        }
                    }), o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "The Image Width",
                            filled: ""
                        },
                        model: {
                            value: t.iconWidth,
                            callback: function(o) {
                                e.$set(t, "iconWidth", o)
                            },
                            expression: "point.iconWidth"
                        }
                    }), o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "The Image Height",
                            filled: ""
                        },
                        model: {
                            value: t.iconHeight,
                            callback: function(o) {
                                e.$set(t, "iconHeight", o)
                            },
                            expression: "point.iconHeight"
                        }
                    })], 1)], 1) : e._e(), o("v-row", [o("v-col", [t.pointColorsIsOn ? o("v-color-picker", {
                        staticClass: "mx-auto",
                        attrs: {
                            "hide-canvas": "",
                            "hide-sliders": "",
                            "show-swatches": "",
                            mode: "hexa",
                            "swatches-max-height": "75"
                        },
                        model: {
                            value: t.positiveColor,
                            callback: function(o) {
                                e.$set(t, "positiveColor", o)
                            },
                            expression: "point.positiveColor"
                        }
                    }) : e._e()], 1), o("v-col", [t.pointColorsIsOn ? o("v-color-picker", {
                        staticClass: "mx-auto",
                        attrs: {
                            "hide-canvas": "",
                            "show-swatches": "",
                            "hide-sliders": "",
                            mode: "hexa",
                            "swatches-max-height": "75"
                        },
                        model: {
                            value: t.negativeColor,
                            callback: function(o) {
                                e.$set(t, "negativeColor", o)
                            },
                            expression: "point.negativeColor"
                        }
                    }) : e._e()], 1)], 1), o("v-row", [o("v-col", [t.pointPrivateColorIsOn ? o("v-color-picker", {
                        staticClass: "mx-auto",
                        attrs: {
                            "hide-canvas": "",
                            "hide-sliders": "",
                            "show-swatches": "",
                            mode: "hexa",
                            "swatches-max-height": "75"
                        },
                        model: {
                            value: t.privateColor,
                            callback: function(o) {
                                e.$set(t, "privateColor", o)
                            },
                            expression: "point.privateColor"
                        }
                    }) : e._e()], 1)], 1)], 1), o("v-row", [o("v-col", {
                        staticClass: "col-6",
                        attrs: {
                            md: "4"
                        }
                    }, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "The Pointtype Id",
                            filled: ""
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
								e.$delete(e.app.pointTypeMap, t.id);
                                e.$set(t, "id", o);
								e.$set(e.app.pointTypeMap, t.id, t.startingSum);
                            },
                            expression: "point.id"
                        }
                    })], 1), o("v-col", {
                        staticClass: "col-6",
                        attrs: {
                            md: "4"
                        }
                    }, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "The Pointtype Name",
                            filled: ""
                        },
                        model: {
                            value: t.name,
                            callback: function(o) {
                                e.$set(t, "name", o)
                            },
                            expression: "point.name"
                        }
                    })], 1), o("v-col", {
                        staticClass: "col-6",
                        attrs: {
                            md: "4"
                        }
                    }, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            type: "number",
                            label: "Starting Sum",
                            filled: ""
                        },
                        model: {
                            value: t.startingSum,
                            callback: function(o) {
                                e.$set(t, "startingSum", e._n(o)), e.$set(t, "initValue", e._n(o));
								e.$set(e.app.pointTypeMap, t.id, t.startingSum);
                            },
                            expression: "point.startingSum"
                        }
                    })], 1), o("v-col", {
                        staticClass: "col-6",
                        attrs: {
                            md: "12"
                        }
                    }, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            type: "number",
                            label: "Initial Value : The point value set when you use clean activated.",
                            filled: ""
                        },
                        model: {
                            value: t.initValue,
                            callback: function(o) {
                                e.$set(t, "initValue", e._n(o))
                            },
                            expression: "point.initialValue"
                        }
                    })], 1), o("v-col", {
                        staticClass: "col-6",
                        attrs: {
                            md: "4"
                        }
                    }, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id Needed To Show",
                            placeholder: "No Id Needed",
                            filled: "",
							disabled: (!t.isNotShownPointBar && !t.isNotShownObjects)
                        },
                        model: {
                            value: t.activatedId,
                            callback: function(o) {
                                e.$set(t, "activatedId", o)
                            },
                            expression: "point.activatedId"
                        }
                    })], 1), o("v-col", {
                        staticClass: "col-6",
                        attrs: {
                            md: "4"
                        }
                    }, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Text Before Number",
                            filled: ""
                        },
                        model: {
                            value: t.beforeText,
                            callback: function(o) {
                                e.$set(t, "beforeText", o)
                            },
                            expression: "point.beforeText"
                        }
                    })], 1), o("v-col", {
                        staticClass: "col-6",
                        attrs: {
                            md: "4"
                        }
                    }, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Text After Number",
                            filled: ""
                        },
                        model: {
                            value: t.afterText,
                            callback: function(o) {
                                e.$set(t, "afterText", o)
                            },
                            expression: "point.afterText"
                        }
                    })], 1), o("v-tooltip", {
                        attrs: {
                            top: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    attrs: {
										cols: "12"
									}
                                }, [o("v-btn", e._g({
									staticClass: "py-0",
									attrs: {
										"hide-details": ""
									},
									on: {
										click: function(o) {
											return e.recalculatableToggle(t)
										}
									}
								}, s), [e._v("Not Allow Recalculate ON/OFF")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Toggle the 'Not Allow Recalculate' option for all choices.")
                        }
                    })]), o("v-tooltip", {
                        attrs: {
                            top: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    attrs: {
										cols: e.window.width > 500 ? "6" : "12"
									}
                                }, [o("v-btn", e._g({
									staticClass: "py-0",
									attrs: {
										"hide-details": ""
									},
									on: {
										click: function(o) {
											return e.showScoreToggle(t)
										}
									}
								}, s), [e._v("Show Score ON/OFF")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Toggle the 'Show Score' option for all choices.")
                        }
                    })]), o("v-tooltip", {
                        attrs: {
                            top: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-col", {
                                    attrs: {
										cols: e.window.width > 500 ? "6" : "12"
									}
                                }, [o("v-btn", e._g({
									staticClass: "py-0",
									attrs: {
										"hide-details": ""
									},
									on: {
										click: function(o) {
											return e.hideValueToggle(t)
										}
									}
								}, s), [e._v("Hide Value ON/OFF")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", {
                        domProps: {
                            innerHTML: e._s("Toggle the 'Hide Value' option for all choices.")
                        }
                    })]), e.window.width > 500 ? [o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changePointOrderLeft(t)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-left")])])], 1), o("v-col", {
                        staticClass: "col-8"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deletePointsType(t)
                            }
                        }
                    }, [e._v("Delete")])], 1), o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changePointOrderRight(t)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-right")])])], 1)] : [o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changePointOrderLeft(t)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-left")])])], 1), o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changePointOrderRight(t)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-right")])])], 1), o("v-col", {
                        staticClass: "col-12"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deletePointsType(t)
                            }
                        }
                    }, [e._v("Delete")])], 1)]], 1)], 1)
                })), 1)], 1)], 1), o("v-card-actions", [o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    attrs: {
                        cols: e.window.width > 340 ? "6" : "12"
                    }
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.createNewPointType
                    }
                }, [e._v("Create new Point Type")])], 1), o("v-col", {
                    attrs: {
                        cols: e.window.width > 340 ? "6" : "12"
                    }
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1)], 1), e.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.snackbar,
                        callback: function(t) {
                            e.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.text))])])], 1) : e._e()], 1)
            },
            zo = [],
            Lo = {
                data: function() {
                    return {
                        dialog: !0,
                        currId: "",
						snackbar: !1,
						text: "",
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                components: {
                    PictureInput: $["a"]
                },
                computed: {
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    onImageChangeBackground: function(e) {
                        for (var t = 0; t < this.pointTypes.length; t++) this.pointTypes[t].id == this.currId && (this.pointTypes[t].image = e, this.pointTypes[t].iconIsOn = !1, this.pointTypes[t].iconIsOn = !0)
                    },
                    onImageRemoval: function(e) {
                        for (var t = 0; t < this.pointTypes.length; t++) this.pointTypes[t].id == e && (this.pointTypes[t].image = "")
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    createNewPointType: function() {
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generatePointTypeId() {
							var s = "";
							for (var o = 0; o < 3; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.pointTypeMap[s]) {
								console.log(s);
								return generatePointTypeId()
							} else {
								return s
							}
						}
						e = generatePointTypeId();
                        this.$store.commit({
                            type: "addNewPointType",
                            id: e,
                            name: "Points",
                            startingSum: 0,
							initValue: 0,
                            activatedId: "",
                            afterText: "",
							isNotShownPointBar: !1,
							isNotShownObjects: !1
                        });
						this.$set(this.app.pointTypeMap, e, 0);
                    },
					changePointOrderLeft: function(e) {
						this.$store.commit("changePointOrderLeft", e)
					},
					changePointOrderRight: function(e) {
						this.$store.commit("changePointOrderRight", e)
					},
					recalculatableToggle: function(e) {
						if ("undefined" === typeof e.recalcToggle) this.$set(e, "recalcToggle", !1);
						for (var a = 0; a < this.app.rows.length; a++) {
							for (var b = 0; b < this.app.rows[a].objects.length; b++) {
								for (var c = 0; c < this.app.rows[a].objects[b].scores.length; c++) {
									if (this.app.rows[a].objects[b].scores[c].id == e.id) {
										if (e.recalcToggle) this.$set(this.app.rows[a].objects[b].scores[c], "isNotRecalculatable", !1);
										else this.$set(this.app.rows[a].objects[b].scores[c], "isNotRecalculatable", !0);
									}
								}
							}
						}
						this.$set(e, "recalcToggle", !e.recalcToggle);
						this.text = "Not Allow Recalculate is " + (e.recalcToggle ? "on: " : "off: ") + e.name, this.snackbar = !0;
					},
					showScoreToggle: function(e) {
						if ("undefined" === typeof e.scoreToggle) this.$set(e, "scoreToggle", !1);
						for (var a = 0; a < this.app.rows.length; a++) {
							for (var b = 0; b < this.app.rows[a].objects.length; b++) {
								for (var c = 0; c < this.app.rows[a].objects[b].scores.length; c++) {
									if (this.app.rows[a].objects[b].scores[c].id == e.id) {
										if (e.scoreToggle) this.$set(this.app.rows[a].objects[b].scores[c], "showScore", !1);
										else this.$set(this.app.rows[a].objects[b].scores[c], "showScore", !0);
									}
								}
							}
						}
						this.$set(e, "scoreToggle", !e.scoreToggle);
						this.text = "Show Score is " + (e.scoreToggle ? "on: " : "off: ") + e.name, this.snackbar = !0;
					},
					hideValueToggle: function(e) {
						if ("undefined" === typeof e.hideToggle) this.$set(e, "hideToggle", !1);
						for (var a = 0; a < this.app.rows.length; a++) {
							for (var b = 0; b < this.app.rows[a].objects.length; b++) {
								for (var c = 0; c < this.app.rows[a].objects[b].scores.length; c++) {
									if (this.app.rows[a].objects[b].scores[c].id == e.id) {
										if (e.hideToggle) this.$set(this.app.rows[a].objects[b].scores[c], "hideValue", !1);
										else this.$set(this.app.rows[a].objects[b].scores[c], "hideValue", !1);
									}
								}
							}
						}
						this.$set(e, "hideToggle", !e.hideToggle);
						this.text = "Hide Value is " + (e.hideToggle ? "on: " : "off: ") + e.name, this.snackbar = !0;
					},
                    deletePointsType: function(e) {
                        this.$store.commit("deletePointType", e)
                    }
                }
            },
            Wo = Lo,
            Ho = Object(w["a"])(Wo, Do, zo, !1, null, null, null),
            Eo = Ho.exports;
        x()(Ho, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
			VSnackbar: Ct["a"],
            VSwitch: L["a"],
            VTextField: R["a"],
			VTooltip: Q["a"],
			VIcon: J["a"]
        });
        var No = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "1300px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Symbols and Image Compression")]), o("v-card-text", [o("v-container", [o("v-row", e._l(e.symbols, (function(t) {
                    return o("span", {
                        key: t.index,
                        staticStyle: {
                            "font-size": "200%",
                            padding: "5px"
                        }
                    }, [e._v(e._s(t.symbol))])
                })), 0), e._v("More can be found on "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.alt-codes.net/"
                    }
                }, [e._v("https://www.alt-codes.net/")]), o("v-row", {
                    attrs: {
                        align: "center",
                        justify: "center"
                    }
                }, [o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn", {
                    staticClass: "mt-2",
                    on: {
                        click: e.compressAllImages
                    }
                }, [e._v("Compress All Images")])], 1), e._v("This will reduce the size and quality of every image in your project that is above the size in the text field below, down to lower than that size. Before you do this, make a backup, and you'll probably want to keep working on an uncompressed project file, as you might want a version with high-quality images later. Compressing below 100 Kb with 200+ images might freeze your browser. "), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [o("v-text-field", {
                    attrs: {
                        suffix: "KB",
                        label: "Max Size of Images after compress (KB)"
                    },
                    model: {
                        value: e.maxSize,
                        callback: function(t) {
                            e.maxSize = t
                        },
                        expression: "maxSize"
                    }
                })], 1), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(e._s(e.imageCounter) + " Images Compressed | Size Reduced With " + e._s(Math.round(e.sizeReduced)) + " MB")])], 1), o("v-row", [o("v-btn", {
                    staticClass: "mt-2",
                    on: {
                        click: e.cleanAllStyles
                    }
                }, [e._v("Clean All Styles Of Choices")])], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Go = [],
            Uo = o("4f4e"),
            Yo = {
                data: function() {
                    return {
                        dialog: !0,
                        imageCounter: 0,
                        maxSize: 100,
                        sizeReduced: 0,
                        symbols: [{
                            symbol: "✅"
                        }, {
                            symbol: "✓"
                        }, {
                            symbol: "✔"
                        }, {
                            symbol: "🗸"
                        }, {
                            symbol: "☑"
                        }, {
                            symbol: "🗹"
                        }, {
                            symbol: "♂"
                        }, {
                            symbol: "♀"
                        }, {
                            symbol: "⚥"
                        }, {
                            symbol: "⚢"
                        }, {
                            symbol: "⚣"
                        }, {
                            symbol: "⚤"
                        }, {
                            symbol: "⚦"
                        }, {
                            symbol: "⚧"
                        }, {
                            symbol: "⚨"
                        }, {
                            symbol: "⚩"
                        }, {
                            symbol: "•"
                        }, {
                            symbol: "◘"
                        }, {
                            symbol: "○"
                        }, {
                            symbol: "◙"
                        }, {
                            symbol: "•"
                        }, {
                            symbol: "‣"
                        }, {
                            symbol: "⁃"
                        }, {
                            symbol: "⁌"
                        }, {
                            symbol: "⁍"
                        }, {
                            symbol: "◘"
                        }, {
                            symbol: "◦"
                        }, {
                            symbol: "⦾"
                        }, {
                            symbol: "⦿"
                        }, {
                            symbol: "♥"
                        }, {
                            symbol: "♡"
                        }, {
                            symbol: "🖤"
                        }, {
                            symbol: "💙"
                        }, {
                            symbol: "💚"
                        }, {
                            symbol: "💛"
                        }, {
                            symbol: "💜"
                        }, {
                            symbol: "🧡"
                        }, {
                            symbol: "🤍"
                        }, {
                            symbol: "🤎"
                        }, {
                            symbol: "❣"
                        }, {
                            symbol: "❤"
                        }, {
                            symbol: "❥"
                        }, {
                            symbol: "🎔"
                        }, {
                            symbol: "💓"
                        }, {
                            symbol: "💔"
                        }, {
                            symbol: "💖"
                        }, {
                            symbol: "💗"
                        }, {
                            symbol: "💕"
                        }, {
                            symbol: "💞"
                        }, {
                            symbol: "💘"
                        }, {
                            symbol: "↑"
                        }, {
                            symbol: "↓"
                        }, {
                            symbol: "→"
                        }, {
                            symbol: "←"
                        }, {
                            symbol: "↔"
                        }, {
                            symbol: "↕"
                        }, {
                            symbol: "↨"
                        }, {
                            symbol: "▲"
                        }, {
                            symbol: "▼"
                        }, {
                            symbol: "►"
                        }, {
                            symbol: "◄"
                        }, {
                            symbol: "⤴"
                        }, {
                            symbol: "⤵"
                        }, {
                            symbol: "↩"
                        }, {
                            symbol: "↪"
                        }, {
                            symbol: "🏹"
                        }, {
                            symbol: "⭐"
                        }, {
                            symbol: "★"
                        }, {
                            symbol: "☆"
                        }, {
                            symbol: "★"
                        }, {
                            symbol: "✯"
                        }]
                    }
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    }
                },
                methods: {
                    cleanAllStyles: function() {
                        for (var e = 0; e < this.app.rows.length; e++) this.app.rows[e].styling = ""
                    },
                    compressAllImages: function() {
                        for (var e, t = this, o = new Uo, i = function(i) {
							var s = t.app.rows[i].image.length - "data:image/png;base64,".length,
								r = 4 * Math.round(.5624896334383812 * Math.ceil(s / 3) * 1e3);
							t.app.rows[i].image.length > 0 && r > t.maxSize && (e = [P()(t.app.rows[i].image.split(",")[1], "image/webp")], o.compress(e, {
								size: t.maxSize / 1e3,
								quality: .75,
								maxWidth: 1920,
								maxHeight: 1920,
								resize: !0
							}).then((function(e) {
								t.imageCounter++, t.sizeReduced += e[0].initialSizeInMb - e[0].endSizeInMb, t.app.rows[i].image = e[0].prefix + "" + e[0].data
							})));
							for (var a = function(a) {
									s = t.app.rows[i].objects[a].image.length - "data:image/webp;base64,".length, r = Math.round(.5624896334383812 * Math.ceil(s / 3) * 4) / 1e3, t.app.rows[i].objects[a].image.length > 0 && r > t.maxSize && (e = [P()(t.app.rows[i].objects[a].image.split(",")[1], "image/webp")], o.compress(e, {
										size: t.maxSize / 1e3,
										quality: .75,
										maxWidth: 1920,
										maxHeight: 1920,
										resize: !0
									}).then((function(e) {
										t.imageCounter++, t.sizeReduced += e[0].initialSizeInMb - e[0].endSizeInMb, t.app.rows[i].objects[a].image = e[0].prefix + "" + e[0].data
									})))
								}, n = 0; n < t.app.rows[i].objects.length; n++) a(n)
						}, s = 0; s < this.app.rows.length; s++) i(s)
                    },
                    blobToBase4: function(e, t) {
                        var o = new FileReader;
                        o.readAsDataURL(e.data), o.onloadend = function() {
                            var e = o.result;
                            t.image = e
                        }
                    },
                    toBlob: function(e) {
                        var t = P()(e.split(",")[1], "image/webp"),
                            o = window.URL.createObjectURL(t);
                        return o
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            Jo = Yo,
            Xo = Object(w["a"])(Jo, No, Go, !1, null, null, null),
            Ko = Xo.exports;
        x()(Xo, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VTextField: R["a"]
        });
        var Zo = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "800px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Variables")]), o("v-card-text", [o("v-container", e._l(e.variables, (function(t, i) {
                    return o("v-col", {
                        key: t.index
                    }, [o("v-row", [o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id",
                            filled: ""
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
                                e.$set(t, "id", o)
                            },
                            expression: "variable.id"
                        }
                    })], 1), o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            disabled: "",
                            label: "Status",
                            filled: ""
                        },
                        model: {
                            value: t.isTrue,
                            callback: function(o) {
                                e.$set(t, "isTrue", o)
                            },
                            expression: "variable.isTrue"
                        }
                    })], 1), o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(t) {
                                return e.deleteVariable(i, e.variables)
                            }
                        }
                    }, [e._v("Delete")])], 1)], 1)
                })), 1)], 1), o("v-card-actions", [o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    attrs: {
                        cols: e.window.width > 340 ? "6" : "12"
                    }
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.createNewVariable
                    }
                }, [e._v("Create new Variable")])], 1), o("v-col", {
                    attrs: {
                        cols: e.window.width > 340 ? "6" : "12"
                    }
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1)], 1)
            },
            Qo = [],
            ei = {
                data: function() {
                    return {
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    variables: function() {
                        return this.$store.state.app.variables
                    }
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    createNewVariable: function() {
                        for (var e = "", t = "abcdefghijklmnopqrstuvwxyz0123456789", o = 0; o < 2; o++) e += t.charAt(Math.floor(Math.random() * t.length));
                        this.$store.commit({
                            type: "addNewVariable",
                            id: e,
                            isTrue: !1
                        })
                    },
                    deleteVariable: function() {
                        this.$store.commit("deleteVariable", this.variables)
                    }
                }
            },
            ti = ei,
            oi = Object(w["a"])(ti, Zo, Qo, !1, null, null, null),
            ii = oi.exports;
        x()(oi, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VTextField: R["a"]
        });
        var si = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "800px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Groups")]), o("v-card-text", [o("v-container", e._l(e.groups, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "mt-2"
                    }, [o("v-row", [o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id",
                            filled: ""
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
								e.app.compG[o] = e.app.compG[t.id], e.$delete(e.app.compG, t.id);
								for (var a = 0; a < t.elements.length; a++) {
									if ("undefined" !== typeof e.app.comp[t.elements[a].id]) {
										var co = e.app.comp[t.elements[a].id],
											coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows],
											coO = coR.objects[co.objects];
										for (var b = 0; b < coO.groups.length; b++) {
											if (coO.groups[b].id == t.id) {
												coO.groups[b].id = o;
											}
										}
									}
								}
								e.$set(t, "id", o);
                            },
                            expression: "group.id"
                        }
                    })], 1), o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Name",
                            filled: ""
                        },
                        model: {
                            value: t.name,
                            callback: function(o) {
                                e.$set(t, "name", o)
                            },
                            expression: "group.name"
                        }
                    })], 1)], 1), o("v-row", [o("v-col", [o("v-autocomplete", {
                            attrs: {
                                "hide-details": "",
                                label: "Row Id",
                                filled: "",
								"small-chips": "",
								"deletable-chips": "",
								items: e.app.rows,
								"item-text": "id",
								"item-value": "id",
								multiple: "",
								enableSelectAll: !0
                            },
							scopedSlots: {
								item: ({item, attrs}) => [
									o("div", {
										staticClass: "v-list-item__action mr-2"
									}, [o("div", {
										staticClass: "v-simple-checkbox"
									}, [o("div", {
										staticClass: "v-input--selection-controls__ripple primary--text"
									}), o("i", {
										staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
										attrs: {
											"aria-hidden": "true"
										}
									})])]), [o("div", {
										staticClass: "v-list-item__content"
									}, [o("div", {
										staticClass: "v-list-item__title"
									}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
							},
                            model: {
                                value: t.rowElements,
                                callback: function(o) {
									if ("undefined" === typeof t.rowElements) e.$set(t, "rowElements", []);
									if ("undefined" !== typeof e.app.compG[t.id]) {
										var coG = e.app.compG[t.id],
											tElements = t.rowElements.map(el => el.id),
											setT = new Set(tElements),
											setO = new Set(o),
											newElement;
										if (t.rowElements.length > o.length) {
											for (var a of setT) {
												if (!setO.has(a)) {
													newElement = a;
													break
												}
											}
											if ("undefined" !== typeof e.app.compR[newElement]) {
												var co = e.app.compR[newElement],
													coR = e.app.rows[co.rows];
												for (var a = 0; a < coR.groups.length; a++) {
													if (coR.groups[a].id == t.id) {
														coR.groups.splice(a, 1);
													}
												}
												for (var b = 0; b < t.rowElements.length; b++) {
													if (t.rowElements[b].id == coR.id) e.$delete(t.rowElements, b), b--;
												}
												for (var c = 0; c < coR.objects.length; c++) {
													for (var d = 0; d < coR.objects[c].groups.length; d++) {
														if (coR.objects[c].groups[d].id == t.id) {
															coR.objects[c].groups.splice(d, 1);
														}
													}
													for (var f = 0; f < t.elements.length; f++) {
														if (t.elements[f].id == coR.objects[c].id) e.$delete(t.elements, f), f--;
													}
												}
											}
										} else {
											for (var a of setO) {
												if (!setT.has(a)) {
													newElement = a;
													break
												}
											}
											if ("undefined" !== typeof e.app.compR[newElement]) {
												var co = e.app.compR[newElement],
													coR = e.app.rows[co.rows];
												if ("undefined" === typeof coR.groups) e.$set(coR, "groups", []);
												coR.groups.push({id: t.id});
												t.rowElements.push({id: coR.id})
												for (var b = 0; b < coR.objects.length; b++) {
													var l = !0;
													for (var c = 0; c < coR.objects[b].groups.length; c++) {
														if (coR.objects[b].groups[c].id == t.id) l = !1;
													}
													if (l) {
														coR.objects[b].groups.push({id: t.id});
														t.elements.push({id: coR.objects[b].id});
													}
												}
											}
										}
									}
                                },
                                expression: "rowElements.id"
                            }
                        })], 1), o("v-col", [o("v-autocomplete", {
                            attrs: {
                                "hide-details": "",
                                label: "Object Id",
                                filled: "",
								"small-chips": "",
								"deletable-chips": "",
								items: e.app.rows.flatMap(row => row.objects),
								"item-text": "id",
								"item-value": "id",
								multiple: "",
								enableSelectAll: !0
                            },
							scopedSlots: {
								item: ({item, attrs}) => [
									o("div", {
										staticClass: "v-list-item__action mr-2"
									}, [o("div", {
										staticClass: "v-simple-checkbox"
									}, [o("div", {
										staticClass: "v-input--selection-controls__ripple primary--text"
									}), o("i", {
										staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
										attrs: {
											"aria-hidden": "true"
										}
									})])]), [o("div", {
										staticClass: "v-list-item__content"
									}, [o("div", {
										staticClass: "v-list-item__title"
									}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
							},
                            model: {
                                value: t.elements,
                                callback: function(o) {
									if ("undefined" !== typeof t.elements) {
										var tElements = t.elements.map(el => el.id),
											setT = new Set(tElements),
											setO = new Set(o),
											newElement;
										if (t.elements.length > o.length) {
											for (var a of setT) {
												if (!setO.has(a)) {
													newElement = a;
													break
												}
											}
											if ("undefined" !== typeof e.app.comp[newElement]) {
												var co = e.app.comp[newElement],
													coR = e.app.rows[co.rows],
													coO = coR.objects[co.objects];
												for (var a = 0; a < coO.groups.length; a++) {
													if (coO.groups[a].id == t.id) {
														coO.groups.splice(a, 1);
													}
												}
												if ("undefined" !== typeof coR.groups) {
													for (var b = 0; b < coR.groups.length; b++) {
														if (coR.groups[b].id == t.id) {
															coR.groups.splice(b, 1);
														}
													}
												}
												for (var c = 0; c < t.elements.length; c++) {
													if (t.elements[c].id == coO.id) e.$delete(t.elements, c), c--;
												}
												if ("undefined" !== typeof t.rowElements) {
													for (var d = 0; d < t.rowElements.length; d++) {
														if (t.rowElements[d].id == coR.id) e.$delete(t.rowElements, d), d--;
													}
												}
											}
										} else {
											for (var a of setO) {
												if (!setT.has(a)) {
													newElement = a;
													break
												}
											}
											if ("undefined" !== typeof e.app.comp[newElement]) {
												var co = e.app.comp[newElement],
													coR = e.app.rows[co.rows],
													coO = coR.objects[co.objects];
												coO.groups.push({id: t.id});
												t.elements.push({id: coO.id});
											}
										}
									}
                                },
                                expression: "element.id"
                            }
                        })], 1)], 1), o("v-row", [o("v-col", [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(t) {
                                return e.deleteGroup(i)
                            }
                        }
                    }, [e._v("Delete")])], 1)], 1), o("v-divider")], 1)
                })), 1)], 1), o("v-card-actions", [o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    attrs: {
						cols: e.window.width > 340 ? "6" : "12"
					}
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.createNewGroup
                    }
                }, [e._v("Create new Group")])], 1), o("v-col", {
                    attrs: {
						cols: e.window.width > 340 ? "6" : "12"
					}
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)] , 1)], 1)], 1)], 1)
            },
            ri = [],
            ai = {
                data: function() {
                    return {
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    groups: function() {
                        return this.$store.state.app.groups
                    },
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    addElement: function(e) {
                        e.push({
                            id: ""
                        })
                    },
                    createNewGroup: function() {
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateGroupId() {
							var s = "";
							for (var o = 0; o < 3; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.compG[s]) {
								return generateGroupId()
							} else {
								return s
							}
						}
						e = generateGroupId();
                        this.$store.commit({
                            type: "addNewGroup",
                            id: e,
                            name: "Group " + (this.groups.length + 1)
                        });
						this.app.compG[e] = {groups: this.groups.length - 1};
                    },
                    deleteGroupElement: function(e, t) {
                        t.splice(e, 1)
                    },
                    deleteGroup: function(e) {
						for (var a = 0; a < this.groups[e].elements.length; a++) {
							if ("undefined" !== typeof this.app.comp[this.groups[e].elements[a].id]) {
								var co = this.app.comp[this.groups[e].elements[a].id],
									coR = this.app.rows[co.rows],
									coO = coR.objects[co.objects];
								for (var b = 0; b < coO.groups.length; b++) {
									if (coO.groups[b].id == this.groups[e].id) {
										coO.groups.splice(b, 1);
										break
									}
								}
							}
						}
						this.$delete(this.app.compG, this.groups[e].id);
                        this.groups.splice(e, 1);
						for (var a = e; a < this.groups.length; a++) {
							var t = this.groups[a].id;
							this.app.compG[t].groups = a;
						}
                    }
                }
            },
            ni = ai,
            ci = Object(w["a"])(ni, si, ri, !1, null, null, null),
            di = ci.exports;
        x()(ci, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VDivider: li["a"],
            VRow: S["a"],
			VSelect: K["a"],
            VTextField: R["a"]
        });
        var pi = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Style Templates")]), o("v-card-text", [o("v-container", [e._v("Will be more added later. "), o("v-row", [o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(0)
                        }
                    }
                }, [e._v("Fall")])], 1), o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(1)
                        }
                    }
                }, [e._v("Book")])], 1), o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(2)
                        }
                    }
                }, [e._v("Bone")])], 1), o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(3)
                        }
                    }
                }, [e._v("Dark")])], 1), o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(4)
                        }
                    }
                }, [e._v("Hello 2021")])], 1), o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(5)
                        }
                    }
                }, [e._v("Black & Gold")])], 1), o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(6)
                        }
                    }
                }, [e._v("Rainbow")])], 1), o("v-col", {
                    attrs: {
                        cols: "6",
						md: "3"
                    }
                }, [o("v-btn", {
					staticClass: "pa-0",
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    on: {
                        click: function(t) {
                            return e.changeStyling(7)
                        }
                    }
                }, [e._v("Seeing Greens")])], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            ui = [],
            hi = {
                data: function() {
                    return {
                        dialog: !0,
                        styleTemplates: [{
                            rowTitle: "Courier",
                            rowText: "Georgia",
                            objectTitle: "Courier",
                            objectText: "Georgia",
                            addonTitle: "Courier",
                            addonText: "Georgia",
                            scoreText: "Courier New",
                            rowTitleTextSize: 200,
                            rowTextTextSize: 100,
                            objectTitleTextSize: 200,
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#000000",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#9A997BFF",
                            barTextPadding: "13",
                            barTextMargin: 0,
                            barTextFont: "Courier",
                            barTextSize: "21",
                            barPadding: 0,
                            barMargin: 0,
                            rowTitleColor: "#000000FF",
                            rowTextColor: "#000000FF",
                            objectTitleColor: "#000000FF",
                            objectTextColor: "#000000FF",
                            addonTitleColor: "#000000FF",
                            addonTextColor: "#000000FF",
                            scoreTextColor: "#000000FF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "center",
                            objectTitleAlign: "center",
                            objectTextAlign: "center",
                            addonTitleAlign: "center",
                            addonTextAlign: "center",
                            scoreTextAlign: "center",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#5E645AFF",
                            objectBgColor: "#9A997BFF",
                            rowBgColor: "#9A997BFF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "91",
                            rowImageWidth: 100,
                            objectImageMarginTop: "4",
                            objectImageMarginBottom: "3",
                            rowImageMarginTop: 0,
                            objectMargin: 10,
                            rowMargin: 10,
                            rowTextPaddingY: 5,
                            rowTextPaddingX: 10,
                            objectTextPadding: 10,
                            rowBodyMarginTop: 25,
                            rowBodyMarginBottom: 25,
                            rowBodyMarginSides: 1,
                            objectDropShadowH: "3",
                            objectDropShadowV: "3",
                            objectDropShadowSpread: 0,
                            objectDropShadowBlur: "3",
                            objectDropShadowColor: "#D64800FF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "3",
                            rowDropShadowV: "3",
                            rowDropShadowSpread: 0,
                            rowDropShadowBlur: "3",
                            rowDropShadowColor: "#D64800FF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: 100,
                            selFilterContIsOn: !1,
                            selFilterCont: 100,
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: 0,
                            selFilterInvertIsOn: !1,
                            selFilterInvert: 0,
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#70FF7EFF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !1,
                            reqFilterBlur: 0,
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: 0,
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: 50,
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !1,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#FFFFFFFF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "6",
                            rowBorderRadiusTopRight: "6",
                            rowBorderRadiusBottomRight: "2",
                            rowBorderRadiusBottomLeft: "2",
                            rowBorderRadiusIsPixels: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#D64800FF",
                            rowBorderStyle: "double",
                            rowBorderWidth: "4",
                            objectBorderRadiusTopLeft: "4",
                            objectBorderRadiusTopRight: "4",
                            objectBorderRadiusBottomRight: "1",
                            objectBorderRadiusBottomLeft: "1",
                            objectBorderRadiusIsPixels: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#D64800FF",
                            objectBorderStyle: "double",
                            objectBorderWidth: 2,
                            objectImgBorderRadiusTopLeft: "1",
                            objectImgBorderRadiusTopRight: "1",
                            objectImgBorderRadiusBottomRight: "1",
                            objectImgBorderRadiusBottomLeft: "1",
                            objectImgBorderRadiusIsPixels: !1,
                            objectImgBorderIsOn: !0,
                            objectImgBorderColor: "#D64800FF",
                            objectImgBorderStyle: "double",
                            objectImgBorderWidth: 4,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: 0,
                            rowImgBorderRadiusTopRight: 0,
                            rowImgBorderRadiusBottomRight: 0,
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !0,
                            rowImgBorderIsOn: !1,
                            rowImgBorderColor: "#FFEEDDFF",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1200,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }, {
                            rowTitle: "Candara",
                            rowText: "Candara",
                            objectTitle: "Candara",
                            objectText: "Candara",
                            addonTitle: "Candara",
                            addonText: "Candara",
                            scoreText: "Candara",
                            rowTitleTextSize: 200,
                            rowTextTextSize: 100,
                            objectTitleTextSize: 200,
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#000000",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#9A997BFF",
                            barTextPadding: "13",
                            barTextMargin: 0,
                            barTextFont: "Courier",
                            barTextSize: "21",
                            barPadding: 0,
                            barMargin: 0,
                            rowTitleColor: "#000000FF",
                            rowTextColor: "#000000FF",
                            objectTitleColor: "#000000FF",
                            objectTextColor: "#000000FF",
                            addonTitleColor: "#000000FF",
                            addonTextColor: "#000000FF",
                            scoreTextColor: "#000000FF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "center",
                            objectTitleAlign: "center",
                            objectTextAlign: "justify",
                            addonTitleAlign: "center",
                            addonTextAlign: "justify",
                            scoreTextAlign: "left",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#1A130EFF",
                            objectBgColor: "#B4A78EFF",
                            rowBgColor: "#B4A78EFF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "95",
                            rowImageWidth: 100,
                            objectImageMarginTop: "3",
                            objectImageMarginBottom: "0",
                            rowImageMarginTop: 0,
                            objectMargin: 10,
                            rowMargin: 10,
                            rowTextPaddingY: "8",
                            rowTextPaddingX: 10,
                            objectTextPadding: 10,
                            rowBodyMarginTop: "25",
                            rowBodyMarginBottom: 25,
                            rowBodyMarginSides: "1",
                            objectDropShadowH: "3",
                            objectDropShadowV: "3",
                            objectDropShadowSpread: 0,
                            objectDropShadowBlur: "3",
                            objectDropShadowColor: "#DBCDAFFF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "3",
                            rowDropShadowV: "3",
                            rowDropShadowSpread: 0,
                            rowDropShadowBlur: "3",
                            rowDropShadowColor: "#DBCDAFFF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: 100,
                            selFilterContIsOn: !1,
                            selFilterCont: 100,
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: 0,
                            selFilterInvertIsOn: !1,
                            selFilterInvert: 0,
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#6B594698",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !0,
                            reqFilterBlur: "3",
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: 0,
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: 50,
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !1,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#FFFFFFFF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "11",
                            rowBorderRadiusTopRight: "11",
                            rowBorderRadiusBottomRight: "0",
                            rowBorderRadiusBottomLeft: "0",
                            rowBorderRadiusIsPixels: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#988267FF",
                            rowBorderStyle: "double",
                            rowBorderWidth: "4",
                            objectBorderRadiusTopLeft: "4",
                            objectBorderRadiusTopRight: "4",
                            objectBorderRadiusBottomRight: "1",
                            objectBorderRadiusBottomLeft: "1",
                            objectBorderRadiusIsPixels: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#988267FF",
                            objectBorderStyle: "double",
                            objectBorderWidth: 2,
                            objectImgBorderRadiusTopLeft: "10",
                            objectImgBorderRadiusTopRight: "10",
                            objectImgBorderRadiusBottomRight: "10",
                            objectImgBorderRadiusBottomLeft: "10",
                            objectImgBorderRadiusIsPixels: !1,
                            objectImgBorderIsOn: !0,
                            objectImgBorderColor: "#1A130EFF",
                            objectImgBorderStyle: "dotted",
                            objectImgBorderWidth: 4,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: 0,
                            rowImgBorderRadiusTopRight: 0,
                            rowImgBorderRadiusBottomRight: 0,
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !0,
                            rowImgBorderIsOn: !1,
                            rowImgBorderColor: "#FFEEDDFF",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1200,
                            objectImgOverflowIsOn: !1,
                            rowOverflowIsOn: !0,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }, {
                            rowTitle: "Candara",
                            rowText: "Candara",
                            objectTitle: "Candara",
                            objectText: "Candara",
                            addonTitle: "Candara",
                            addonText: "Candara",
                            scoreText: "Candara",
                            rowTitleTextSize: 200,
                            rowTextTextSize: 100,
                            objectTitleTextSize: 200,
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#000000",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#9A997BFF",
                            barTextPadding: "13",
                            barTextMargin: 0,
                            barTextFont: "Courier",
                            barTextSize: "21",
                            barPadding: 0,
                            barMargin: 0,
                            rowTitleColor: "#4F0A0AFF",
                            rowTextColor: "#4F0A0AFF",
                            objectTitleColor: "#4F0A0AFF",
                            objectTextColor: "#4F0A0AFF",
                            addonTitleColor: "#4F0A0AFF",
                            addonTextColor: "#4F0A0AFF",
                            scoreTextColor: "#4F0A0AFF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "center",
                            objectTitleAlign: "center",
                            objectTextAlign: "justify",
                            addonTitleAlign: "center",
                            addonTextAlign: "justify",
                            scoreTextAlign: "left",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#1A0000FF",
                            objectBgColor: "#A2A2A2FF",
                            rowBgColor: "#A2A2A2FF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "100",
                            rowImageWidth: 100,
                            objectImageMarginTop: "0",
                            objectImageMarginBottom: "0",
                            rowImageMarginTop: 0,
                            objectMargin: "29",
                            rowMargin: 10,
                            rowTextPaddingY: "8",
                            rowTextPaddingX: 10,
                            objectTextPadding: "13",
                            rowBodyMarginTop: "25",
                            rowBodyMarginBottom: 25,
                            rowBodyMarginSides: "1",
                            objectDropShadowH: "4",
                            objectDropShadowV: "4",
                            objectDropShadowSpread: 0,
                            objectDropShadowBlur: "5",
                            objectDropShadowColor: "#760500FF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "3",
                            rowDropShadowV: "3",
                            rowDropShadowSpread: 0,
                            rowDropShadowBlur: "3",
                            rowDropShadowColor: "#760500FF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: "37",
                            selFilterContIsOn: !1,
                            selFilterCont: "200",
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: "153",
                            selFilterInvertIsOn: !1,
                            selFilterInvert: "49",
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#FFFFFFFF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !0,
                            reqFilterBlur: "1",
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: 0,
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: "20",
                            reqFilterSaturIsOn: !0,
                            reqFilterSatur: "10",
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !0,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#F99090FF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "3",
                            rowBorderRadiusTopRight: "0",
                            rowBorderRadiusBottomRight: "0",
                            rowBorderRadiusBottomLeft: "0",
                            rowBorderRadiusIsPixels: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#760500FF",
                            rowBorderStyle: "ridge",
                            rowBorderWidth: "4",
                            objectBorderRadiusTopLeft: "0",
                            objectBorderRadiusTopRight: "0",
                            objectBorderRadiusBottomRight: "0",
                            objectBorderRadiusBottomLeft: "2",
                            objectBorderRadiusIsPixels: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#760500FF",
                            objectBorderStyle: "inset",
                            objectBorderWidth: "5",
                            objectImgBorderRadiusTopLeft: "0",
                            objectImgBorderRadiusTopRight: "0",
                            objectImgBorderRadiusBottomRight: "3",
                            objectImgBorderRadiusBottomLeft: "3",
                            objectImgBorderRadiusIsPixels: !1,
                            objectImgBorderIsOn: !0,
                            objectImgBorderColor: "#760500FF",
                            objectImgBorderStyle: "inset",
                            objectImgBorderWidth: 5,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: 0,
                            rowImgBorderRadiusTopRight: 0,
                            rowImgBorderRadiusBottomRight: 0,
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !0,
                            rowImgBorderIsOn: !1,
                            rowImgBorderColor: "#FFEEDDFF",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1200,
                            objectImgOverflowIsOn: !1,
                            rowOverflowIsOn: !0,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }, {
                            rowTitle: "Cambria",
                            rowText: "Helvetica",
                            objectTitle: "Cambria",
                            objectText: "Helvetica",
                            addonTitle: "Cambria",
                            addonText: "Helvetica",
                            scoreText: "Cambria",
                            rowTitleTextSize: 200,
                            rowTextTextSize: 100,
                            objectTitleTextSize: 200,
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#979797",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#535353FF",
                            barTextPadding: "5",
                            barTextMargin: 0,
                            barTextFont: "Cambria",
                            barTextSize: "29",
                            barPadding: 0,
                            barMargin: 0,
                            rowTitleColor: "#000000FF",
                            rowTextColor: "#000000FF",
                            objectTitleColor: "#000000FF",
                            objectTextColor: "#000000FF",
                            addonTitleColor: "#000000FF",
                            addonTextColor: "#000000FF",
                            scoreTextColor: "#000000FF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "center",
                            objectTitleAlign: "center",
                            objectTextAlign: "center",
                            addonTitleAlign: "center",
                            addonTextAlign: "center",
                            scoreTextAlign: "center",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#090909FF",
                            objectBgColor: "#E5E5E5FF",
                            rowBgColor: "#E5E5E5FF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "97",
                            rowImageWidth: 100,
                            objectImageMarginTop: "1",
                            objectImageMarginBottom: "-11",
                            rowImageMarginTop: 0,
                            objectMargin: "5",
                            rowMargin: 10,
                            rowTextPaddingY: "15",
                            rowTextPaddingX: "15",
                            objectTextPadding: "14",
                            rowBodyMarginTop: 25,
                            rowBodyMarginBottom: 25,
                            rowBodyMarginSides: "1",
                            objectDropShadowH: "9",
                            objectDropShadowV: "3",
                            objectDropShadowSpread: 0,
                            objectDropShadowBlur: "3",
                            objectDropShadowColor: "#535353FF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "3",
                            rowDropShadowV: "3",
                            rowDropShadowSpread: 0,
                            rowDropShadowBlur: "3",
                            rowDropShadowColor: "#535353FF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: 100,
                            selFilterContIsOn: !1,
                            selFilterCont: 100,
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: 0,
                            selFilterInvertIsOn: !1,
                            selFilterInvert: 0,
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#70FF7EFF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !1,
                            reqFilterBlur: 0,
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: 0,
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: 50,
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !1,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#FFFFFFFF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "6",
                            rowBorderRadiusTopRight: "6",
                            rowBorderRadiusBottomRight: "2",
                            rowBorderRadiusBottomLeft: "2",
                            rowBorderRadiusIsPixels: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#000000FF",
                            rowBorderStyle: "dotted",
                            rowBorderWidth: "2",
                            objectBorderRadiusTopLeft: "14",
                            objectBorderRadiusTopRight: "14",
                            objectBorderRadiusBottomRight: "6",
                            objectBorderRadiusBottomLeft: "6",
                            objectBorderRadiusIsPixels: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#000000FF",
                            objectBorderStyle: "dotted",
                            objectBorderWidth: 2,
                            objectImgBorderRadiusTopLeft: "14",
                            objectImgBorderRadiusTopRight: "14",
                            objectImgBorderRadiusBottomRight: "0",
                            objectImgBorderRadiusBottomLeft: "1",
                            objectImgBorderRadiusIsPixels: !0,
                            objectImgBorderIsOn: !0,
                            objectImgBorderColor: "#000000FF",
                            objectImgBorderStyle: "double",
                            objectImgBorderWidth: 4,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: 0,
                            rowImgBorderRadiusTopRight: 0,
                            rowImgBorderRadiusBottomRight: 0,
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !0,
                            rowImgBorderIsOn: !1,
                            rowImgBorderColor: "#FFEEDDFF",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1200,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }, {
                            rowTitle: "Times New Roman",
                            rowText: "Candara",
                            objectTitle: "Times New Roman",
                            objectText: "Candara",
                            addonTitle: "Times New Roman",
                            addonText: "Candara",
                            scoreText: "Times New Roman",
                            rowTitleTextSize: "270",
                            rowTextTextSize: 100,
                            objectTitleTextSize: 200,
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#000000",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#FFD7C0FF",
                            barTextPadding: "16",
                            barTextMargin: 0,
                            barTextFont: "Roboto",
                            barTextSize: "16",
                            barPadding: "0",
                            barMargin: "0",
                            rowTitleColor: "#000000FF",
                            rowTextColor: "#000000FF",
                            objectTitleColor: "#000000FF",
                            objectTextColor: "#000000FF",
                            addonTitleColor: "#000000FF",
                            addonTextColor: "#000000FF",
                            scoreTextColor: "#000000FF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "center",
                            objectTitleAlign: "center",
                            objectTextAlign: "justify",
                            addonTitleAlign: "justify",
                            addonTextAlign: "center",
                            scoreTextAlign: "center",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#18C10FFF",
                            objectBgColor: "#F78F49FF",
                            rowBgColor: "#F78F49FF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "98",
                            rowImageWidth: 100,
                            objectImageMarginTop: "1",
                            objectImageMarginBottom: "2",
                            rowImageMarginTop: 0,
                            objectMargin: 10,
                            rowMargin: "12",
                            rowTextPaddingY: "15",
                            rowTextPaddingX: "5",
                            objectTextPadding: 10,
                            rowBodyMarginTop: "20",
                            rowBodyMarginBottom: "10",
                            rowBodyMarginSides: "1",
                            objectDropShadowH: "2",
                            objectDropShadowV: "2",
                            objectDropShadowSpread: "3",
                            objectDropShadowBlur: "2",
                            objectDropShadowColor: "#FFD7C0FF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "2",
                            rowDropShadowV: "2",
                            rowDropShadowSpread: "2",
                            rowDropShadowBlur: "2",
                            rowDropShadowColor: "#FFD7C0FF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: 100,
                            selFilterContIsOn: !1,
                            selFilterCont: 100,
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: 0,
                            selFilterInvertIsOn: !1,
                            selFilterInvert: 0,
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#FBED37FF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !0,
                            reqFilterBlur: "1",
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !0,
                            reqFilterGray: "75",
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: "65",
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !0,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#FFD7C0FF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "2",
                            rowBorderRadiusTopRight: "2",
                            rowBorderRadiusBottomRight: "2",
                            rowBorderRadiusBottomLeft: "2",
                            rowBorderRadiusIsPixels: !0,
                            rowOverflowIsOn: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#F99ED4FF",
                            rowBorderStyle: "solid",
                            rowBorderWidth: 2,
                            objectBorderRadiusTopLeft: "3",
                            objectBorderRadiusTopRight: "3",
                            objectBorderRadiusBottomRight: 0,
                            objectBorderRadiusBottomLeft: 0,
                            objectBorderRadiusIsPixels: !0,
                            objectOverflowIsOn: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#F99ED4FF",
                            objectBorderStyle: "solid",
                            objectBorderWidth: 2,
                            objectImgBorderRadiusTopLeft: "3",
                            objectImgBorderRadiusTopRight: "3",
                            objectImgBorderRadiusBottomRight: "1",
                            objectImgBorderRadiusBottomLeft: "1",
                            objectImgBorderRadiusIsPixels: !0,
                            objectImgBorderIsOn: !0,
                            objectImgBorderColor: "#F99ED4FF",
                            objectImgBorderStyle: "ridge",
                            objectImgBorderWidth: 2,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: 0,
                            rowImgBorderRadiusTopRight: 0,
                            rowImgBorderRadiusBottomRight: 0,
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !0,
                            rowImgBorderIsOn: !1,
                            rowImgBorderColor: "red",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1600,
                            objectDesignIsAdvanced: !0,
                            rowDesignIsAdvanced: !0,
                            objectImgOverflowIsOn: !0,
                            multiChoiceTextSize: "200",
                            multiChoiceTextFont: "Candara",
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }, {
                            rowTitle: "Trebuchet MS",
                            rowText: "Candara",
                            objectTitle: "Trebuchet MS",
                            objectText: "Candara",
                            addonTitle: "Trebuchet MS",
                            addonText: "Candara",
                            scoreText: "Times New Roman",
                            rowTitleTextSize: "200",
                            rowTextTextSize: 100,
                            objectTitleTextSize: "175",
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#CC9900",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#333333FF",
                            barTextPadding: "16",
                            barTextMargin: 0,
                            barTextFont: "Roboto",
                            barTextSize: "16",
                            barPadding: "0",
                            barMargin: "0",
                            rowTitleColor: "#000000FF",
                            rowTextColor: "#000000FF",
                            objectTitleColor: "#000000FF",
                            objectTextColor: "#000000FF",
                            addonTitleColor: "#000000FF",
                            addonTextColor: "#000000FF",
                            scoreTextColor: "#000000FF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "justify",
                            objectTitleAlign: "center",
                            objectTextAlign: "justify",
                            addonTitleAlign: "center",
                            addonTextAlign: "justify",
                            scoreTextAlign: "center",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#B8860BFF",
                            objectBgColor: "#D9B01CFF",
                            rowBgColor: "#D9B01CFF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "96",
                            rowImageWidth: "96",
                            objectImageMarginTop: "2",
                            objectImageMarginBottom: "2",
                            rowImageMarginTop: "2",
                            objectMargin: 10,
                            rowMargin: "12",
                            rowTextPaddingY: "15",
                            rowTextPaddingX: "5",
                            objectTextPadding: 10,
                            rowBodyMarginTop: "20",
                            rowBodyMarginBottom: "10",
                            rowBodyMarginSides: "1",
                            objectDropShadowH: "2",
                            objectDropShadowV: "2",
                            objectDropShadowSpread: "4",
                            objectDropShadowBlur: "3",
                            objectDropShadowColor: "#090909FF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "2",
                            rowDropShadowV: "2",
                            rowDropShadowSpread: "3",
                            rowDropShadowBlur: "4",
                            rowDropShadowColor: "#090909FF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: 100,
                            selFilterContIsOn: !1,
                            selFilterCont: 100,
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: 0,
                            selFilterInvertIsOn: !1,
                            selFilterInvert: 0,
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#FFB500FF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !1,
                            reqFilterBlur: "1",
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: "75",
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: "75",
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !0,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#333333FF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "4",
                            rowBorderRadiusTopRight: "4",
                            rowBorderRadiusBottomRight: "0",
                            rowBorderRadiusBottomLeft: "0",
                            rowBorderRadiusIsPixels: !1,
                            rowOverflowIsOn: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#1C1C1CFF",
                            rowBorderStyle: "solid",
                            rowBorderWidth: 2,
                            objectBorderRadiusTopLeft: "3",
                            objectBorderRadiusTopRight: "3",
                            objectBorderRadiusBottomRight: 0,
                            objectBorderRadiusBottomLeft: 0,
                            objectBorderRadiusIsPixels: !0,
                            objectOverflowIsOn: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#1C1C1CFF",
                            objectBorderStyle: "solid",
                            objectBorderWidth: 2,
                            objectImgBorderRadiusTopLeft: "3",
                            objectImgBorderRadiusTopRight: "3",
                            objectImgBorderRadiusBottomRight: "3",
                            objectImgBorderRadiusBottomLeft: "3",
                            objectImgBorderRadiusIsPixels: !0,
                            objectImgBorderIsOn: !0,
                            objectImgBorderColor: "#1C1C1CFF",
                            objectImgBorderStyle: "ridge",
                            objectImgBorderWidth: 2,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: "5",
                            rowImgBorderRadiusTopRight: "5",
                            rowImgBorderRadiusBottomRight: "0",
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !1,
                            rowImgBorderIsOn: !0,
                            rowImgBorderColor: "#1C1C1CFF",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1600,
                            objectDesignIsAdvanced: !0,
                            rowDesignIsAdvanced: !0,
                            objectImgOverflowIsOn: !0,
                            multiChoiceTextSize: "200",
                            multiChoiceTextFont: "Candara",
                            rowImageMarginBottom: "1",
                            rowImgOverflowIsOn: !0,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }, {
                            rowTitle: "Comic Sans MS",
                            rowText: "Helvetica",
                            objectTitle: "Comic Sans MS",
                            objectText: "Helvetica",
                            addonTitle: "Comic Sans MS",
                            addonText: "Helvetica",
                            scoreText: "Courier New",
                            rowTitleTextSize: "200",
                            rowTextTextSize: 100,
                            objectTitleTextSize: "175",
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#FFA52C",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#0000F9FF",
                            barTextPadding: "16",
                            barTextMargin: 0,
                            barTextFont: "Roboto",
                            barTextSize: "16",
                            barPadding: "0",
                            barMargin: "0",
                            rowTitleColor: "#000000FF",
                            rowTextColor: "#000000FF",
                            objectTitleColor: "#000000FF",
                            objectTextColor: "#000000FF",
                            addonTitleColor: "#000000FF",
                            addonTextColor: "#000000FF",
                            scoreTextColor: "#000000FF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "justify",
                            objectTitleAlign: "center",
                            objectTextAlign: "justify",
                            addonTitleAlign: "center",
                            addonTextAlign: "justify",
                            scoreTextAlign: "center",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#008018FF",
                            objectBgColor: "#FFFF41FF",
                            rowBgColor: "#FFFF41FF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "100",
                            rowImageWidth: "100",
                            objectImageMarginTop: "0",
                            objectImageMarginBottom: "1",
                            rowImageMarginTop: "0",
                            objectMargin: "8",
                            rowMargin: "7",
                            rowTextPaddingY: "15",
                            rowTextPaddingX: "5",
                            objectTextPadding: "8",
                            rowBodyMarginTop: "30",
                            rowBodyMarginBottom: "20",
                            rowBodyMarginSides: "2",
                            objectDropShadowH: "3",
                            objectDropShadowV: "3",
                            objectDropShadowSpread: "3",
                            objectDropShadowBlur: "4",
                            objectDropShadowColor: "#FF0018FF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "2",
                            rowDropShadowV: "2",
                            rowDropShadowSpread: "3",
                            rowDropShadowBlur: "4",
                            rowDropShadowColor: "#FF0018FF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: 100,
                            selFilterContIsOn: !1,
                            selFilterCont: 100,
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: 0,
                            selFilterInvertIsOn: !1,
                            selFilterInvert: 0,
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#FFA52CFF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !1,
                            reqFilterBlur: "1",
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: "75",
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: "75",
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !0,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#86007DFF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "12",
                            rowBorderRadiusTopRight: "12",
                            rowBorderRadiusBottomRight: "0",
                            rowBorderRadiusBottomLeft: "0",
                            rowBorderRadiusIsPixels: !1,
                            rowOverflowIsOn: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#FFA52CFF",
                            rowBorderStyle: "solid",
                            rowBorderWidth: "4",
                            objectBorderRadiusTopLeft: "12",
                            objectBorderRadiusTopRight: "12",
                            objectBorderRadiusBottomRight: "2",
                            objectBorderRadiusBottomLeft: "2",
                            objectBorderRadiusIsPixels: !0,
                            objectOverflowIsOn: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#FFA52CFF",
                            objectBorderStyle: "solid",
                            objectBorderWidth: "4",
                            objectImgBorderRadiusTopLeft: "0",
                            objectImgBorderRadiusTopRight: "0",
                            objectImgBorderRadiusBottomRight: "0",
                            objectImgBorderRadiusBottomLeft: "0",
                            objectImgBorderRadiusIsPixels: !0,
                            objectImgBorderIsOn: !1,
                            objectImgBorderColor: "#1C1C1CFF",
                            objectImgBorderStyle: "ridge",
                            objectImgBorderWidth: 2,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: "5",
                            rowImgBorderRadiusTopRight: "5",
                            rowImgBorderRadiusBottomRight: "0",
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !1,
                            rowImgBorderIsOn: !0,
                            rowImgBorderColor: "#1C1C1CFF",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1600,
                            objectDesignIsAdvanced: !0,
                            rowDesignIsAdvanced: !0,
                            objectImgOverflowIsOn: !0,
                            multiChoiceTextSize: "200",
                            multiChoiceTextFont: "Candara",
                            rowImageMarginBottom: "0",
                            rowImgOverflowIsOn: !0,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }, {
                            rowTitle: "Times New Roman",
                            rowText: "Helvetica",
                            objectTitle: "Comic Sans MS",
                            objectText: "Helvetica",
                            addonTitle: "Comic Sans MS",
                            addonText: "Helvetica",
                            scoreText: "Courier New",
                            rowTitleTextSize: "200",
                            rowTextTextSize: 100,
                            objectTitleTextSize: "175",
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#4A8022",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#E4F3D8FF",
                            barTextPadding: "16",
                            barTextMargin: 0,
                            barTextFont: "Roboto",
                            barTextSize: "16",
                            barPadding: "0",
                            barMargin: "0",
                            rowTitleColor: "#4A7C25FF",
                            rowTextColor: "#204206FF",
                            objectTitleColor: "#4A7C25FF",
                            objectTextColor: "#204206FF",
                            addonTitleColor: "#4A7C25FF",
                            addonTextColor: "#204206FF",
                            scoreTextColor: "#204206FF",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "justify",
                            objectTitleAlign: "center",
                            objectTextAlign: "justify",
                            addonTitleAlign: "center",
                            addonTextAlign: "justify",
                            scoreTextAlign: "center",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
							rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#E4F3D8FF",
                            objectBgColor: "#C8E6B2FF",
                            rowBgColor: "#C8E6B2FF",
                            rowBgColorIsOn: !0,
                            objectBgColorIsOn: !0,
                            objectImageWidth: "98",
                            rowImageWidth: "98",
                            objectImageMarginTop: "1",
                            objectImageMarginBottom: "1",
                            rowImageMarginTop: "1",
                            objectMargin: "10",
                            rowMargin: "13",
                            rowTextPaddingY: "8",
                            rowTextPaddingX: "10",
                            objectTextPadding: "7",
                            rowBodyMarginTop: "30",
                            rowBodyMarginBottom: "20",
                            rowBodyMarginSides: "4",
                            objectDropShadowH: "3",
                            objectDropShadowV: "3",
                            objectDropShadowSpread: "1",
                            objectDropShadowBlur: "4",
                            objectDropShadowColor: "#92CA68FF",
                            objectDropShadowIsOn: !0,
                            rowDropShadowH: "2",
                            rowDropShadowV: "2",
                            rowDropShadowSpread: "1",
                            rowDropShadowBlur: "2",
                            rowDropShadowColor: "#76BC43FF",
                            rowDropShadowIsOn: !0,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: "119",
                            selFilterContIsOn: !0,
                            selFilterCont: "115",
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !0,
                            selFilterHue: "-58",
                            selFilterInvertIsOn: !1,
                            selFilterInvert: "0",
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#C8E6B2FF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !1,
                            reqFilterBlur: "1",
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: "75",
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !0,
                            reqFilterInvert: "22",
                            reqFilterOpacIsOn: !1,
                            reqFilterOpac: "75",
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !0,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#C8E6B2FF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
                            reqFilterVisibleIsOn: !1,
                            rowBorderRadiusTopLeft: "6",
                            rowBorderRadiusTopRight: "6",
                            rowBorderRadiusBottomRight: "3",
                            rowBorderRadiusBottomLeft: "3",
                            rowBorderRadiusIsPixels: !0,
                            rowOverflowIsOn: !0,
                            rowBorderIsOn: !0,
                            rowBorderColor: "#92CA68FF",
                            rowBorderStyle: "solid",
                            rowBorderWidth: "4",
                            objectBorderRadiusTopLeft: "2",
                            objectBorderRadiusTopRight: "2",
                            objectBorderRadiusBottomRight: "1",
                            objectBorderRadiusBottomLeft: "1",
                            objectBorderRadiusIsPixels: !0,
                            objectOverflowIsOn: !0,
                            objectBorderIsOn: !0,
                            objectBorderColor: "#76BC43FF",
                            objectBorderStyle: "solid",
                            objectBorderWidth: "1",
                            objectImgBorderRadiusTopLeft: "2",
                            objectImgBorderRadiusTopRight: "2",
                            objectImgBorderRadiusBottomRight: "0",
                            objectImgBorderRadiusBottomLeft: "0",
                            objectImgBorderRadiusIsPixels: !0,
                            objectImgBorderIsOn: !0,
                            objectImgBorderColor: "#76BC43FF",
                            objectImgBorderStyle: "double",
                            objectImgBorderWidth: 1,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: "5",
                            rowImgBorderRadiusTopRight: "5",
                            rowImgBorderRadiusBottomRight: "0",
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !0,
                            rowImgBorderIsOn: !0,
                            rowImgBorderColor: "#76BC43FF",
                            rowImgBorderStyle: "double",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1800,
                            objectDesignIsAdvanced: !0,
                            rowDesignIsAdvanced: !0,
                            objectImgOverflowIsOn: !0,
                            multiChoiceTextSize: "100",
                            multiChoiceTextFont: "Times New Roman",
                            rowImageMarginBottom: "1",
                            rowImgOverflowIsOn: !0,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170
                        }]
                    }
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    }
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    changeStyling: function(e) {
                        this.$store.state.app.styling = this.styleTemplates[e]
                    }
                }
            },
            gi = hi,
            bi = Object(w["a"])(gi, pi, ui, !1, null, null, null),
            vi = bi.exports;
        x()(bi, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"]
        });
        var mi = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
					ref: "dialog",
                    attrs: {
                        "max-width": "1920px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					staticClass: "col-lg-3 col-md-4 col-sm-6 col-xs-12 col-12",
                    attrs: {
                        "align-self": "center"
                    }
                }, [o("v-btn", {
                    on: {
                        click: function(t) {
                            return t.stopPropagation(), e.createNewBackpackRow()
                        }
                    }
                }, [e._v("Add New Backpack Row")])], 1)], 1), o("v-row", [o("v-col", {
					staticClass: "col-lg-3 col-md-4 col-sm-6 col-xs-12 col-12",
                    attrs: {
                        "align-self": "center"
                    }
                }, [o("v-switch", {
                    staticClass: "mt-n2 mb-n6 ms-3",
                    attrs: {
                        label: "Dialog where selected choices can be imported with ID's."
                    },
                    model: {
                        value: e.$store.state.app.importedChoicesIsOpen,
                        callback: function(t) {
                            e.$set(e.$store.state.app, "importedChoicesIsOpen", t)
                        },
                        expression: "$store.state.app.importedChoicesIsOpen"
                    }
                })], 1)], 1), o("v-row", e._l(e.backpack, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-0",
                        attrs: {
                            cols: t.width ? "6" : "12"
                        }
                    }, [o("v-toolbar", {
                        staticClass: "overflow--auto grey " + (e.$vuetify.theme.isDark ? "darken" : "lighten") + "-2"
                    }, [o("v-toolbar-title", {
                        domProps: {
                            innerHTML: e._s(t.title)
                        }
                    }), o("v-spacer"), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(e) {
                                            t.isEditModeOn = !t.isEditModeOn
                                        }
                                    }
                                }, s), [t.isEditModeOn ? o("v-icon", [e._v("mdi-keyboard-backspace")]) : o("v-icon", [e._v("mdi-wrench")])], 1)]
                            }
                        }], null, !0)
                    }, [t.isEditModeOn ? o("span", [e._v("Preview")]) : o("span", [e._v("Edit Row")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.deleteRow(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-delete-forever")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Delete Row")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.cloneRow(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-content-copy")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Clone Row")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(t) {
                                var i = t.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(t) {
                                            e.currentComponent = "appDesign"
                                        }
                                    }
                                }, i), [o("v-icon", [e._v("mdi-grease-pencil")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Modify Row Design")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.moveRowUp(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-chevron-up")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Move Row Up")])]), o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
                                        icon: ""
                                    },
									on: {
                                        click: function(o) {
                                            return e.moveRowDown(t)
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-chevron-down")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Move Row Down")])])], 1), o("app-Row", {
                        attrs: {
                            row: t,
                            type: e.type
                        },
                        on: {
                            rowWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            fi = [],
            wi = {
                props: {
                    chapter: Object,
                    page: Object,
                    type: String
                },
                data: function() {
                    return {
                        dialog: !0
                    }
                },
                components: {
					appDesign: Mo,
                    appRow: Qt
                },
                computed: {
                    backpack: function() {
                        return this.$store.state.app.backpack
                    },
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.$set(this.app, "backpackDialog", this.$refs.dialog);
				},
				destroyed: function() {
					this.$delete(this.app, "backpackDialog");
				},
                methods: {
					deleteRow: function(e) {
						var s = this.backpack.indexOf(e);
						for (var f = s + 1; f < this.backpack.length; f++) {
							this.app.compR[this.backpack[f].id].rows -= 1;
							for (var b = 0; b < this.backpack[f].objects.length; b++) {
								if ("undefined" !== typeof this.app.comp[this.backpack[f].objects[b].id]) {
									this.app.comp[this.backpack[f].objects[b].id].rows -= 1;
								}
							}
						}
						for (var c = 0; c < e.objects.length; c++) {
							this.$delete(this.app.comp, e.objects[c].id);
						}
						this.$delete(this.app.compR, e.id);
                        this.backpack.splice(this.backpack.indexOf(e), 1);
                    },
                    moveRowUp: function(e) {
                        var t = this.backpack.indexOf(e);
                        if (t > 0) {
                            var o = this.backpack[t];
                            this.$set(this.backpack, t, this.backpack[t - 1]), this.$set(this.backpack, t - 1, o);
							this.app.compR[this.backpack[t - 1].id].rows = t - 1;
							this.app.compR[this.backpack[t].id].rows = t;
							for (var b = 0; b < this.backpack[t - 1].objects.length; b++) {
								this.app.comp[this.backpack[t - 1].objects[b].id].rows = t - 1;
							}
							for (var c = 0; c < this.backpack[t].objects.length; c++) {
								this.app.comp[this.backpack[t].objects[c].id].rows = t;
							}
                        }
                    },
                    cloneRow: function(e) {
                        this.backpack.splice(this.backpack.indexOf(e) + 1, 0, JSON.parse(JSON.stringify(e)));
						var t = "",
							o = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateBackpackRowId() {
							var s = "";
							for (var f = 0; f < th.app.rowIdLength; f++) {
								s += o.charAt(Math.floor(Math.random() * o.length));
							}
							if ("undefined" !== typeof th.app.compR[s]) {
								return generateBackpackRowId()
							} else {
								return s
							}
						}
						function generateBackpackObjectId() {
							var s = "";
							for (var f = 0; f < th.app.objectIdLength; f++) {
								s += o.charAt(Math.floor(Math.random() * o.length));
							}
							if ("undefined" !== typeof th.app.comp[s]) {
								return generateBackpackObjectId()
							} else {
								return s
							}
						}
						t = generateBackpackRowId();
                        this.backpack[this.backpack.indexOf(e) + 1].id = t;
						this.app.compR[t] = {rows: this.backpack.indexOf(e) + 1, type: "backpack"};
						if ("undefined" !== typeof this.backpack[this.backpack.indexOf(e) + 1].rowDesignGroups) {
							for (var f = 0; f < this.backpack[this.backpack.indexOf(e) + 1].rowDesignGroups.length; f++) {
								var co = this.app.compRDG[this.backpack[this.backpack.indexOf(e) + 1].rowDesignGroups[f].id],
									coD = this.app.rowDesignGroups[co.designGroups];
								coD.backpackElements.push({id: t});
							}
						}
                        for (var r = 0; r < this.backpack[this.backpack.indexOf(e) + 1].objects.length; r++) {
                            t = generateBackpackObjectId();
                            this.backpack[this.backpack.indexOf(e) + 1].objects[r].id = t;
							this.app.comp[t] = {rows: this.backpack.indexOf(e) + 1, objects: r, type: "backpack"};
							if ("undefined" !== typeof this.backpack[this.backpack.indexOf(e) + 1].objects[r].objectDesignGroups) {
								for (var d = 0; d < this.backpack[this.backpack.indexOf(e) + 1].objects[r].objectDesignGroups.length; d++) {
									if ("undefined" !== typeof this.app.compODG[this.backpack[this.backpack.indexOf(e) + 1].objects[r].objectDesignGroups[d].id]) {
										var co = this.app.compODG[this.backpack[this.backpack.indexOf(e) + 1].objects[r].objectDesignGroups[d].id],
											coD = this.app.objectDesignGroups[co.designGroups];
										coD.backpackElements.push({id: t});
									}
								}
							}
                        }
						for (var b = this.backpack.indexOf(e) + 2; b < this.backpack.length; b++) {
							this.app.compR[this.backpack[b].id] = {rows: b, type: "backpack"};
							for (var c = 0; c < this.backpack[b].objects.length; c++) {
								this.app.comp[this.backpack[b].objects[c].id] = {rows: b, objects: c, type: "backpack"};
							}
						}
                    },
                    moveRowDown: function(e) {
                        var t = this.backpack.indexOf(e);
                        if (-1 !== t && t < this.backpack.length - 1) {
                            var o = this.backpack[t];
                            this.$set(this.backpack, t, this.backpack[t + 1]), this.$set(this.backpack, t + 1, o);
							this.app.compR[this.backpack[t + 1].id].rows = t + 1;
							this.app.compR[this.backpack[t].id].rows = t;
							for (var b = 0; b < this.backpack[t + 1].objects.length; b++) {
								this.app.comp[this.backpack[t + 1].objects[b].id].rows = t + 1;
							}
							for (var c = 0; c < this.backpack[t].objects.length; c++) {
								this.app.comp[this.backpack[t].objects[c].id].rows = t;
							}
                        }
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    createNewBackpackRow: function() {
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateBackpackRowId() {
							var s = "";
							for (var o = 0; o < th.app.rowIdLength; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.compR[s]) {
								return generateBackpackRowId()
							} else {
								return s
							}
						}
						e = generateBackpackRowId();
                        this.backpack.push({
                            id: e,
                            title: this.app.defaultRowTitle,
                            titleText: this.app.defaultRowText,
                            objectWidth: "col-md-3",
                            image: "",
                            template: 1,
                            isButtonRow: !1,
                            buttonType: !0,
                            buttonId: "",
                            buttonText: "Click",
                            buttonRandom: !1,
                            buttonRandomNumber: 1,
                            isResultRow: !0,
                            resultGroupId: "",
                            isInfoRow: !0,
                            defaultAspectWidth: 1,
                            defaultAspectHeight: 1,
                            allowedChoices: 0,
                            currentChoices: 0,
                            requireds: [],
                            isEditModeOn: !1,
                            isRequirementOpen: !1,
                            objects: [],
							rowDesignGroups: []
                        });
						this.app.compR[e] = {rows: this.backpack.length - 1, type: "backpack"};
                    }
                }
            },
            yi = wi,
            xi = (o("cea9"), o("2a7f")),
            Ci = Object(w["a"])(yi, mi, fi, !1, null, "769fcd90", null),
            Ti = Ci.exports;
        x()(Ci, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VIcon: J["a"],
            VRow: S["a"],
            VSpacer: O["a"],
            VSwitch: L["a"],
            VToolbar: Tt["a"],
            VToolbarTitle: xi["a"],
            VTooltip: Q["a"]
        });
        var ji = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "1300px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Project Defaults")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					staticClass: e.window.width > 720 ? "" : "col-12"
				}, [e._v(" Row "), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Row Title",
                        filled: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.app.defaultRowTitle,
                        callback: function(t) {
                            e.$set(e.app, "defaultRowTitle", t)
                        },
                        expression: "app.defaultRowTitle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Row Text",
                        filled: ""
                    },
                    model: {
                        value: e.app.defaultRowText,
                        callback: function(t) {
                            e.$set(e.app, "defaultRowText", t)
                        },
                        expression: "app.defaultRowText"
                    }
                }), e._v("Choice "), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Choice Title",
                        filled: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.app.defaultChoiceTitle,
                        callback: function(t) {
                            e.$set(e.app, "defaultChoiceTitle", t)
                        },
                        expression: "app.defaultChoiceTitle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Choice Text",
                        filled: ""
                    },
                    model: {
                        value: e.app.defaultChoiceText,
                        callback: function(t) {
                            e.$set(e.app, "defaultChoiceText", t)
                        },
                        expression: "app.defaultChoiceText"
                    }
                }), e._v(" Addon "), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Addon Title",
                        filled: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.app.defaultAddonTitle,
                        callback: function(t) {
                            e.$set(e.app, "defaultAddonTitle", t)
                        },
                        expression: "app.defaultAddonTitle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Addon Text",
                        filled: ""
                    },
                    model: {
                        value: e.app.defaultAddonText,
                        callback: function(t) {
                            e.$set(e.app, "defaultAddonText", t)
                        },
                        expression: "app.defaultAddonText"
                    }
                })], 1), o("v-col", {
					staticClass: e.window.width > 720 ? "" : "col-12"
				}, [e._v("Requirement "), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Before Required Text",
                        filled: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.app.defaultBeforeReq,
                        callback: function(t) {
                            e.$set(e.app, "defaultBeforeReq", t)
                        },
                        expression: "app.defaultBeforeReq"
                    }
                }), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "After Required Text",
                        filled: ""
                    },
                    model: {
                        value: e.app.defaultAfterReq,
                        callback: function(t) {
                            e.$set(e.app, "defaultAfterReq", t)
                        },
                        expression: "app.defaultAfterReq"
                    }
                }), e._v("Or Requirement "), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.orderOrReq,
                        filled: "",
                        label: "Order of Text"
                    },
                    model: {
                        value: e.app.orderOrReqText,
                        callback: function(t) {
                            e.$set(e.app, "orderOrReqText", t)
                        },
                        expression: "app.orderOrReqText"
                    }
                }), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Or Requirement Text",
                        filled: ""
                    },
                    model: {
                        value: e.app.defaultOrReq,
                        callback: function(t) {
                            e.$set(e.app, "defaultOrReq", t)
                        },
                        expression: "app.defaultOrReq"
                    }
                }), e._v("Selected From Requirement "), o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.orderSelReq,
                        filled: "",
                        label: "Order of Text"
                    },
                    model: {
                        value: e.app.orderSelReqText,
                        callback: function(t) {
                            e.$set(e.app, "orderSelReqText", t)
                        },
                        expression: "app.orderOrReqText"
                    }
                }), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Selected From Requirement Text",
                        filled: ""
                    },
                    model: {
                        value: e.app.defaultSelReq,
                        callback: function(t) {
                            e.$set(e.app, "defaultSelReq", t)
                        },
                        expression: "app.defaultSelReq"
                    }
                })], 1), o("v-col", {
					staticClass: e.window.width > 720 ? "" : "col-12"
				}, [e._v(" Points "), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "Before Points Text",
                        filled: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.app.defaultBeforePoint,
                        callback: function(t) {
                            e.$set(e.app, "defaultBeforePoint", t)
                        },
                        expression: "app.defaultBeforePoint"
                    }
                }), o("v-text-field", {
                    attrs: {
                        placeholder: "Empty",
                        label: "After Points Text",
                        filled: ""
                    },
                    model: {
                        value: e.app.defaultAfterPoint,
                        callback: function(t) {
                            e.$set(e.app, "defaultAfterPoint", t)
                        },
                        expression: "app.defaultAfterPoint"
                    }
                }), o("br"), e._v("Clicking this will change the id of all of the choices and rows where the title is longer than 2 letters, or the default title, into the title, which can make it easier to manage on larger projects with large amounts of requirements being used. Spaces will be replaced with underscores(_). "), o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        small: ""
                    },
                    on: {
                        click: function(t) {
                            return e.idToTitle()
                        }
                    }
                }, [e._v("change Ids to titles")])], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            Ii = [],
            ki = {
                data: function() {
                    return {
                        dialog: !0,
						orderOrReq: [{
							text: "X of Y",
							value: "0"
						}, {
							text: "Y of X",
							value: "1"
						}],
						orderSelReq: [{
							text: "X from Y",
							value: "0"
						}, {
							text: "Y from X",
							value: "1"
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    }
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    idToTitle: function() {
                        for (var e = 0; e < this.app.rows.length; e++) {
                            if (this.app.rows[e].id.length > 2 && this.app.rows[e].title != this.app.defaultRowTitle) {
								var rowTitle = this.app.rows[e].title.replaceAll(" ", "_");
								this.app.compR[rowTitle] = this.app.compR[this.app.rows[e].id];
								this.$delete(this.app.compR, this.app.rows[e].id);
								this.app.rows[e].id = rowTitle;
							}
                            for (var t = 0; t < this.app.rows[e].objects.length; t++) {
								if (this.app.rows[e].objects[t].id.length > 2 && this.app.rows[e].objects[t].title != this.app.defaultChoiceTitle) {
									var objectTitle = this.app.rows[e].objects[t].title.replaceAll(" ", "_");
									this.app.comp[objectTitle] = this.app.comp[this.app.rows[e].objects[t].id];
									this.$delete(this.app.comp, this.app.rows[e].objects[t].id);
									this.app.rows[e].objects[t].id = objectTitle;
								}
							}
                        }
                    }
                }
            },
            Bi = ki,
            Si = Object(w["a"])(Bi, ji, Ii, !1, null, null, null),
            Oi = Si.exports;
        x()(Si, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
			VSelect: K["a"],
            VTextField: R["a"]
        });
        var Ri = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "800px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Words")]), o("v-card-text", [o("v-container", [e._v(" At creation and deletion on older project, the list might not update. Exit dialog and return to force it, is fixed the next time the project is saved and loaded. "), e._l(e.words, (function(t, i) {
                    return o("v-col", {
                        key: t.index
                    }, [o("v-row", [o("v-col", {
						staticClass: e.window.width > 500 ? "col-6" : "col-12"
					}, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id that can be placed in the text",
                            filled: ""
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
								e.$delete(e.app.wordMap, t.id);
                                e.$set(t, "id", o);
								e.$set(e.app.wordMap, t.id, t.replaceText);
                            },
                            expression: "word.id"
                        }
                    })], 1), o("v-col", {
						staticClass: e.window.width > 500 ? "col-6" : "col-12"
					}, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Text to replace id with",
                            filled: ""
                        },
                        model: {
                            value: t.replaceText,
                            callback: function(o) {
                                e.$set(t, "replaceText", o);
								e.$set(e.app.wordMap, t.id, t.replaceText);
                            },
                            expression: "word.replaceText"
                        }
                    })], 1), e.window.width > 500 ? [o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeWordsOrderUp(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-up")])])], 1), o("v-col", {
                        staticClass: "col-8"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deleteWord(i)
                            }
                        }
                    }, [e._v("Delete")])], 1), o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeWordsOrderDown(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-down")])])], 1)] : [o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeWordsOrderUp(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-up")])])], 1), o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeWordsOrderDown(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-down")])])], 1), o("v-col", {
                        staticClass: "col-12"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deleteWord(i)
                            }
                        }
                    }, [e._v("Delete")])], 1)]], 1)], 1)
                }))], 2)], 1), o("v-card-actions", [o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    attrs: {
                        cols: e.window.width > 340 ? "6" : "12"
                    }
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.createNewWord
                    }
                }, [e._v("Create new Word")])], 1), o("v-col", {
                    attrs: {
                        cols: e.window.width > 340 ? "6" : "12"
                    }
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1)], 1)
            },
            Fi = [],
            _i = {
                data: function() {
                    return {
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    words: function() {
                        return this.$store.state.app.words
                    },
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    createNewWord: function() {
                        "undefined" === typeof this.$store.state.app.words && (this.$store.state.app.words = []);
						var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateWordId() {
							var s = "#";
							for (var o = 0; o < 3; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.wordMap[s]) {
								return generateWordId()
							} else {
								return s
							}
						}
						e = generateWordId();
                        this.$store.commit({
                            type: "addNewWord",
                            id: e,
                            replaceText: ""
                        })
						this.$set(this.app.wordMap, e, "");
                    },
					changeWordsOrderUp: function(e) {
						if (e > 0) this.words.splice(e - 1, 2, this.words[e], this.words[e - 1])
					},
					changeWordsOrderDown: function(e) {
						if (e < this.words.length - 1) this.words.splice(e, 2, this.words[e + 1], this.words[e])
					},
                    deleteWord: function(e) {
						this.$delete(this.app.wordMap, this.words[e].id);
						this.words.splice(e, 1);
                    }
                }
            },
            qi = _i,
            Ai = Object(w["a"])(qi, Ri, Fi, !1, null, null, null),
            $i = Ai.exports;
        x()(Ai, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VIcon: J["a"],
            VRow: S["a"],
            VTextField: R["a"]
        });
        var Mi = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Id / Name List")]), o("v-card-text", [o("v-container", [o("v-row", [e._v(" You can use CTRL + F to find ID's or Names. "), e._l(e.rows, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "col-lg-12"
                    }, [o("b", [e._v(("undefined" !== typeof t.debugTitle ? e._s(t.debugTitle) + " " : "") + e._s(t.title) + " / " + e._s(t.id))]), o("v-row", e._l(t.objects, (function(t) {
                        return o("v-col", {
                            key: t.index,
                            staticClass: "col-lg-2"
                        }, [e._v(("undefined" !== typeof t.debugTitle ? e._s(t.debugTitle) + " " : "") + " " + e._s(t.title) + " / " + e._s(t.id) + " ")])
                    })), 1)], 1)
                }))], 2)], 1)], 1), o("v-card-actions", [o("v-row", {
					staticClass: "ma-0",
				}, [o("v-col", {
					attrs: {
						cols: e.window.width > 340 ? 6 : 12
					}
				}, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: function(t) {
							return e.exportAsCsv(e.rows)
						}
                    }
                }, [e._v("Export as CSV File")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 340 ? 6 : 12
					}
				}, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1)], 1)
            },
            Vi = [],
            Pi = {
                data: function() {
                    return {
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    rows: function() {
                        return this.$store.state.app.rows
                    }
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					exportAsCsv: function(e) {
						var p = ["id", "title", "debugTitle"];
						const result = {};
						function fO(t, p) {
							const r = {};
							for (const key in t) {
								if (p.includes(key)) {
									r[key] = t[key];
								}
							}
							if (Array.isArray(t.objects)) {
								r.objects = t.objects.map(item => {
									const fI = {};
									for (const key in item) {
										if (p.includes(key)) {
											fI[key] = item[key];
										}
									}
									return fI;
								});
							}
							return r;
						}
						for (const key in e) {
							result[key] = fO(e[key], p);
						}
						
						function convertToCsv(t) {
							const r = [];
							const h = p.join(",");
							r.push(h);
							for (const key in t) {
								const mR = p.map(header => JSON.stringify(t[key][header] || ""));
								r.push(mR.join(","));
								if (t[key].objects && t[key].objects.length) {
									t[key].objects.forEach(obj => {
										const oR = p.map(header => JSON.stringify(obj[header] || ""));
										r.push(oR.join(","));
									});
									r.push("");
								}
							}
							return r.join("\n");
						}
						const c = "\uFEFF" + convertToCsv(result);
						var t = new Blob([c], { type:"text/csv;charset=utf-8" }),
							i = document.createEvent("MouseEvents"),
							s = document.createElement("a");
						s.download = "data.csv";
						s.href = window.URL.createObjectURL(t);
						s.dataset.downloadurl = ["text/csv", s.download, s.href].join(":");
						i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null);
						s.dispatchEvent(i);
					}
                }
            },
            Di = Pi,
            zi = Object(w["a"])(Di, Mi, Vi, !1, null, null, null),
            Li = zi.exports;
        x()(zi, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"]
        });
		var Gsi = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Design Groups")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					staticClass: e.window.width > 800 ? "col-6 headline" : "col-12 headline"
				}, [e._v("Row Design Groups")], 1), e.window.width > 800 ? o("v-col", {
					staticClass: "col-6 headline"
				}, [e._v("Choice Design Groups")], 1) : e._e()], 1), o("v-row", {
					attrs: {
						cols: 12
					}
				}, [o("v-col", {
					staticClass: e.window.width > 800 ? "col-6" : "col-12"
				}, [e._l(e.rowDesignGroups, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "mt-2"
                    }, [o("v-row", [o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id",
                            filled: ""
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
								e.app.compRDG[o] = e.app.compRDG[t.id], e.$delete(e.app.compRDG, t.id);
								for (var a = 0; a < t.elements.length; a++) {
									if ("undefined" !== typeof e.app.compR[t.elements[a].id]) {
										var co = e.app.compR[t.elements[a].id],
											coR = e.app.rows[co.rows];
										for (var b = 0; b < coR.rowDesignGroups.length; b++) {
											if (coR.rowDesignGroups[b].id == t.id) {
												coR.rowDesignGroups[b].id = o;
											}
										}
									}
								}
								for (var a = 0; a < t.backpackElements.length; a++) {
									if ("undefined" !== typeof e.app.compR[t.backpackElements[a].id]) {
										var co = e.app.compR[t.backpackElements[a].id],
											coR = e.app.backpack[co.rows];
										for (var b = 0; b < coR.rowDesignGroups.length; b++) {
											if (coR.rowDesignGroups[b].id == t.id) {
												coR.rowDesignGroups[b].id = o;
											}
										}
									}
								}
								e.$set(t, "id", o);
                            },
                            expression: "group.id"
                        }
                    })], 1), o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Name",
                            filled: ""
                        },
                        model: {
                            value: t.name,
                            callback: function(o) {
                                e.$set(t, "name", o)
                            },
                            expression: "group.name"
                        }
                    })], 1)], 1), o("v-row", [o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id Needed To Show",
                            placeholder: "No Id Needed",
                            filled: ""
                        },
                        model: {
                            value: t.activatedId,
                            callback: function(o) {
                                e.$set(t, "activatedId", o)
                            },
                            expression: "group.activatedId"
                        }
                    })], 1)], 1), o("v-row", [o("v-col", [o("v-autocomplete", {
                            attrs: {
                                "hide-details": "",
                                label: "App Row Id",
                                filled: "",
								"small-chips": "",
								"deletable-chips": "",
								items: e.app.rows,
								"item-text": "id",
								"item-value": "id",
								multiple: "",
								enableSelectAll: !0
                            },
							scopedSlots: {
								item: ({item, attrs}) => [
									o("div", {
										staticClass: "v-list-item__action mr-2"
									}, [o("div", {
										staticClass: "v-simple-checkbox"
									}, [o("div", {
										staticClass: "v-input--selection-controls__ripple primary--text"
									}), o("i", {
										staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
										attrs: {
											"aria-hidden": "true"
										}
									})])]), [o("div", {
										staticClass: "v-list-item__content"
									}, [o("div", {
										staticClass: "v-list-item__title"
									}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
							},
                            model: {
                                value: t.elements,
                                callback: function(o) {
									if ("undefined" === typeof t.elements) e.$set(t, "elements", []);
									var tElements = t.elements.map(el => el.id),
										setT = new Set(tElements),
										setO = new Set(o),
										newElement;
									if (t.elements.length > o.length) {
										for (var a of setT) {
											if (!setO.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.compR[newElement]) {
											var co = e.app.compR[newElement],
												coR = e.app.rows[co.rows];
											for (var a = 0; a < coR.rowDesignGroups.length; a++) {
												if (coR.rowDesignGroups[a].id == t.id) {
													coR.rowDesignGroups.splice(a, 1);
												}
											}
											for (var b = 0; b < t.elements.length; b++) {
												if (t.elements[b].id == coR.id) e.$delete(t.elements, b), b--;
											}
										}
									} else {
										for (var a of setO) {
											if (!setT.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.compR[newElement]) {
											var co = e.app.compR[newElement],
												coR = e.app.rows[co.rows];
											if ("undefined" === typeof coR.rowDesignGroups) e.$set(coR, "rowDesignGroups", []);
											coR.rowDesignGroups.push({id: t.id});
											t.elements.push({id: coR.id});
										}
									}
								},
                                expression: "elements.id"
                            }
                        })], 1)], 1), o("v-row", [o("v-col", [o("v-autocomplete", {
                            attrs: {
                                "hide-details": "",
                                label: "Backpack Row Id",
                                filled: "",
								"small-chips": "",
								"deletable-chips": "",
								items: e.app.backpack,
								"item-text": "id",
								"item-value": "id",
								multiple: "",
								enableSelectAll: !0
                            },							
							scopedSlots: {
								item: ({item, attrs}) => [
									o("div", {
										staticClass: "v-list-item__action mr-2"
									}, [o("div", {
										staticClass: "v-simple-checkbox"
									}, [o("div", {
										staticClass: "v-input--selection-controls__ripple primary--text"
									}), o("i", {
										staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
										attrs: {
											"aria-hidden": "true"
										}
									})])]), [o("div", {
										staticClass: "v-list-item__content"
									}, [o("div", {
										staticClass: "v-list-item__title"
									}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
							},
                            model: {
                                value: t.backpackElements,
                                callback: function(o) {
									if ("undefined" === typeof t.backpackElements) e.$set(t, "backpackElements", []);
									var tElements = t.backpackElements.map(el => el.id),
										setT = new Set(tElements),
										setO = new Set(o),
										newElement;
									if (t.backpackElements.length > o.length) {
										for (var a of setT) {
											if (!setO.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.compR[newElement]) {
											var co = e.app.compR[newElement],
												coR = e.app.backpack[co.rows];
											for (var a = 0; a < coR.rowDesignGroups.length; a++) {
												if (coR.rowDesignGroups[a].id == t.id) {
													coR.rowDesignGroups.splice(a, 1);
												}
											}
											for (var b = 0; b < t.backpackElements.length; b++) {
												if (t.backpackElements[b].id == coR.id) e.$delete(t.backpackElements, b), b--;
											}
										}
									} else {
										for (var a of setO) {
											if (!setT.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.compR[newElement]) {
											var co = e.app.compR[newElement],
												coR = e.app.backpack[co.rows];
											if ("undefined" === typeof coR.rowDesignGroups) e.$set(coR, "rowDesignGroups", []);
											coR.rowDesignGroups.push({id: t.id});
											t.backpackElements.push({id: coR.id});
										}
									}
                                },
                                expression: "bElements.id"
                            }
                        })], 1)], 1), o("v-row", [o("v-col", [o("v-btn", {
							staticStyle: {
								color: e.$vuetify.theme.isDark ? "white" : "black"
							},
							on: {
								click: function(o) {
									e.row = t,
									e.currentComponent = "appRowDesignGroupSettings"
								}
							}
						}, [e._v("Set Design")])], 1)], 1), o("v-row", (e.window.width > 1000 || (e.window.width <= 800 && e.window.width > 500)) ? [o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeRDGOrderUp(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-up")])])], 1), o("v-col", {
                        staticClass: "col-8"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deleteRowDesignGroup(i)
                            }
                        }
                    }, [e._v("Delete")])], 1), o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeRDGOrderDown(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-down")])])], 1)] : [o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeRDGOrderUp(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-up")])])], 1), o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeRDGOrderDown(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-down")])])], 1), o("v-col", {
                        staticClass: "col-12"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deleteRowDesignGroup(i)
                            }
                        }
                    }, [e._v("Delete")])], 1)], 1), o("v-divider")], 1)
                }), 1)], 1), e.window.width <= 800 ? o("v-col", {
					staticClass: "col-12 headline"
				}, [e._v("Choice Design Groups")], 1) : e._e(), o("v-col", {
					staticClass: e.window.width > 800 ? "col-6" : "col-12"
				}, [e._l(e.objectDesignGroups, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "mt-2"
                    }, [o("v-row", [o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id",
                            filled: ""
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
								e.app.compODG[o] = e.app.compODG[t.id], e.$delete(e.app.compODG, t.id);
								for (var a = 0; a < t.elements.length; a++) {
									if ("undefined" !== typeof e.app.comp[t.elements[a].id]) {
										var co = e.app.comp[t.elements[a].id],
											coR = e.app.rows[co.rows],
											coO = coR.objects[co.objects];
										for (var b = 0; b < coO.objectDesignGroups.length; b++) {
											if (coO.objectDesignGroups[b].id == t.id) {
												coO.objectDesignGroups[b].id = o;
											}
										}
									}
								}
								for (var a = 0; a < t.backpackElements.length; a++) {
									if ("undefined" !== typeof e.app.comp[t.backpackElements[a].id]) {
										var co = e.app.comp[t.backpackElements[a].id],
											coR = e.app.backpack[co.rows],
											coO = coR.objects[co.objects];
										for (var b = 0; b < coO.objectDesignGroups.length; b++) {
											if (coO.objectDesignGroups[b].id == t.id) {
												coO.objectDesignGroups[b].id = o;
											}
										}
									}
								}
								e.$set(t, "id", o);
                            },
                            expression: "group.id"
                        }
                    })], 1), o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Name",
                            filled: ""
                        },
                        model: {
                            value: t.name,
                            callback: function(o) {
                                e.$set(t, "name", o)
                            },
                            expression: "group.name"
                        }
                    })], 1)], 1), o("v-row", [o("v-col", [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id Needed To Show",
                            placeholder: "No Id Needed",
                            filled: ""
                        },
                        model: {
                            value: t.activatedId,
                            callback: function(o) {
                                e.$set(t, "activatedId", o)
                            },
                            expression: "group.activatedId"
                        }
                    })], 1)], 1), o("v-row", [o("v-col", [o("v-autocomplete", {
                            attrs: {
                                "hide-details": "",
                                label: "App Object Id",
                                filled: "",
								"small-chips": "",
								"deletable-chips": "",
								items: e.app.rows.flatMap(row => row.objects),
								"item-text": "id",
								"item-value": "id",
								multiple: "",
								enableSelectAll: !0
                            },							
							scopedSlots: {
								item: ({item, attrs}) => [
									o("div", {
										staticClass: "v-list-item__action mr-2"
									}, [o("div", {
										staticClass: "v-simple-checkbox"
									}, [o("div", {
										staticClass: "v-input--selection-controls__ripple primary--text"
									}), o("i", {
										staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
										attrs: {
											"aria-hidden": "true"
										}
									})])]), [o("div", {
										staticClass: "v-list-item__content"
									}, [o("div", {
										staticClass: "v-list-item__title"
									}, [e._v(item.id + " - " + ("undefined" !== typeof item.debugTitle ? item.debugTitle + " " : "") + item.title)])])]],
							},
                            model: {
                                value: t.elements,
                                callback: function(o) {
									if ("undefined" === typeof t.elements) e.$set(t, "elements", []);
									var tElements = t.elements.map(el => el.id),
										setT = new Set(tElements),
										setO = new Set(o),
										newElement;
									if (t.elements.length > o.length) {
										for (var a of setT) {
											if (!setO.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.comp[newElement]) {
											var co = e.app.comp[newElement],
												coR = e.app.rows[co.rows],
												coO = coR.objects[co.objects];
											for (var a = 0; a < coO.objectDesignGroups.length; a++) {
												if (coO.objectDesignGroups[a].id == t.id) {
													coO.objectDesignGroups.splice(a, 1);
												}
											}
											for (var c = 0; c < t.elements.length; c++) {
												if (t.elements[c].id == coO.id) e.$delete(t.elements, c), c--;
											}
										}
									} else {
										for (var a of setO) {
											if (!setT.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.comp[newElement]) {
											var co = e.app.comp[newElement],
												coR = e.app.rows[co.rows],
												coO = coR.objects[co.objects];
											if ("undefined" === typeof coO.objectDesignGroups) e.$set(coO, "objectDesignGroups", []);
											coO.objectDesignGroups.push({id: t.id});
											t.elements.push({id: coO.id});
										}
									}
                                },
                                expression: "elements.id"
                            }
                        })], 1)], 1), o("v-row", [o("v-col", [o("v-autocomplete", {
                            attrs: {
                                "hide-details": "",
                                label: "Backpack Object Id",
                                filled: "",
								"small-chips": "",
								"deletable-chips": "",
								items: e.app.backpack.flatMap(row => row.objects),
								"item-text": "id",
								"item-value": "id",
								multiple: "",
								enableSelectAll: !0
                            },							
							scopedSlots: {
								item: ({item, attrs}) => [
									o("div", {
										staticClass: "v-list-item__action mr-2"
									}, [o("div", {
										staticClass: "v-simple-checkbox"
									}, [o("div", {
										staticClass: "v-input--selection-controls__ripple primary--text"
									}), o("i", {
										staticClass: attrs["aria-selected"] == "true" ? "v-icon notranslate mdi mdi-checkbox-marked theme--light primary--text" : "v-icon notranslate mdi mdi-checkbox-blank-outline theme--light",
										attrs: {
											"aria-hidden": "true"
										}
									})])]), [o("div", {
										staticClass: "v-list-item__content"
									}, [o("div", {
										staticClass: "v-list-item__title"
									}, [e._v(item.id + " - " + item.title)])])]],
							},
                            model: {
                                value: t.backpackElements,
                                callback: function(o) {
									if ("undefined" === typeof t.backpackElements) e.$set(t, "backpackElements", []);
									var tElements = t.backpackElements.map(el => el.id),
										setT = new Set(tElements),
										setO = new Set(o),
										newElement;
									if (t.backpackElements.length > o.length) {
										for (var a of setT) {
											if (!setO.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.comp[newElement]) {
											var co = e.app.comp[newElement],
												coR = e.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											for (var a = 0; a < coO.objectDesignGroups.length; a++) {
												if (coO.objectDesignGroups[a].id == t.id) {
													coO.objectDesignGroups.splice(a, 1);
												}
											}
											for (var c = 0; c < t.backpackElements.length; c++) {
												if (t.backpackElements[c].id == coO.id) e.$delete(t.backpackElements, c), c--;
											}
										}
									} else {
										for (var a of setO) {
											if (!setT.has(a)) {
												newElement = a;
												break
											}
										}
										if ("undefined" !== typeof e.app.comp[newElement]) {
											var co = e.app.comp[newElement],
												coR = e.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											if ("undefined" === typeof coO.objectDesignGroups) e.$set(coO, "objectDesignGroups", []);
											coO.objectDesignGroups.push({id: t.id});
											t.backpackElements.push({id: coO.id});
										}
									}
                                },
                                expression: "backpackElements.id"
                            }
                        })], 1)], 1), o("v-row", [o("v-col", [o("v-btn", {
							staticStyle: {
								color: e.$vuetify.theme.isDark ? "white" : "black"
							},
							on: {
								click: function(o) {
									e.row = t,
									e.currentComponent = "appObjectDesginGroupSettings"
								}
							}
						}, [e._v("Set Design")])], 1)], 1), o("v-row", (e.window.width > 1000 || (e.window.width <= 800 && e.window.width > 500)) ? [o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeODGOrderUp(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-up")])])], 1), o("v-col", {
                        staticClass: "col-8"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deleteObjectDesignGroup(i)
                            }
                        }
                    }, [e._v("Delete")])], 1), o("v-col", {
                        staticClass: "col-2"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeODGOrderDown(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-down")])])], 1)] : [o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeODGOrderUp(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-up")])])], 1), o("v-col", {
                        staticClass: "col-6"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.changeODGOrderDown(i)
                            }
                        }
                    }, [o("v-icon", [e._v("mdi-chevron-down")])])], 1), o("v-col", {
                        staticClass: "col-12"
                    }, [o("v-btn", {
                        staticClass: "py-0",
                        attrs: {
                            "hide-details": ""
                        },
                        on: {
                            click: function(o) {
                                return e.deleteObjectDesignGroup(i)
                            }
                        }
                    }, [e._v("Delete")])], 1)], 1), o("v-divider")], 1)
                }), 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    staticClass: "col-md-6" + (e.window.width > 600 ? "" : " col-12")
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.createNewRowDesignGroup
                    }
                }, [e._v("Create new Row Group")])], 1), o("v-col", {
                    staticClass: "col-md-4" + (e.window.width > 600 ? "" : " col-12")
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.createNewObjectDesignGroup
                    }
                }, [e._v("Create new Choice Group")])], 1), o("v-col", {
                    staticClass: "col-md-2" + (e.window.width > 600 ? "" : " col-12")
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
					attrs: {
						row: e.row
					},
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1)
            },
            Gri = [],
            Gai = {
                data: function() {
                    return {
						currentComponent: "",
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
				components: {
					appRowDesignGroupSettings: dFt,
					appObjectDesginGroupSettings: oFt,
				},
                computed: {
                    rowDesignGroups: function() {
                        return this.$store.state.app.rowDesignGroups
                    },
					objectDesignGroups: function() {
						return this.$store.state.app.objectDesignGroups
					},
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    addElement: function(e) {
                        e.push({
                            id: ""
                        })
                    },
                    createNewRowDesignGroup: function() {
						if ("undefined" === typeof this.app.rowDesignGroups) this.$set(this.app, "rowDesignGroups", {});
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateRowDesignGroupId() {
							var s = "";
							for (var o = 0; o < 3; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.compRDG[s]) {
								return generateRowDesignGroupId()
							} else {
								return s
							}
						}
						e = generateRowDesignGroupId();
                        this.$store.commit({
                            type: "addNewRowDesignGroup",
                            id: e,
                            name: "Design Group " + (this.rowDesignGroups.length + 1),
							elements: [],
							backpackElements: [],
							activatedId: "",
							styling: {}
                        });
						this.app.compRDG[e] = {designGroups: this.rowDesignGroups.length - 1};
                    },
					createNewObjectDesignGroup: function() {
						if ("undefined" === typeof this.app.objectDesignGroups) this.$set(this.app, "objectDesignGroups", {});
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateObjectDesignGroupId() {
							var s = "";
							for (var o = 0; o < 3; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.compODG[s]) {
								return generateObjectDesignGroupId()
							} else {
								return s
							}
						}
						e = generateObjectDesignGroupId();
                        this.$store.commit({
                            type: "addNewObjectDesignGroup",
                            id: e,
                            name: "Design Group " + (this.objectDesignGroups.length + 1),
							elements: [],
							backpackElements: [],
							activatedId: "",
							styling: {}
                        });
						this.app.compODG[e] = {designGroups: this.objectDesignGroups.length - 1};
                    },
					changeRDGOrderUp: function(e) {
						if (e > 0) {
							var t = this.rowDesignGroups[e].id,
								o = this.rowDesignGroups[e - 1].id;
							this.app.compRDG[t].designGroups = e - 1, this.app.compRDG[o].designGroups = e;
							this.rowDesignGroups.splice(e - 1, 2, this.rowDesignGroups[e], this.rowDesignGroups[e - 1]);
						}
					},
					changeRDGOrderDown: function(e) {
						if (e < this.rowDesignGroups.length - 1) {
							var t = this.rowDesignGroups[e].id,
								o = this.rowDesignGroups[e + 1].id;
							this.app.compRDG[t].designGroups = e + 1, this.app.compRDG[o].designGroups = e;
							this.rowDesignGroups.splice(e, 2, this.rowDesignGroups[e + 1], this.rowDesignGroups[e]);
						}
					},
					changeODGOrderUp: function(e) {
						if (e > 0) {
							var t = this.app.objectDesignGroups[e].id,
								o = this.app.objectDesignGroups[e - 1].id;
							this.app.compODG[t].designGroups = e - 1, this.app.compODG[o].designGroups = e;
							this.objectDesignGroups.splice(e - 1, 2, this.objectDesignGroups[e], this.objectDesignGroups[e - 1]);
						}
					},
					changeODGOrderDown: function(e) {
						if (e < this.objectDesignGroups.length - 1) {
							var t = this.objectDesignGroups[e].id,
								o = this.objectDesignGroups[e + 1].id;
							this.app.compODG[t].designGroups = e + 1, this.app.compODG[o].designGroups = e;
							this.objectDesignGroups.splice(e, 2, this.objectDesignGroups[e + 1], this.objectDesignGroups[e]);
						}
					},
                    deleteGroupElement: function(e, t) {
                        t.splice(e, 1)
                    },
					deleteRowDesignGroup: function(e) {
						for (var a = 0; a < this.rowDesignGroups[e].elements.length; a++) {
							if ("undefined" !== typeof this.app.compR[this.rowDesignGroups[e].elements[a].id]) {
								var co = this.app.compR[this.rowDesignGroups[e].elements[a].id],
									coR = this.app.rows[co.rows];
								for (var b = 0; b < coR.rowDesignGroups.length; b++) {
									if (coR.rowDesignGroups[b].id == this.rowDesignGroups[e].id) {
										coR.rowDesignGroups.splice(b, 1);
										break
									}
								}
							}
						}
						this.$delete(this.app.compRDG, this.rowDesignGroups[e].id);
                        this.app.rowDesignGroups.splice(e, 1);
						for (var a = e; a < this.rowDesignGroups.length; a++) {
							var t = this.rowDesignGroups[a].id;
							this.app.compRDG[t].designGroups = a;
						}
                    },
					deleteObjectDesignGroup: function(e) {
						for (var a = 0; a < this.objectDesignGroups[e].elements.length; a++) {
							if ("undefined" !== typeof this.app.comp[this.objectDesignGroups[e].elements[a].id]) {
								var co = this.app.comp[this.objectDesignGroups[e].elements[a].id],
									coR = this.app.rows[co.rows],
									coO = coR.objects[co.objects];
								for (var b = 0; b < coO.objectDesignGroups.length; b++) {
									if (coO.objectDesignGroups[b].id == this.objectDesignGroups[e].id) {
										coO.objectDesignGroups.splice(b, 1);
										break
									}
								}
							}
						}
						this.$delete(this.app.compODG, this.objectDesignGroups[e].id);
                        this.app.objectDesignGroups.splice(e, 1);
						for (var a = e; a < this.objectDesignGroups.length; a++) {
							var t = this.objectDesignGroups[a].id;
							this.app.compODG[t].designGroups = a;
						}
                    }
                }
            },
            Gni = Gai,
            Gci = Object(w["a"])(Gni, Gsi, Gri, !1, null, null, null),
            Gdi = Gci.exports;
        x()(Gci, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VDivider: li["a"],
			VIcon: J["a"],
            VRow: S["a"],
			VSelect: K["a"],
            VTextField: R["a"]
        });
		var Gsr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "1200px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
					ref: "dialog"
				}, [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Global Requirements")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					attrs: {
						cols: 12
					}
				}, [e._l(e.globalRequirements, (function(t, i) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "mt-2"
                    }, [o("v-row", [o("v-col", {
						attrs: {
							cols: e.window.width > 499 ? "6" : "12"
						}
					}, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Id",
                            filled: ""
                        },
                        model: {
                            value: t.id,
                            callback: function(o) {
								e.app.compGR[o] = e.app.compGR[t.id], e.$delete(e.app.compGR, t.id);
								e.$set(t, "id", o);
                            },
                            expression: "globalRequirements.id"
                        }
                    })], 1), o("v-col", {
						attrs: {
							cols: e.window.width > 499 ? "6" : "12"
						}
					}, [o("v-text-field", {
                        attrs: {
                            "hide-details": "",
                            label: "Name",
                            filled: ""
                        },
                        model: {
                            value: t.name,
                            callback: function(o) {
                                e.$set(t, "name", o)
                            },
                            expression: "globalRequirements.name"
                        }
                    })], 1)], 1), o("v-expansion-panels", {
						attrs: {
							multiple: "",
							accordion: "",
							flat: ""
						}
					}, [t.requireds.length > 0 ? o("v-expansion-panel", [o("v-expansion-panel-header", {
						domProps: {
							innerHTML: e._s(e.$sanitize("Requirements: " + t.requireds.length, e.sanitizeArg))
						}
					}), o("v-expansion-panel-content", [o("v-row", e._l(t.requireds, (function(p, s) {
						return o("v-col", {
							key: p.index,
							staticClass: "pa-2",
							attrs: {
								cols: ("undefined" !== typeof p.requireds && p.requireds.length > 0) || e.window.width > 499 ? "6" : "12"
							}
						}, [o("ObjectRequirement", {
							attrs: {
								isEditModeOn: e.isEditModeOn,
								required: p,
								requireds: t.requireds
							},
							on: {
								requiredWasChanged: function(k) {
									p = k
								}
							}
						}), o("v-btn", {
							staticStyle: {
								color: e.$vuetify.theme.isDark ? "white" : "black"
							},
							on: {
								click: function(k) {
									return e.deleteEvent(s, t.requireds)
								}
							}
						}, [e._v("Delete")])], 1)
					})), 1)], 1)], 1) : e._e()], 1), o("v-row", [o("v-col", [o("v-btn", {
								staticStyle: {
									color: e.$vuetify.theme.isDark ? "white" : "black"
								},
								on: {
									click: function(o) {
										e.row = t,
										e.currentComponent = "AppRequirement"
									}
								}
							}, [e._v("Add Requirement")])], 1), o("v-col", [o("v-btn", {
							staticClass: "py-0",
							attrs: {
								"hide-details": ""
							},
							on: {
								click: function(t) {
									return e.deleteGlobalRequirement(i)
								}
							}
						}, [e._v("Delete")])], 1)], 1), o("v-divider")], 1)
                }), 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
					attrs: {
						cols: e.window.width > 440 ? "6" : "12"
					}
                }, [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.createNewGlobalRequirement
                    }
                }, [e._v("Create new Global Requirement")])], 1), o("v-col", {
                    attrs: {
						cols: e.window.width > 440 ? "6" : "12"
					}
                }, [o("v-btn", {
					staticClass: "pa-0",
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1), o(e.currentComponent, {
                    tag: "component",
					attrs: {
						row: e.row
					},
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                })], 1)
            },
            Grr = [],
            Gar = {
                data: function() {
                    return {
						currentComponent: "",
                        dialog: !0,
						window: {
							width: 0,
							hegiht: 0
						}
                    }
                },
				components: {
					AppRequirement: _,
					ObjectRequirement: le
				},
                computed: {
                    globalRequirements: function() {
                        return this.$store.state.app.globalRequirements
                    },
					app: function() {
						return this.$store.state.app
					}
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    createNewGlobalRequirement: function() {
						if ("undefined" === typeof this.app.globalRequirements) this.$set(this.app, "globalRequirements", []);
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateGlobalRequirementId() {
							var s = "";
							for (var o = 0; o < 3; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.compGR[s]) {
								return generateGlobalRequirementId()
							} else {
								return s
							}
						}
						e = generateGlobalRequirementId();
                        this.$store.commit({
                            type: "addNewGlobalRequirement",
                            id: e,
                            name: "Global Requirement " + (this.globalRequirements.length + 1)
                        });
						this.app.compGR[e] = {globalRequirements: this.globalRequirements.length - 1};
                    },
					deleteGlobalRequirement: function(e) {
                        this.app.globalRequirements.splice(e, 1);
						this.$delete(this.app.compGR, this.app.globalRequirements[e].id);
                    },
					deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    }
                }
            },
            Gnr = Gar,
            Gcr = Object(w["a"])(Gnr, Gsr, Grr, !1, null, null, null),
            Gdr = Gcr.exports;
        x()(Gcr, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VDivider: li["a"],
			VExpansionPanel: ft["a"],
            VExpansionPanelContent: wt["a"],
            VExpansionPanelHeader: yt["a"],
            VExpansionPanels: xt["a"],
            VRow: S["a"],
			VSelect: K["a"],
            VTextField: R["a"]
        });
		var SMi = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        scrollable: "",
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Configure Global Settings")]), o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					staticClass: "pr-0",
					attrs: {
						cols: "8"
					}
				}, [o("v-combobox", {
					ref: "combobox",
                    attrs: {
						dense: "",
                        items: e.app.googleFonts,
                        "item-text": "id",
                        "item-value": "id",
                        filled: "",
                        label: "Imported Fonts",
                        placeholder: "Insert Font Name",
						hint: "Can import custom fonts from Google Fonts",
						"persistent-hint": ""
                    },
                    model: {
                        value: e.importFontName,
                        callback: function(t) {
							e.$set(e, "importFontName", t)
                        },
                        expression: "importFontName"
                    }
                })], 1), o("v-col", {
					staticClass: "pl-0",
					attrs: {
						cols: "4"
					}
				}, [o("v-btn", {
					staticClass: "pa-0 v-size--x-large",
                    on: {
                        click: e.importGoogleFont
                    }
                }, [e._v("Import")])], 1)], 1), o("v-row", [o("v-col", [o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Saved automatically every 10 minutes."
					},
					model: {
						value: e.app.autoSaveIsOn,
						callback: function(o) {
							e.$set(e.app, "autoSaveIsOn", o), e.saveAutomatically(e.app)
						},
						expression: "app.autoSaveIsOn"
					}
				}), e.app.autoSaveIsOn ? o("v-switch", {
					staticClass: "mt-n4 ms-8",
					attrs: {
						label: "Saved in local storage. (IndexedDB)"
					},
					model: {
						value: e.app.saveInLocalStorage,
						callback: function(o) {
							e.$set(e.app, "saveInLocalStorage", o)
						},
						expression: "app.autoSaveIsOn"
					}
				}) : e._e(), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Check before deleting a row."
					},
					model: {
						value: e.app.checkDeleteRow,
						callback: function(o) {
							e.$set(e.app, "checkDeleteRow", o)
						},
						expression: "app.checkDeleteRow"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Check before deleting an object."
					},
					model: {
						value: e.app.checkDeleteObject,
						callback: function(o) {
							e.$set(e.app, "checkDeleteObject", o)
						},
						expression: "app.checkDeleteObject"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Dark Mode."
					},
					model: {
						value: e.vuetify.theme.isDark,
						callback: function(o) {
							e.$set(e.vuetify.theme, "isDark", o), e.$set(e.app, "darkMode", o);
						},
						expression: "vuetify.theme.isDark"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Compress Image Automatically. (May cause freezing)"
					},
					model: {
						value: e.app.compressImageAuto,
						callback: function(o) {
							e.$set(e.app, "compressImageAuto", o)
						},
						expression: "app.compressImageAuto"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Preload Images in Backpack."
					},
					model: {
						value: e.app.preloadImages,
						callback: function(o) {
							e.$set(e.app, "preloadImages", o)
						},
						expression: "app.preloadImages"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Preload External Images in Viewer."
					},
					model: {
						value: e.app.preloadExternalImages,
						callback: function(o) {
							e.$set(e.app, "preloadExternalImages", o)
						},
						expression: "app.preloadExternalImages"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Disable Alternate Menu."
					},
					model: {
						value: e.app.disableAlterMenu,
						callback: function(o) {
							e.$set(e.app, "disableAlterMenu", o)
						},
						expression: "app.disableAlterMenu"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Hide 'Scores Updated On' Message."
					},
					model: {
						value: e.app.hideScoresUpdated,
						callback: function(o) {
							e.$set(e.app, "hideScoresUpdated", o)
						},
						expression: "app.hideScoresUpdated"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Enable shortcuts to switch between Editor and Viewer modes."
					},
					model: {
						value: e.app.enableShortcut,
						callback: function(o) {
							e.$set(e.app, "enableShortcut", o);
							if (o) window.addEventListener("keydown", e.$store.state.handleKeydown);
							else window.removeEventListener("keydown", e.$store.state.handleKeydown);
						},
						expression: "app.enableShortcut"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Use vw instead of px for the default font-size."
					},
					model: {
						value: e.app.useVW,
						callback: function(o) {
							e.$set(e.app, "useVW", o);
						},
						expression: "app.useVW"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Hide Debug Title of Choices."
					},
					model: {
						value: e.app.hideChoiceDT,
						callback: function(o) {
							e.$set(e.app, "hideChoiceDT", o);
						},
						expression: "app.hideChoiceDT"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Show Music Player."
					},
					model: {
						value: e.app.showMusicPlayer,
						callback: function(o) {
							e.$set(e.app, "showMusicPlayer", o);
							if (e.app.showMusicPlayer) {
								if (e.app.bgmIsPlaying) {
									if (e.app.bgmTitleInterval !== 0) clearInterval(e.app.bgmTitleInterval), e.app.bgmTitleInterval = 0;
									e.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && "undefined" !== typeof e.app.bgmObjectId) {
											var co = e.app.comp[e.app.bgmObjectId],
												coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											if (bgmPlayer.playerInfo.videoData.video_id == coO.bgmId && bgmPlayer.playerInfo.videoData.title !== "") {
												e.$set(e.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												e.$set(e.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(e.app.bgmTitleInterval);
												e.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
									e.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !e.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== e.app.curBgmTime) {
												if (k !== curTime) {
													e.$set(e.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > e.app.curBgmLength) o = 1;
													e.$set(e.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												e.$set(e.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							} else {
								if (e.app.bgmIsPlaying) {
									if (e.app.bgmTitleInterval !== 0) clearInterval(e.app.bgmTitleInterval), e.app.bgmTitleInterval = 0;
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
								}
							}
						},
						expression: "app.showMusicPlayer"
					}
				}), o("v-switch", {
					staticClass: "mt-n2 ms-3",
					attrs: {
						label: "Change the cursor to pointer when hovering over choices."
					},
					model: {
						value: e.app.isPointerCursor,
						callback: function(o) {
							e.$set(e.app, "isPointerCursor", o);
						},
						expression: "app.isPointerCursor"
					}
				}), o("v-select", {
					staticClass: "pb-2",
                    attrs: {
                        "hide-details": "",
                        items: e.objectsPerRow,
                        filled: "",
                        label: "Max Objects Per Row for screens in the range of 960px to 1280px."
                    },
                    model: {
                        value: e.app.objectsPerRow,
                        callback: function(t) {
                            e.$set(e.app, "objectsPerRow", t);
                        },
                        expression: "app.objectsPerRow"
                    }
                }), o("v-text-field", {
					staticClass: "pb-2",
                    attrs: {
                        dense: "",
                        label: "Length of Row Id to be generated",
                        filled: "",
                        "hide-details": "",
                        type: "number",
						min: 4
                    },
                    model: {
                        value: e.app.rowIdLength,
                        callback: function(t) {
							e.$set(e.app, "rowIdLength", Math.max(t, 4))
                        },
                        expression: "styling.rowIdLength"
                    }
                }), o("v-text-field", {
					staticClass: "pb-2",
                    attrs: {
                        dense: "",
                        label: "Length of Choice Id to be generated",
                        filled: "",
                        "hide-details": "",
                        type: "number",
						min: 4
                    },
                    model: {
                        value: e.app.objectIdLength,
                        callback: function(t) {
							e.$set(e.app, "objectIdLength", Math.max(t, 4))
                        },
                        expression: "styling.objectIdLength"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            SVi = [],
            SPi = {
                data: function() {
                    return {
                        dialog: !0,
						importFontName: "",
						objectsPerRow: [{
							text: "2 Per Row",
							value: "col-6"
						}, {
							text: "3 Per Row",
							value: "col-4"
						}, {
							text: "4 Per Row",
							value: "col-3"
						}],
                    }
                },
				components: {
                    appImageCyoa: ea,
                    appImageCyoaViewer: aa,
                    appInformation: ua
                },
                computed: {
					app: function() {
                        return this.$store.state.app
                    },
					vuetify: function() {
						return this.$vuetify
					},
					globalVariables: function() {
						return this.$store.state.globalVariables
					}
                },
                methods: {
					saveAutomatically: function(e) {
						this.$store.commit("saveAutomatically", e)
					},
					importGoogleFont: function() {
						this.$refs.combobox.blur();
						this.$nextTick(() => {
							var e = this,
								t = e.importFontName.replaceAll(" ", "+"),
								url = "https://fonts.googleapis.com/css2?family=" + t + "&display=swap";
							if (e.app.googleFonts.includes(e.importFontName)) {
								e.globalVariables.text = "Font: " + e.importFontName + " is already imported.", e.globalVariables.snackbar = !0;
							} else {
								fetch(url, {method: "head"}).then(o => {
									if(o.ok) {
										const l = document.createElement("link");
										l.rel = "stylesheet";
										l.href = url;
										l.crossOrigin = "anonymous";
										document.head.appendChild(l);
										e.globalVariables.text = "Successfully Imported Font: " + e.importFontName, e.globalVariables.snackbar = !0;
										e.app.googleFonts.push(e.importFontName);
									} else {
										e.globalVariables.text = "Failed to Import Font: " + e.importFontName, e.globalVariables.snackbar = !0;
									}
								}).catch(err => {
									e.globalVariables.text = "Failed to Import Font: " + e.importFontName, e.globalVariables.snackbar = !0;
									console.error(err);
								});
							}
						})
					},
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            SDi = SPi,
			Cb = o("2b5d"),
            Szi = Object(w["a"])(SDi, SMi, SVi, !1, null, null, null),
            SLi = Szi.exports;
        x()(Szi, {
			VAutocomplete: Ac["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
			VCombobox: Cb["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
			VSwitch: L["a"],
			VSelect: K["a"],
			VTextField: R["a"]
        });
        var Wi = {
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                components: {
                    appPoints: Eo,
                    appVariables: ii,
                    appGroups: di,
                    appBackpack: Ti,
                    appTemplates: vi,
                    appDefaults: Oi,
                    appSymbols: Ko,
                    appWords: $i,
                    appIdSearch: Li,
					appDesignGroup: Gdi,
					appGlobalRequirements: Gdr
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.dialog) this.resizeObserver.observe(this.$refs.dialog.$el);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            Hi = Wi,
            Ei = Object(w["a"])(Hi, Vo, Po, !1, null, null, null),
            Ni = Ei.exports;
        x()(Ei, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCardTitle: j["c"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VSpacer: O["a"]
        });
        var Gi = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", {
                    attrs: {
                        justify: "center"
                    }
                }, [o("v-dialog", {
                    attrs: {
                        "max-width": "600px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", [o("v-card-title", {
                    staticClass: "headline"
                }, [e._v("Rows")]), o("appDraggable", {
                    attrs: {
                        group: "people"
                    },
                    on: {
                        start: function(t) {
                            e.drag = !0
                        },
                        end: function(t) {
                            e.drag = !1
                        }
                    },
                    model: {
                        value: e.app.rows,
                        callback: function(t) {
                            e.$set(e.app, "rows", t);
							for (var a = 0; a < e.app.rows.length; a++) {
								e.app.compR[e.app.rows[a].id].rows = a;
								for (var b = 0; b < e.app.rows[a].objects.length; b++) {
									e.app.comp[e.app.rows[a].objects[b].id].rows = a;
								}
							}
                        },
                        expression: "app.rows"
                    }
                }, e._l(e.app.rows, (function(t, i) {
                    return o("v-list-group", {
                        key: i,
                        attrs: {
                            "prepend-icon": t.action
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function() {
                                return [o("v-list-item-content", [o("v-list-item-title", {
                                    domProps: {
                                        innerHTML: e._s(e.$sanitize(i + 1 + ". " + ("undefined" !== typeof t.debugTitle ? t.debugTitle + " " : "") + ("" != t.title ? t.title : t.id)))
                                    }
                                }), o("v-list-item-subtitle")], 1), o("v-list-item-action", [o("v-btn", {
									attrs: {
										icon: ""
									},
									on: {
										click: function(o) {
											return o.stopPropagation(), e.scrollToRow(t)
										}
									}
								}, [o("v-icon", [e._v("mdi-target")])], 1)], 1)]
                            },
                            proxy: !0
                        }], null, !0)
                    }, e._l(t.objects, (function(i, s) {
                        return o("v-list-item", {
                            key: s
                        }, [o("v-list-item-content", [o("v-list-item-title", {
                            domProps: {
                                innerHTML: e._s(e.$sanitize(s + 1 + ". " + ("undefined" !== typeof i.debugTitle ? i.debugTitle + " " : "") + ("" != i.title ? i.title : i.id)))
                            }
                        }), o("v-list-item-subtitle")], 1), o("v-list-item-action", [o("v-btn", {
							attrs: {
								icon: ""
							},
							on: {
								click: function(o) {
									return o.stopPropagation(), e.scrollToObject(i)
								}
							}
						}, [o("v-icon", [e._v("mdi-target")])], 1)], 1), o("v-list-item-action", [o("v-btn", {
                            attrs: {
                                icon: ""
                            },
                            on: {
                                click: function(o) {
                                    return o.stopPropagation(), e.moveObjectDown(t, i)
                                }
                            }
                        }, [o("v-icon", [e._v("mdi-chevron-down")])], 1)], 1), o("v-list-item-action", [o("v-btn", {
                            attrs: {
                                icon: ""
                            },
                            on: {
                                click: function(o) {
                                    return o.stopPropagation(), e.moveObjectUp(t, i)
                                }
                            }
                        }, [o("v-icon", [e._v("mdi-chevron-up")])], 1)], 1)], 1)
                    })), 1)
                })), 1), o("v-card-actions", [o("v-spacer"), o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)], 1)
            },
            Ui = [],
            Yi = {
                data: function() {
                    return {
                        row: Object,
                        dialog: !0
                    }
                },
                components: {
                    appDraggable: Ht.a
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    }
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    moveRowUp: function(e) {
                        var t = this.app.rows.indexOf(e);
                        if (t > 0) {
                            var o = this.app.rows[t];
                            this.$set(this.app.rows, t, this.app.rows[t - 1]), this.$set(this.app.rows, t - 1, o);
							this.app.compR[this.app.rows[t - 1].id].rows = t - 1, this.app.compR[this.app.rows[t].id].rows = t;
							for (var b = 0; b < this.app.rows[t - 1].objects.length; b++) {
								this.app.comp[this.app.rows[t - 1].objects[b].id].rows = t - 1;
							}
							for (var c = 0; c < this.app.rows[t].objects.length; c++) {
								this.app.comp[this.app.rows[t].objects[c].id].rows = t;
							}
                        }
                    },
                    moveRowDown: function(e) {
                        var t = this.app.rows.indexOf(e);
                        if (-1 !== t && t < this.app.rows.length - 1) {
                            var o = this.app.rows[t];
                            this.$set(this.app.rows, t, this.app.rows[t + 1]), this.$set(this.app.rows, t + 1, o);
							this.app.compR[this.app.rows[t + 1].id].rows = t + 1, this.app.compR[this.app.rows[t].id].rows = t;
							for (var b = 0; b < this.app.rows[t + 1].objects.length; b++) {
								this.app.comp[this.app.rows[t + 1].objects[b].id].rows = t + 1;
							}
							for (var c = 0; c < this.app.rows[t].objects.length; c++) {
								this.app.comp[this.app.rows[t].objects[c].id].rows = t;
							}
                        }
                    },
                    moveObjectUp: function(e, t) {
                        var o = e.objects.indexOf(t);
                        if (o > 0) {
                            var i = e.objects[o];
                            this.$set(e.objects, o, e.objects[o - 1]), this.$set(e.objects, o - 1, i);
							this.app.comp[e.objects[o].id].objects = o, this.app.comp[e.objects[o - 1].id].objects = o - 1;
                        }
                    },
                    moveObjectDown: function(e, t) {
                        var o = e.objects.indexOf(t);
                        if (-1 !== o && o < e.objects.length - 1) {
                            var i = e.objects[o];
                            this.$set(e.objects, o, e.objects[o + 1]), this.$set(e.objects, o + 1, i);
							this.app.comp[e.objects[o].id].objects = o, this.app.comp[e.objects[o + 1].id].objects = o + 1;
                        }
                    },
					scrollToRow: function(e) {
						if ("undefined" !== typeof this.app.compR[e.id]) {
							var p = this.$el.nextSibling.children,
								co = this.app.compR[e.id],
								coR = p[co.rows];
							window.scrollTo({top: coR.getBoundingClientRect().top + window.scrollY, behavior: "smooth"});
						}
					},
					scrollToObject: function(e) {
						if ("undefined" !== typeof this.app.comp[e.id]) {
							var co = this.app.comp[e.id],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
								p = coR.isEditModeOn ? 0 : 1,
								o = this.checkRequireds(coR),
								coO;
							if (p) {
								if (o) {
									coO = this.$el.nextSibling.children[co.rows].children[1].children[1].children[p].children[co.objects];
									if (window.getComputedStyle(coO).display === "none") {
										coO = this.$el.nextSibling.children[co.rows];
									}
								} else {
									coO = this.$el.nextSibling.children[co.rows];
								}
							} else {
								coO = this.$el.nextSibling.children[co.rows].children[1].children[1].children[p].children[co.objects];
							}
							window.scrollTo({top: coO.getBoundingClientRect().top + window.scrollY, behavior: "smooth"});
						}
					}
                }
            },
            Ji = Yi,
            Xi = o("da13"),
            Ki = o("1800"),
            Zi = Object(w["a"])(Ji, Gi, Ui, !1, null, null, null),
            Qi = Zi.exports;
        x()(Zi, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardTitle: j["c"],
            VDialog: B["a"],
            VIcon: J["a"],
            VListGroup: Gt["a"],
            VListItem: Xi["a"],
            VListItemAction: Ki["a"],
            VListItemContent: Ut["a"],
            VListItemSubtitle: Ut["b"],
            VListItemTitle: Ut["c"],
            VRow: S["a"],
            VSpacer: O["a"]
        });
        var es = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-dialog", {
                    attrs: {
                        "max-width": "1920px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
                    style: e.background
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-textarea", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        "background-color": e.$vuetify.theme.dark ? "grey" : "white",
                        filled: "",
                        label: "Current Activated Choices Titles"
                    },
                    model: {
                        value: e.getSelectedObjectName,
                        callback: function(t) {
                            e.getSelectedObjectName = t
                        },
                        expression: "getSelectedObjectName"
                    }
                }), o("v-textarea", {
                    staticClass: "pa-1",
                    attrs: {
                        "hide-details": "",
                        "background-color": e.$vuetify.theme.dark ? "grey" : "white",
                        filled: "",
                        label: "Current Activated Choices ID's"
                    },
                    model: {
                        value: e.activated,
                        callback: function(t) {
                            e.activated = t
                        },
                        expression: "activated"
                    }
                })], 1), o("v-textarea", {
                    attrs: {
                        "hide-details": "",
                        "background-color": e.$vuetify.theme.dark ? "grey" : "white",
                        filled: "",
                        label: "Area To Import Activated Choices With Lists Of Id's"
                    },
                    model: {
                        value: e.newActivated,
                        callback: function(t) {
                            e.newActivated = t
                        },
                        expression: "newActivated"
                    }
                }), o("v-btn", {
                    on: {
                        click: e.cleanActivated
                    }
                }, [e._v("Import Choices/Clean if empty")])], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1)
            },
            ts = [],
            os = {
                props: {
                    chapter: Object,
                    page: Object,
                    type: String
                },
                data: function() {
                    return {
                        dialog: !0,
                        newActivated: "",
						newActivatedList: [],
						exceptedScores: []
                    }
                },
                computed: {
                    background: function() {
                        return this.app.styling.backgroundImage ? 'background-image: url("' + this.app.styling.backgroundImage + '");background-color: ' + this.app.styling.backgroundColor + (this.app.styling.isBackgroundRepeat ? ";background-repeat: repeat;" : (this.app.styling.isBackgroundFitIn ? ";background-size: 100% 100%;" : ";background-size: cover;")) : 'background-color: ' + this.app.styling.backgroundColor + ';'
                    },
                    activated: function() {
						for (var e = [], t = 0; t < this.app.activated.length; t++) {
							if ("undefined" !== typeof this.app.comp[this.app.activated[t].split("/ON#")[0]]) {
								var co = this.app.comp[this.app.activated[t].split("/ON#")[0]],
									coR = co.type === "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									a = coO.id;
								if (!coO.isSelectableMultiple) {
									if (coO.isActivateRandom && coO.activatedRandom.length > 0) {
										a += "/RND#" + coO.activatedRandom.join("/AND#").replaceAll("/ON#", "/RON#");
									}
									if (coO.textfieldIsOn && coO.customTextfieldIsOn) {
										a += "/WORD#" + coO.wordChangeSelect.replaceAll(",", "/CHAR#");
									}
									if (coO.isImageUpload && coO.image !== coO.defaultImage) {
										a += "/IMG#" + coO.image.replaceAll(",", "/CHAR#");
									}
									e.push(a);
								} else if (coO.isMultipleUseVariable && coO.multipleUseVariable !== 0) {
									a += "/ON#" + coO.multipleUseVariable;
									if (coO.isActivateRandom && coO.activatedRandomMul.length > 0) {
										a += "/RND#" + coO.activatedRandomMul.flat(2).join("/AND#").replaceAll("/ON#", "/RON#");
									}
									e.push(a);
								}
							}
						}
                        return e
                    },
                    app: function() {
                        return this.$store.state.app
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    getSelectedObjectName: function() {
						var o = [].concat(this.app.activated);
						o.sort((a, b) => {
							if ("undefined" !== typeof this.app.comp[a.split("/ON#")[0]] && "undefined" !== typeof this.app.comp[b.split("/ON#")[0]]) {
								var aco = this.app.comp[a.split("/ON#")[0]],
									bco = this.app.comp[b.split("/ON#")[0]];
								if (aco.rows !== bco.rows) return aco.rows - bco.rows
								return aco.objects - bco.objects
							}
						});
						for (var e = [], a = 0; a < o.length; a++) {
							if ("undefined" !== typeof this.app.comp[o[a].split("/ON#")[0]]) {
								var co = this.app.comp[o[a].split("/ON#")[0]],
									coR = co.type === "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								e.push((e.length > 0 ? " " : "") + coO.title + (coO.isSelectableMultiple && coO.isMultipleUseVariable ? "(Taken " + coO.multipleUseVariable + " Times)": "" ));
							}
						}
                        return e
                    }
                },
                methods: {
					playBgm: function(e, t, i) {
						function bgmFadeIn(th, f) {
							let v = 0,
								k = 0,
								o = 0;
							if (th.app.isFadingOut) {
								const lastTime = parseInt(th.app.lastFadeTime);
								if (th.app.bgmFadeTimer !== 0) clearTimeout(th.app.bgmFadeTimer), th.app.bgmFadeTimer = 0;
								th.app.bgmFadeTimer = setTimeout(() => {
									if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
									if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
										const iTime = e.bgmFadeInSec / 20;
										th.app.lastFadeTime = e.bgmFadeInSec;
										bgmPlayer.setVolume(0);
										bgmPlayer.playVideo();
										if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										if (th.app.isFadingOut) th.app.isFadingOut = !1;
										th.app.bgmFadeInterval = setInterval(() => {
											if (bgmPlayer.playerInfo.playerState === 1) {
												if (v < th.app.curVolume) {
													v += 5;
													bgmPlayer.setVolume(v);
													th.app.lastFadeTime = th.app.lastFadeTime - iTime;
												} else {
													bgmPlayer.setVolume(th.app.curVolume);
													clearInterval(th.app.bgmFadeInterval);
													th.app.bgmFadeInterval = 0;
													th.app.lastFadeTime = 0;
												}
											}
										}, iTime);
									} else {
										if (th.app.isFadingOut) th.app.isFadingOut = !1, clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										bgmPlayer.playVideo();
										bgmPlayer.setVolume(th.app.curVolume);
									}
									th.$set(th.app, "bgmObjectId", e.id);
									if (th.app.showMusicPlayer) {
										if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
										th.app.bgmTitleInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
												if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
													th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
													th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
													clearInterval(th.app.bgmTitleInterval);
													th.app.bgmTitleInterval = 0;
												}
											}
										}, 1000);
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										th.app.bgmPlayInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
												const curTime = parseInt(bgmPlayer.getCurrentTime());
												if (curTime !== th.app.curBgmTime) {
													if (k !== curTime) {
														th.$set(th.app, "curBgmTime", curTime);
													} else {
														o++;
														if (o > th.app.curBgmLength) o = 1;
														th.$set(th.app, "curBgmTime", o);
													}
												} else {
													k = curTime;
													o = curTime + 1;
													th.$set(th.app, "curBgmTime", o);
												}
											}
										}, 1000);
									}
								}, lastTime);
							} else {
								if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
								if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
									const iTime = e.bgmFadeInSec / 20;
									th.app.lastFadeTime = e.bgmFadeInSec;
									bgmPlayer.setVolume(0);
									bgmPlayer.playVideo();
									if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									if (th.app.isFadingOut) th.app.isFadingOut = !1;
									th.app.bgmFadeInterval = setInterval(() => {
										if (bgmPlayer.playerInfo.playerState === 1) {
											if (v < th.app.curVolume) {
												v += 5;
												bgmPlayer.setVolume(v);
												th.app.lastFadeTime = th.app.lastFadeTime - iTime;
											} else {
												bgmPlayer.setVolume(th.app.curVolume);
												clearInterval(th.app.bgmFadeInterval);
												th.app.bgmFadeInterval = 0;
												th.app.lastFadeTime = 0;
											}
										}
									}, iTime);
								} else {
									bgmPlayer.playVideo();
									bgmPlayer.setVolume(th.app.curVolume);
								}
								th.$set(th.app, "bgmObjectId", e.id);
								if (th.app.showMusicPlayer) {
									if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
									th.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
											if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
												th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(th.app.bgmTitleInterval);
												th.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									th.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== th.app.curBgmTime) {
												if (k !== curTime) {
													th.$set(th.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > th.app.curBgmLength) o = 1;
													th.$set(th.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												th.$set(th.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							}
						}
						function bgmFadeOut(th) {
							const steps = th.app.curVolume / 5;
							if (e.bgmFadeOut && e.bgmFadeOutSec > 0 && steps > 0) {
								const iTime = e.bgmFadeOutSec / steps;
								let v = th.app.curVolume;
								th.app.lastFadeTime = e.bgmFadeOutSec;
								th.app.isFadingOut = !0;
								if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
								th.app.bgmFadeInterval = setInterval(() => {
									if (v > 0 && "undefined" !== typeof bgmPlayer.setVolume) {
										v -= 5;
										bgmPlayer.setVolume(v);
										th.app.lastFadeTime = th.app.lastFadeTime - iTime;
									} else {
										if (th.app.isFadingOut) {
											bgmPlayer.pauseVideo();
											bgmPlayer.setVolume(th.app.curVolume);
											clearInterval(th.app.bgmFadeInterval);
											th.app.bgmFadeInterval = 0;
											th.app.lastFadeTime = 0;
											th.app.isFadingOut = !1;
											if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
											if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
											th.$set(th.app, "bgmTitle", "No Audio Title");
											th.$set(th.app, "curBgmTime", 0);
											th.$set(th.app, "curBgmLength", 0);
										}
									}
								}, iTime);
							} else {
								bgmPlayer.pauseVideo();
								if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
								if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
								th.$set(th.app, "bgmTitle", "No Audio Title");
								th.$set(th.app, "curBgmTime", 0);
								th.$set(th.app, "curBgmLength", 0);
							}
						}
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							var p = this.app.bgmIsPlaying,
								s = bgmPlayer.playerInfo.videoData.video_id,
								o = bgmPlayer.playerInfo.playerState,
								v = 0,
								f = !1;
							if ("undefined" === typeof this.app.bgmObjectId) this.$set(this.app, "bgmObjectId", e.id);
							if (s == t) {
								if (this.app.bgmObjectId == e.id) {
									if (p) {
										if (o === 2) {
											bgmFadeIn(this, f);
										} else {
											bgmPlayer.stopVideo();
											bgmFadeIn(this, f);
										}
									} else {
										bgmFadeOut(this);
									}
								} else {
									if (p) {
										bgmPlayer.stopVideo(), bgmFadeIn(this, f);
									} else {
										bgmFadeOut(this);
									}
								}
							} else {
								if (p) {
									f = !0;
									bgmFadeIn(this, f);
								}
							}
						} else {
							if (i < 10) {
								i++;
								setTimeout(() => {
									this.playBgm(e, t, i);
								}, 200);
							}
						}
					},
					updateScores: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.app.activated.length; f++) {
							var aF = this.app.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																}
															} else {
																this.app.pointTypes[m].startingSum += coS.tmpDisScore;
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.app.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.app.activated.splice(nH, 1);
											t.currentChoices -= 1;
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											this.app.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											var bE = this.checkRequireds(coS);
											if (bC !== bE) {
												var nC = 0;
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum += coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !1;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum -= coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !0;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScores(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
						}
					},
					updateScoresMulC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + parseInt(e.multipleUseVariable + 1) : e.id;
						for (var f = 0; f < this.app.activated.length; f++) {
							var aF = this.app.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.app.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											if (e.discountOther) {
												for (var b = 0; b < coO.scores.length; b++) {
													var coS = coO.scores[b];
													if (!coS.isNotRecalculatable) {
														if (coS.isChangeDiscount) {
															for (var m = 0; m < this.app.pointTypes.length; m++) {
																if (this.app.pointTypes[m].id == coS.id) {
																	if (coO.isMultipleUseVariable) {
																		for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																			this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																		}
																	} else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																	this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
																}
															}
															coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
														}
													}
												}
											}
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											var bE = !1;
											if (e.id == this.exceptedScores[0]) {
												var fI = this.app.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.app.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bE = this.checkRequireds(coS);
													this.app.activated.splice(this.app.activated.length - 1, 1), t.currentChoices -= 1;
												} else {
													var aFI = this.app.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.app.activated.splice(fI, 1), t.currentChoices -= 1);
													bE = this.checkRequireds(coS);
													parseInt(aFI[1]) > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.app.activated.splice(fI, 0, eid), t.currentChoices += 1);
												}
											} else {
												var nH = this.app.activated.indexOf(eid);
												this.app.activated.splice(nH, 1);
												t.currentChoices -= 1;
												var bE = this.checkRequireds(coS);
												this.app.activated.splice(nH, 0, eid);
												t.currentChoices += 1;
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum += coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !1;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum -= coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !0;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
						}
					},
					updateScoresMulS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						for (var f = 0; f < this.app.activated.length; f++) {
							var aF = this.app.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.app.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											if (e.id == this.exceptedScores[0]) {
												var fI = this.app.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.app.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													this.app.activated.splice(this.app.activated.length - 1, 1), t.currentChoices -= 1;
													bE = this.checkRequireds(coS);
												} else {
													var aFI = this.app.activated[fI].split("/ON#");
													aFI[1] > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.app.activated.splice(fI, 1), t.currentChoices -= 1);
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													aFI[1] > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.app.activated.splice(fI, 0, eid), t.currentChoices += 1);
													bE = this.checkRequireds(coS);
												}
											} else {
												this.app.activated.splice(nR, 1);
												t.currentChoices -= 1;
												bC = this.checkRequireds(coS);
												for (var a = 0; a < o.length; a++) {
													for (var n = 0; n < this.app.pointTypes.length; n++) {
														this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
													}
												}
												this.app.activated.splice(nR, 0, eid);
												t.currentChoices += 1;
												bE = this.checkRequireds(coS);
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum += coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !1;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum -= coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !0;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
						}
					},
					discountS: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								bTempStacked = !1,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										discountedFrom.push(e.id);
										scoreVal = coS.tmpDiscount[f][2];
										bTempStacked = !0;
										tmpNum = f;
									}
								}
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										coS.discountTextA.push(e.discountAfterText);
									}
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if (coS.discountScore > stackDiscount) {
									this.$set(coS, "tmpDisScore", coS.discountScore - stackDiscount);
									this.$set(coS, "isChangeDiscount", true);
									aDiscount.push(false);
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									if ("undefined" !== typeof coS.discountTextA) this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if ("undefined" !== typeof coS.discountTextB) this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
									coS.discountedFrom.push(...discountedFrom);
									if (bTempStacked) coS.tmpDiscount.splice(tmpNum, 1);
									coS.tmpDiscount.push(aDiscount);
									this.$set(coS, "notStackableDiscount", false);
								} else {
									this.$set(coS, "isChangeDiscount", false);
									discountedFrom.push(e.id);
									if (bTempStacked) {
										coS.tmpDiscount[tmpNum][1] = discountedFrom;
										coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
										coS.tmpDiscount[tmpNum][3] = stackDiscount;
									} else {
										if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
										"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
										aDiscount.push(discountedFrom);
										aDiscount.push(stackDiscountCal);
										aDiscount.push(stackDiscount);
										coS.tmpDiscount.push(aDiscount);
									}
								}
							} else {
								scoreVal = coS.discountIsOn ? coS.discountScoreCal : parseInt(coS.value);
								var tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
										coS.discountTextA.push(e.discountAfterText);
									}
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountedFrom.push(e.id);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
								if (!coS.discountIsOn) this.$set(coS, "discountIsOn", true);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								aDiscount = [];
							if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
							if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
							else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
							else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
							else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
							stackDiscountCal = stackDiscount;
							if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
							if (coS.discountIsOn) {
								"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
								if (coS.discountScore > stackDiscount) {
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									this.$set(coS, "discountShow", e.discountShow);
									this.$set(coS, "discountBeforeText", e.discountBeforeText);
									this.$set(coS, "discountAfterText", e.discountAfterText);
									this.$set(coS, "discountedFrom", e.id);
									this.$set(coS, "notStackableDiscount", true);
								} else {
									aDiscount.push(e.id);
									aDiscount.push(stackDiscountCal);
									aDiscount.push(stackDiscount);
									if (e.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
								}
								coS.tmpDiscount.push(aDiscount);
							} else {
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								if (e.discountShow) this.$set(coS, "discountShow", e.discountShow), this.$set(coS, "discountBeforeText", e.discountBeforeText), this.$set(coS, "discountAfterText", e.discountAfterText);
								this.$set(coS, "discountIsOn", true);
								this.$set(coS, "discountedFrom", e.id);
								this.$set(coS, "notStackableDiscount", true);
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
					activateObjectI: function(e) {
						var eID = e.split("/IMG#"),
							eImage = eID.length > 1 ? eID[1] : "";
						eID = eID[0].split("/WORD#");
						var eWord = eID.length > 1 ? eID[1].replaceAll("/CHAR#", ",") : "";
						eID = eID[0].split("/RND#");
						var eRand = eID.length > 1 ? eID[1].split("/AND#") : "";
						eID = eID[0];
						if ("undefined" !== typeof this.app.comp[eID]) {
							var co = this.app.comp[eID],
								coR = this.app.rows[co.rows],
								coO = coR.objects[co.objects];
							var tmpScores = [];
							if (coO.discountOther) {
								if ("undefined" !== typeof coO.discountOperator && "undefined" !== typeof coO.discountValue) {
									if (coO.isDisChoices) {
										if ("undefined" !== typeof coO.discountChoices) {
											for (var a = 0; a < coO.discountChoices.length; a++) {
												if ("undefined" !== typeof this.app.comp[coO.discountChoices[a]]) {
													var coT = this.app.comp[coO.discountChoices[a]],
														coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
														coTO = coTR.objects[coT.objects];
													for (var c = 0; c < coTO.scores.length; c++) {
														var coTS = coTO.scores[c];
														if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
															if (!coTS.isNotDiscountable) {
																this.discountS(coO, coTS);
															}
														}
													}
												}
											}
										}
									} else {
										if("undefined" !== typeof coO.discountGroups) {
											for (var a = 0; a < this.app.groups.length; a++) {
												if (coO.discountGroups.includes(this.app.groups[a].id)) {
													for (var b = 0; b < this.app.groups[a].elements.length; b++)
														if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
															var coT = this.app.comp[this.app.groups[a].elements[b].id],
																coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																coTO = coTR.objects[coT.objects];
															for (var c = 0; c < coTO.scores.length; c++) {
																var coTS = coTO.scores[c];
																if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
																	if (!coTS.isNotDiscountable) {
																		this.discountS(coO, coTS);
																	}
																}
															}
														}
												}
											}
										}
									} 
								}
							}
							for (var h = 0; h < coO.scores.length; h++) {
								var coS = coO.scores[h];
								for (var j = 0; j < this.app.pointTypes.length; j++) {
									if (this.app.pointTypes[j].id == coS.id) {
										this.checkRequireds(coS) && !coS.isActive && (this.app.pointTypes[j].startingSum -= (coS.discountIsOn ? coS.discountScore : parseInt(coS.value)), coS.isActive = !0, tmpScores.push({id: coS.id, value: coS.discountIsOn ? coS.discountScore : parseInt(coS.value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[j].id, this.app.pointTypes[j].startingSum), coS.isChangeDiscount && this.$set(coS, "isChangeDiscount", false));
									}
								}
							}
							this.app.activated.push(eID), coO.isActive = !0, coR.currentChoices += 1;
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice) {
								if (coO.isActivateRandom && "undefined" !== typeof coO.isActivateRandom) {
									if (eRand == "") {
										var y = coO.activateThisChoice.split(","),
											RD = y.slice(),
											rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
											nAR = parseInt(coO.numActivateRandom) > rd.length ? rd.length : parseInt(coO.numActivateRandom);
										this.$set(coO, 'activatedRandom', []);
										var rdS = new Set();
										for (var v = 0; v < rd.length; v++) {
											if ("undefined" !== typeof this.app.comp[rd[v]]) {
												var coT = this.app.comp[rd[v]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!this.checkRequireds(coTO)) {
													var rdV = rd[v];
													rd.splice(v, 1), rd.push(rdV);
												}
											}
										}
										for (var v = rd.length - 1; v >= 0; v--) rdS.add(rd[v]);
										rd = [...rdS].reverse();
										coO.activatedRandom = rd.slice(0, nAR);
										for (var v = 0; v < nAR; v++) {
											var aRM = coO.activatedRandom[v].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aRM[0]]) {
												var coT = this.app.comp[aRM[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!coTO.isAllowDeselect) {
													if (coTO.isMultipleUseVariable) {
														for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
															if (ee > 0) {
																coTO.numMultipleTimesMinus++;
															} else if (ee < 0) {
																coTO.numMultipleTimesMinus--;
															}
														}
													}
													coTO.forcedActivated = !0;
												}
											}
										}
									} else {
										var rd = eRand.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/RON#")[0]));
										this.$set(coO, "activatedRandom", rd);
										for (var v = 0; v < rd.length; v++) {
											var aRM = coO.activatedRandom[v].split("/RON#");
											if ("undefined" !== typeof this.app.comp[aRM[0]]) {
												var coT = this.app.comp[aRM[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!coTO.isAllowDeselect) {
													if (coTO.isMultipleUseVariable) {
														for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
															if (ee > 0) {
																coTO.numMultipleTimesMinus++;
															} else if (ee < 0) {
																coTO.numMultipleTimesMinus--;
															}
														}
													}
													coTO.forcedActivated = !0;
												}
											}
										}
									}
								} else {
									var y = coO.activateThisChoice.split(",");
									var RD = y.slice(),
										rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
										nrd = RD.filter(item => !this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0]));
									for (var v = 0; v < rd.length; v++) {
										var rdV = rd[v].split("/ON#");
										if ("undefined" !== typeof this.app.comp[rdV[0]]) {
											var coT = this.app.comp[rdV[0]],
												coTR = this.app.rows[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (!coTO.isAllowDeselect) {
												if (coTO.isMultipleUseVariable) {
													if (coO.isMultipleUseVariable) {
														for (var E = 0; E < Math.abs(coO.multipleUseVariable); E++) {
															for (var ee = rd[v].split("/ON#")[1], x = 0; x < Math.abs(ee); x++) {
																if (ee > 0) {
																	coTO.numMultipleTimesMinus++;
																} else if (ee < 0) {
																	coTO.numMultipleTimesMinus--;
																}
															}
														}
													} else {
														for (var ee = rdV[1], x = 0; x < Math.abs(ee); x++) {
															if (ee > 0) {
																coTO.numMultipleTimesMinus++;
															} else if (ee < 0) {
																coTO.numMultipleTimesMinus--;
															}
														}
													}
												}
												coTO.forcedActivated = !0;
											}
										}
									}
									for (var v = 0; v < nrd.length; v++) {
										var nrdV = nrd[v].split("/ON#");
										if ("undefined" !== typeof this.app.comp[nrdV[0]]) {
											var coT = this.app.comp[nrdV[0]],
												coTR = this.app.rows[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (coTO.isSelectableMultiple) {
												if ("undefined" === typeof coO.cancelForcedActivated) this.$set(coO, "cancelForcedActivated", []);
												coO.cancelForcedActivated.push(coTO.id + "/ON#" + nrdV[1]);
											}
										}
									}
								}
							}
							if (coO.multiplyPointtypeIsOn) {
								coO.multiplyPointtypeIsOnCheck = !0;
								if ("object" !== typeof coO.startingSumAtMultiply) this.$set(coO, "startingSumAtMultiply", []);
								for (var l = 0; l < coO.pointTypeToMultiply.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++)
										if (this.app.pointTypes[m].id == coO.pointTypeToMultiply[l]) {
											if (coO.multiplyPointtypeIsId)
												for (var x = 0; x < this.app.pointTypes.length; x++) {
													if (this.app.pointTypes[x].id == coO.multiplyWithThis) {
														coO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
														this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
													}
												}
											else coO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * coO.multiplyWithThis, this.app.pointTypes[m].startingSum *= coO.multiplyWithThis; this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
										}
								}
								this.app.mdObjects.push(coO);
							}
							if (coO.dividePointtypeIsOn) {
								coO.dividePointtypeIsOnCheck = !0;
								for (var l = 0; l < coO.pointTypeToDivide.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == coO.pointTypeToDivide[l]) {
											coO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / coO.divideWithThis;
											this.app.pointTypes[m].startingSum /= coO.divideWithThis;
											this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
										}
									}
								}
								this.app.mdObjects.push(coO);
							}
							if (coO.addToAllowChoice)
								for (var m = 0; m < this.app.rows.length; m++)
									if (coO.idOfAllowChoice == this.app.rows[m].id) {
										this.app.rows[m].allowedChoices += coO.numbAddToAllowChoice, isNaN(this.app.rows[m].allowedChoicesChange) && (this.app.rows[m].allowedChoicesChange = 0), this.app.rows[m].allowedChoicesChange += coO.numbAddToAllowChoice;
									}
							this.updateScores(coO, coR, tmpScores, 0);
							if (coO.changeBackground) {
								if (coO.changeBgImage) {
									var a = this.app.styling.backgroundImage;
									this.$set(this.app.styling, "backgroundImage", coO.bgImage);
									this.$set(coO, "bgImage", a);
								} else {
									var a = this.app.styling.backgroundColor;
									this.$set(this.app.styling, "backgroundColor", coO.changedBgColorCode);
									this.$set(coO, "changedBgColorCode", a);
								}
							}
							if (coO.changePointBar) {
								if (coO.changeBarBgColorIsOn) {
									var a = this.app.styling.barBackgroundColor;
									this.$set(this.app.styling, "barBackgroundColor", coO.changedBarBgColor);
									this.$set(coO, "changedBarBgColor", a);
								}
								if (coO.changeBarTextColorIsOn) {
									var a = this.app.styling.barTextColor;
									this.$set(this.app.styling, "barTextColor", coO.changedBarTextColor);
									this.$set(coO, "changedBarTextColor", a);
								}
								if (coO.changeBarBgColorIsOn) {
									var a = this.app.styling.barIconColor;
									this.$set(this.app.styling, "barIconColor", coO.changedBarIconColor);
									this.$set(coO, "changedBarIconColor", a);
								}
							}
							if (coO.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
								if (coO.bgmId) {
									if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
									this.app.bgmIsPlaying = !0;
									this.playBgm(coO, coO.bgmId, 0);
								}
							}
							if (coO.muteBgm && "undefined" !== typeof bgmPlayer) {
								if ("undefined" !== typeof bgmPlayer.mute) {
									this.$set(this.app, "isMute", !0);
									bgmPlayer.mute();
								}
							}
							if (coO.isImageUpload) {
								coO.defaultImage = "undefined" === typeof coO.image ? "" : coO.image;
								coO.image = eImage.replaceAll("/CHAR#", ",");
							}
							if (coO.textfieldIsOn)
								for (var m = 0; m < this.app.words.length; m++) this.app.words[m].id == coO.idOfTheTextfieldWord && (coO.customTextfieldIsOn ? (this.app.words[m].replaceText = eWord, coO.wordChangeSelect = eWord) : this.app.words[m].replaceText = coO.wordChangeSelect), this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
						}
					},
					selectedOneMoreI: function(e) {
						var eID = e.split("/RND#"),
							eRand = eID.length > 1 ? eID[1].split("/AND#") : "";
						eID = eID[0];
						if ("undefined" !== typeof this.app.comp[eID]) {
							var s = !0;
							var co = this.app.comp[eID],
								coR = this.app.rows[co.rows],
								coO = coR.objects[co.objects];
							coO.multipleUseVariable = "undefined" === typeof coO.multipleUseVariable ? 0 : coO.multipleUseVariable;
							coO.numMultipleTimesPluss > coO.multipleUseVariable ? (coO.multipleUseVariable++, this.$set(coO, "selectedThisManyTimesProp", coO.multipleUseVariable), this.$set(this.app.objectMap, coO.id, coO.multipleUseVariable)) : s = !1;
							if (s) {
								var tmpScores = [];
								if (coO.discountOther) {
									if ("undefined" !== typeof coO.discountOperator && "undefined" !== typeof coO.discountValue) {
										if (coO.isDisChoices) {
											if ("undefined" !== typeof coO.discountChoices) {
												for (var a = 0; a < coO.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[coO.discountChoices[a]]) {
														var coT = this.app.comp[coO.discountChoices[a]],
															coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
															coTO = coTR.objects[coT.objects];
														for (var c = 0; c < coTO.scores.length; c++) {
															var coTS = coTO.scores[c];
															if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
																if (!coTS.isNotDiscountable) {
																	this.discountS(coO, coTS);
																}
															}
														}
													}
												}
											}
										} else {
											if("undefined" !== typeof coO.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (coO.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++)
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var coT = this.app.comp[this.app.groups[a].elements[b].id],
																	coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																	coTO = coTR.objects[coT.objects];
																for (var c = 0; c < coTO.scores.length; c++) {
																	var coTS = coTO.scores[c];
																	if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
																		if (!coTS.isNotDiscountable) {
																			this.discountS(coO, coTS);
																		}
																	}
																}
															}
													}
												}
											}
										} 
									}
								}
								for (var h = 0; h < coO.scores.length; h++) {
									var coS = coO.scores[h],
										k = coO.multipleUseVariable;
									for (var j = 0; j < this.app.pointTypes.length; j++) {
										if (this.app.pointTypes[j].id == coS.id) {
											var tmpValue = coS.multiplyByTimes ? k : 1;
											if ("undefined" === typeof coS.isActiveMul) this.$set(coS, "isActiveMul", []);
											if (this.checkRequireds(coS) && !coS.isActiveMul[k - 1]) {
												this.app.pointTypes[j].startingSum -= (coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue);
												coS.isActiveMul[k - 1] = !0;
												tmpScores.push({id: coS.id, value: coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue});
												this.$set(this.app.pointTypeMap, this.app.pointTypes[j].id, this.app.pointTypes[j].startingSum);
												if (coS.isChangeDiscount) this.$set(coS, "isChangeDiscount", false);
											}
										}
									}
								}
								if (coO.isActive == !1) {
									coO.isActive = !0, coR.currentChoices += 1, this.app.activated.push(coO.id + "/ON#" + coO.multipleUseVariable);
									if (coO.backpackBtnRequirement) {
										if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
										this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
									}
									if (coO.changeBackground) {
										if (coO.changeBgImage) {
											var a = this.app.styling.backgroundImage;
											this.$set(this.app.styling, "backgroundImage", coO.bgImage);
											this.$set(coO, "bgImage", a);
										} else {
											var a = this.app.styling.backgroundColor;
											this.$set(this.app.styling, "backgroundColor", coO.changedBgColorCode);
											this.$set(coO, "changedBgColorCode", a);
										}
									}
									if (coO.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
										if (coO.bgmId) {
											if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
											this.app.bgmIsPlaying = !0;
											this.playBgm(coO, coO.bgmId, 0);
										}
									}
								} else {
									this.$set(this.app.activated, this.app.activated.indexOf(coO.id + "/ON#" + (coO.multipleUseVariable - 1)), (coO.id + "/ON#" + coO.multipleUseVariable));
								}
								if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice) {
									if (coO.isActivateRandom && "undefined" !== typeof coO.isActivateRandom) {
										if (eRand == "") {
											if (coO.multipleUseVariable == 1) {
												var y = coO.activateThisChoice.split(",");
												var RD = y.slice(),
													rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0]));
												var rdS = new Set();
												for (var v = 0; v < rd.length; v++) {
													if ("undefined" !== typeof this.app.comp[rd[v]]) {
														var coT = this.app.comp[rd[v]],
															coTR = this.app.rows[coT.rows],
															coTO = coTR.objects[coT.objects];
														if (!this.checkRequireds(coTO)) {
															var rdV = rd[v];
															rd.splice(v, 1), rd.push(rdV);
														}
													}
												}
												for (var v = rd.length - 1; v >= 0; v--) rdS.add(rd[v]);
												rd = [...rdS].reverse();
												if ("undefined" === typeof coO.activatedRandomMul) this.$set(coO, "activatedRandomMul", []);
												var preNAR = 0,
													nAR = [];
												for (var v = 0; v < parseInt(coO.numActivateRandom); v++) {
													nAR[v] = rd.length / (parseInt(coO.numActivateRandom) * (v + 1)) < 1 ? rd.length % (parseInt(coO.numActivateRandom) * (v + 1)) : parseInt(coO.numActivateRandom);
													coO.activatedRandomMul.push(rd.slice(preNAR, nAR[v] + preNAR));
													for (var f = 0; f < nAR[v] - preNAR; f++) {
														var aRM = coO.activatedRandomMul[v][f].split("/ON#");
														if ("undefined" !== typeof this.app.comp[aRM[0]]) {
															var coT = this.app.comp[aRM[0]],
																coTR = this.app.rows[coT.rows],
																coTO = coTR.objects[coT.objects];
															if (!coTO.isAllowDeselect) {
																if (coTO.isMultipleUseVariable) {
																	for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
																		if (ee > 0) {
																			coTO.numMultipleTimesMinus++;
																		} else if (ee < 0) {
																			coTO.numMultipleTimesMinus--;
																		}
																	}
																}
																coTO.forcedActivated = !0;
															}
														}
													}
													preNAR += nAR[v];
												}
											}
										} else {
											if ("undefined" === typeof coO.activatedRandomMul) this.$set(coO, "activatedRandomMul", []);
											var nR = (coO.multipleUseVariable - 1) * coO.numActivateRandom,
												rd = eRand.splice(nR, nR + coO.numActivateRandom);
											coO.activatedRandomMul.push(rd);
											for (var v = 0; v < coO.activatedRandomMul[coO.multipleUseVariable - 1].length; v++) {
												var aRM = coO.activatedRandomMul[coO.multipleUseVariable - 1][v].split("/RON#");
												if ("undefined" !== typeof this.app.comp[aRM[0]]) {
													var coT = this.app.comp[aRM[0]],
														coTR = this.app.rows[coT.rows],
														coTO = coTR.objects[coT.objects];
													if (!coTO.isAllowDeselect && this.newActivatedList.some(item => item.split("/ON#")[0] == coTO.id)) {
														if (coTO.isMultipleUseVariable) {
															for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
																if (ee > 0) {
																	coTO.numMultipleTimesMinus++;
																} else if (ee < 0) {
																	coTO.numMultipleTimesMinus--;
																}
															}
														}
														coTO.forcedActivated = !0;
													}
												}
											}
										}
									} else {
										var y = coO.activateThisChoice.split(",");
										var RD = y.slice(),
											rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
											nrd = RD.filter(item => !this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0]));
										for (var v = 0; v < rd.length; v++) {
											var rdV = rd[v].split("/ON#");
											if ("undefined" !== typeof this.app.comp[rdV[0]]) {
												var coT = this.app.comp[rdV[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!coTO.isAllowDeselect) {
													if (coTO.isMultipleUseVariable) {
														if (coO.isMultipleUseVariable) {
															for (var E = 0; E < Math.abs(coO.multipleUseVariable); E++) {
																for (var ee = rd[v].split("/ON#")[1], x = 0; x < Math.abs(ee); x++) {
																	if (ee > 0) {
																		coTO.numMultipleTimesMinus++;
																	} else if (ee < 0) {
																		coTO.numMultipleTimesMinus--;
																	}
																}
															}
														} else {
															for (var ee = rdV[1], x = 0; x < Math.abs(ee); x++) {
																if (ee > 0) {
																	coTO.numMultipleTimesMinus++;
																} else if (ee < 0) {
																	coTO.numMultipleTimesMinus--;
																}
															}
														}
													}
													coTO.forcedActivated = !0;
												}
											}
										}
										for (var v = 0; v < nrd.length; v++) {
											var nrdV = nrd[v].split("/ON#");
											if ("undefined" !== typeof this.app.comp[nrdV[0]]) {
												var coT = this.app.comp[nrdV[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (coTO.isSelectableMultiple) {
													if ("undefined" === typeof coO.cancelForcedActivated) this.$set(coO, "cancelForcedActivated", []);
													coO.cancelForcedActivated.push(coTO.id + "/ON#" + nrdV[1]);
												}
											}
										}
									}
								}
								this.updateScoresMulS(coO, coR, tmpScores, 0);
								if (coO.addToAllowChoice) {
									if ("undefined" !== typeof this.app.compR[coO.idOfAllowChoice]) {
										var coT = this.app.compR[coO.idOfAllowChoice],
											coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows];
										coTR.allowedChoices += coO.numbAddToAllowChoice, isNaN(coTR.allowedChoicesChange) && (coTR.allowedChoicesChange = 0), coTR.allowedChoicesChange += coO.numbAddToAllowChoice;
									}
								}
							}
						}
					},
					selectedOneLessI: function(e) {
						if ("undefined" !== typeof this.app.comp[e]) {
							var co = this.app.comp[e],
								coR = this.app.rows[co.rows],
								coO = coR.objects[co.objects];
							coO.multipleUseVariable = "undefined" === typeof coO.multipleUseVariable ? 0 : coO.multipleUseVariable;
							coO.numMultipleTimesMinus < coO.multipleUseVariable ? (coO.multipleUseVariable--, this.$set(coO, "selectedThisManyTimesProp", coO.multipleUseVariable), this.$set(this.app.objectMap, coO.id, coO.multipleUseVariable)) : s = !1;
							if (s) {
								var tmpScores = [];
								for (var h = 0; h < coO.scores.length; h++) {
									var coS = coO.scores[h],
										k = Math.abs(coO.multipleUseVariable);
									for (var j = 0; j < this.app.pointTypes.length; j++) {
										if (this.app.pointTypes[j].id == coS.id) {
											var tmpValue = coS.multiplyByTimes ? k : 1;
											if ("undefined" === typeof coS.isActiveMulMinus) this.$set(coS, "isActiveMulMinus", []);
											if (this.checkRequireds(coS) && !coS.isActiveMulMinus[k]) {
												this.app.pointTypes[j].startingSum += (coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue);
												coS.isActiveMulMinus[k] = !0;
												tmpScores.push({id: coS.id, value: coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue});
												this.$set(this.app.pointTypeMap, this.app.pointTypes[j].id, this.app.pointTypes[j].startingSum);
												if (coS.isChangeDiscount) this.$set(coS, "isChangeDiscount", false);
											}
										}
									}
								}
								if (coO.isActive == !1) {
									coO.isActive = !0, coR.currentChoices += 1, this.app.activated.push(coO.id + "/ON#" + coO.multipleUseVariable);
								} else {
									this.$set(this.app.activated, this.app.activated.indexOf(coO.id + "/ON#" + (coO.multipleUseVariable + 1)), (coO.id + "/ON#" + coO.multipleUseVariable));
								}
								this.updateScoresMulC(coO, coR, tmpScores, 0);
								if (coO.addToAllowChoice) {
									if ("undefined" !== typeof this.app.compR[coO.idOfAllowChoice]) {
										var coT = this.app.compR[coO.idOfAllowChoice],
											coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows];
										coTR.allowedChoices -= coO.numbAddToAllowChoice, isNaN(coTR.allowedChoicesChange) && (coTR.allowedChoicesChange = 0), coTR.allowedChoicesChange += coO.numbAddToAllowChoice;
									}
								}
							}
						}
					},
                    cleanActivated: function() {
                        this.$store.commit({
                            type: "cleanActivated"
                        });
						if (this.newActivated.length > 0) {
							var e = this.newActivated.split(",");
							this.newActivatedList = e.map(item => item.split("/IMG#")[0]);
							this.newActivatedList = this.newActivatedList.map(item => item.split("/WORD#")[0]);
							this.newActivatedList = this.newActivatedList.map(item => item.split("/RND#")[0]);
							for (var a = 0; a < e.length; a++) {
								var ea = e[a].split("/ON#");
								if (!this.app.activated.some(item => item.split("/ON#")[0] == ea[0])) {
									if (ea.length > 1) {
										var eaR = ea[1].split("/RND#");
										ea[0] = eaR.length > 1 ? ea[0] + "/RND#" + eaR[1] : ea[0];
										for (var b = 0; b < Math.abs(parseInt(eaR[0])); b++) {
											eaR[0] > 0 ? this.selectedOneMoreI(ea[0]) : this.selectedOneLessI(ea[0]);
										}
									} else {
										this.activateObjectI(ea[0]);
									}
								}
							}
							this.newActivatedList.splice(0);
						}
                    },
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            is = os,
            ss = (o("742b"), Object(w["a"])(is, es, ts, !1, null, "47b03d1f", null)),
            rs = ss.exports;
        x()(ss, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"],
            VTextarea: Z["a"]
        });
        var as = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-row", [o("v-dialog", {
					ref: "dialog",
                    attrs: {
                        "max-width": e.styling.backPackWidth + "px"
                    },
                    on: {
                        "click:outside": e.cleanCurrentComponent
                    },
                    model: {
                        value: e.dialog,
                        callback: function(t) {
                            e.dialog = t
                        },
                        expression: "dialog"
                    }
                }, [o("v-card", {
                    style: e.background
                }, [o("v-toolbar", {
					staticClass: "overflow--auto " + (e.$vuetify.theme.isDark ? "grey darken-2" : "grey lighten-4"),
					attrs: {
						height: e.window.width > 500 ? "48" : "72"
					}
				}, [o("v-row", {
					staticClass: "pa-0"
				}, [o("v-col", {
					staticClass: e.window.width > 500 ? "pa-0 align-content-center" : "py-0",
					attrs: {
						cols: e.window.width > 1200 ? "3" : e.window.width > 750 ? "4" : e.window.width > 600 ? "5" : e.window.width > 500 ? "6" : "12"
					}
				}, [o("v-radio-group", {
                    attrs: {
                        row: "",
						"hide-details": ""
                    },
                    model: {
                        value: e.extension,
                        callback: function(t) {
                            e.$set(e, "extension", t)
                        },
                        expression: "extension"
                    }
                }, [o("v-radio", {
                    attrs: {
                        label: "png",
                        color: "blue",
                        value: "png"
                    }
                }), o("v-radio", {
                    attrs: {
                        label: "jpeg",
                        color: "blue",
                        value: "jpeg"
                    }
                }), o("v-radio", {
                    attrs: {
                        label: "webp",
                        color: "blue",
                        value: "webp"
                    }
                })], 1)], 1), o("v-col", {
					staticClass: "pa-0" + (e.window.width > 500 ? "" : " col-12")
				}, [o("v-tooltip", {
					attrs: {
						bottom: "",
						"open-delay": "300"
					},
					scopedSlots: e._u([{
						key: "activator",
						fn: function(i) {
							var s = i.on;
							return [o("v-btn", e._g({
								staticClass: "pa-0",
								attrs: {
									text: "",
									large: ""
								},
								on: {
									click: function(o) {
										return e.print()
									}
								}
							}, s), [o("v-icon", {
								staticClass: "pr-2"
							}, [e._v("mdi-file-image")]), e._v("Download Image")], 1)]
						}
					}], null, !0)
				}, [o("span", [e._v("Go all the way to the bottom to load in the pictures first")])])], 1)], 1)], 1), o("v-card-text", [o("v-container", [o("v-row", {
                    ref: "printThis"
                }, e._l(e.backpack, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "pa-0",
						staticStyle: {
							color: e.$vuetify.theme.isDark ? "rgba(0,0,0,.6)" : ""
						},
                        attrs: {
                            cols: t.width ? "6" : "12"
                        }
                    }, [o("app-Row", {
						directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.checkRequireds(t),
                            expression: "checkRequireds(row)"
                        }],
                        attrs: {
                            row: t,
                            type: e.type
                        },
                        on: {
                            rowWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentComponent
                    }
                }, [e._v("Close")])], 1)], 1)], 1), e.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.snackbar,
                        callback: function(t) {
                            e.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.text))])])], 1) : e._e()], 1)
            },
            ns = [],
            ls = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("div", {
                    staticStyle: {
                        "text-align": "center"
                    },
                    style: e.rowBody,
					staticClass: "row-" + e.row.id + "-bg"
                }, [e.checkIfDeselect(e.row) ? o("span", [o("div", {
                    style: "" != e.row.title && "" != e.row.text ? e.rowBackground : ""
                }, [4 == e.row.template ? o("div", {
                    staticClass: "col nopadding" + " row-" + e.row.id
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e(), e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    ref: "rowBtn",
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])])], 1) : e._e(), 5 == e.row.template ? o("div", {
                    staticClass: "col nopadding" + " row-" + e.row.id
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    ref: "rowBtn",
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])]), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()], 1) : e._e(), 1 == e.row.template || e.window.width < 1e3 ? o("div", {
                    staticClass: "col pa-0" + " row-" + e.row.id
                }, [e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])]), "" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()], 1) : e._e(), 2 == e.row.template && e.window.width > 1e3 ? o("div", {
                    staticClass: "row nopadding" + "row-" + e.row.id
                }, [o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": (100 - e.rowImageStyling.rowImageBoxWidth) + "%"
					}
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()]), o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": e.rowImageStyling.rowImageBoxWidth + "%"
					}
                }, [e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])])], 1)]) : e._e(), 3 == e.row.template && e.window.width > 1e3 ? o("div", {
                    staticClass: "row nopadding" + " row-" + e.row.id
                }, [o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": e.rowImageStyling.rowImageBoxWidth + "%"
					}
                }, [e.row.isButtonRow || "" === e.row.imageSourceTooltip || "undefined" === typeof e.row.imageSourceTooltip ? e.row.isButtonRow ? o("v-btn", {
                    ref: "rowBtn",
                    style: e.rowButton,
                    attrs: {
                        disabled: !e.row.buttonType && this.activated.includes(this.row.buttonId) || e.isButtonPressable
                    },
                    on: {
                        click: e.buttonActivate
                    }
                }, [e._v(e._s(e.row.buttonText))]) : e.row.image.length > 0 ? o("img", {
                    style: e.rowImage,
                    attrs: {
                        src: e.row.image
                    }
                }) : e._e() : o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.row.image.length > 0 ? o("img", e._g({
                                style: e.rowImage,
                                attrs: {
                                    src: e.row.image
                                }
                            }, i)) : e._e()]
                        }
                    }], null, !1, 3206076815)
                }, [o("span", [e._v(e._s(e.row.imageSourceTooltip))])])], 1), o("div", {
                    staticClass: "col nopadding",
					staticStyle: {
						"max-width": (100 - e.rowImageStyling.rowImageBoxWidth) + "%"
					}
                }, ["" !== e.row.title ? o("h2", {
                    staticClass: "mb-0",
                    style: e.rowTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowTitle, e.sanitizeArg))
                    }
                }) : e._e(), "" !== e.row.titleText ? o("p", {
                    staticClass: "mb-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.rowText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceRowText, e.sanitizeArg))
                    }
                }) : e._e()])]) : e._e()]), e.row.isResultRow ? o("v-row", {
                    staticClass: "display-flex row objectRow",
                    attrs: {
                        justify: e.row.rowJustify
                    }
                }, e._l(e.resultArray, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        staticClass: "nopadding",
                        class: e.objectWidthClass(t)
                    }, [o("AppObject", {
                        class: e.objectHeight,
                        attrs: {
                            isEditModeOn: e.row.isEditModeOn,
                            activated: e.activated,
                            object: t,
                            row: e.row,
                            objects: e.row.objects
                        },
                        on: {
                            objectWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1) : o("v-row", {
                    staticClass: "display-flex row objectRow pa-0 ma-0",
                    attrs: {
                        justify: e.row.rowJustify
                    }
                }, e._l(e.row.objects, (function(t) {
                    return o("v-col", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.checkRequireds(t) || !e.filterStyling(e.row, t),
                            expression: "checkRequireds(object) || (object.privateFilterIsOn ?\n           !object.styling.reqFilterVisibleIsOn : !styling.reqFilterVisibleIsOn)"
                        }],
                        key: t.index,
                        staticClass: "nopadding",
                        class: e.objectWidthClass(t)
                    }, [o("AppObject", {
                        class: e.objectHeight,
                        attrs: {
                            isEditModeOn: e.row.isEditModeOn,
                            activated: e.activated,
                            object: t,
                            row: e.row,
                            objects: e.row.objects
                        },
                        on: {
                            objectWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1)], 1) : e._e(), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        row: e.row
                    },
                    on: {
                        rowWasChanged: function(t) {
                            e.row = t
                        },
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("ConfirmDlg", {
                    ref: "confirm"
                })], 1)
            },
            cs = [],
            ds = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("span", [e.checkRequireds(e.row) ? o("span", {
                    staticClass: "row" + " row-" + e.row.id + " choice-" + e.object.id + (e.object.isActive ? " selected" + (e.filterStyling.selOverlayOnImage ? " bg-overlay" : "") : " unselected") + (!e.checkRequireds(e.object) ? " choice-disabled" + (e.filterStyling.reqOverlayOnImage ? " bg-overlay" : "") : " choice-enabled"),
                    style: e.objectBackground,
                    on: {
                        click: function(t) {
                            e.row.isInfoRow || e.object.isNotSelectable || e.object.isSelectableMultiple || e.object.forcedActivated || e.object.isButtonObject ? !1 : e.activateObject(e.object, e.row)
                        }
                    }
                }, [4 == e.object.template ? o("span", {
                    staticClass: "ma-0 d-flex flex-column align-center",
                    staticStyle: {
                        width: "100%"
                    }
                }, [e.row.resultShowRowTitle ? o("div", {
                    style: e.rowBody
                }, [o("v-col", {
                    staticClass: "pa-0",
                    style: e.scoreText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.findRowTitle, e.sanitizeArg))
                    }
                })], 1) : e._e(), o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    staticClass: "mb-0",
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },					
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },					
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "py-0"
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticClass: "my-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
                        key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 1) : 5 == e.object.template ? o("span", {
                    staticClass: "ma-0 d-flex flex-column align-center",
                    staticStyle: {
                        width: "100%"
                    }
                }, [e.row.resultShowRowTitle ? o("div", {
                    style: e.rowBody
                }, [o("v-col", {
                    staticClass: "pa-0",
                    style: e.scoreText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.findRowTitle, e.sanitizeArg))
                    }
                })], 1) : e._e(), o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    staticClass: "mb-0",
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "py-0"
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticClass: "my-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
                        key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 1) : 1 == e.object.template || e.window.width < 1e3 || e.row.choicesShareTemplate ? o("span", {
                    staticClass: "ma-0 d-flex flex-column align-center",
                    staticStyle: {
                        width: "100%"
                    }
                }, [e.row.resultShowRowTitle ? o("div", {
                    style: e.rowBody
                }, [o("v-col", {
                    staticClass: "pa-0",
                    style: e.scoreText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.findRowTitle, e.sanitizeArg))
                    }
                })], 1) : e._e(), "" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e(), o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    staticClass: "mb-0",
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "py-0"
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticClass: "my-0",
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
                        key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 1) : 2 == e.object.template && e.window.width > 1e3 ? o("v-row", {
                    staticClass: "ma-0 pa-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("v-col", {
                    staticClass: "pa-0 mb-0",
					staticStyle: {
						"max-width": e.objectImageStyling.objectImageBoxWidth + "%"
					}
                }, ["" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e()], 1), o("v-col", {
                    staticClass: "pa-1 d-flex flex-column align-center",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
                }, [o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
                        key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2)], 2) : 3 == e.object.template && e.window.width > 1e3 ? o("v-row", {
                    staticClass: "ma-0 pa-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("v-col", {
                    staticClass: "pa-1 d-flex flex-column align-center",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
                }, [o("span", {
					staticStyle: {
						width: "100%"
					}
				}, [!e.row.objectTitleRemoved ? o("h3", {
                    style: e.objectTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectTitleText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 0 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.scores, (function(t) {
                    return o("div", {
                        key: t.index
                    }, [t.showScore && e.checkRequireds(t) && !e.row.objectScoreRemoved ? o("ObjectScore", {
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            score: t
                        },
                        on: {
                            scoreWasChanged: function(e) {
                                t = e
                            }
                        }
                    }) : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 1 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), e._l(e.object.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired && !e.row.objectRequirementRemoved ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired && !e.row.objectRequirementRemoved ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 2 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e(), "" !== e.object.text && !e.row.objectTextRemoved ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.objectText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceObjectText, e.sanitizeArg))
                    }
                }) : e._e(), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 3 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
					staticClass: "d-flex flex-column flex pa-0",
					staticStyle: {
						"justify-content" : e.object.addonJustify
					}
				}, [e._l(e.object.addons, (function(t) {
                    return o("ObjectAddon", {
                        key: t.index,
                        attrs: {
                            isEditModeOn: e.isEditModeOn,
                            addon: t,
                            row: e.row
                        },
                        on: {
                            addonWasChanged: function(e) {
                                t = e
                            }
                        }
                    })
                }))], 1), e.object.isSelectableMultiple && e.multiChoiceCounter && e.multiChoiceStyling.multiChoiceCounterPosition === 4 ? o("v-row", {
					staticStyle: {
						"flex-grow": 0,
						width: "100%"
					}
				}, [o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneLess(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-minus")])], 1), o("v-spacer"), o("v-col", {
                    staticClass: "pa-0",
                    style: e.multiChoiceText,
                    domProps: {
                        innerHTML: e._s(e.object.selectedThisManyTimesProp)
                    }
                }), o("v-spacer"), o("v-btn", {
                    attrs: {
                        disabled: !e.checkRequireds(this.object),
                        icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.row.isInfoRow || e.object.isNotSelectable ? 0 : e.selectedOneMore(e.object, e.row)
                        }
                    }
                }, [o("v-icon", {
                    style: e.multiChoiceButton,
                    attrs: {
                        size: e.multiChoiceStyling.multiChoiceCounterSize + "%"
                    }
                }, [e._v("mdi-plus")])], 1), o("v-spacer")], 1) : e._e()], 2), o("v-col", {
                    staticClass: "pa-0 mb-0",
					staticStyle: {
						"max-width": e.objectImageStyling.objectImageBoxWidth + "%"
					}
                }, ["" !== e.object.imageSourceTooltip && "undefined" !== typeof e.object.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return ["undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", e._g({
                                attrs: {
									src: e.object.image
								},
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i)) : o("img", e._g({
                                directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.object.image,
                                    expression: "object.image"
                                }],
                                style: "" != e.object.image ? e.objectImage : ""
                            }, i))] : e._e()]
                        }
                    }], null, !1, 69075810)
                }, [o("span", [e._v(e._s(e.object.imageSourceTooltip))])]) : "undefined" !== typeof e.object.image && e.object.image.length > 0 && !e.row.objectImageRemoved ? [e.app.printThis ? o("img", {
                    attrs: {
						src: e.object.image
					},
                    style: "" != e.object.image ? e.objectImage : ""
                }) : o("img", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy",
                        value: e.object.image,
                        expression: "object.image"
                    }],
                    style: "" != e.object.image ? e.objectImage : ""
                })] : e._e()], 1)], 2) : e._e()], 1) : e._e(), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        row: e.object
                    },
                    on: {
                        rowWasChanged: function(t) {
                            e.object = t
                        },
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), e.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.snackbar,
                        callback: function(t) {
                            e.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.text))])])], 1) : e._e(), o("ConfirmDlg", {
                    ref: "confirm"
                })], 1)
            },
            ps = [],
            us = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("span", [e.addon.showAddon || e.checkRequireds(e.addon) ? o("div", {
					style: e.addonBackground
				}, [4 == e.addon.template ? o("span", {
                    staticClass: "ma-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("span", ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()]), "" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", e._g({
                                style: e.objectImage,
                                attrs: {
                                    src: e.addon.image
                                }
                            }, i)) : o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i))] : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", {
                    style: e.objectImage,
                    attrs: {
                        src: e.addon.image
                    }
                }) : o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                })] : e._e()], 1) : 5 == e.addon.template ? o("span", {
                    staticClass: "ma-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, [o("span", ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), "" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? (e.app.printThis ? o("img", e._g({
                                style: e.objectImage,
                                attrs: {
                                    src: e.addon.image
                                }
                            }, i)) : o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i))) : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? (e.app.printThis ? o("img", {
                    style: e.objectImage,
                    attrs: {
                        src: e.addon.image
                    }
                }) : o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                })) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()])], 1) : 1 == e.addon.template || window.innerWidth < 1e3 || e.row.choicesShareTemplate ? o("span", {
                    staticClass: "ma-0",
                    staticStyle: {
                        width: "100%"
                    }
                }, ["" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", e._g({
                                style: e.objectImage,
                                attrs: {
                                    src: e.addon.image
                                }
                            }, i)) : o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i))] : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", {
                    style: e.objectImage,
                    attrs: {
                        src: e.addon.image
                    }
                }) : o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                })] : e._e(), o("span", ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()])], 1) : 2 == e.addon.template && window.innerWidth > 1e3 ? o("v-row", {
					staticClass: "ma-0 pa-0",
					staticStyle: {
						width: "100%"
					}
				}, [o("v-col", {
					staticClass: "pa-0 mb-0",
					staticStyle: {
						"maxWidth": e.objectImageStyling.objectImageBoxWidth + "%"
					}
				}, ["" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", e._g({
                                style: e.objectImage,
                                attrs: {
                                    src: e.addon.image
                                }
                            }, i)) : o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i))] : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", {
                    style: e.objectImage,
                    attrs: {
                        src: e.addon.image
                    }
                }) : o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                })] : e._e()], 1), o("v-col", {
					staticClass: "pa-1",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
				}, ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()], 1)], 2) : 3 == e.addon.template && window.innerWidth > 1e3 ? o("v-row", {
					staticClass: "ma-0 pa-0",
					staticStyle: {
						width: "100%"
					}
				}, [o("v-col", {
					staticClass: "pa-1",
					staticStyle: {
						"max-width": (100 - e.objectImageStyling.objectImageBoxWidth) + "%"
					}
				}, ["" !== e.addon.title && !e.row.addonTitleRemoved ? o("h4", {
                    style: e.addonTitle,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonTitle, e.sanitizeArg))
                    }
                }) : e._e(), !e.row.addonTextRemoved ? o("div", e._l(e.addon.requireds, (function(t) {
                    return o("div", {
                        key: t.index,
                        staticClass: "pa-0"
                    }, [t.showRequired ? [t.type == "gid" && "undefined" !== typeof e.app.compGR[t.reqId] ? e._l(e.app.globalRequirements[e.app.compGR[t.reqId].globalRequirements].requireds, (function(k) {
							return o("v-col", {
								key: k.index,
								staticClass: "pa-0"
							}, [k.showRequired ? o("v-col", {
							staticClass: "pa-0",
							style: e.scoreText,
							domProps: {
								innerHTML: e._s(e.$sanitize(e.getChoiceTitle(k), e.sanitizeArg))
							}
						}) : e._e()], 1)
					})) : o("v-col", {
                        staticClass: "pa-0",
                        style: e.scoreText,
                        domProps: {
                            innerHTML: e._s(e.$sanitize(e.getChoiceTitle(t), e.sanitizeArg))
                        }
                    })] : e._e()], 1)
                })), 1) : e._e(), !e.row.addonTextRemoved && e.addon.text ? o("p", {
                    staticStyle: {
                        "white-space": "pre-line"
                    },
                    style: e.addonText,
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.replaceAddonText, e.sanitizeArg))
                    }
                }) : e._e()], 1), o("v-col", {
					staticClass: "pa-0 mb-0",
					staticStyle: {
						"maxWidth": e.objectImageStyling.objectImageBoxWidth + "%"
					}
				}, ["" !== e.addon.imageSourceTooltip && "undefined" !== typeof e.addon.imageSourceTooltip ? o("v-tooltip", {
                    attrs: {
                        top: "",
                        "open-delay": "1500"
                    },
                    scopedSlots: e._u([{
                        key: "activator",
                        fn: function(t) {
                            var i = t.on;
                            return [e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", e._g({
                                style: e.objectImage,
                                attrs: {
                                    src: e.addon.image
                                }
                            }, i)) : o("img", e._g({
								directives: [{
                                    name: "lazy",
                                    rawName: "v-lazy",
                                    value: e.addon.image,
                                    expression: "addon.image"
                                }],
                                style: e.objectImage
                            }, i))] : e._e()]
                        }
                    }], null, !1, 4164976176)
                }, [o("span", [e._v(e._s(e.addon.imageSourceTooltip))])]) : e.addon.image.length > 0 && !e.row.addonImageRemoved ? [e.app.printThis ? o("img", {
                    style: e.objectImage,
                    attrs: {
                        src: e.addon.image
                    }
                }) : o("img", {
					directives: [{
						name: "lazy",
						rawName: "v-lazy",
						value: e.addon.image,
						expression: "addon.image"
					}],
                    style: e.objectImage
                })] : e._e()], 1)], 2) : e._e()]) : e._e()])
            },
            hs = [],
            gs = {
                props: {
                    addon: Object,
                    isEditModeOn: Boolean,
                    row: Object
                },
                data: function() {
                    return {
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        }
                    }
                },
                computed: {
                    objectImage: function() {
						if (this.addonImageStyling.useAddonImage) {
							var e = "width:" + this.addonImageStyling.addonImageWidth + "%;margin-top:" + this.addonImageStyling.addonImageMarginTop + "%;margin-bottom:" + this.addonImageStyling.addonImageMarginBottom + "%;";
							this.addonImageStyling.addonImgObjectFillIsOn && (e += "object-fit:" + this.addonImageStyling.addonImgObjectFillStyle + ";height:" + this.row.objectImgObjectFillHeight + "px;");
							var t = this.addonImageStyling.addonImgBorderRadiusIsPixels ? "px" : "%";
							return 1 == this.addon.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.addonImageStyling.addonImgBorderRadiusTopLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomLeft + 0 + t + ";" : 2 == this.addon.template ? e += "border-radius: " + this.addonImageStyling.addonImgBorderRadiusTopLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.addonImageStyling.addonImgBorderRadiusBottomLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopLeft + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusTopRight + 0 + t + " " + this.addonImageStyling.addonImgBorderRadiusBottomRight + 0 + t + "; ", this.addonImageStyling.addonImgOverflowIsOn && (e += "overflow:hidden;"), this.addonImageStyling.addonImgBorderIsOn && (e += "border: " + this.addonImageStyling.addonImgBorderWidth + "px " + this.addonImageStyling.addonImgBorderStyle + " " + this.addonImageStyling.addonImgBorderColor + ";"), e
						} else {
							var e = "width:" + this.objectImageStyling.objectImageWidth + "%;margin-top:" + this.objectImageStyling.objectImageMarginTop + "%;margin-bottom:" + this.objectImageStyling.objectImageMarginBottom + "%;";
							this.objectImageStyling.objectImgObjectFillIsOn && (e += "object-fit:" + this.objectImageStyling.objectImgObjectFillStyle + ";height:" + this.row.objectImgObjectFillHeight + "px;");
							var t = this.objectImageStyling.objectImgBorderRadiusIsPixels ? "px" : "%";
							return 1 == this.addon.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + ";" : 2 == this.addon.template ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + "; ", this.objectImageStyling.objectImgOverflowIsOn && (e += "overflow:hidden;"), this.objectImageStyling.objectImgBorderIsOn && (e += "border: " + this.objectImageStyling.objectImgBorderWidth + "px " + this.objectImageStyling.objectImgBorderStyle + " " + this.objectImageStyling.objectImgBorderColor + ";"), e
						}
                    },
                    activated: function() {
                        return this.$store.state.app.activated
                    },
                    app: function() {
                        return this.$store.state.app
                    },
                    object: function() {
						return this.$parent.object
					},
					addonStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateAddonIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateAddonIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id];
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateAddonIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateAddonIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling
					},
					addonImageStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateAddonImageIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateAddonImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateAddonImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateAddonImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					backgroundStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateBackgroundIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					objectStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id];
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling
					},
					objectImageStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectImageIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					textStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateTextIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateTextIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					filterStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateFilterIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateFilterIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
                    addonBackground: function() {
						var e = "",
							t = this.addonStyling.addonBorderRadiusIsPixels ? "px" : "%",
							o = this.checkRequireds(this.object);
						if (this.addonStyling.useAddonDesign) {
							e += (this.addonStyling.addonBorderImage ? 'border-image: url("' + this.addonStyling.addonBorderImage + '") ' + this.addonStyling.addonBorderImageSliceTop + ' ' + this.addonStyling.addonBorderImageSliceRight + ' ' + this.addonStyling.addonBorderImageSliceBottom + ' ' + this.addonStyling.addonBorderImageSliceLeft + ' / ' + this.addonStyling.addonBorderImageWidth + 'px ' + this.addonStyling.addonBorderImageRepeat + '; border-style: solid; padding: ' + this.addonStyling.addonBorderImageWidth + 'px; ' : "padding: 0px; ") + ((this.addonStyling.useAddonBackgroundImage && this.addonStyling.addonBackgroundImage && !(this.object.isActive && this.filterStyling.selBgColorIsOn && !this.filterStyling.selOverlayOnImage)) ? 'background-image: url("' + this.addonStyling.addonBackgroundImage + '");' + (this.addonStyling.isAddonBackgroundRepeat ? "background-repeat: repeat;" : (this.addonStyling.isAddonBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) : "") + (this.object.isActive ? (this.filterStyling.selBgColorIsOn ? "background-color: " + this.filterStyling.selFilterBgColor + "; " : "") : (!this.addonStyling.useAddonBackgroundImage && this.addonStyling.addonBgColorIsOn ? "background-color: " + this.addonStyling.addonBgColor + "; " : "")) + "margin:" + this.addonStyling.addonMargin + "px;";
							1 == this.addon.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.addonStyling.addonBorderRadiusTopLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusTopRight + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomRight + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomLeft + 0 + t + "; " : 2 == this.addon.template ? e += "border-radius: " + this.addonStyling.addonBorderRadiusTopLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomRight + 0 + t + " " + this.addonStyling.addonBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.addonStyling.addonBorderRadiusBottomLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusTopLeft + 0 + t + " " + this.addonStyling.addonBorderRadiusTopRight + 0 + t + " " + this.addonStyling.addonBorderRadiusBottomRight + 0 + t + "; ", this.addonStyling.addonOverflowIsOn && (e += "overflow:hidden;"), (this.addonStyling.addonBorderIsOn && ((this.object.isActive && this.filterStyling.selBorderColorIsOn) || (!o && this.filterStyling.reqBorderColorIsOn))) && (e += "border: " + this.addonStyling.addonBorderWidth + "px " + this.addonStyling.addonBorderStyle + " " + (!o && this.filterStyling.reqBorderColorIsOn ? this.filterStyling.reqFilterBorderColor : (this.object.isActive && this.filterStyling.selBorderColorIsOn ? this.filterStyling.selFilterBorderColor : this.addonStyling.addonBorderColor)) + ";"), e += "filter: ", this.addonStyling.addonDropShadowIsOn && (e += "drop-shadow(" + this.addonStyling.addonDropShadowH + "px " + this.addonStyling.addonDropShadowV + "px " + this.addonStyling.addonDropShadowBlur + "px " + this.addonStyling.addonDropShadowColor + ")");
							if (!this.object.isActive && o) e += this.filterStyling.unselFilterBlurIsOn ? "blur(" + this.filterStyling.unselFilterBlur + "px)" : "", e += this.filterStyling.unselFilterBrightIsOn ? "brightness(" + this.filterStyling.unselFilterBright + "%)" : "", e += this.filterStyling.unselFilterContIsOn ? "contrast(" + this.filterStyling.unselFilterCont + "%)" : "", e += this.filterStyling.unselFilterGrayIsOn ? "grayscale(" + this.filterStyling.unselFilterGray + "%)" : "", e += this.filterStyling.unselFilterHueIsOn ? "hue-rotate(" + this.filterStyling.unselFilterHue + "deg)" : "", e += this.filterStyling.unselFilterInvertIsOn ? "invert(" + this.filterStyling.unselFilterInvert + "%)" : "", e += this.filterStyling.unselFilterOpacIsOn ? "opacity(" + this.filterStyling.unselFilterOpac + "%)" : "", e += this.filterStyling.unselFilterSaturIsOn ? "saturate(" + this.filterStyling.unselFilterSatur + ")" : "", e += this.filterStyling.unselFilterSepiaIsOn ? "sepia(" + this.filterStyling.unselFilterSepia + "%)" : "", this.addonStyling.addonGradientIsOn && (e += ";background-image: linear-gradient(" + this.addonStyling.addonGradient + ")");
							else if (this.object.isActive && o) e += this.filterStyling.selFilterBlurIsOn ? "blur(" + this.filterStyling.selFilterBlur + "px)" : "", e += this.filterStyling.selFilterBrightIsOn ? "brightness(" + this.filterStyling.selFilterBright + "%)" : "", e += this.filterStyling.selFilterContIsOn ? "contrast(" + this.filterStyling.selFilterCont + "%)" : "", e += this.filterStyling.selFilterGrayIsOn ? "grayscale(" + this.filterStyling.selFilterGray + "%)" : "", e += this.filterStyling.selFilterHueIsOn ? "hue-rotate(" + this.filterStyling.selFilterHue + "deg)" : "", e += this.filterStyling.selFilterInvertIsOn ? "invert(" + this.filterStyling.selFilterInvert + "%)" : "", e += this.filterStyling.selFilterOpacIsOn ? "opacity(" + this.filterStyling.selFilterOpac + "%)" : "", e += this.filterStyling.selFilterSaturIsOn ? "saturate(" + this.filterStyling.selFilterSatur + ")" : "", e += this.filterStyling.selFilterSepiaIsOn ? "sepia(" + this.filterStyling.selFilterSepia + "%)" : "", this.addonStyling.addonGradientIsOn && (e += ";background-image: linear-gradient(" + this.addonStyling.addonGradientOnSelect + ")");
						}
						if (this.addon.showAddon) {
							if (!this.checkRequireds(this.addon) && o) {
								if (e === "") e = "filter: ";
								e += this.filterStyling.reqFilterBlurIsOn ? "blur(" + this.filterStyling.reqFilterBlur + "px)" : "", e += this.filterStyling.reqFilterBrightIsOn ? "brightness(" + this.filterStyling.reqFilterBright + "%)" : "", e += this.filterStyling.reqFilterContIsOn ? "contrast(" + this.filterStyling.reqFilterCont + "%)" : "", e += this.filterStyling.reqFilterGrayIsOn ? "grayscale(" + this.filterStyling.reqFilterGray + "%)" : "", e += this.filterStyling.reqFilterHueIsOn ? "hue-rotate(" + this.filterStyling.reqFilterHue + "deg)" : "", e += this.filterStyling.reqFilterInvertIsOn ? "invert(" + this.filterStyling.reqFilterInvert + "%)" : "", e += this.filterStyling.reqFilterOpacIsOn ? "opacity(" + this.filterStyling.reqFilterOpac + "%)" : "", e += this.filterStyling.reqFilterSaturIsOn ? "saturate(" + this.filterStyling.reqFilterSatur + ")" : "", e += this.filterStyling.reqFilterSepiaIsOn ? "sepia(" + this.filterStyling.reqFilterSepia + "%)" : "", e += (this.filterStyling.reqBgColorIsOn ? ";background-color: " + this.filterStyling.reqFilterBgColor : ""), this.addonStyling.addonGradientIsOn && (e += ";background-image: linear-gradient(" + this.addonStyling.addonGradientOnReq + ")");
								e += (this.addonStyling.useAddonDesign && this.addonStyling.addonBgColorIsOn ? "; background-color: " + this.addonStyling.addonBgColor : (this.backgroundStyling.objectBgColorIsOn ? "; background-color: " + this.backgroundStyling.objectBgColor : ""));
							}
						}
						return e += ";", e
					},
                    addonTitle: function() {
						var e = this.checkRequireds(this.object);
                        if (this.addonStyling.useAddonDesign) {
							return 'font-family: "' + this.textStyling.addonTitle + '";font-size: ' + this.textStyling.addonTitleTextSize + "%;text-align: " + this.textStyling.addonTitleAlign + ";color: " + (!e && this.filterStyling.reqATitleColorIsOn ? this.filterStyling.reqFilterATitleColor : (this.object.isActive && this.filterStyling.selATitleColorIsOn ? this.filterStyling.selFilterATitleColor : this.textStyling.addonTitleColor)) + ";" + (this.addonStyling.addonTitlePaddingIsOn ? ("padding: " + this.addonStyling.objectTextPadding + "px;") : "")
						} else {
							return 'font-family: "' + this.textStyling.addonTitle + '";font-size: ' + this.textStyling.addonTitleTextSize + "%;text-align: " + this.textStyling.addonTitleAlign + ";color: " + (!e && this.filterStyling.reqATitleColorIsOn ? this.filterStyling.reqFilterATitleColor : (this.object.isActive && this.filterStyling.selATitleColorIsOn ? this.filterStyling.selFilterATitleColor : this.textStyling.addonTitleColor)) + ";" + (this.objectStyling.titlePaddingIsOn ? ("padding: " + this.objectStyling.objectTextPadding + "px;") : "")
						}
                    },
                    addonText: function() {
						var e = this.checkRequireds(this.object);
						if (this.addonStyling.useAddonDesign) {
							return 'font-family: "' + this.textStyling.addonText + '";font-size: ' + this.textStyling.addonTextTextSize + "%;text-align: " + this.textStyling.addonTextAlign + ";color: " + (!e && this.filterStyling.reqATextColorIsOn ? this.filterStyling.reqFilterATextColor : (this.object.isActive && this.filterStyling.selATextColorIsOn ? this.filterStyling.selFilterATextColor : this.textStyling.addonTextColor)) + ";padding: " + this.addonStyling.addonTextPadding + "px;" + (this.addonStyling.addonRemoveSpaceAddonIsOn ? "margin-bottom: 0px;padding-top: 0px;padding-bottom: 0px;" : "")
						} else {
							return 'font-family: "' + this.textStyling.addonText + '";font-size: ' + this.textStyling.addonTextTextSize + "%;text-align: " + this.textStyling.addonTextAlign + ";color: " + (!e && this.filterStyling.reqATextColorIsOn ? this.filterStyling.reqFilterATextColor : (this.object.isActive && this.filterStyling.selATextColorIsOn ? this.filterStyling.selFilterATextColor : this.textStyling.addonTextColor)) + ";padding: " + this.objectStyling.objectTextPadding + "px;" + (this.objectStyling.removeSpaceAddonIsOn ? "margin-bottom: 0px;padding-top: 0px;padding-bottom: 0px;" : "")
						}
                    },
                    styling: function() {
                        return this.row.isPrivateStyling ? this.row.styling : this.$store.state.app.styling
                    },
                    replaceAddonTitle: function() {
                        var e = this.addon.title;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    replaceAddonText: function() {
                        var e = this.addon.text;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
					scoreText: function() {
                        return 'font-family: "' + this.textStyling.scoreText + '";font-size: ' + this.textStyling.scoreTextSize + "%;text-align: " + this.textStyling.scoreTextAlign + ";color: " + this.textStyling.scoreTextColor + ";"
                    }
                },
                methods: {
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
					getChoiceTitle: function(e) {
                        var t, o, g = !0;
						if (e.hideRequired) {
							g = !this.checkRequireds(this.addon);
						}
                        if (e.showRequired && g)
							if (e.customTextIsOn) {
								return "undefined" !== typeof e.customText ? e.customText : ""
							} else {
								if ("id" == e.type) {
									var rId = e.reqId.split("/ON#");
									if ("undefined" !== typeof this.app.comp[rId[0]]) {
										var	co = this.app.comp[rId[0]],
											coR = this.app.rows[co.rows],
											coO = coR.objects[co.objects];
										return e.beforeText + " " + (rId.length > 1 ? rId[1] + " " : "") + coO.title + " " + e.afterText
									}
								} else if ("points" == e.type) {
									for (t = 0; t < this.app.pointTypes.length; t++)
										if (e.reqId == this.app.pointTypes[t].id) return e.beforeText + " " + e.reqPoints + " " + this.app.pointTypes[t].name + " " + e.afterText
								} else if ("or" == e.type) {
									var i = [];
									for (var s = 0; s < e.orRequired.length; s++) {
										var rId = e.orRequired[s].req.split("/ON#");
										if ("undefined" !== typeof this.app.comp[rId[0]]) {
											var	co = this.app.comp[rId[0]],
												coR = this.app.rows[co.rows],
												coO = coR.objects[co.objects];
											o = rId.length > 1 ? rId[1] + " " : "";
											i.push((o + coO.title));
										}
									}
									if (this.app.orderOrReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + ("undefined" !== typeof e.orNum ? this.app.defaultOrReq + " " + e.orNum : this.app.defaultOrReq + " 1") + " " + e.afterText
									} else {
										return e.beforeText + " " + ("undefined" !== typeof e.orNum ? e.orNum + " " + this.app.defaultOrReq : "1 " + this.app.defaultOrReq) + " "  + i.join(", ") + " "+ e.afterText
									}
								} else if ("selFromGroups" == e.type && "undefined" !== typeof e.selGroups) {
									var i = [];
									for (var s = 0; s < e.selGroups.length; s++) {
										if ("undefined" !== typeof this.app.compG[e.selGroups[s]]) {
											var co = this.app.compG[e.selGroups[s]],
												coG = this.app.groups[co.groups];
											i.push(coG.name);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromRows" == e.type && "undefined" !== typeof e.selRows) {
									var i = [];
									for (var s = 0; s < e.selRows.length; s++) {
										if ("undefined" !== typeof this.app.compR[e.selRows[s]]) {
											var co = this.app.compR[e.selRows[s]],
												coR = this.app.rows[co.rows];
											i.push(coR.title);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromWhole" == e.type) {
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + e.afterText
									}
								}
							}
                        return ""
                    },
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    }
                }
            },
            bs = gs,
            vs = (o("5e0a"), Object(w["a"])(bs, us, hs, !1, null, "79c0930d", null)),
            ms = vs.exports;
        x()(vs, {
			VCol: I["a"],
            VTooltip: Q["a"],
            VRow: S["a"]
        });
        var fs = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-col", {
                    staticClass: "pa-0"
                }, [e.pointType.iconIsOn && !e.pointType.imageSidePlacement && e.score.showScore && e.isPointtypeActivated ? o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    staticClass: "pa-0 ma-0",
                    style: e.scoreText
                }, [o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:3px;padding-right:3px" : "padding-left:1px;padding-right:2px"
                }, [e.pointType.iconIsOn && !e.pointType.imageOnSide ? o("img", {
                    style: "float: left; width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()]), o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.beforeText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountBeforeText : "") + " ", e.sanitizeArg))
                    }
                })]), o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:3px;padding-right:3px" : "padding-left:1px;padding-right:2px"
                }, [e.pointType.iconIsOn && e.pointType.imageOnSide ? o("img", {
                    style: "width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()]), o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize((e.score.hideValue ? "" : (e.score.isRandom && !e.score.setValue ? (e.score.maxValue < 0 ? (e.scoreMaxValue + " ~ " + e.scoreMinValue) : (e.scoreMinValue + " ~ " + e.scoreMaxValue)) : e.scoreValue)) + " " + e.score.afterText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountAfterText : ""), e.sanitizeArg))
                    }
                })])])], 1) : e.pointType.iconIsOn && e.pointType.imageSidePlacement && e.score.showScore && e.isPointtypeActivated ? o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    staticClass: "pa-0 ma-0",
                    style: e.scoreText
                }, [o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.beforeText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountBeforeText : "") + " " + (e.score.hideValue ? "" : (e.score.isRandom && !e.score.setValue ? (e.score.maxValue < 0 ? (e.scoreMaxValue + " ~ " + e.scoreMinValue) : (e.scoreMinValue + " ~ " + e.scoreMaxValue)) : e.scoreValue)) + " ", e.sanitizeArg))
                    }
                })]), o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:1px;padding-right:2px" : "padding-left:3px;padding-right:3px"
                }, [e.pointType.iconIsOn && !e.pointType.imageOnSide ? o("img", {
                    style: "width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()]), o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.afterText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountAfterText : "") + " ", e.sanitizeArg))
                    }
                })]), o("div", {
                    style: e.pointType.imageOnSide ? "padding-left:3px;padding-right:3px" : "padding-left:1px;padding-right:2px"
                }, [e.pointType.iconIsOn && e.pointType.imageOnSide ? o("img", {
                    style: "width:" + e.pointType.iconWidth + "px;height:" + e.pointType.iconHeight + "px;",
                    attrs: {
                        src: e.pointType.image
                    }
                }) : e._e()])])], 1) : e.score.showScore && !e.pointType.iconIsOn && e.isPointtypeActivated ? o("v-row", {
					staticClass: "ma-0"
				}, [o("v-col", {
                    staticClass: "pa-0 ma-0",
                    style: e.scoreText
                }, [o("div", [o("p", {
                    staticClass: "pa-0 ma-0",
                    domProps: {
                        innerHTML: e._s(e.$sanitize(e.score.beforeText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountBeforeText : "") + " " + (e.score.hideValue ? "" : (e.score.isRandom && !e.score.setValue ? (e.score.maxValue < 0 ? (e.scoreMaxValue + " ~ " + e.scoreMinValue) : (e.scoreMinValue + " ~ " + e.scoreMaxValue)) : e.scoreValue)) + " " + e.score.afterText + (e.score.discountIsOn && e.score.discountShow ? e.score.discountAfterText : "") + " ", e.sanitizeArg))
                    }
                })])])], 1) : e._e()], 1)
            },
            ws = [],
            ys = {
                props: {
                    score: Object,
                    isEditModeOn: Boolean
                },
                data: function() {
                    return {
                        currentComponent: "",
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }],
                        pointType: {
                            id: "text",
                            name: "Points",
                            startingSum: 0,
                            initValue: 0,
                            activatedId: "",
                            afterText: ""
                        },
                        posOrNeg: null,
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        }
                    }
                },
                created: function() {
                    for (var e = 0; e < this.pointTypes.length; e++) this.pointTypes[e].id == this.score.id && (this.pointType = this.pointTypes[e]);
                    this.posOrNeg = this.score.value < 0
                },
                computed: {
					checkPosOrNeg: function() {
						var e = this.score.discountShow ? this.score.discountScore : this.score.value;
						return e < 0
					},
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    scoreText: function() {
                        var e = 'font-family: "' + this.styling.scoreText + '";font-size: ' + this.styling.scoreTextSize + "%;text-align: " + this.styling.scoreTextAlign + ";display: flex; align-items: center; justify-content:center;";
                        return "undefined" !== typeof this.pointType && (this.pointType.pointColorsIsOn ? this.checkPosOrNeg ? e += "color: " + this.pointType.positiveColor.hex + ";" : e += "color: " + this.pointType.negativeColor.hex + ";" : e += "color: " + this.styling.scoreTextColor + ";"), e
                    },
                    scoreValue: function() {
						var s = this.score.discountShow ? this.score.discountScore : this.score.value;
                        var e = this.checkPosOrNeg ? -1 * s : s;
                        return this.pointType.plussOrMinusAdded && (e = this.checkPosOrNeg && !this.pointType.plussOrMinusInverted || this.pointType.plussOrMinusInverted && !this.checkPosOrNeg ? "+" + e : "-" + e), e
                    },
					scoreMinValue: function() {
						var minPosOrNeg = this.score.minValue < 0,
							e = minPosOrNeg ? -1 * this.score.minValue : this.score.minValue;
						return this.pointType.plussOrMinusAdded && (e = minPosOrNeg && !this.pointType.plussOrMinusInverted || this.pointType.plussOrMinusInverted && !minPosOrNeg ? "+" + e : "-" + e), e
					},
					scoreMaxValue: function() {
						var maxPosOrNeg = this.score.maxValue < 0,
							e = maxPosOrNeg ? -1 * this.score.maxValue : this.score.maxValue;
						return this.pointType.plussOrMinusAdded && (e = maxPosOrNeg && !this.pointType.plussOrMinusInverted || this.pointType.plussOrMinusInverted && !maxPosOrNeg ? "+" + e : "-" + e), e
					},
                    activated: function() {
                        return this.$store.state.app.activated
                    },
                    isPointtypeActivated: function() {
                        for (var e = 0; e < this.pointTypes.length; e++)
                            if (this.pointTypes[e].id == this.score.id) {
								if ("" != this.pointTypes[e].activatedId) {
									if ("undefined" !== typeof this.app.compGR[this.pointTypes[e].activatedId]) {
										var co = this.app.compGR[this.pointTypes[e].activatedId],
											cGR = this.app.globalRequirements[co.globalRequirements];
										return this.checkRequireds(cGR);
									} else {
										return (this.activated.includes(this.pointTypes[e].activatedId) || !this.pointTypes[e].isNotShownObjects);
									}
								} else {
									return !this.pointTypes[e].isNotShownObjects;
								}
							}
                        return !0
                    },
					app: function() {
                        return this.$store.state.app
                    }
                },
                methods: {
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
                    updateObject: function() {
                        this.$emit("scoreWasChanged", this.score)
                    },
                    changedOption: function(e) {
                        this.score.name = e.target.options[e.target.options.selectedIndex].text
                    },
					checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    }
                }
            },
            xs = ys,
            Cs = Object(w["a"])(xs, fs, ws, !1, null, null, null),
            Ts = Cs.exports;
        x()(Cs, {
            VCol: I["a"],
            VRow: S["a"]
        });
        var js = {
                props: {
                    object: Object,
                    objects: Array,
                    isEditModeOn: Boolean,
                    activated: Array,
                    row: Object
                },
                data: function() {
                    return {
                        window: {
                            width: 0,
                            height: 0
                        },
                        on: !0,
                        selectedThisManyTimesProp: 0,
                        multipleUseVariable: 0,
                        snackbar: !1,
                        text: "",
                        templates: [{
                            text: "Image top",
                            value: 1
                        }, {
                            text: "Image left",
                            value: 2
                        }, {
                            text: "Image right",
                            value: 3
                        }, {
							text: "Image bottom",
							value: 4
						}, {
							text: "Image center",
							value: 5
						}],
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }],
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        },
                        currentComponent: "",
						scoreUpdate: "",
						exceptedObjects: [],
						exceptedScores: [],
						linkedObjects: []
                    }
                },
                components: {
                    ObjectAddon: ms,
                    ObjectScore: Ts,
                    AppImageUpload: G,
                    PictureInput: $["a"],
					ConfirmDlg: function() {
                        return o.e("chunk-2d0e6102").then(o.bind(null, "96c2"))
                    }
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    },
					activated: function() {
						return this.$store.state.app.activated
					},
					objectStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling
					},
					objectImageStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateObjectImageIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateObjectImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateObjectImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					filterStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateFilterIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateFilterIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					backgroundStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateBackgroundIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					textStyling: function() {
						if (this.object.isPrivateStyling && this.object.privateTextIsOn) return this.object.styling;
						if (this.row.isPrivateStyling && this.row.privateTextIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					rowStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateRowIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateRowIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					rowBodyBgColor: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn && this.row.styling.bgColorIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn && coD.styling.bgColorIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return !1;
					},
					rowBodyBgImage: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn && this.row.styling.backgroundImage) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn && coD.styling.backgroundImage) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return !1;
					},
					multiChoiceStyling: function() {
						if (this.object.privateMultiChoiceIsOn) return this.object.styling;
						if (this.row.privateMultiChoiceIsOn) return this.row.styling;
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var a = 0; a < this.object.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[a].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateMultiChoiceIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateMultiChoiceIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
                    objectWidths: function() {
                        return this.$store.state.objectWidths
                    },
                    objectTitle: function() {
						var e = this.checkRequireds(this.object);
                        return 'font-family: "' + this.textStyling.objectTitle + '";font-size: ' + this.textStyling.objectTitleTextSize + "%;text-align: " + this.textStyling.objectTitleAlign + ";color: " + (!e && this.filterStyling.reqCTitleColorIsOn ? this.filterStyling.reqFilterCTitleColor : (this.object.isActive && this.filterStyling.selCTitleColorIsOn ? this.filterStyling.selFilterCTitleColor : this.textStyling.objectTitleColor)) + ";" + (this.objectStyling.titlePaddingIsOn ? ("padding: " + this.objectStyling.objectTextPadding + "px;") : "")
                    },
                    multiChoiceText: function() {
                        return 'font-family: "' + this.multiChoiceStyling.multiChoiceTextFont + '";color: ' + this.textStyling.scoreTextColor + ";font-size: " + this.multiChoiceStyling.multiChoiceTextSize + "%;align-content: center;"
                    },
                    multiChoiceButton: function() {
                        return "color: " + this.textStyling.scoreTextColor + ";"
                    },
					multiChoiceCounter: function() {
						if (this.object.hideMultipleCounter) {
							return this.checkRequireds(this.object)
						}
						return !0
					},
                    objectText: function() {
						var e = this.checkRequireds(this.object);
                        return 'font-family: "' + this.textStyling.objectText + '";text-align: ' + this.textStyling.objectTextAlign + ";font-size: " + this.textStyling.objectTextTextSize + "%;color: " + (!e && this.filterStyling.reqCTextColorIsOn ? this.filterStyling.reqFilterCTextColor : (this.object.isActive && this.filterStyling.selCTextColorIsOn ? this.filterStyling.selFilterCTextColor : this.textStyling.objectTextColor)) + ";padding: " + this.objectStyling.objectTextPadding + "px;"
                    },
                    rowBody: function() {
                        var e = "margin-top: 0px;margin-bottom: 0px;";
						if (this.rowBodyBgImage !== !1) e += 'background-image: url("' + this.rowBodyBgImage.backgroundImage + '")' + (this.rowBodyBgImage.isBackgroundRepeat ? ";background-repeat: repeat;" : (this.rowBodyBgImage.isBackgroundFitIn ? ";background-size: 100% 100%;" : ";background-size: cover;"));
						if (this.rowBodyBgColor !== !1) e += "background-color: " + this.rowBodyBgColor.backgroundColor + ";";
                        return this.row.isEditModeOn ? e += "margin-left: 1%;margin-right: 1%;" : e += "margin-left: " + this.rowStyling.rowBodyMarginSides + "%;margin-right: " + this.rowStyling.rowBodyMarginSides + "%;", e
                    },
                    findRowTitle: function() {
                        var e = "";
						if ("undefined" !== typeof this.app.comp[this.object.id]) {
							var co = this.app.comp[this.object.id],
								coR = this.app.rows[co.rows];
							return coR.title;
						}
                        return e
                    },
                    objectBackground: function() {
                        var e = (this.objectStyling.objectBorderImage ? 'border-image: url("' + this.objectStyling.objectBorderImage + '") ' + this.objectStyling.objectBorderImageSliceTop + ' ' + this.objectStyling.objectBorderImageSliceRight + ' ' + this.objectStyling.objectBorderImageSliceBottom + ' ' + this.objectStyling.objectBorderImageSliceLeft + ' / ' + this.objectStyling.objectBorderImageWidth + 'px ' + this.objectStyling.objectBorderImageRepeat + '; border-style: solid; padding: ' + this.objectStyling.objectBorderImageWidth + 'px; ' : "padding: 0px; ") + ((this.backgroundStyling.objectBackgroundImage && !(this.object.isActive && this.filterStyling.selBgColorIsOn && !this.filterStyling.selOverlayOnImage)) ? 'background-image: url("' + this.backgroundStyling.objectBackgroundImage + '");' + (this.backgroundStyling.isObjectBackgroundRepeat ? "background-repeat: repeat;" : (this.backgroundStyling.isObjectBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) : "") + (this.object.isActive ? (this.filterStyling.selBgColorIsOn ? "background-color: " + this.filterStyling.selFilterBgColor + "; " : "") : (this.backgroundStyling.objectBgColorIsOn ? "background-color: " + this.backgroundStyling.objectBgColor + "; " : "")) + "margin:" + this.objectStyling.objectMargin + "px;",
							t = this.objectStyling.objectBorderRadiusIsPixels ? "px" : "%",
							o = this.checkRequireds(this.object);
						1 == this.object.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.objectStyling.objectBorderRadiusTopLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusTopRight + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomRight + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomLeft + 0 + t + "; " : 2 == this.object.template ? e += "border-radius: " + this.objectStyling.objectBorderRadiusTopLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomRight + 0 + t + " " + this.objectStyling.objectBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.objectStyling.objectBorderRadiusBottomLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusTopLeft + 0 + t + " " + this.objectStyling.objectBorderRadiusTopRight + 0 + t + " " + this.objectStyling.objectBorderRadiusBottomRight + 0 + t + "; ", this.objectStyling.objectOverflowIsOn && (e += "overflow:hidden;"), (this.objectStyling.objectBorderIsOn || (this.object.isActive && this.filterStyling.selBorderColorIsOn) || (!o && this.filterStyling.reqBorderColorIsOn)) && (e += "border: " + this.objectStyling.objectBorderWidth + "px " + this.objectStyling.objectBorderStyle + " " + (!o && this.filterStyling.reqBorderColorIsOn ? this.filterStyling.reqFilterBorderColor : (this.object.isActive && this.filterStyling.selBorderColorIsOn ? this.filterStyling.selFilterBorderColor : this.objectStyling.objectBorderColor)) + ";"), e += "filter: ", this.objectStyling.objectDropShadowIsOn && (e += "drop-shadow(" + this.objectStyling.objectDropShadowH + "px " + this.objectStyling.objectDropShadowV + "px " + this.objectStyling.objectDropShadowBlur + "px " + this.objectStyling.objectDropShadowColor + ")");
						if (!this.object.isActive && o) e += this.filterStyling.unselFilterBlurIsOn ? "blur(" + this.filterStyling.unselFilterBlur + "px)" : "", e += this.filterStyling.unselFilterBrightIsOn ? "brightness(" + this.filterStyling.unselFilterBright + "%)" : "", e += this.filterStyling.unselFilterContIsOn ? "contrast(" + this.filterStyling.unselFilterCont + "%)" : "", e += this.filterStyling.unselFilterGrayIsOn ? "grayscale(" + this.filterStyling.unselFilterGray + "%)" : "", e += this.filterStyling.unselFilterHueIsOn ? "hue-rotate(" + this.filterStyling.unselFilterHue + "deg)" : "", e += this.filterStyling.unselFilterInvertIsOn ? "invert(" + this.filterStyling.unselFilterInvert + "%)" : "", e += this.filterStyling.unselFilterOpacIsOn ? "opacity(" + this.filterStyling.unselFilterOpac + "%)" : "", e += this.filterStyling.unselFilterSaturIsOn ? "saturate(" + this.filterStyling.unselFilterSatur + ")" : "", e += this.filterStyling.unselFilterSepiaIsOn ? "sepia(" + this.filterStyling.unselFilterSepia + "%)" : "", this.objectStyling.objectGradientIsOn && (e += ";background-image: linear-gradient(" + this.objectStyling.objectGradient + ")");
						else if (this.object.isActive && o) e += this.filterStyling.selFilterBlurIsOn ? "blur(" + this.filterStyling.selFilterBlur + "px)" : "", e += this.filterStyling.selFilterBrightIsOn ? "brightness(" + this.filterStyling.selFilterBright + "%)" : "", e += this.filterStyling.selFilterContIsOn ? "contrast(" + this.filterStyling.selFilterCont + "%)" : "", e += this.filterStyling.selFilterGrayIsOn ? "grayscale(" + this.filterStyling.selFilterGray + "%)" : "", e += this.filterStyling.selFilterHueIsOn ? "hue-rotate(" + this.filterStyling.selFilterHue + "deg)" : "", e += this.filterStyling.selFilterInvertIsOn ? "invert(" + this.filterStyling.selFilterInvert + "%)" : "", e += this.filterStyling.selFilterOpacIsOn ? "opacity(" + this.filterStyling.selFilterOpac + "%)" : "", e += this.filterStyling.selFilterSaturIsOn ? "saturate(" + this.filterStyling.selFilterSatur + ")" : "", e += this.filterStyling.selFilterSepiaIsOn ? "sepia(" + this.filterStyling.selFilterSepia + "%)" : "", this.objectStyling.objectGradientIsOn && (e += ";background-image: linear-gradient(" + this.objectStyling.objectGradientOnSelect + ")");
						else if (!o) {
							var rm = 'background-image: url("' + this.backgroundStyling.objectBackgroundImage + '");' + (this.backgroundStyling.isObjectBackgroundRepeat ? "background-repeat: repeat;" : (this.backgroundStyling.isObjectBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) + (this.object.isActive ? (this.filterStyling.selBgColorIsOn ? "background-color: " + this.filterStyling.selFilterBgColor + "; " : "") : (this.backgroundStyling.objectBgColorIsOn ? "background-color: " + this.backgroundStyling.objectBgColor + "; " : ""));
							if (this.backgroundStyling.objectBackgroundImage && this.filterStyling.reqBgColorIsOn && !this.filterStyling.reqOverlayOnImage) e = e.replace(rm, "");
							e += this.filterStyling.reqFilterBlurIsOn ? "blur(" + this.filterStyling.reqFilterBlur + "px)" : "", e += this.filterStyling.reqFilterBrightIsOn ? "brightness(" + this.filterStyling.reqFilterBright + "%)" : "", e += this.filterStyling.reqFilterContIsOn ? "contrast(" + this.filterStyling.reqFilterCont + "%)" : "", e += this.filterStyling.reqFilterGrayIsOn ? "grayscale(" + this.filterStyling.reqFilterGray + "%)" : "", e += this.filterStyling.reqFilterHueIsOn ? "hue-rotate(" + this.filterStyling.reqFilterHue + "deg)" : "", e += this.filterStyling.reqFilterInvertIsOn ? "invert(" + this.filterStyling.reqFilterInvert + "%)" : "", e += this.filterStyling.reqFilterOpacIsOn ? "opacity(" + this.filterStyling.reqFilterOpac + "%)" : "", e += this.filterStyling.reqFilterSaturIsOn ? "saturate(" + this.filterStyling.reqFilterSatur + ")" : "", e += this.filterStyling.reqFilterSepiaIsOn ? "sepia(" + this.filterStyling.reqFilterSepia + "%)" : "", e += (this.filterStyling.reqBgColorIsOn ? ";background-color: " + this.filterStyling.reqFilterBgColor : ""), this.objectStyling.objectGradientIsOn && (e += ";background-image: linear-gradient(" + this.objectStyling.objectGradientOnReq + ")");
						}
						e += (o && this.app.isPointerCursor && !this.object.isNotSelectable && !this.object.isSelectableMultiple ? ";cursor: pointer;" : ";");
						return e
                    },
                    objectImage: function() {
                        var e = "width:" + this.objectImageStyling.objectImageWidth + "%;margin-top:" + this.objectImageStyling.objectImageMarginTop + "%;margin-bottom:" + this.objectImageStyling.objectImageMarginBottom + "%;";
                        this.objectImageStyling.objectImgObjectFillIsOn && (e += "object-fit:" + this.objectImageStyling.objectImgObjectFillStyle + ";height:" + this.row.objectImgObjectFillHeight + "px;");
                        var t = this.objectImageStyling.objectImgBorderRadiusIsPixels ? "px" : "%";
                        return 1 == this.object.template || this.row.choicesShareTemplate ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + ";" : 2 == this.object.template ? e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + "; " : e += "border-radius: " + this.objectImageStyling.objectImgBorderRadiusBottomLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopLeft + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusTopRight + 0 + t + " " + this.objectImageStyling.objectImgBorderRadiusBottomRight + 0 + t + "; ", this.objectImageStyling.objectImgOverflowIsOn && (e += "overflow:hidden;"), this.objectImageStyling.objectImgBorderIsOn && (e += "border: " + this.objectImageStyling.objectImgBorderWidth + "px " + this.objectImageStyling.objectImgBorderStyle + " " + this.objectImageStyling.objectImgBorderColor + ";"), e
                    },
                    scoreText: function() {
                        return 'font-family: "' + this.textStyling.scoreText + '";font-size: ' + this.textStyling.scoreTextSize + "%;text-align: " + this.textStyling.scoreTextAlign + ";color: " + this.textStyling.scoreTextColor + ";"
                    },
                    app: function() {
                        return this.$store.state.app
                    },
                    replaceObjectText: function() {
                        var e = this.object.text;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    replaceObjectTitleText: function() {
                        var e = this.object.title;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    }
                },
                created: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize(), "undefined" !== typeof this.object.multipleUseVariable && (this.$set(this.object, "selectedThisManyTimesProp", this.object.multipleUseVariable), this.multipleUseVariable = this.object.multipleUseVariable)
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
                    handleResize: function() {
                        this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    multiplyOrDivide: function(e) {
                        var t;
                        if (e.multiplyPointtypeIsOnCheck)
                            for (e.multiplyPointtypeIsOnCheck = !1, t = 0; t < this.app.pointTypes.length; t++) this.app.pointTypes[t].id == e.pointTypeToMultiply && (this.app.pointTypes[t].startingSum -= e.startingSumAtMultiply, console.log("Multiply:" + e.startingSumAtMultiply));
                        if (e.dividePointtypeIsOnCheck)
                            for (e.dividePointtypeIsOnCheck = !1, t = 0; t < this.app.pointTypes.length; t++) this.app.pointTypes[t].id == e.pointTypeToDivide && (this.app.pointTypes[t].startingSum *= e.divideWithThis, console.log("Multiply:"))
                    },
                    setFalse: function(e) {
                        e.isNotSelectable = !1
                    },
                    getChoiceTitle: function(e) {
                        var t, o, g = !0;
						if (e.hideRequired) {
							g = !this.checkRequireds(this.object);
						}
                        if (e.showRequired && g)
							if (e.customTextIsOn) {
								return "undefined" !== typeof e.customText ? e.customText : ""
							} else {
								if ("id" == e.type) {
									var rId = e.reqId.split("/ON#");
									if ("undefined" !== typeof this.app.comp[rId[0]]) {
										var	co = this.app.comp[rId[0]],
											coR = this.app.rows[co.rows],
											coO = coR.objects[co.objects];
										return e.beforeText + " " + (rId.length > 1 ? rId[1] + " " : "") + coO.title + " " + e.afterText
									}
								} else if ("points" == e.type) {
									for (t = 0; t < this.app.pointTypes.length; t++)
										if (e.reqId == this.app.pointTypes[t].id) return e.beforeText + " " + e.reqPoints + " " + this.app.pointTypes[t].name + " " + e.afterText
								} else if ("or" == e.type) {
									var i = [];
									for (var s = 0; s < e.orRequired.length; s++) {
										var rId = e.orRequired[s].req.split("/ON#");
										if ("undefined" !== typeof this.app.comp[rId[0]]) {
											var	co = this.app.comp[rId[0]],
												coR = this.app.rows[co.rows],
												coO = coR.objects[co.objects];
											o = rId.length > 1 ? rId[1] + " " : "";
											i.push((o + coO.title));
										}
									}
									if (this.app.orderOrReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + ("undefined" !== typeof e.orNum ? this.app.defaultOrReq + " " + e.orNum : this.app.defaultOrReq + " 1") + " " + e.afterText
									} else {
										return e.beforeText + " " + ("undefined" !== typeof e.orNum ? e.orNum + " " + this.app.defaultOrReq : "1 " + this.app.defaultOrReq) + " "  + i.join(", ") + " "+ e.afterText
									}
								} else if ("selFromGroups" == e.type && "undefined" !== typeof e.selGroups) {
									var i = [];
									for (var s = 0; s < e.selGroups.length; s++) {
										if ("undefined" !== typeof this.app.compG[e.selGroups[s]]) {
											var co = this.app.compG[e.selGroups[s]],
												coG = this.app.groups[co.groups];
											i.push(coG.name);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromRows" == e.type && "undefined" !== typeof e.selRows) {
									var i = [];
									for (var s = 0; s < e.selRows.length; s++) {
										if ("undefined" !== typeof this.app.compR[e.selRows[s]]) {
											var co = this.app.compR[e.selRows[s]],
												coR = this.app.rows[co.rows];
											i.push(coR.title);
										}
									}
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + i.join(", ") + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + i.join(", ") + " " + e.afterText
									}
									return e.beforeText + " " + e.selNum + (e.selNum > 1 ? " choices " : " choice ") + " from " + i.join(", ") + " " + e.afterText
								} else if ("selFromWhole" == e.type) {
									if (this.app.orderSelReqText == "1") {
										return e.beforeText + " " + this.app.defaultSelReq + " " + e.selNum + " " + e.afterText
									} else {
										return e.beforeText + " " + e.selNum + " " + this.app.defaultSelReq + " " + e.afterText
									}
								}
							}
                        return ""
                    },
                    createNewAddon: function() {
                        this.object.addons.push({
                            id: "",
                            title: this.app.defaultAddonTitle,
                            text: this.app.defaultAddonText,
                            template: 1,
                            image: "",
                            requireds: [],
							parentId: this.object.id
                        }), console.log(this.object.addons)
                    },
                    createNewScore: function() {
                        this.object.scores.push({
                            id: "",
                            value: 0,
                            type: "",
                            requireds: [],
                            beforeText: this.app.defaultBeforePoint,
                            afterText: this.app.defaultAfterPoint,
                            showScore: !0
                        })
                    },
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
                    moveObjectUp: function() {
                        var e = this.objects.indexOf(this.object);
                        if (e > 0) {
                            var t = this.objects[e];
                            this.$set(this.objects, e, this.objects[e - 1]), this.$set(this.objects, e - 1, t);
							this.app.comp[this.objects[e].id].objects = e, this.app.comp[this.objects[e - 1].id].objects = e - 1;
                        }
                    },
                    moveObjectDown: function() {
                        var e = this.objects.indexOf(this.object);
                        if (-1 !== e && e < this.objects.length - 1) {
                            var t = this.objects[e];
                            this.$set(this.objects, e, this.objects[e + 1]), this.$set(this.objects, e + 1, t);
							this.app.comp[this.objects[e].id].objects = e, this.app.comp[this.objects[e + 1].id].objects = e + 1;
                        }
                    },
                    deleteObject: function() {
                        this.objects.splice(this.objects.indexOf(this.object), 1)
                    },
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    checkPoints: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum - parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					checkPointsR: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum + parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					playBgm: function(e, t, i) {
						function bgmFadeIn(th, f) {
							let v = 0,
								k = 0,
								o = 0;
							if (th.app.isFadingOut) {
								const lastTime = parseInt(th.app.lastFadeTime);
								if (th.app.bgmFadeTimer !== 0) clearTimeout(th.app.bgmFadeTimer), th.app.bgmFadeTimer = 0;
								th.app.bgmFadeTimer = setTimeout(() => {
									if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
									if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
										const iTime = e.bgmFadeInSec / 20;
										th.app.lastFadeTime = e.bgmFadeInSec;
										bgmPlayer.setVolume(0);
										bgmPlayer.playVideo();
										if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										if (th.app.isFadingOut) th.app.isFadingOut = !1;
										th.app.bgmFadeInterval = setInterval(() => {
											if (bgmPlayer.playerInfo.playerState === 1) {
												if (v < th.app.curVolume) {
													v += 5;
													bgmPlayer.setVolume(v);
													th.app.lastFadeTime = th.app.lastFadeTime - iTime;
												} else {
													bgmPlayer.setVolume(th.app.curVolume);
													clearInterval(th.app.bgmFadeInterval);
													th.app.bgmFadeInterval = 0;
													th.app.lastFadeTime = 0;
												}
											}
										}, iTime);
									} else {
										if (th.app.isFadingOut) th.app.isFadingOut = !1, clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										bgmPlayer.playVideo();
										bgmPlayer.setVolume(th.app.curVolume);
									}
									th.$set(th.app, "bgmObjectId", e.id);
									if (th.app.showMusicPlayer) {
										if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
										th.app.bgmTitleInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
												if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
													th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
													th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
													clearInterval(th.app.bgmTitleInterval);
													th.app.bgmTitleInterval = 0;
												}
											}
										}, 1000);
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										th.app.bgmPlayInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
												const curTime = parseInt(bgmPlayer.getCurrentTime());
												if (curTime !== th.app.curBgmTime) {
													if (k !== curTime) {
														th.$set(th.app, "curBgmTime", curTime);
													} else {
														o++;
														if (o > th.app.curBgmLength) o = 1;
														th.$set(th.app, "curBgmTime", o);
													}
												} else {
													k = curTime;
													o = curTime + 1;
													th.$set(th.app, "curBgmTime", o);
												}
											}
										}, 1000);
									}
								}, lastTime);
							} else {
								if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
								if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
									const iTime = e.bgmFadeInSec / 20;
									th.app.lastFadeTime = e.bgmFadeInSec;
									bgmPlayer.setVolume(0);
									bgmPlayer.playVideo();
									if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									if (th.app.isFadingOut) th.app.isFadingOut = !1;
									th.app.bgmFadeInterval = setInterval(() => {
										if (bgmPlayer.playerInfo.playerState === 1) {
											if (v < th.app.curVolume) {
												v += 5;
												bgmPlayer.setVolume(v);
												th.app.lastFadeTime = th.app.lastFadeTime - iTime;
											} else {
												bgmPlayer.setVolume(th.app.curVolume);
												clearInterval(th.app.bgmFadeInterval);
												th.app.bgmFadeInterval = 0;
												th.app.lastFadeTime = 0;
											}
										}
									}, iTime);
								} else {
									bgmPlayer.playVideo();
									bgmPlayer.setVolume(th.app.curVolume);
								}
								th.$set(th.app, "bgmObjectId", e.id);
								if (th.app.showMusicPlayer) {
									if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
									th.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
											if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
												th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(th.app.bgmTitleInterval);
												th.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									th.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== th.app.curBgmTime) {
												if (k !== curTime) {
													th.$set(th.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > th.app.curBgmLength) o = 1;
													th.$set(th.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												th.$set(th.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							}
						}
						function bgmFadeOut(th) {
							const steps = th.app.curVolume / 5;
							if (e.bgmFadeOut && e.bgmFadeOutSec > 0 && steps > 0) {
								const iTime = e.bgmFadeOutSec / steps;
								let v = th.app.curVolume;
								th.app.lastFadeTime = e.bgmFadeOutSec;
								th.app.isFadingOut = !0;
								if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
								th.app.bgmFadeInterval = setInterval(() => {
									if (v > 0 && "undefined" !== typeof bgmPlayer.setVolume) {
										v -= 5;
										bgmPlayer.setVolume(v);
										th.app.lastFadeTime = th.app.lastFadeTime - iTime;
									} else {
										if (th.app.isFadingOut) {
											bgmPlayer.pauseVideo();
											bgmPlayer.setVolume(th.app.curVolume);
											clearInterval(th.app.bgmFadeInterval);
											th.app.bgmFadeInterval = 0;
											th.app.lastFadeTime = 0;
											th.app.isFadingOut = !1;
											if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
											if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
											th.$set(th.app, "bgmTitle", "No Audio Title");
											th.$set(th.app, "curBgmTime", 0);
											th.$set(th.app, "curBgmLength", 0);
										}
									}
								}, iTime);
							} else {
								bgmPlayer.pauseVideo();
								if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
								if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
								th.$set(th.app, "bgmTitle", "No Audio Title");
								th.$set(th.app, "curBgmTime", 0);
								th.$set(th.app, "curBgmLength", 0);
							}
						}
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							var p = this.app.bgmIsPlaying,
								s = bgmPlayer.playerInfo.videoData.video_id,
								o = bgmPlayer.playerInfo.playerState,
								v = 0,
								f = !1;
							if ("undefined" === typeof this.app.bgmObjectId) this.$set(this.app, "bgmObjectId", e.id);
							if (s == t) {
								if (this.app.bgmObjectId == e.id) {
									if (p) {
										if (o === 2) {
											bgmFadeIn(this, f);
										} else {
											bgmPlayer.stopVideo();
											bgmFadeIn(this, f);
										}
									} else {
										bgmFadeOut(this);
									}
								} else {
									if (p) {
										bgmPlayer.stopVideo(), bgmFadeIn(this, f);
									} else {
										bgmFadeOut(this);
									}
								}
							} else {
								if (p) {
									f = !0;
									bgmFadeIn(this, f);
								}
							}
						} else {
							if (i < 10) {
								i++;
								setTimeout(() => {
									this.playBgm(e, t, i);
								}, 200);
							}
						}
					},
					updateScoresC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var nH = 0, nh = 0, nR = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var af = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[af[0]]) {
								var co = this.app.comp[af[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											bE = this.checkRequireds(coS);
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						} 
					},
					updateScoresS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											var bE = this.checkRequireds(coS);
											if (bC !== bE) {
												var nC = 0;
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																	
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + parseInt(e.multipleUseVariable + 1) : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											var bE = !1;
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bE = this.checkRequireds(coS);
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
												} else {
													var aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bE = this.checkRequireds(coS);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
												}
											} else {
												var nH = this.activated.indexOf(eid);
												this.activated.splice(nH, 1);
												t.currentChoices -= 1;
												var bE = this.checkRequireds(coS);
												this.activated.splice(nH, 0, eid);
												t.currentChoices += 1;
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
													bE = this.checkRequireds(coS);
												} else {
													var aFI = this.activated[fI].split("/ON#");
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
													bE = this.checkRequireds(coS);
												}
											} else {
												this.activated.splice(nR, 1);
												t.currentChoices -= 1;
												bC = this.checkRequireds(coS);
												for (var a = 0; a < o.length; a++) {
													for (var n = 0; n < this.app.pointTypes.length; n++) {
														this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
													}
												}
												this.activated.splice(nR, 0, eid);
												t.currentChoices += 1;
												bE = this.checkRequireds(coS);
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					checkPointsMD: function(e) {
						var ei = 0,
							pT = 0;
						if (e.multiplyPointtypeIsOnCheck || e.dividePointtypeIsOnCheck) {
							if (e.multiplyPointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtMultiply[l];
													pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							} else if (e.dividePointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToDivide.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtDivide[l];
													pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							}
							if (pT < 0) return !1
						}
						return !0
					},
                    discountS: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								bTempStacked = !1,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										discountedFrom.push(e.id);
										scoreVal = coS.tmpDiscount[f][2];
										bTempStacked = !0;
										tmpNum = f;
									}
								}
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										coS.discountTextA.push(e.discountAfterText);
									}
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if (coS.discountScore > stackDiscount) {
									this.$set(coS, "tmpDisScore", coS.discountScore - stackDiscount);
									this.$set(coS, "isChangeDiscount", true);
									aDiscount.push(false);
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									if ("undefined" !== typeof coS.discountTextA) this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if ("undefined" !== typeof coS.discountTextB) this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
									coS.discountedFrom.push(...discountedFrom);
									if (bTempStacked) coS.tmpDiscount.splice(tmpNum, 1);
									coS.tmpDiscount.push(aDiscount);
									this.$set(coS, "notStackableDiscount", false);
								} else {
									this.$set(coS, "isChangeDiscount", false);
									discountedFrom.push(e.id);
									if (bTempStacked) {
										coS.tmpDiscount[tmpNum][1] = discountedFrom;
										coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
										coS.tmpDiscount[tmpNum][3] = stackDiscount;
									} else {
										if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
										"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
										aDiscount.push(discountedFrom);
										aDiscount.push(stackDiscountCal);
										aDiscount.push(stackDiscount);
										coS.tmpDiscount.push(aDiscount);
									}
								}
							} else {
								scoreVal = coS.discountIsOn ? coS.discountScoreCal : parseInt(coS.value);
								var tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
										coS.discountTextA.push(e.discountAfterText);
									}
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountedFrom.push(e.id);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
								if (!coS.discountIsOn) this.$set(coS, "discountIsOn", true);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								aDiscount = [];
							if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
							if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
							else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
							else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
							else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
							stackDiscountCal = stackDiscount;
							if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
							if (coS.discountIsOn) {
								"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
								if (coS.discountScore > stackDiscount) {
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									this.$set(coS, "discountShow", e.discountShow);
									this.$set(coS, "discountBeforeText", e.discountBeforeText);
									this.$set(coS, "discountAfterText", e.discountAfterText);
									this.$set(coS, "discountedFrom", e.id);
									this.$set(coS, "notStackableDiscount", true);
								} else {
									aDiscount.push(e.id);
									aDiscount.push(stackDiscountCal);
									aDiscount.push(stackDiscount);
									if (e.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
								}
								coS.tmpDiscount.push(aDiscount);
							} else {
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								if (e.discountShow) this.$set(coS, "discountShow", e.discountShow), this.$set(coS, "discountBeforeText", e.discountBeforeText), this.$set(coS, "discountAfterText", e.discountAfterText);
								this.$set(coS, "discountIsOn", true);
								this.$set(coS, "discountedFrom", e.id);
								this.$set(coS, "notStackableDiscount", true);
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
					discountC: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										scoreVal = coS.tmpDiscount[f][2];
										tmpNum = f;
									}
								}
								discountedFrom.splice(discountedFrom.indexOf(e.id), 1);
								if (discountedFrom.length > 0) {
									for (var f = 0; f < discountedFrom.length; f++) {
										if ("undefined" !== typeof this.app.comp[discountedFrom[f]]) {
											var coT = this.app.comp[discountedFrom[f]],
												coTR = co.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
											else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
											else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
											else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
											stackDiscountCal = stackDiscount;
											if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
										}
									}
									coS.tmpDiscount[tmpNum][1] = discountedFrom;
									coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
									coS.tmpDiscount[tmpNum][3] = stackDiscount;
								} else {
									coS.tmpDiscount.splice(tmpNum, 1);
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								this.$set(coS, "isChangeDiscount", false);
							} else {
								var scoreVal = parseInt(coS.value),
									indexId = coS.discountedFrom.indexOf(e.id),
									tmpDisScore = coS.discountScore,
									stackDiscount = 0,
									stackDiscountCal = 0,
									tmpNum = 0,
									bTempChanged = !1,
									discountedFrom = "";
								coS.discountedFrom.splice(indexId, 1);
								if (coS.discountedFrom.length > 0) {
									for (var d = 0; d < coS.discountedFrom.length; d++) {
										if ("undefined" !== typeof this.app.comp[coS.discountedFrom[d]]) {
											var coT = this.app.comp[coS.discountedFrom[d]],
												coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (coTO.stackableDiscount) {
												if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
												else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
												else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
												else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
												stackDiscountCal = stackDiscount;
												scoreVal = stackDiscountCal;
												if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
											}
										}
									}
								} else {
									stackDiscountCal = parseInt(coS.value);
									stackDiscount = parseInt(coS.value);
								}
								if ("undefined" !== typeof coS.tmpDiscount) {
									for (var f = 0; f < coS.tmpDiscount.length; f++) {
										if (!coS.tmpDiscount[f][0]) {
											if (stackDiscount > coS.tmpDiscount[f][3]) {
												discountedFrom = coS.tmpDiscount[f][1];
												stackDiscountCal = coS.tmpDiscount[f][2];
												stackDiscount = coS.tmpDiscount[f][3];
												tmpNum = f;
												bTempChanged = !0;
											}
										}
									}
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								if (bTempChanged) {
									if (discountedFrom.length == 0) {
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", discountedFrom);
										if (coS.tmpDiscount[tmpNum][4]) {
											this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
											this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
										}
										coS.tmpDiscount.splice(tmpNum, 1);
										coS.notStackableDiscount = true;
									}
								} else {
									this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if (coS.discountedFrom.length == 0) this.$set(coS, "discountIsOn", false);
								}
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountScore,
								tmpNum = 0,
								bChanged = !1;
							if (coS.notStackableDiscount) {
								if (coS.discountedFrom == e.id) {
									if ("undefined" !== typeof coS.tmpDiscount && coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[0][3];
										bChanged = !0;
										for (var f = 1; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										this.$set(coS, "notStackableDiscount", !coS.tmpDiscount[tmpNum][0]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", "");
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", scoreVal);
										this.$set(coS, "discountBeforeText", "");
										this.$set(coS, "discountAfterText", "");
										this.$set(coS, "discountIsOn", false);
										this.$set(coS, "notStackableDiscount", false);
									}
								} else {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
								}
							} else {
								if ("undefined" !== typeof coS.tmpDiscount) {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
									if (coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[f][3];
										bChanged = !0;
										for (var f = 0; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[f][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[f][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									}
								}
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
                    forceActivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
							if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
						}
						if (this.checkRequireds(coO) && this.checkPoints(coO)) {
							if (coO.isSelectableMultiple) {
								var ee = o;
								if (ee > 0) {
									for (var n = 0; n < ee; n++) {
										this.selectedOneMore(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else if (ee < 0) {
									for (var pp = 0; pp < -1 * ee; pp++) {
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
										this.selectedOneLess(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								}
							} else {
								if (!coO.isActive) this.activateObject(coO, coR);
								if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
							}
							if(!coO.isActive) {
								if(coO.isSelectableMultiple) {
									if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
									e.cancelForcedActivated.push(coO.id + "/ON#" + o);
								}
								this.$set(coO, "forcedActivated", !1);
							}
						} else {
							if(coO.isSelectableMultiple) {
								if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
								e.cancelForcedActivated.push(coO.id + "/ON#" + o);
							}
							this.$set(coO, "forcedActivated", !1);
						}
					},
					forceDeactivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
					forceDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (e.selectedThisManyTimesProp == 0) {
									if (coO.isActive && !e.isNotDeactivate) {
										if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
										this.activateObject(coO, coR);
									}
								}
							}
						}
					},
					forceRandomActivate: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						this.$set(e, 'activatedRandom', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandom = rd.slice(0, nAR);
						for (var a = 0, b = 0, v = 0; v < parseInt(nAR) + b; v++) {
							var rndV = e.activatedRandom[v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[rndV[0]]) {
								var co = this.app.comp[rndV[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = rndV[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandom.splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandom.splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomActivateMul: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						if ("undefined" === typeof e.activatedRandomMul) this.$set(e, 'activatedRandomMul', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandomMul.push(rd.slice(0, nAR));
						for (var a = 0, b = 0, v = 0; v < nAR + b; v++) {
							var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp - 1][v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aRM[0]]) {
								var co = this.app.comp[aRM[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = aRM[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
                    activateObject: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						var i = this,
							s = this.checkRequireds(e),
							o = this.checkPoints(e),
							k = !0;
						if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
							var cnt = 0;
							for (var r = 0; r < t.objects.length; r++) {
								if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
									if (t.objects[r].isSelectableMultiple)
										for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
									else
										this.activateObject(t.objects[r], t);
									break
								}
								else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
							}
							if (cnt >= t.allowedChoices) k = !1;
						}
						if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices) && !this.activated.includes(eid) && e.textfieldIsOn && e.customTextfieldIsOn && !this.app.wordChangeComplete) {
							this.$refs.confirm.open("", e.wordPromptText, {noconfirm: !0, word: !0}, e.wordChangeSelect)
							.then(({result, wordText}) => {
								if (result) {
									e.wordChangeSelect = wordText;
								} else {
									e.wordChangeSelect = e.wordChangeDeselect;
								}
								i.$set(i.app, "wordChangeComplete", !0);
								i.activateObject(e, t);
								i.$set(i.app, "wordChangeComplete", !1);
							});
						} else {
							if (!(e.selectOnce && e.isActive) && !this.linkedObjects.includes(e.id)) {
								for (var g = 0; g < e.scores.length; g++)
									if ("undefined" !== typeof e.scores[g].isRandom && e.scores[g].isRandom && !e.scores[g].setValue) {
										e.scores[g].value = Math.floor(Math.random() * (parseInt(e.scores[g].maxValue) - parseInt(e.scores[g].minValue) + 1)) + parseInt(e.scores[g].minValue);
										e.scores[g].setValue = !0;
										for (var a = 0; a < this.app.pointTypes.length; a++) this.app.pointTypes[a].id == e.scores[g].id && this.app.pointTypes[a].belowZeroNotAllowed && this.app.pointTypes[a].startingSum - parseInt(e.scores[g].value) < 0 && (e.scores[g].setValue = !1);
									}
								var tmpScores = [];
								if (!this.exceptedObjects.length == 0 && !this.exceptedObjects.includes(eid)) this.exceptedObjects.push(eid);
								if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices)) {
									if (this.activated.includes(eid)) {
										if (this.checkPointsMD(e)) {
											for (var a = 0; a < e.scores.length; a++) {
												if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
													for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
											}
											var ee = 0, EE = 0;
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
													for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
														var rdV = e.activatedRandom[v].split("/ON#"),
															rdNV = rdV.length > 1 ? rdV[1] : 1;
														if ("undefined" !== typeof this.app.comp[rdV[0]]) {
															this.forceDeactivate(e, rdV[0], rdNV);
														}
													}
												} else if (!e.isActivateRandom) {
													for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
														var pv = p[v].split("/ON#"),
															pnV = pv.length > 1 ? pv[1] : 1;
														if ("undefined" !== typeof this.app.comp[pv[0]]) {
															this.forceDeactivate(e, pv[0], pnV);
														} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
															var coG = this.app.compG[pv[0]],
																coGE = this.app.groups[coG.groups].elements;
															for (var h = coGE.length - 1; h >= 0; h--) {
																if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																	this.forceDeactivate(e, coGE[h].id, pnV);
																}
															}
														}
													}
												}
											}
											for (var f = 0; f < this.activated.length; f++) {
												var af = this.activated[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[af[0]]) {
													var co = this.app.comp[af[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
													if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
														var nH = this.activated.indexOf(eid);
														this.activated.splice(nH, 1);
														t.currentChoices -= 1;
														var bR = this.checkRequireds(coO);
														this.activated.splice(nH, 0, eid);
														t.currentChoices += 1;
														if (!bR) {
															this.exceptedObjects.push(coO.id);
															if (coO.isMultipleUseVariable) {
																for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																	coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
																}
																if (coO.forcedActivated) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																}
															} else {
																if (coO.forcedActivated) coO.forcedActivated = !1;
																this.activateObject(coO, coR);
															}
															f--;
														}
													}
												}
											}
											if (e.multiplyPointtypeIsOnCheck) {
												e.multiplyPointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.dividePointtypeIsOnCheck) {
												e.dividePointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToDivide.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.isChangeVariables) {
												for (var m = 0; m < e.changedVariables.length; m++) {
													for (var n = 0; n < this.app.variables.length; n++) {
														if (e.changedVariables[m] == this.app.variables[n].id) {
															if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
															else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
															else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
														}
													}
												}
											}
											if (e.textfieldIsOn) {
												for (var m = 0; m < this.app.words.length; m++) {
													if (this.app.words[m].id == e.idOfTheTextfieldWord) {
														this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
														this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
													}
												}
											}
											if (e.addToAllowChoice)
												if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
													var co = this.app.compR[e.idOfAllowChoice],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
													var d = coR.currentChoices;
													if (d > coR.allowedChoices) {
														var u = d - coR.allowedChoices;
														for (var v = 0; v < coR.objects.length; v++) {
															if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
																if (coR.objects[v].isSelectableMultiple)
																	for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
																else
																	this.activateObject(coR.objects[v], coR);
																u--;
															}
														}
													}
												}
											if (e.discountOther) {
												if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
													if (e.isDisChoices) {
														if ("undefined" !== typeof e.discountChoices) {
															for (var a = 0; a < e.discountChoices.length; a++) {
																if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																	var co = this.app.comp[e.discountChoices[a]],
																		coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																		coO = coR.objects[co.objects];
																	for (var c = 0; c < coO.scores.length; c++) {
																		var coS = coO.scores[c];
																		if (!coS.isNotDiscountable) {
																			this.discountC(e, coS);
																		}
																	}
																}
															}
														}
													} else {
														if ("undefined" !== typeof e.discountGroups) {
															for (var a = 0; a < this.app.groups.length; a++) {
																if (e.discountGroups.includes(this.app.groups[a].id)) {
																	for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																		if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																			var co = this.app.comp[this.app.groups[a].elements[b].id],
																				coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																				coO = coR.objects[co.objects];
																			for (var c = 0; c < coO.scores.length; c++) {
																				var coS = coO.scores[c];
																				if (!coS.isNotDiscountable) {
																					this.discountC(e, coS);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
											this.updateScoresC(e, t, tmpScores, 0);
											if (e.isImageUpload) {
												this.$set(e, "image", e.defaultImage);
											}
											if (e.backpackBtnRequirement)
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.changePointBar) {
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barBackgroundColor;
													this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
													this.$set(e, "changedBarBgColor", a);
												}
												if (e.changeBarTextColorIsOn) {
													var a = this.app.styling.barTextColor;
													this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
													this.$set(e, "changedBarTextColor", a);
												}
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barIconColor;
													this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
													this.$set(e, "changedBarIconColor", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
											if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
												if ("undefined" !== typeof bgmPlayer.unMute) {
													this.$set(this.app, "isMute", !1);
													bgmPlayer.unMute();
												}
											}
											if (e.isContentHidden) {
												for (var a = 0; a < e.hiddenContentsRow.length; a++) {
													if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
														var co = this.app.compR[e.hiddenContentsRow[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														for (var b = 0; b < e.hiddenContentsType.length; b++) {
															if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
															else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
															else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
															else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
															else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
															else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
														}
													}
												}
											}
											this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1;
											e.isActive = !e.isActive, this.updateActivated();
										}
									} else {
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
														}
													}
												} else {
													if("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																console.log(this.app.groups[a]);
																for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			console.log(coO.title, coS);
																			if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																				if (!coS.isNotDiscountable) {
																					this.discountS(e, coS);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												} 
											}
										}
										for (var g = 0; g < e.scores.length; g++)
											if (this.checkRequireds(e.scores[g]) && !e.scores[g].isActive)
												for (var w = 0; w < this.app.pointTypes.length; w++) this.app.pointTypes[w].id == e.scores[g].id && (this.app.pointTypes[w].startingSum -= (e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)), e.scores[g].isActive = !0, tmpScores.push({id: e.scores[g].id, value: e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[w].id, this.app.pointTypes[w].startingSum), e.scores[g].isChangeDiscount && this.$set(e.scores[g], "isChangeDiscount", false));
										this.activated.push(eid), t.currentChoices += 1;
										var a, f, b, m, v, ee = 0;
										if (e.duplicateRow) {
											if ("undefined" !== typeof e.duplicateRowId && "undefined" !== typeof e.duplicateRowPlace) this.duplicateRow(e, t);
										}
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom) {
												this.forceRandomActivate(e);
											} else {
												for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
													var yv = y[v].split("/ON#"),
														yNV = yv.length > 1 ? yv[1] : 1;
													if ("undefined" !== typeof this.app.comp[yv[0]]) {
														this.forceActivate(e, yv[0], yNV);
													} else if ("undefined" !== typeof this.app.compG[yv[0]]) {
														var coG = this.app.compG[yv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var w = 0; w < coGE.length; w++) {
															if ("undefined" !== typeof this.app.comp[coGE[w].id]) {
																this.forceActivate(e, coGE[w].id, yNV);
															}
														}
													}
												}
											}
										}
										if (e.deactivateOtherChoice)
											for (var y = e.deactivateThisChoice.split(","), f = 0; f < y.length; f++) {
												var yf = y[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[yf[0]]) {
													var co = this.app.comp[yf[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
														if (!coO.forcedActivated) {
															if (coO.isSelectableMultiple) {
																var ee = yf[1];
																if (ee > 0) {
																	for (var n = 0; n < ee; n++) {
																		this.selectedOneLess(coO, coR);
																	}
																} else if (ee < 0) {
																	for (var pp = 0; pp < -1 * ee; pp++) {
																		this.selectedOneMore(coO, coR);
																	}
																}
															} else {
																if (coO.isActive) this.activateObject(coO, coR);
															}
														}
												} else if ("undefined" !== typeof this.app.compG[yf[0]]) {
													var co = this.app.compG[yf[0]],
														coG = this.app.groups[co.groups];
													for (var T = 0; T < coG.elements.length; T++) {
														if ("undefined" !== typeof this.app.comp[coG.elements[T].id]) {
															var coT = this.app.comp[coG.elements[T].id],
																coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																coTO = coTR.objects[coT.objects];
															if (!coTO.forcedActivated) {
																if (coTO.isSelectableMultiple) {
																	var ee = yf[1];
																	if (ee > 0) {
																		for (var n = 0; n < ee; n++) {
																			this.selectedOneLess(coTO, coTR);
																		}
																	} else if (ee < 0) {
																		for (var pp = 0; pp < -1 * ee; pp++) {
																			this.selectedOneMore(coTO, coTR);
																		}
																	}
																} else {
																	if (coTO.isActive) this.activateObject(coTO, coTR);
																}
															}
														}
													}
												}
											}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (!this.exceptedObjects.includes(coO.id)) {
													if (!this.checkRequireds(coO)) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOn) {
											e.multiplyPointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtMultiply) this.$set(e, "startingSumAtMultiply", []);
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++)
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														if (e.multiplyPointtypeIsId)
															for (var x = 0; x < this.app.pointTypes.length; x++) {
																if (this.app.pointTypes[x].id == e.multiplyWithThis) {
																	e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																	this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																}
															}
														else e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * e.multiplyWithThis, this.app.pointTypes[m].startingSum *= e.multiplyWithThis; this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
											}
											this.app.mdObjects.push(e);
										}
										if (e.dividePointtypeIsOn) {
											e.dividePointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtDivide) this.$set(e, "startingSumAtDivide", []);
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														e.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / e.divideWithThis;
														this.app.pointTypes[m].startingSum /= e.divideWithThis;
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.push(e);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1") this.app.variables[n].isTrue = !0;
														else if (e.changeType == "2") this.app.variables[n].isTrue = !1;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresS(e, t, tmpScores, 0);
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = e.wordChangeSelect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.isImageUpload) {
											this.$set(e, "defaultImage", e.image);
											this.currentComponent = "appImageUpload"
										}
										if (e.backpackBtnRequirement) {
											if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
										}
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.scrollToRow) {
											var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
												compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
											if (e.scrollToObject) {
												if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
													if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.comp[e.scrollObjectId];
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														if (!coR.isEditModeOn) {
															this.$nextTick(() => {
																if (coR) {
																	var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																	if (coO) {
																		if (isBackpack) {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																		} else {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																		}
																	}
																}
															});
														}
													}
												}
											} else {
												if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
													if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.compR[e.scrollRowId];
															coR = p[co.rows];
														this.$nextTick(() => {
															if (coR) {
																if (isBackpack) {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																} else {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																}
															}
														});
													}
												}
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
												this.app.bgmIsPlaying = !0;
												this.playBgm(e, e.bgmId, 0);
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.mute) {
												this.$set(this.app, "isMute", !0);
												bgmPlayer.mute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													if (!coR.textIsRemoved) this.$set(coR, "textIsRemoved", true);
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", true);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", true);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", true);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", true);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", true);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", true);
													}
												}
											}
										}
										if (e.isFadeTransition) {
											"undefined" === typeof e.fadeTransitionColor || "" === e.fadeTransitionColor ? this.$set(this.app, "fadeTransitionColor", "000000FF") : this.$set(this.app, "fadeTransitionColor", e.fadeTransitionColor);
											"undefined" === typeof e.fadeTransitionTime || "" === e.fadeTransitionTime ? this.$set(this.app, "fadeTransitionTime", 0.25) : this.$set(this.app, "fadeTransitionTime", (e.fadeTransitionTime / 1000));
											this.$set(this.app, "fadeTransitionIsOn", !0);
											this.$nextTick(() => {
												setTimeout(() => {
													this.$set(this.app, "fadeTransitionIsOn", !1);
												}, this.app.fadeTransitionTime * 1000);
											});
										}
										e.isActive = !e.isActive, this.updateActivated();
										if (e.cleanACtivatedOnSelect) this.cleanActivated();
									}
								} else if (this.activated.includes(eid)) {
									if (this.checkPointsMD(e)) {
										for (var a = 0; a < e.scores.length; a++)
											if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
												for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
												for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
													var rdV = e.activatedRandom[v].split("/ON#"),
														rdNV = rdV.length > 1 ? rdV[1] : 1;
													if ("undefined" !== typeof this.app.comp[rdV[0]]) {
														this.forceDeactivate(e, rdV[0], rdNV);
													}
												}
											} else if (!e.isActivateRandom) {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== typeof this.app.comp[pv[0]]) {
														this.forceDeactivate(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivate(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var af = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[af[0]]) {
												var co = this.app.comp[af[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
													var nH = this.activated.indexOf(eid);
													this.activated.splice(nH, 1);
													t.currentChoices -= 1;
													var bR = this.checkRequireds(coO);
													this.activated.splice(nH, 0, eid);
													t.currentChoices += 1;
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOnCheck) {
											e.multiplyPointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.dividePointtypeIsOnCheck) {
											e.dividePointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
														else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
												var d = coR.currentChoices;
												if (d > coR.allowedChoices) {
													var u = d - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) {
														if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
															if (coR.objects[v].isSelectableMultiple)
																for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
															else
																this.activateObject(coR.objects[v], coR);
															u--;
														}
													}
												}
											}
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			if (!coS.isNotDiscountable) {
																				this.discountC(e, coS);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										this.updateScoresC(e, t, tmpScores, 0);
										if (e.isImageUpload) {
											this.$set(e, "image", e.defaultImage);
										}
										if (e.backpackBtnRequirement)
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarIconColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												this.app.bgmIsPlaying = !1;
												this.playBgm(e, e.bgmId, 0)
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.unMute) {
												this.$set(this.app, "isMute", !1);
												bgmPlayer.unMute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
													}
												}
											}
										}
										this.activated.splice(this.activated.indexOf(eid), 1), e.isActive = !e.isActive, this.updateActivated(), t.currentChoices -= 1;
									}
								}
								if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
							}
							if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
						}
                    },
                    updateObject: function() {
                        this.$emit("objectWasChanged", this.object)
                    },
                    selectedOneMore: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
									var cnt = 0;
									for (var r = 0; r < t.objects.length; r++) {
										if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
											if (t.objects[r].isSelectableMultiple)
												for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
											else
												this.activateObject(t.objects[r], t);
											break
										}
										else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
									}
									if (cnt >= t.allowedChoices) 
										s = !1;
									else 
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								} else {
									e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesPluss > this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum++, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable));
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if ("undefined" === typeof this.exceptedObjects) this.$set(this, "exceptedObjects", []);
								if (!this.exceptedObjects.length == 0) this.exceptedObjects.push(e.id);
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable > 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																if (!coS.isNotDiscountable) {
																	this.discountS(e, coS);
																}
															}
														}
													}
												}
											}
										} else {
											if("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++)
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
													}
												}
											}
										} 
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp > 0) {
													if ("undefined" === typeof e.scores[i].isActiveMul) this.$set(e.scores[i], "isActiveMul", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMul[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable);
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMulMinus[tmpVariable] || e.scores[i].isActiveMulMinus[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.multipleUseVariable > e.numMultipleTimesMinus) {
										if (e.isActive == !1) {
											e.isActive = !0, t.currentChoices += 1, this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
											if (e.backpackBtnRequirement) {
												if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
											}
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.scrollToRow) {
												var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
													compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
												if (e.scrollToObject) {
													if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
														if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.comp[e.scrollObjectId];
																coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
															if (!coR.isEditModeOn) {
																this.$nextTick(() => {
																	if (coR) {
																		var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																		if (coO) {
																			if (isBackpack) {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																			} else {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																			}
																		}
																	}
																});
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
														if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.compR[e.scrollRowId];
																coR = p[co.rows];
															this.$nextTick(() => {
																if (coR) {
																	if (isBackpack) {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																	} else {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																	}
																}
															});
														}
													}
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
													this.app.bgmIsPlaying = !0;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										} else {
											if (e.multipleUseVariable == 0) {
												e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											} else {
												this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable - 1)), (e.id + "/ON#" + e.multipleUseVariable));
											}
										}
										if (e.multipleUseVariable > 0) {
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom) {
													this.forceRandomActivateMul(e);
												} else {
													for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
														var yv = y[v].split("/ON#"),
															yNV = yv.length > 1 ? yv[1] : 1;
														if ("undefined" !== typeof this.app.comp[yv[0]]) {
															this.forceActivate(e, yv[0], yNV)
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects],
													nR = this.activated.indexOf(eid);
												if (!this.exceptedObjects.includes(coO.id)) {
													var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
													if (fI !== -1) var aFI = this.activated[fI].split("/ON#");
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) + 1) : (this.activated.push(eid), t.currentChoices += 1);
													var bR = this.checkRequireds(coO);
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1);
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresMulS(e, t, tmpScores, 0);
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    selectedOneLess: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (e.numMultipleTimesMinus < e.multipleUseVariable) {
									if (e.multipleUseVariable == 0 && t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
										var cnt = 0;
										for (var r = 0; r < t.objects.length; r++) {
											if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
												if (t.objects[r].isSelectableMultiple)
													for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
												else
													this.activateObject(t.objects[r], t);
												break
											}
											else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
										}
										if (cnt >= t.allowedChoices) 
											s = !1;
										else 
											e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									} else {
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									}
								} else {
									s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesMinus < this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum--, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum;
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable) + 1);
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable >= 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (!coS.isNotDiscountable) {
																this.discountC(e, coS);
															}
														}
													}
												}
											}
										} else {
											if ("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++) {
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp < 0) {
													if ("undefined" === typeof e.scores[i].isActiveMulMinus) this.$set(e.scores[i], "isActiveMulMinus", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMulMinus[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMul[tmpVariable] || e.scores[i].isActiveMul[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.isMultipleUseVariable >= 0) {
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandomMul && e.activatedRandomMul.length > 0) {
												for (var v = e.activatedRandomMul[e.selectedThisManyTimesProp].length - 1; v >= 0; v--) {
													var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp][v].split("/ON#"),
														anRM = aRM.length > 1 ? aRM[1] : 1;
													if ("undefined" !== typeof this.app.comp[aRM[0]]) {
														this.forceRandomDeactivateMul(e, aRM[0], anRM);
													}
												}
												e.activatedRandomMul.splice(e.selectedThisManyTimesProp, 1);
											} else {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== this.app.comp[pv[0]]) {
														this.forceDeactivateMul(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivateMul(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
									}
									for (var f = 0; f < this.activated.length; f++) {
										var aF = this.activated[f].split("/ON#");
										if ("undefined" !== typeof this.app.comp[aF[0]]) {
											var co = this.app.comp[aF[0]],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											if (coO.id !== e.id && !this.exceptedObjects.includes(coO.id)) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI !== -1) {
													var	aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													var bR = this.checkRequireds(coO);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, aFI[0] + "/ON#" + aFI[1]), t.currentChoices += 1);
													if (!bR) {
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
									}
									if (e.addToAllowChoice)
										if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
											var co = this.app.compR[e.idOfAllowChoice],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
											coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
											var d = coR.currentChoices;
											if (d > coR.allowedChoices) {
												var u = d - coR.allowedChoices;
												for (var v = 0; v < coR.objects.length; v++) {
													if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
														if (coR.objects[v].isSelectableMultiple)
															for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
														else
															this.activateObject(coR.objects[v], coR);
														u--;
													}
												}
											}
										}
									this.updateScoresMulC(e, t, tmpScores, 0);
									if (e.isActive == !0) {
										if (e.multipleUseVariable == 0 && ("undefined" === typeof e.forcedActivated || e.forcedActivated == !1)) {
											e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											if (e.backpackBtnRequirement) this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										}
										else this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), (e.id + "/ON#" + e.multipleUseVariable));
									} else {
										if (e.multipleUseVariable == -1) {
											e.isActive = !0, t.currentChoices += 1;
											this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
										}
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    cloneObject: function() {
						var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this,
							co = this.app.compR[this.row.id];
						function generateObjectId() {
							var s = "";
							for (var o = 0; o < th.app.objectIdLength; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.comp[s]) {
								return generateObjectId()
							} else {
								return s
							}
						}
                        this.row.objects.splice(this.row.objects.indexOf(this.object) + 1, 0, JSON.parse(JSON.stringify(this.object)));
                        this.row.objects.push(JSON.parse(JSON.stringify(this.object)));
                        e = generateObjectId();
                        this.row.objects[this.row.objects.length - 1].id = e;
						this.app.comp[e] = {rows: this.app.rows.indexOf(this.row), objects: this.row.objects.indexOf(this.object) + 1, type: co.type};
						for (var b = this.row.objects.indexOf(this.object) + 2; b < this.row.objects.length; b++) {
							this.app.comp[this.row.objects[b].id].objects = b;
						}
						for (var c = 0; c < this.object.groups.length; c++) {
							if ("undefined" !== typeof this.app.compG[this.object.groups[c].id]) {
								var co = this.app.compG[this.object.groups[c].id],
									coG = this.app.groups[co.groups];
								coG.elements.push({id: e});
							}
						}
						if ("undefined" !== typeof this.object.objectDesignGroups) {
							for (var d = 0; d < this.object.objectDesignGroups.length; d++) {
								if ("undefined" !== typeof this.app.compODG[this.object.objectDesignGroups[d].id]) {
									var co = this.app.compODG[this.object.objectDesignGroups[d].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									coD.elements.push({id: e});
								}
							}
						}
                    },
                    updateActivated: function() {
                        this.$emit("activatedWasChanged", this.activated)
                    },
                    addObjectToGroup: function() {
                        this.object.groups.push({
                            id: ""
                        })
                    },
                    cleanActivated: function() {
                        this.$store.commit({
                            type: "cleanActivated"
                        })
                    },
					duplicateRow: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var thisRow = rowType == "app" ? this.app.rows : this.backpack;
						var c, i, j, s, fr, fo, y, z, zx, zy, zz, nR = 0, nF = 0;
						for (var b = 0; b < thisRow.length; b++) {
							if (thisRow[b].id.split("/D#")[0] == e.duplicateRowId.split("/D#")[0]) {
								nR++;
							}
							if (thisRow[b].id == e.duplicateRowPlace) {
								nF = b + 1;
							}
						}
						for (var f = 0; f < thisRow.length; f++) {
							if (thisRow[f].id == e.duplicateRowId) {
								thisRow.splice(nF, 0, JSON.parse(JSON.stringify(thisRow[f])));
								fr = thisRow[nF], fr.currentChoices = 0;
								y = fr.id.split("/D#"), fr.id = y[0] + "/D#" + nR;
								for (fr.allowedChoicesChange > 0 && (fr.allowedChoices -= fr.allowedChoicesChange), s = 0; s < fr.objects.length; s++) {
									fo = fr.objects[s], z = fo.id.split("/D#"), fo.id = z[0] + "/D#" + nR;
									if (fo.multipleUseVariable) fo.multipleUseVariable = 0, fo.selectedThisManyTimesProp = 0;
									if (fo.isActive) fo.isActive = !1;
									fo.forcedActivated = !1;
									if (!e.dRowAddSufReq) {
										if ("undefined" !== typeof fo.requireds) {
											for (i = 0; i < fo.requireds.length; i++) {
												if ("id" == fo.requireds[i].type) {
													y = fo.requireds[i].reqId.split("/ON#");
													if (y.length > 1)
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
													else
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
												}
												else if ("or" == fo.requireds[i].type)
													for (c = 0; c < fo.requireds[i].orRequired.length; c++) {
														y = fo.requireds[i].orRequired[c].req.split("/ON#");
														if (y.length > 1)
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
														else
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
													}
												if ("undefined" !== typeof fo.requireds[i].requireds)
													for (j = 0; j < fo.requireds[i].requireds.length; j++) {
														if ("id" == fo.requireds[i].requireds[j].type) {
															y = fo.requireds[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.requireds[i].requireds[j].type)
															for (c = 0; c < fo.requireds[i].requireds[j].orRequired.length; c++) {
																y = fo.requireds[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
											}
										}
										if ("undefined" !== typeof fo.scores)
											for (i = 0; i < fo.scores.length; i++)
												if ("undefined" !== fo.scores[i].requireds)
													for (j = 0; j < fo.scores[i].requireds.length; j++) {
														if ("id" == fo.scores[i].requireds[j].type) {
															y = fo.scores[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.scores[i].requireds[j].type)
															for (c = 0; c < fo.scores[i].requireds[j].orRequired.length; c++) {
																y = fo.scores[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
																
													}
										if ("undefined" !== typeof fo.addons)
											for (i = 0; i < fo.addons.length; i++)
												if ("undefined" !== fo.addons[i].requireds)
													for (j = 0; j < fo.addons[i].requireds.length; j++) {
														if ("id" == fo.addons[i].requireds[j].type) {
															y = fo.addons[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.addons[i].requireds[j].type)
															for (c = 0; c < fo.addons[i].requireds[j].orRequired.length; c++) {
																y = fo.addons[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
									}
									if (!e.dRowAddSufFunc) {
										if (fo.activateOtherChoice) {
											zz = "";
											for (y = fo.activateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.activateThisChoice = zz.slice(0, -1);
										}
										if (fo.deactivateOtherChoice) {
											zz = "";
											for (y = fo.deactivateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.deactivateThisChoice = zz.slice(0, -1);
										}
										if (fo.duplicateRow) {
											y = fo.duplicateRowId.split("/D#"), fo.duplicateRowId = y[0] + "/D#" + nR;
											y = fo.duplicateRowPlace.split("/D#"), fo.duplicateRowPlace = y[0] + "/D#" + nR;
										}
									}
								}
								break
							}
						}
						for (var m = nF; m < thisRow.length; m++) {
							this.app.compR[thisRow[m].id] = {rows: m, type: rowType};
							for (var n = 0; n < thisRow[m].objects.length; n++) {
								var d = thisRow[m].objects[n].id;
								this.app.comp[thisRow[m].objects[n].id] = {rows: m, objects: n, type: rowType};
							}
						}
					}
                }
            },
            Is = js,
            ks = (o("996b"), Object(w["a"])(Is, ds, ps, !1, null, "9eb6a880", null)),
            Bs = ks.exports;
        x()(ks, {
            VBtn: C["a"],
            VCol: I["a"],
            VIcon: J["a"],
            VRow: S["a"],
            VSnackbar: Ct["a"],
            VSpacer: O["a"],
            VTooltip: Q["a"]
        });
        var Ss = {
                props: {
                    row: Object,
                    type: String
                },
                data: function() {
                    return {
                        window: {
                            width: 0,
                            height: 0
                        },
                        templates: [{
                            text: "Image Top",
                            value: 1
                        }, {
                            text: "Image Right",
                            value: 2
                        }, {
                            text: "Image Left",
                            value: 3
                        }, {
                            text: "Image Bottom",
                            value: 4
                        }, {
							text: "Image Center",
							value: 5
						}],
                        pointReqOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "+= More or equal",
                            value: "2"
                        }, {
                            text: "= Equal to",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						pointComOperators: [{
                            text: "+ More than",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "+= More or equal",
                            value: "3"
                        }, {
                            text: "-= Less or equal",
                            value: "4"
                        }, {
                            text: "- Less than",
                            value: "5"
                        }],
						moreOperators: [{
							text: "+ Plus",
							value: "1"
						}, {
							text: "- Minus",
							value: "2"
						}, {
							text: "× Multiply",
							value: "3"
						}, {
							text: "÷ Divide",
							value: "4"
						}, {
							text: "% Mod",
							value: "5"
						}],
						selFromOperators: [{
                            text: "+= More or equal",
                            value: "1"
                        }, {
                            text: "= Equal to",
                            value: "2"
                        }, {
                            text: "-= Less or equal",
                            value: "3"
                        }],
                        rowIconButtons: [{
                            component: "AppObjectList",
                            icon: "mdi-format-list-bulleted",
                            text: "List of objects"
                        }, {
                            component: "appRequirement",
                            icon: "mdi-key-plus",
                            text: "Create Requirement"
                        }, {
                            component: "appRowSettings",
                            icon: "mdi-decagram",
                            text: "Open Row Settings"
                        }],
                        isEditModeOn: !0,
                        currentComponent: "",
                        activeObjectList: [],
                        sanitizeArg: {
                            allowedTags: ["address", "article", "aside", "footer", "header", "h1", "h2", "h3", "h4", "h5", "h6", "hgroup", "main", "nav", "section", "blockquote", "dd", "div", "dl", "dt", "figcaption", "figure", "hr", "li", "main", "ol", "p", "pre", "ul", "a", "abbr", "b", "bdi", "bdo", "br", "cite", "code", "data", "dfn", "em", "i", "kbd", "mark", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "small", "span", "strong", "sub", "sup", "time", "u", "var", "wbr", "caption", "col", "colgroup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "font", "iframe", "img"],
                            allowedAttributes: false,
                            allowedStyles: false
                        },
						scoreUpdate: "",
						exceptedObjects: [],
						exceptedScores: [],
						linkedObjects: []
                    }
                },
                components: {
                    AppObject: Bs,
					ConfirmDlg: function() {
                        return o.e("chunk-2d0e6102").then(o.bind(null, "96c2"))
                    }
                },
                created: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                computed: {
                    objectWidths: function() {
                        return this.$store.state.objectWidths
                    },
                    rowTitle: function() {
                        return 'font-family: "' + this.textStyling.rowTitle + '";font-size: ' + this.textStyling.rowTitleTextSize + "%;text-align: " + this.textStyling.rowTitleAlign + ";color: " + this.textStyling.rowTitleColor + ";"
                    },
                    styling: function() {
                        return this.$store.state.app.styling
                    },
					rowStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateRowIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateRowIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					textStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateTextIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateTextIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					rowImageStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateRowImageIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateRowImageIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					backgroundStyling: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling;
					},
					rowBodyBgColor: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn && this.row.styling.bgColorIsOn) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn && coD.styling.bgColorIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return !1;
					},
					rowBodyBgImage: function() {
						if (this.row.isPrivateStyling && this.row.privateBackgroundIsOn && this.row.styling.backgroundImage) return this.row.styling;
						if ("undefined" !== typeof this.row.rowDesignGroups) {
							for (var a = 0; a < this.row.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[this.row.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[this.row.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateBackgroundIsOn && coD.styling.backgroundImage) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling;
										}
									}
								}
							}
						}
						return !1;
					},
                    resultArray: function() {
                        var e, t, o = [];
                        if ("standard" == this.type) {
                            for (var i = 0; i < this.allChapters.length; i++)
                                for (var s = 0; s < this.allChapters[i].pages.length; s++) this.findAllActiveObjects(this.allChapters[i].pages[s], this.allChapters[i]);
                            o = this.activeObjectList
                        } else if ("" == this.row.resultGroupId || null == this.row.resultGroupId)
                            for (t = 0; t < this.rows.length; t++)
                                for (e = 0; e < this.rows[t].objects.length; e++) {
									if (!this.rows[t].objects[e].isNotResult) this.rows[t].objects[e].isActive ? o.push(this.rows[t].objects[e]) : this.rows[t].objects[e].isSelectableMultiple && "undefined" !== typeof this.rows[t].objects[e].multipleUseVariable && this.rows[t].objects[e].multipleUseVariable > 0 && o.push(this.rows[t].objects[e]);
								}
                        else
                            for (t = 0; t < this.rows.length; t++)
                                for (e = 0; e < this.rows[t].objects.length; e++) {
									if (!this.rows[t].objects[e].isNotResult) {
										if (this.rows[t].objects[e].isActive)
											for (var r = 0; r < this.groups.length; r++)
												if (this.row.resultGroupId == this.rows[t].resultGroupId && this.rows[t] != this.row && this.groups[r].id == this.rows[t].resultGroupId) o.push(this.rows[t].objects[e]);
												else
													for (var a = 0; a < this.rows[t].objects[e].groups.length; a++) this.rows[t].objects[e].groups[a].id == this.row.resultGroupId && this.groups[r].id == this.row.resultGroupId && o.push(this.rows[t].objects[e]);
										else if (this.rows[t].objects[e].isSelectableMultiple && ("undefined" !== typeof this.rows[t].objects[e].multipleUseVariable && this.rows[t].objects[e].multipleUseVariable > 0))
											for (var c = 0; c < this.groups.length; c++)
												if (this.row.resultGroupId == this.rows[t].resultGroupId && this.rows[t] != this.row && this.groups[c].id == this.rows[t].resultGroupId) o.push(this.rows[t].objects[e]);
												else
													for (var d = 0; d < this.rows[t].objects[e].groups.length; d++) this.rows[t].objects[e].groups[d].id == this.row.resultGroupId && this.groups[c].id == this.row.resultGroupId && o.push(this.rows[t].objects[e]);
									}
								}
                        return o
                    },
                    rowBody: function() {
                        var e = "margin-top: " + this.rowStyling.rowBodyMarginTop + "px;margin-bottom:" + this.rowStyling.rowBodyMarginBottom + "px;";
						if (this.rowBodyBgImage !== !1) e += 'background-image: url("' + this.rowBodyBgImage.backgroundImage + '")' + (this.rowBodyBgImage.isBackgroundRepeat ? ";background-repeat: repeat;" : (this.rowBodyBgImage.isBackgroundFitIn ? ";background-size: 100% 100%;" : ";background-size: cover;"));
						if (this.rowBodyBgColor !== !1) e += "background-color: " + this.rowBodyBgColor.backgroundColor + ";";
                        return this.row.isEditModeOn ? e += "margin-left: 1%;margin-right: 1%;" : e += "margin-left: " + this.rowStyling.rowBodyMarginSides + "%;margin-right: " + this.rowStyling.rowBodyMarginSides + "%;", e
                    },
                    rowText: function() {
                        var e = 'font-family: "' + this.textStyling.rowText + '";text-align: ' + this.textStyling.rowTextAlign + ";font-size: " + this.textStyling.rowTextTextSize + "%;color: " + this.textStyling.rowTextColor + ";padding-top: " + this.rowStyling.rowTextPaddingX + "px;padding-bottom: " + this.rowStyling.rowTextPaddingX + "px;";
                        return this.row.isEditModeOn || (e += "padding-left: " + this.rowStyling.rowTextPaddingY + "%;padding-right: " + this.rowStyling.rowTextPaddingY + "%;"), e
                    },
                    rowButton: function() {
                        return "padding-left: " + this.rowStyling.rowButtonYPadding + "px;padding-right: " + this.rowStyling.rowButtonYPadding + "px;padding-top: " + this.rowStyling.rowButtonXPadding + "px;padding-bottom: " + this.rowStyling.rowButtonXPadding + "px;color:" + this.$vuetify.theme.isDark ? "white;" : "black;"
                    },
                    rowBackground: function() {
                        var e = (this.rowStyling.rowBorderImage ? 'border-image: url("' + this.rowStyling.rowBorderImage + '") ' + this.rowStyling.rowBorderImageSliceTop + ' ' + this.rowStyling.rowBorderImageSliceRight + ' ' + this.rowStyling.rowBorderImageSliceBottom + ' ' + this.rowStyling.rowBorderImageSliceLeft + ' / ' + this.rowStyling.rowBorderImageWidth + 'px '+ this.rowStyling.rowBorderImageRepeat + '; border-style: solid; padding: ' + this.rowStyling.rowBorderImageWidth + 'px; ' : "") + (this.backgroundStyling.rowBackgroundImage ? 'background-image: url("' + this.backgroundStyling.rowBackgroundImage + '");' + (this.backgroundStyling.isRowBackgroundRepeat ? "background-repeat: repeat;" : (this.backgroundStyling.isRowBackgroundFitIn ? "background-size: 100% 100%;" : "background-size: cover;")) : "") + (this.backgroundStyling.rowBgColorIsOn ? "background-color: " + this.backgroundStyling.rowBgColor + ";" : "") + "margin-left:" + this.rowStyling.rowMargin + "%;margin-right: " + this.rowStyling.rowMargin + "%;",
                            t = this.rowStyling.rowBorderRadiusIsPixels ? "px" : "%";
                        return this.rowStyling.rowGradientIsOn && (e += this.rowStyling.rowGradientIsOn ? ";background-image: linear-gradient(" + this.rowStyling.rowGradient + ");" : ""), e += "border-radius: " + this.rowStyling.rowBorderRadiusTopLeft + 0 + t + " " + this.rowStyling.rowBorderRadiusTopRight + 0 + t + " " + this.rowStyling.rowBorderRadiusBottomRight + 0 + t + " " + this.rowStyling.rowBorderRadiusBottomLeft + 0 + t + ";", this.rowStyling.rowOverflowIsOn && (e += "overflow:hidden;"), this.rowStyling.rowBorderIsOn && (e += "border: " + this.rowStyling.rowBorderWidth + "px " + this.rowStyling.rowBorderStyle + " " + this.rowStyling.rowBorderColor + ";"), this.rowStyling.rowDropShadowIsOn && (e += "filter: drop-shadow(" + this.rowStyling.rowDropShadowH + "px " + this.rowStyling.rowDropShadowV + "px " + this.rowStyling.rowDropShadowBlur + "px " + this.rowStyling.rowDropShadowColor + ");"), e
                    },
                    rowImage: function() {
                        var e = "width:" + this.rowImageStyling.rowImageWidth + "%;margin-top:" + this.rowImageStyling.rowImageMarginTop + "%;margin-bottom:" + this.rowImageStyling.rowImageMarginBottom + "%;",
                            t = this.rowImageStyling.rowImgBorderRadiusIsPixels ? "px" : "%";
                        return e += "border-radius: " + this.rowImageStyling.rowImgBorderRadiusTopLeft + 0 + t + " " + this.rowImageStyling.rowImgBorderRadiusTopRight + 0 + t + " " + this.rowImageStyling.rowImgBorderRadiusBottomRight + 0 + t + " " + this.rowImageStyling.rowImgBorderRadiusBottomLeft + 0 + t + ";", this.rowImageStyling.rowImgOverflowIsOn && (e += "overflow:hidden;"), this.rowImageStyling.rowImgBorderIsOn && (e += "border: " + this.rowImageStyling.rowImgBorderWidth + "px " + this.rowImageStyling.rowImgBorderStyle + " " + this.rowImageStyling.rowImgBorderColor + ";"), e
                    },
                    rows: function() {
                        return this.$store.state.app.rows
                    },
                    app: function() {
                        return this.$store.state.app
                    },
                    pointTypes: function() {
                        return this.$store.state.app.pointTypes
                    },
                    groups: function() {
                        return this.$store.state.app.groups
                    },
                    variables: function() {
                        return this.$store.state.app.variables
                    },
                    activated: function() {
                        return this.$store.state.app.activated
                    },
                    allChapters: function() {
                        return this.$store.state.app.chapters
                    },
                    objectHeight: function() {
                        return this.$store.state.app.styling.objectHeight && !this.row.isEditModeOn ? "d-flex fullHeight" : ""
                    },
                    replaceRowTitle: function() {
                        var e = this.row.title;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    replaceRowText: function() {
                        var e = this.row.titleText;
                        if ("undefined" !== typeof this.app.words) {
							const combinedRegex = new RegExp([...Object.keys(this.app.wordMap)].map(key => key.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&")).join("|"), "g");
							e = e.replace(combinedRegex, (match) => {
								if (this.app.pointTypeMap.hasOwnProperty(match)) {
									return this.app.pointTypeMap[match]
								} else if (this.app.objectMap.hasOwnProperty(match)) {
									return this.app.objectMap[match]
								} else if (this.app.wordMap.hasOwnProperty(match)) {
									return this.app.wordMap[match]
								}
								return match
							});
						}
						return e
                    },
                    isButtonPressable: function() {
                        return !(!this.row.onlyIfNoChoices || 0 === this.row.currentChoices)
                    }
                },
                methods: {
					objectWidthToNum: function(e) {
						switch(e) {
							case "col-sm-6":
							case "col-sm-5": return 2
							case "col-md-4": return 3
							case "col-md-3": return 4
							case "w-20": return 5
							case "col-lg-2": return 6
							case "w-14": return 7
							case "w-12": return 8
							case "w-11": return 9
							case "w-10": return 10
							case "w-9": return 11
							case "col-xl-1": return 12
							default: return 1
						}
					},
					objectWidthClass: function(e) {
						var t = (e.objectWidth || this.row.objectWidth),
							o = this.objectWidthToNum(t),
							s = this.app.objectsPerRow === "col-6" ? 2 : this.app.objectsPerRow === "col-4" ? 3 : 4;
						if (this.window.width > 1280) {
							return t
						} else if (this.window.width > 960) {
							switch(o) {
								case 1: return "col-12"
								case 2: return "col-6"
								case 3: return s > 2 ? "col-4" : this.app.objectsPerRow
								case 4: return s > 3 ? "col-3" : this.app.objectsPerRow
								default: return this.app.objectsPerRow
							}
						} else if (this.window.width > 480) {
							return o === 1 ? "col-12" : "col-6"
						} else {
							return "col-12"
						}
					},
					filterStyling: function(e, t) {
						if (t.privateFilterIsOn) return t.styling.reqFilterVisibleIsOn;
						if (e.privateFilterIsOn) return e.styling.reqFilterVisibleIsOn;
						if ("undefined" !== typeof t.objectDesignGroups) {
							for (var a = 0; a < t.objectDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compODG[t.objectDesignGroups[a].id]) {
									var co = this.app.compODG[t.objectDesignGroups[a].id],
										coD = this.app.objectDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling.reqFilterVisibleIsOn;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling.reqFilterVisibleIsOn;
										}
									}
								}
							}
						}
						if ("undefined" !== typeof e.rowDesignGroups) {
							for (var a = 0; a < e.rowDesignGroups.length; a++) {
								if ("undefined" !== typeof this.app.compRDG[e.rowDesignGroups[a].id]) {
									var co = this.app.compRDG[e.rowDesignGroups[a].id],
										coD = this.app.rowDesignGroups[co.designGroups];
									if (coD.privateFilterIsOn) {
										if ("" == coD.activatedId || this.activated.includes(coD.activatedId)) {
											return coD.styling.reqFilterVisibleIsOn;
										} else if ("undefined" !== typeof this.app.compGR[coD.activatedId]) {
											var coT = this.app.compGR[coD.activatedId],
												cGR = this.app.globalRequirements[coT.globalRequirements];
											if (this.checkRequireds(cGR)) return coD.styling.reqFilterVisibleIsOn;
										}
									}
								}
							}
						}
						return this.$store.state.app.styling.reqFilterVisibleIsOn;
					},
                    handleResize: function() {
                        this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    findAllActiveObjects: function(e, t) {
                        for (var o = 0; o < e.app.rows.length; o++)
                            for (var i = 0; i < e.app.rows[o].objects.length; i++) e.app.rows[o].objects[i].isActive && this.activeObjectList.push(e.app.rows[o].objects[i]);
                        if (e && e.children && e.children.length > 0)
                            for (var s = 0; s < e.children.length; s++) this.findAllActiveObjects(e.children[s], t)
                    },
                    createNewObject: function() {
                        var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateObjectId() {
							var s = "";
							for (var o = 0; o < th.app.objectIdLength; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.comp[s]) {
								return generateObjectId()
							} else {
								return s
							}
						}
						e = generateObjectId();
                        this.row.objects.push({
                            id: e,
                            title: this.app.defaultChoiceTitle,
                            text: this.app.defaultChoiceText,
							debugTitle: "",
                            image: "",
                            template: 1,
                            objectWidth: "",
                            isActive: !1,
                            isVisible: !0,
							multipleUseVariable: 0,
							initMultipleTimesMinus: 0,
							selectedThisManyTimesProp: 0,
                            defaultAspectWidth: this.row.defaultAspectWidth,
                            defaultAspectHeight: this.row.defaultAspectHeight,
                            requireds: [],
                            addons: [],
                            scores: [],
                            groups: [],
							objectDesignGroups: []
                        });
						if ("undefined" !== typeof this.app.compR[this.row.id]) {
							var co = this.app.compR[this.row.id],
								coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
							this.app.comp[e] = {rows: co.rows, objects: this.row.objects.length - 1, type: co.type};
						}
                    },
                    buttonActivate: function() {
                        if (this.row.btnPointAddon && "sumaddon" == this.row.buttonTypeRadio)
                            for (var e = Math.floor(Math.random() * (this.row.randomMax - this.row.randomMin) + this.row.randomMin), t = 0; t < this.app.pointTypes.length; t++) this.app.pointTypes[t].id == this.row.pointTypeRandom && (this.app.pointTypes[t].startingSum += e);
                        else if (this.row.buttonRandom) {
                            var o, i = [], k = [];
                            if (this.row.isWeightedRandom && "undefined" != typeof this.row.isWeightedRandom) {
                                var s = 0,
                                    r = 0;
                                for (o = 0; o < this.row.objects.length; o++) {
									if (this.checkRequireds(this.row.objects[o]) && !this.row.objects[o].isNotSelectable) {
										k.push(this.row.objects[o]);
										"undefined" === typeof this.row.objects[o].randomWeight || "" == this.row.objects[o].randomWeight ? s += 100 : s += parseInt(this.row.objects[o].randomWeight);
									}
								}
                                for (var a = 0; a < this.row.buttonRandomNumber; a++) {
                                    var n = Math.floor(Math.random() * s);
                                    for (o = 0; o < k.length; o++)
                                        if ("undefined" === typeof k[o].randomWeight || "" == k[o].randomWeight ? r += 100 : r += parseInt(k[o].randomWeight), n < r) {
                                            this.activateObject(k[o], this.row);
                                            break
                                        }
                                }
                            } else
                                for (o = 0; o < this.row.buttonRandomNumber; o++) {
									for (var a = 0; a < this.row.objects.length; a++)
										if (this.checkRequireds(this.row.objects[a]) && !this.row.objects[a].isNotSelectable) k.push(this.row.objects[a]);
                                    var l = Math.floor(Math.random() * k.length),
                                        c = k[l],
                                        d = 100,
                                        p = 0,
                                        u = !0;
									if ("undefined" === typeof c) break
                                    if (this.row.onlyUnselectedChoices) {
                                        while (i.includes(l) || this.activated.includes(c.id))
                                            if (p++, l = Math.floor(Math.random() * k.length), c = k[l], k.length <= o || d <= p) {
                                                u = !1;
                                                break
                                            }
                                    } else
                                        while (i.includes(l))
                                            if (p++, l = Math.floor(Math.random() * k.length), c = k[l], k.length <= o || d <= p) break;
                                    u && (i.push(l), this.activateObject(c, this.row))
                                }
                        } else this.row.buttonRandom || (this.row.buttonType && this.activated.includes(this.row.buttonId) ? this.activated.splice(this.activated.indexOf(this.row.buttonId), 1) : this.activated.push(this.row.buttonId))
                    },
                    checkIfDeselect: function(e) {
                        var t = this.$store.getters.checkRequireds(e);
                        if (e.deselectChoices && !t)
                            for (var o = 0; o < e.objects.length; o++) e.objects[o].isActive && e.currentChoices + 1 > e.allowedChoices && this.activateObject(e.objects[o], e);
                        return t
                    },
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    deleteEvent: function(e, t) {
                        t.splice(e, 1)
                    },
                    checkPoints: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum - parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					checkPointsR: function(e) {
                        for (var t = !0, o = 0; o < e.scores.length; o++)
                            if (this.checkRequireds(e.scores[o]) && !e.scores[o].isActive)
                                for (var i = 0; i < this.app.pointTypes.length; i++) this.app.pointTypes[i].id == e.scores[o].id && this.app.pointTypes[i].belowZeroNotAllowed && this.app.pointTypes[i].startingSum + parseInt(e.scores[o].value) < 0 && (t = !1);
                        return t
                    },
					playBgm: function(e, t, i) {
						function bgmFadeIn(th, f) {
							let v = 0,
								k = 0,
								o = 0;
							if (th.app.isFadingOut) {
								const lastTime = parseInt(th.app.lastFadeTime);
								if (th.app.bgmFadeTimer !== 0) clearTimeout(th.app.bgmFadeTimer), th.app.bgmFadeTimer = 0;
								th.app.bgmFadeTimer = setTimeout(() => {
									if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
									if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
										const iTime = e.bgmFadeInSec / 20;
										th.app.lastFadeTime = e.bgmFadeInSec;
										bgmPlayer.setVolume(0);
										bgmPlayer.playVideo();
										if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										if (th.app.isFadingOut) th.app.isFadingOut = !1;
										th.app.bgmFadeInterval = setInterval(() => {
											if (bgmPlayer.playerInfo.playerState === 1) {
												if (v < th.app.curVolume) {
													v += 5;
													bgmPlayer.setVolume(v);
													th.app.lastFadeTime = th.app.lastFadeTime - iTime;
												} else {
													bgmPlayer.setVolume(th.app.curVolume);
													clearInterval(th.app.bgmFadeInterval);
													th.app.bgmFadeInterval = 0;
													th.app.lastFadeTime = 0;
												}
											}
										}, iTime);
									} else {
										if (th.app.isFadingOut) th.app.isFadingOut = !1, clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										bgmPlayer.playVideo();
										bgmPlayer.setVolume(th.app.curVolume);
									}
									th.$set(th.app, "bgmObjectId", e.id);
									if (th.app.showMusicPlayer) {
										if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
										th.app.bgmTitleInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
												if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
													th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
													th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
													clearInterval(th.app.bgmTitleInterval);
													th.app.bgmTitleInterval = 0;
												}
											}
										}, 1000);
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										th.app.bgmPlayInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
												const curTime = parseInt(bgmPlayer.getCurrentTime());
												if (curTime !== th.app.curBgmTime) {
													if (k !== curTime) {
														th.$set(th.app, "curBgmTime", curTime);
													} else {
														o++;
														if (o > th.app.curBgmLength) o = 1;
														th.$set(th.app, "curBgmTime", o);
													}
												} else {
													k = curTime;
													o = curTime + 1;
													th.$set(th.app, "curBgmTime", o);
												}
											}
										}, 1000);
									}
								}, lastTime);
							} else {
								if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
								if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
									const iTime = e.bgmFadeInSec / 20;
									th.app.lastFadeTime = e.bgmFadeInSec;
									bgmPlayer.setVolume(0);
									bgmPlayer.playVideo();
									if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									if (th.app.isFadingOut) th.app.isFadingOut = !1;
									th.app.bgmFadeInterval = setInterval(() => {
										if (bgmPlayer.playerInfo.playerState === 1) {
											if (v < th.app.curVolume) {
												v += 5;
												bgmPlayer.setVolume(v);
												th.app.lastFadeTime = th.app.lastFadeTime - iTime;
											} else {
												bgmPlayer.setVolume(th.app.curVolume);
												clearInterval(th.app.bgmFadeInterval);
												th.app.bgmFadeInterval = 0;
												th.app.lastFadeTime = 0;
											}
										}
									}, iTime);
								} else {
									bgmPlayer.playVideo();
									bgmPlayer.setVolume(th.app.curVolume);
								}
								th.$set(th.app, "bgmObjectId", e.id);
								if (th.app.showMusicPlayer) {
									if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
									th.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
											if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
												th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(th.app.bgmTitleInterval);
												th.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									th.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== th.app.curBgmTime) {
												if (k !== curTime) {
													th.$set(th.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > th.app.curBgmLength) o = 1;
													th.$set(th.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												th.$set(th.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							}
						}
						function bgmFadeOut(th) {
							const steps = th.app.curVolume / 5;
							if (e.bgmFadeOut && e.bgmFadeOutSec > 0 && steps > 0) {
								const iTime = e.bgmFadeOutSec / steps;
								let v = th.app.curVolume;
								th.app.lastFadeTime = e.bgmFadeOutSec;
								th.app.isFadingOut = !0;
								if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
								th.app.bgmFadeInterval = setInterval(() => {
									if (v > 0 && "undefined" !== typeof bgmPlayer.setVolume) {
										v -= 5;
										bgmPlayer.setVolume(v);
										th.app.lastFadeTime = th.app.lastFadeTime - iTime;
									} else {
										if (th.app.isFadingOut) {
											bgmPlayer.pauseVideo();
											bgmPlayer.setVolume(th.app.curVolume);
											clearInterval(th.app.bgmFadeInterval);
											th.app.bgmFadeInterval = 0;
											th.app.lastFadeTime = 0;
											th.app.isFadingOut = !1;
											if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
											if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
											th.$set(th.app, "bgmTitle", "No Audio Title");
											th.$set(th.app, "curBgmTime", 0);
											th.$set(th.app, "curBgmLength", 0);
										}
									}
								}, iTime);
							} else {
								bgmPlayer.pauseVideo();
								if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
								if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
								th.$set(th.app, "bgmTitle", "No Audio Title");
								th.$set(th.app, "curBgmTime", 0);
								th.$set(th.app, "curBgmLength", 0);
							}
						}
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							var p = this.app.bgmIsPlaying,
								s = bgmPlayer.playerInfo.videoData.video_id,
								o = bgmPlayer.playerInfo.playerState,
								v = 0,
								f = !1;
							if ("undefined" === typeof this.app.bgmObjectId) this.$set(this.app, "bgmObjectId", e.id);
							if (s == t) {
								if (this.app.bgmObjectId == e.id) {
									if (p) {
										if (o === 2) {
											bgmFadeIn(this, f);
										} else {
											bgmPlayer.stopVideo();
											bgmFadeIn(this, f);
										}
									} else {
										bgmFadeOut(this);
									}
								} else {
									if (p) {
										bgmPlayer.stopVideo(), bgmFadeIn(this, f);
									} else {
										bgmFadeOut(this);
									}
								}
							} else {
								if (p) {
									f = !0;
									bgmFadeIn(this, f);
								}
							}
						} else {
							if (i < 10) {
								i++;
								setTimeout(() => {
									this.playBgm(e, t, i);
								}, 200);
							}
						}
					},
					updateScoresC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var nH = 0, nh = 0, nR = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var af = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[af[0]]) {
								var co = this.app.comp[af[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											bE = this.checkRequireds(coS);
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nh > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						} 
					},
					updateScoresS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.activated.splice(nH, 1);
											t.currentChoices -= 1;
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											this.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											var bE = this.checkRequireds(coS);
											if (bC !== bE) {
												var nC = 0;
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																	
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + parseInt(e.multipleUseVariable + 1) : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											var bE = !1;
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bE = this.checkRequireds(coS);
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
												} else {
													var aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bE = this.checkRequireds(coS);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
												}
											} else {
												var nH = this.activated.indexOf(eid);
												this.activated.splice(nH, 1);
												t.currentChoices -= 1;
												var bE = this.checkRequireds(coS);
												this.activated.splice(nH, 0, eid);
												t.currentChoices += 1;
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					updateScoresMulS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (this.scoreUpdate == "") this.scoreUpdate = "Scores Updated On: ";
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						for (var f = 0; f < this.activated.length; f++) {
							var aF = this.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) {
																		coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(co.objects, co.rows), coO.forcedActivated = !coO.forcedActivated, nh++) : this.selectedOneLess(coO, coR);
																	}
																	else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																}
																if (coO.forcedActivated && nh > 0) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + nh);
																}
															} else {
																(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coS.tmpDisScore < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coS.tmpDisScore);
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
													19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											if (e.id == this.exceptedScores[0]) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													this.activated.splice(this.activated.length - 1, 1), t.currentChoices -= 1;
													bE = this.checkRequireds(coS);
												} else {
													var aFI = this.activated[fI].split("/ON#");
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													aFI[1] > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, eid), t.currentChoices += 1);
													bE = this.checkRequireds(coS);
												}
											} else {
												this.activated.splice(nR, 1);
												t.currentChoices -= 1;
												bC = this.checkRequireds(coS);
												for (var a = 0; a < o.length; a++) {
													for (var n = 0; n < this.app.pointTypes.length; n++) {
														this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
													}
												}
												this.activated.splice(nR, 0, eid);
												t.currentChoices += 1;
												bE = this.checkRequireds(coS);
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum += coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !1;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum + coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														19 == this.scoreUpdate.length ? this.scoreUpdate += coO.title : this.scoreUpdate += ", " + coO.title;
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		if (this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) {
																			coO.forcedActivated ? (coO.forcedActivated = !coO.forcedActivated, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !coO.forcedActivated, nC++) : this.selectedOneLess(coO, coR);
																		}
																		else {
																			this.app.pointTypes[m].startingSum -= coSValue;
																			tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																			for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																				coS.isActiveMul[ee] = !0;
																			}
																		}
																	}
																	if (coO.forcedActivated && nC > 0) {
																		if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																		e.cancelForcedActivated.push(coO.id + "/ON#" + nC);
																	}
																} else {
																	(this.app.pointTypes[m].belowZeroNotAllowed && this.app.pointTypes[m].startingSum - coSValue < 0) ? ((coO.forcedActivated = coO.forcedActivated ? !coO.forcedActivated : coO.forcedActivated), this.activateObject(coO, coR)) : (this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue}));
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
							if ("Scores Updated On: " !== this.scoreUpdate && !this.app.hideScoresUpdated) this.text = this.scoreUpdate + ".", this.snackbar = !0;
							this.$set(this, "scoreUpdate", "");
						}
					},
					checkPointsMD: function(e) {
						var ei = 0,
							pT = 0;
						if (e.multiplyPointtypeIsOnCheck || e.dividePointtypeIsOnCheck) {
							if (e.multiplyPointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtMultiply[l];
													pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							} else if (e.dividePointtypeIsOnCheck) {
								for (var l = 0; l < e.pointTypeToDivide.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
											if (!this.app.pointTypes[m].belowZeroNotAllowed) break
											pT = this.app.pointTypes[m].startingSum;
											for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
												var mdO = this.app.mdObjects[n];
												if (mdO.id != e.id) {
													if (mdO.multiplyPointtypeIsOnCheck) {
														pT -= mdO.startingSumAtMultiply[l];
														pT += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
													} else if (mdO.dividePointtypeIsOnCheck) {
														pT -= mdO.startingSumAtDivide[l];
														pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													}
												} else {
													pT -= mdO.startingSumAtDivide[l];
													pT += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
													ei = n;
													break
												}
											}
											for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
												var mdO = this.app.mdObjects[n];
												if (mdO.multiplyPointtypeIsOnCheck) {
													if (mdO.multiplyPointtypeIsId) {
														for (var x = 0; x < this.app.pointTypes.length; x++) {
															if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																pT *= this.app.pointTypes[x].startingSum;
															}
														}
													} else {
														pT *= mdO.multiplyWithThis;
													}
												} else if (mdO.dividePointtypeIsOnCheck) {
													pT /= mdO.divideWithThis;
												}
											}
										}
									}
								}
							}
							if (pT < 0) return !1
						}
						return !0
					},
                    discountS: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								bTempStacked = !1,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										discountedFrom.push(e.id);
										scoreVal = coS.tmpDiscount[f][2];
										bTempStacked = !0;
										tmpNum = f;
									}
								}
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										coS.discountTextA.push(e.discountAfterText);
									}
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if (coS.discountScore > stackDiscount) {
									this.$set(coS, "tmpDisScore", coS.discountScore - stackDiscount);
									this.$set(coS, "isChangeDiscount", true);
									aDiscount.push(false);
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									if ("undefined" !== typeof coS.discountTextA) this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if ("undefined" !== typeof coS.discountTextB) this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
									coS.discountedFrom.push(...discountedFrom);
									if (bTempStacked) coS.tmpDiscount.splice(tmpNum, 1);
									coS.tmpDiscount.push(aDiscount);
									this.$set(coS, "notStackableDiscount", false);
								} else {
									this.$set(coS, "isChangeDiscount", false);
									discountedFrom.push(e.id);
									if (bTempStacked) {
										coS.tmpDiscount[tmpNum][1] = discountedFrom;
										coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
										coS.tmpDiscount[tmpNum][3] = stackDiscount;
									} else {
										if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
										"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
										aDiscount.push(discountedFrom);
										aDiscount.push(stackDiscountCal);
										aDiscount.push(stackDiscount);
										coS.tmpDiscount.push(aDiscount);
									}
								}
							} else {
								scoreVal = coS.discountIsOn ? coS.discountScoreCal : parseInt(coS.value);
								var tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
								if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
								else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
								else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
								else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
								stackDiscountCal = stackDiscount;
								if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
								if (e.discountShow) {
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextA) this.$set(coS, "discountTextA", []);
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextA) this.$set(coS, "dupTextA", {});
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] + 1
										} else {
											"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
											coS.dupTextA[e.discountAfterText] = 1;
											coS.discountTextA.push(e.discountAfterText);
										}
									} else {
										"undefined" !== typeof coS.discountAfterText ? this.$set(coS, "discountAfterText", coS.discountAfterText + e.discountAfterText) : this.$set(coS, "discountAfterText", e.discountAfterText);
										coS.discountTextA.push(e.discountAfterText);
									}
									this.$set(coS, "discountShow", e.discountShow);
									if ("undefined" === typeof coS.discountTextB) this.$set(coS, "discountTextB", []);
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0
									if (e.discountTextDuplicated) {
										if ("undefined" === typeof coS.dupTextB) this.$set(coS, "dupTextB", {});
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] + 1
										} else {
											"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
											coS.dupTextB[e.discountBeforeText] = 1;
											coS.discountTextB.push(e.discountBeforeText);
										}
									} else {
										"undefined" !== typeof coS.discountBeforeText ? this.$set(coS, "discountBeforeText", coS.discountBeforeText + e.discountBeforeText) : this.$set(coS, "discountBeforeText", e.discountBeforeText);
										coS.discountTextB.push(e.discountBeforeText);
									}
								}
								if ("object" !== typeof coS.discountedFrom) this.$set(coS, "discountedFrom", []);
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountedFrom.push(e.id);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
								if (!coS.discountIsOn) this.$set(coS, "discountIsOn", true);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								aDiscount = [];
							if ("undefined" === typeof coS.tmpDiscount) this.$set(coS, "tmpDiscount", []);
							if (1 == e.discountOperator) stackDiscount = scoreVal - parseInt(e.discountValue);
							else if (2 == e.discountOperator) stackDiscount = scoreVal + parseInt(e.discountValue);
							else if (3 == e.discountOperator) stackDiscount = parseInt(scoreVal * e.discountValue);
							else if (4 == e.discountOperator) stackDiscount = parseInt(scoreVal / e.discountValue);
							stackDiscountCal = stackDiscount;
							if (e.discountLowLimitIsOn && "undefined" !== typeof e.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(e.discountLowLimit));
							if (coS.discountIsOn) {
								"undefined" === typeof e.stackableDiscount ? aDiscount.push(false) : aDiscount.push(e.stackableDiscount);
								if (coS.discountScore > stackDiscount) {
									aDiscount.push(coS.discountedFrom);
									aDiscount.push(coS.discountScoreCal);
									aDiscount.push(coS.discountScore);
									if (coS.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
									this.$set(coS, "discountScore", stackDiscount);
									this.$set(coS, "discountScoreCal", stackDiscountCal);
									this.$set(coS, "discountShow", e.discountShow);
									this.$set(coS, "discountBeforeText", e.discountBeforeText);
									this.$set(coS, "discountAfterText", e.discountAfterText);
									this.$set(coS, "discountedFrom", e.id);
									this.$set(coS, "notStackableDiscount", true);
								} else {
									aDiscount.push(e.id);
									aDiscount.push(stackDiscountCal);
									aDiscount.push(stackDiscount);
									if (e.discountShow) {
										aDiscount.push(true);
										aDiscount.push(e.discountBeforeText);
										aDiscount.push(e.discountAfterText);
									} else {
										aDiscount.push(false);
									}
								}
								coS.tmpDiscount.push(aDiscount);
							} else {
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								if (e.discountShow) this.$set(coS, "discountShow", e.discountShow), this.$set(coS, "discountBeforeText", e.discountBeforeText), this.$set(coS, "discountAfterText", e.discountAfterText);
								this.$set(coS, "discountIsOn", true);
								this.$set(coS, "discountedFrom", e.id);
								this.$set(coS, "notStackableDiscount", true);
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
					discountC: function(e, coS) {
						if (e.stackableDiscount) {
							var scoreVal = parseInt(coS.value),
								stackDiscount = 0,
								stackDiscountCal = 0,
								tmpNum = 0,
								discountedFrom = [],
								aDiscount = [];
							if (coS.notStackableDiscount) {
								for (var f = 0; f < coS.tmpDiscount.length; f++) {
									if (coS.tmpDiscount[f][0]) {
										discountedFrom = coS.tmpDiscount[f][1];
										scoreVal = coS.tmpDiscount[f][2];
										tmpNum = f;
									}
								}
								discountedFrom.splice(discountedFrom.indexOf(e.id), 1);
								if (discountedFrom.length > 0) {
									for (var f = 0; f < discountedFrom.length; f++) {
										if ("undefined" !== typeof this.app.comp[discountedFrom[f]]) {
											var coT = this.app.comp[discountedFrom[f]],
												coTR = co.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
											else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
											else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
											else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
											stackDiscountCal = stackDiscount;
											if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
										}
									}
									coS.tmpDiscount[tmpNum][1] = discountedFrom;
									coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
									coS.tmpDiscount[tmpNum][3] = stackDiscount;
								} else {
									coS.tmpDiscount.splice(tmpNum, 1);
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								this.$set(coS, "isChangeDiscount", false);
							} else {
								var scoreVal = parseInt(coS.value),
									indexId = coS.discountedFrom.indexOf(e.id),
									tmpDisScore = coS.discountScore,
									stackDiscount = 0,
									stackDiscountCal = 0,
									tmpNum = 0,
									bTempChanged = !1,
									discountedFrom = "";
								coS.discountedFrom.splice(indexId, 1);
								if (coS.discountedFrom.length > 0) {
									for (var d = 0; d < coS.discountedFrom.length; d++) {
										if ("undefined" !== typeof this.app.comp[coS.discountedFrom[d]]) {
											var coT = this.app.comp[coS.discountedFrom[d]],
												coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (coTO.stackableDiscount) {
												if (1 == coTO.discountOperator) stackDiscount = scoreVal - parseInt(coTO.discountValue);
												else if (2 == coTO.discountOperator) stackDiscount = scoreVal + parseInt(coTO.discountValue);
												else if (3 == coTO.discountOperator) stackDiscount = parseInt(scoreVal * coTO.discountValue);
												else if (4 == coTO.discountOperator) stackDiscount = parseInt(scoreVal / coTO.discountValue);
												stackDiscountCal = stackDiscount;
												scoreVal = stackDiscountCal;
												if (coTO.discountLowLimitIsOn && "undefined" !== typeof coTO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coTO.discountLowLimit));
											}
										}
									}
								} else {
									stackDiscountCal = parseInt(coS.value);
									stackDiscount = parseInt(coS.value);
								}
								if ("undefined" !== typeof coS.tmpDiscount) {
									for (var f = 0; f < coS.tmpDiscount.length; f++) {
										if (!coS.tmpDiscount[f][0]) {
											if (stackDiscount > coS.tmpDiscount[f][3]) {
												discountedFrom = coS.tmpDiscount[f][1];
												stackDiscountCal = coS.tmpDiscount[f][2];
												stackDiscount = coS.tmpDiscount[f][3];
												tmpNum = f;
												bTempChanged = !0;
											}
										}
									}
								}
								if (e.discountShow) {
									var dA = !1;
									if (coS.discountTextA.includes(e.discountAfterText)) dA = !0;
									if (e.discountTextDuplicated) {
										if (dA) {
											coS.dupTextA[e.discountAfterText] = coS.dupTextA[e.discountAfterText] - 1;
											if (coS.dupTextA[e.discountAfterText] == 0) {
												coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
												this.$delete(coS.dupTextA, e.discountAfterText);
											}
										}
									} else {
										coS.discountTextA.splice(coS.discountTextA.indexOf(e.discountAfterText), 1);
									}
									var dB = !1;
									if (coS.discountTextB.includes(e.discountBeforeText)) dB = !0;
									if (e.discountTextDuplicated) {
										if (dB) {
											coS.dupTextB[e.discountBeforeText] = coS.dupTextB[e.discountBeforeText] - 1;
											if (coS.dupTextB[e.discountBeforeText] == 0) {
												coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
												this.$delete(coS.dupTextB, e.discountBeforeText);
											}
										}
									} else {
										coS.discountTextB.splice(coS.discountTextB.indexOf(e.discountBeforeText), 1);
									}
								}
								if (bTempChanged) {
									if (discountedFrom.length == 0) {
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", discountedFrom);
										if (coS.tmpDiscount[tmpNum][4]) {
											this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
											this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
										}
										coS.tmpDiscount.splice(tmpNum, 1);
										coS.notStackableDiscount = true;
									}
								} else {
									this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
									this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
									if (coS.discountedFrom.length == 0) this.$set(coS, "discountIsOn", false);
								}
								this.$set(coS, "discountScore", stackDiscount);
								this.$set(coS, "discountScoreCal", stackDiscountCal);
								coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
							}
						} else {
							var scoreVal = parseInt(coS.value),
								tmpDisScore = coS.discountScore,
								tmpNum = 0,
								bChanged = !1;
							if (coS.notStackableDiscount) {
								if (coS.discountedFrom == e.id) {
									if ("undefined" !== typeof coS.tmpDiscount && coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[0][3];
										bChanged = !0;
										for (var f = 1; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										this.$set(coS, "notStackableDiscount", !coS.tmpDiscount[tmpNum][0]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[tmpNum][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[tmpNum][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									} else {
										this.$set(coS, "discountedFrom", "");
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", scoreVal);
										this.$set(coS, "discountBeforeText", "");
										this.$set(coS, "discountAfterText", "");
										this.$set(coS, "discountIsOn", false);
										this.$set(coS, "notStackableDiscount", false);
									}
								} else {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
								}
							} else {
								if ("undefined" !== typeof coS.tmpDiscount) {
									coS.tmpDiscount = coS.tmpDiscount.filter(item => item[1] !== e.id);
									if (coS.tmpDiscount.length > 0) {
										scoreVal = coS.tmpDiscount[f][3];
										bChanged = !0;
										for (var f = 0; f < coS.tmpDiscount.length; f++) {
											if (scoreVal > coS.tmpDiscount[f][3]) {
												scoreVal = coS.tmpDiscount[f][3];
												tmpNum = f;
											}
										}
									}
									if (bChanged) {
										this.$set(coS, "discountScore", scoreVal);
										this.$set(coS, "discountScoreCal", coS.tmpDiscount[tmpNum][2]);
										this.$set(coS, "discountedFrom", coS.tmpDiscount[tmpNum][1]);
										if (coS.tmpDiscount[tmpNum][0]) {
											this.$set(coS, "discountBeforeText", coS.discountTextB.join(""));
											this.$set(coS, "discountAfterText", coS.discountTextA.join(""));
										} else {
											if (coS.tmpDiscount[tmpNum][4]) {
												this.$set(coS, "discountBeforeText", coS.tmpDiscount[f][5]);
												this.$set(coS, "discountAfterText", coS.tmpDiscount[f][6]);
											} else {
												this.$set(coS, "discountBeforeText", "");
												this.$set(coS, "discountAfterText", "");
											}
										}
										coS.tmpDiscount.splice(tmpNum, 1);
									}
								}
							}
							coS.discountScore != tmpDisScore ? (this.$set(coS, "tmpDisScore", tmpDisScore - coS.discountScore), this.$set(coS, "isChangeDiscount", true)) : this.$set(coS, "isChangeDiscount", false);
						}
					},
                    forceActivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
							if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
						}
						if (this.checkRequireds(coO) && this.checkPoints(coO)) {
							if (coO.isSelectableMultiple) {
								var ee = o;
								if (ee > 0) {
									for (var n = 0; n < ee; n++) {
										this.selectedOneMore(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else if (ee < 0) {
									for (var pp = 0; pp < -1 * ee; pp++) {
										if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
										this.selectedOneLess(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								}
							} else {
								if (!coO.isActive) this.activateObject(coO, coR);
								if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
							}
							if(!coO.isActive) {
								if(coO.isSelectableMultiple) {
									if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
									e.cancelForcedActivated.push(coO.id + "/ON#" + o);
								}
								this.$set(coO, "forcedActivated", !1);
							}
						} else {
							if(coO.isSelectableMultiple) {
								if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
								e.cancelForcedActivated.push(coO.id + "/ON#" + o);
							}
							this.$set(coO, "forcedActivated", !1);
						}
					},
					forceDeactivate: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
					forceDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (e.selectedThisManyTimesProp == 0) {
									if (coO.isActive && !e.isNotDeactivate) {
										if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
										this.activateObject(coO, coR);
									}
								}
							}
						}
					},
					forceRandomActivate: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						this.$set(e, 'activatedRandom', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandom = rd.slice(0, nAR);
						for (var a = 0, b = 0, v = 0; v < parseInt(nAR) + b; v++) {
							var rndV = e.activatedRandom[v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[rndV[0]]) {
								var co = this.app.comp[rndV[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = rndV[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandom.splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandom.splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomActivateMul: function(e) {
						var y = e.activateThisChoice.split(","),
							ya = "",
							ySet = new Set();
						for (var a = 0; a < y.length; a++) {
							ya = y[a].split("/ON#")[0];
							if ("undefined" !== typeof this.app.compG[ya]) {
								var yCo = this.app.compG[ya],
									yCoG = this.app.groups[yCo.groups],
									yCoGE = yCoG.elements;
								yCoGE.forEach(item => ySet.add(item.id));
							} else if ("undefined" !== typeof this.app.comp[ya]) {
								ySet.add(ya);
							}
						}
						var RD = [...ySet],
							rd = RD.filter(item => !this.activated.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
							nAR = parseInt(e.numActivateRandom) > rd.length ? rd.length : parseInt(e.numActivateRandom);
						if ("undefined" === typeof e.activatedRandomMul) this.$set(e, 'activatedRandomMul', []);
						for (var v = rd.length - 1; v > 0; v--) {
							var rnd = Math.floor(Math.random() * (v + 1));
							[rd[v], rd[rnd]] = [rd[rnd], rd[v]];
						}
						e.activatedRandomMul.push(rd.slice(0, nAR));
						for (var a = 0, b = 0, v = 0; v < nAR + b; v++) {
							var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp - 1][v].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aRM[0]]) {
								var co = this.app.comp[aRM[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (this.checkRequireds(coO) && this.checkPoints(coO)) {
									if (coO.isSelectableMultiple) {
										var ee = aRM[1];
										if (ee > 0) {
											for (var n = 0; n < ee; n++) {
												this.selectedOneMore(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
											}
										} else if (ee < 0) {
											for (var pp = 0; pp < -1 * ee; pp++) {
												if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
												this.selectedOneLess(coO, coR);
												if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
											}
										}
									} else {
										if (!coO.isActive) this.activateObject(coO, coR);
										if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !0);
									}
								} else {
									if (nAR + a < rd.length) {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1, rd[nAR + a]);
										a++, v--;
									} else {
										e.activatedRandomMul[e.selectedThisManyTimesProp - 1].splice(v, 1);
										b--, v--;
									}
								}
							}
						}
					},
					forceRandomDeactivateMul: function(e, t, o) {
						var co = this.app.comp[t],
							coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
							coO = coR.objects[co.objects];
						if (coO.isActive) {
							if (!e.isAllowDeselect) this.$set(coO, "forcedActivated", !1);
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice && coO.activateThisChoice.split(",").some(item => item.split("/ON#")[0] == e.id)) {
								if (!this.linkedObjects.includes(e.id)) this.linkedObjects.push(e.id);
							}
							if (coO.isSelectableMultiple) {
								if ("undefined" !== typeof e.cancelForcedActivated && e.cancelForcedActivated.some(item => item.split("/ON#")[0] == t)) {
									for (var AC = 0, EE = 0; AC < e.cancelForcedActivated.length; AC++) {
										var cFA = e.cancelForcedActivated[AC].split("/ON#");
										if (cFA[0] == t) {
											EE = parseInt(o) - parseInt(cFA[1]), e.cancelForcedActivated.splice(AC, 1);
											break
										}
									}
									if (EE > 0) {
										for (var n = 0; n < EE; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (EE < 0) {
										for (var pp = 0; pp < -1 * EE; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								} else {
									if (ee = o, ee > 0) {
										for (var n = 0; n < ee; n++) {
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus - 1);
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneLess(coO, coR);
											}
										}
									} else if (ee < 0) {
										for (var pp = 0; pp < -1 * ee; pp++) {
											if (!e.isNotDeactivate) {
												if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
												this.selectedOneMore(coO, coR);
											}
											if (!e.isAllowDeselect) this.$set(coO, "numMultipleTimesMinus", coO.numMultipleTimesMinus + 1);
										}
									}
								}
							} else {
								if (coO.isActive && !e.isNotDeactivate) {
									if (!this.exceptedObjects.includes(coO.id)) this.exceptedObjects.push(coO.id);
									this.activateObject(coO, coR);
								}
							}
						}
					},
                    activateObject: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						var i = this,
							s = this.checkRequireds(e),
							o = this.checkPoints(e),
							k = !0;
						if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
							var cnt = 0;
							for (var r = 0; r < t.objects.length; r++) {
								if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
									if (t.objects[r].isSelectableMultiple)
										for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
									else
										this.activateObject(t.objects[r], t);
									break
								}
								else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
							}
							if (cnt >= t.allowedChoices) k = !1;
						}
						if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices) && !this.activated.includes(eid) && e.textfieldIsOn && e.customTextfieldIsOn && !this.app.wordChangeComplete) {
							this.$refs.confirm.open("", e.wordPromptText, {noconfirm: !0, word: !0}, e.wordChangeSelect)
							.then(({result, wordText}) => {
								if (result) {
									e.wordChangeSelect = wordText;
								} else {
									e.wordChangeSelect = e.wordChangeDeselect;
								}
								i.$set(i.app, "wordChangeComplete", !0);
								i.activateObject(e, t);
								i.$set(i.app, "wordChangeComplete", !1);
							});
						} else {
							if (!(e.selectOnce && e.isActive) && !this.linkedObjects.includes(e.id)) {
								for (var g = 0; g < e.scores.length; g++)
									if ("undefined" !== typeof e.scores[g].isRandom && e.scores[g].isRandom && !e.scores[g].setValue) {
										e.scores[g].value = Math.floor(Math.random() * (parseInt(e.scores[g].maxValue) - parseInt(e.scores[g].minValue) + 1)) + parseInt(e.scores[g].minValue);
										e.scores[g].setValue = !0;
										for (var a = 0; a < this.app.pointTypes.length; a++) this.app.pointTypes[a].id == e.scores[g].id && this.app.pointTypes[a].belowZeroNotAllowed && this.app.pointTypes[a].startingSum - parseInt(e.scores[g].value) < 0 && (e.scores[g].setValue = !1);
									}
								var tmpScores = [];
								if (!this.exceptedObjects.length == 0 && !this.exceptedObjects.includes(eid)) this.exceptedObjects.push(eid);
								if (s && o && k && (t.currentChoices < t.allowedChoices || 0 == t.allowedChoices)) {
									if (this.activated.includes(eid)) {
										if (this.checkPointsMD(e)) {
											for (var a = 0; a < e.scores.length; a++) {
												if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
													for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
											}
											var ee = 0, EE = 0;
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
													for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
														var rdV = e.activatedRandom[v].split("/ON#"),
															rdNV = rdV.length > 1 ? rdV[1] : 1;
														if ("undefined" !== typeof this.app.comp[rdV[0]]) {
															this.forceDeactivate(e, rdV[0], rdNV);
														}
													}
												} else if (!e.isActivateRandom) {
													for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
														var pv = p[v].split("/ON#"),
															pnV = pv.length > 1 ? pv[1] : 1;
														if ("undefined" !== typeof this.app.comp[pv[0]]) {
															this.forceDeactivate(e, pv[0], pnV);
														} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
															var coG = this.app.compG[pv[0]],
																coGE = this.app.groups[coG.groups].elements;
															for (var h = coGE.length - 1; h >= 0; h--) {
																if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																	this.forceDeactivate(e, coGE[h].id, pnV);
																}
															}
														}
													}
												}
											}
											for (var f = 0; f < this.activated.length; f++) {
												var af = this.activated[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[af[0]]) {
													var co = this.app.comp[af[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
													if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
														var nH = this.activated.indexOf(eid);
														this.activated.splice(nH, 1);
														t.currentChoices -= 1;
														var bR = this.checkRequireds(coO);
														this.activated.splice(nH, 0, eid);
														t.currentChoices += 1;
														if (!bR) {
															this.exceptedObjects.push(coO.id);
															if (coO.isMultipleUseVariable) {
																for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																	coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
																}
																if (coO.forcedActivated) {
																	if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																	e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																}
															} else {
																if (coO.forcedActivated) coO.forcedActivated = !1;
																this.activateObject(coO, coR);
															}
															f--;
														}
													}
												}
											}
											if (e.multiplyPointtypeIsOnCheck) {
												e.multiplyPointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.dividePointtypeIsOnCheck) {
												e.dividePointtypeIsOnCheck = !1;
												var ei = 0;
												for (var l = 0; l < e.pointTypeToDivide.length; l++) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
															for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
																var mdO = this.app.mdObjects[n];
																if (mdO.id != e.id) {
																	if (mdO.multiplyPointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																	} else if (mdO.dividePointtypeIsOnCheck) {
																		this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																		this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																	ei = n;
																	break
																}
															}
															for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
																var mdO = this.app.mdObjects[n];
																if (mdO.multiplyPointtypeIsOnCheck) {
																	if (mdO.multiplyPointtypeIsId) {
																		for (var x = 0; x < this.app.pointTypes.length; x++) {
																			if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																				mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																				this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																			}
																		}
																	} else {
																		mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																		this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																	}
																} else if (mdO.dividePointtypeIsOnCheck) {
																	mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																	this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
																}
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
														}
													}
												}
												this.app.mdObjects.splice(ei, 1);
											}
											if (e.isChangeVariables) {
												for (var m = 0; m < e.changedVariables.length; m++) {
													for (var n = 0; n < this.app.variables.length; n++) {
														if (e.changedVariables[m] == this.app.variables[n].id) {
															if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
															else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
															else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
														}
													}
												}
											}
											if (e.textfieldIsOn) {
												for (var m = 0; m < this.app.words.length; m++) {
													if (this.app.words[m].id == e.idOfTheTextfieldWord) {
														this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
														this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
													}
												}
											}
											if (e.addToAllowChoice)
												if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
													var co = this.app.compR[e.idOfAllowChoice],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
													var d = coR.currentChoices;
													if (d > coR.allowedChoices) {
														var u = d - coR.allowedChoices;
														for (var v = 0; v < coR.objects.length; v++) {
															if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
																if (coR.objects[v].isSelectableMultiple)
																	for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
																else
																	this.activateObject(coR.objects[v], coR);
																u--;
															}
														}
													}
												}
											if (e.discountOther) {
												if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
													if (e.isDisChoices) {
														if ("undefined" !== typeof e.discountChoices) {
															for (var a = 0; a < e.discountChoices.length; a++) {
																if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																	var co = this.app.comp[e.discountChoices[a]],
																		coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																		coO = coR.objects[co.objects];
																	for (var c = 0; c < coO.scores.length; c++) {
																		var coS = coO.scores[c];
																		if (!coS.isNotDiscountable) {
																			this.discountC(e, coS);
																		}
																	}
																}
															}
														}
													} else {
														if ("undefined" !== typeof e.discountGroups) {
															for (var a = 0; a < this.app.groups.length; a++) {
																if (e.discountGroups.includes(this.app.groups[a].id)) {
																	for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																		if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																			var co = this.app.comp[this.app.groups[a].elements[b].id],
																				coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																				coO = coR.objects[co.objects];
																			for (var c = 0; c < coO.scores.length; c++) {
																				var coS = coO.scores[c];
																				if (!coS.isNotDiscountable) {
																					this.discountC(e, coS);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
											this.updateScoresC(e, t, tmpScores, 0);
											if (e.isImageUpload) {
												this.$set(e, "image", e.defaultImage);
											}
											if (e.backpackBtnRequirement)
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.changePointBar) {
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barBackgroundColor;
													this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
													this.$set(e, "changedBarBgColor", a);
												}
												if (e.changeBarTextColorIsOn) {
													var a = this.app.styling.barTextColor;
													this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
													this.$set(e, "changedBarTextColor", a);
												}
												if (e.changeBarBgColorIsOn) {
													var a = this.app.styling.barIconColor;
													this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
													this.$set(e, "changedBarIconColor", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
											if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
												if ("undefined" !== typeof bgmPlayer.unMute) {
													this.$set(this.app, "isMute", !1);
													bgmPlayer.unMute();
												}
											}
											if (e.isContentHidden) {
												for (var a = 0; a < e.hiddenContentsRow.length; a++) {
													if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
														var co = this.app.compR[e.hiddenContentsRow[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														for (var b = 0; b < e.hiddenContentsType.length; b++) {
															if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
															else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
															else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
															else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
															else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
															else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
															else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
														}
													}
												}
											}
											this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1;
											e.isActive = !e.isActive, this.updateActivated();
										}
									} else {
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
														}
													}
												} else {
													if("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																for (var b = 0; b < this.app.groups[a].elements.length; b++)
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																				if (!coS.isNotDiscountable) {
																					this.discountS(e, coS);
																				}
																			}
																		}
																	}
															}
														}
													}
												} 
											}
										}
										for (var g = 0; g < e.scores.length; g++)
											if (this.checkRequireds(e.scores[g]) && !e.scores[g].isActive)
												for (var w = 0; w < this.app.pointTypes.length; w++) this.app.pointTypes[w].id == e.scores[g].id && (this.app.pointTypes[w].startingSum -= (e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)), e.scores[g].isActive = !0, tmpScores.push({id: e.scores[g].id, value: e.scores[g].discountIsOn ? e.scores[g].discountScore : parseInt(e.scores[g].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[w].id, this.app.pointTypes[w].startingSum), e.scores[g].isChangeDiscount && this.$set(e.scores[g], "isChangeDiscount", false));
										this.activated.push(eid), t.currentChoices += 1;
										var a, f, b, m, v, ee = 0;
										if (e.duplicateRow) {
											if ("undefined" !== typeof e.duplicateRowId && "undefined" !== typeof e.duplicateRowPlace) this.duplicateRow(e, t);
										}
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom) {
												this.forceRandomActivate(e);
											} else {
												for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
													var yv = y[v].split("/ON#"),
														yNV = yv.length > 1 ? yv[1] : 1;
													if ("undefined" !== typeof this.app.comp[yv[0]]) {
														this.forceActivate(e, yv[0], yNV);
													} else if ("undefined" !== typeof this.app.compG[yv[0]]) {
														var coG = this.app.compG[yv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var w = 0; w < coGE.length; w++) {
															if ("undefined" !== typeof this.app.comp[coGE[w].id]) {
																this.forceActivate(e, coGE[w].id, yNV);
															}
														}
													}
												}
											}
										}
										if (e.deactivateOtherChoice)
											for (var y = e.deactivateThisChoice.split(","), f = 0; f < y.length; f++) {
												var yf = y[f].split("/ON#");
												if ("undefined" !== typeof this.app.comp[yf[0]]) {
													var co = this.app.comp[yf[0]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
														coO = coR.objects[co.objects];
														if (!coO.forcedActivated) {
															if (coO.isSelectableMultiple) {
																var ee = yf[1];
																if (ee > 0) {
																	for (var n = 0; n < ee; n++) {
																		this.selectedOneLess(coO, coR);
																	}
																} else if (ee < 0) {
																	for (var pp = 0; pp < -1 * ee; pp++) {
																		this.selectedOneMore(coO, coR);
																	}
																}
															} else {
																if (coO.isActive) this.activateObject(coO, coR);
															}
														}
												} else if ("undefined" !== typeof this.app.compG[yf[0]]) {
													var co = this.app.compG[yf[0]],
														coG = this.app.groups[co.groups];
													for (var T = 0; T < coG.elements.length; T++) {
														if ("undefined" !== typeof this.app.comp[coG.elements[T].id]) {
															var coT = this.app.comp[coG.elements[T].id],
																coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																coTO = coTR.objects[coT.objects];
															if (!coTO.forcedActivated) {
																if (coTO.isSelectableMultiple) {
																	var ee = yf[1];
																	if (ee > 0) {
																		for (var n = 0; n < ee; n++) {
																			this.selectedOneLess(coTO, coTR);
																		}
																	} else if (ee < 0) {
																		for (var pp = 0; pp < -1 * ee; pp++) {
																			this.selectedOneMore(coTO, coTR);
																		}
																	}
																} else {
																	if (coTO.isActive) this.activateObject(coTO, coTR);
																}
															}
														}
													}
												}
											}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (!this.exceptedObjects.includes(coO.id)) {
													if (!this.checkRequireds(coO)) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOn) {
											e.multiplyPointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtMultiply) this.$set(e, "startingSumAtMultiply", []);
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++)
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														if (e.multiplyPointtypeIsId)
															for (var x = 0; x < this.app.pointTypes.length; x++) {
																if (this.app.pointTypes[x].id == e.multiplyWithThis) {
																	e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																	this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																}
															}
														else e.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * e.multiplyWithThis, this.app.pointTypes[m].startingSum *= e.multiplyWithThis; this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
											}
											this.app.mdObjects.push(e);
										}
										if (e.dividePointtypeIsOn) {
											e.dividePointtypeIsOnCheck = !0;
											if ("object" !== typeof e.startingSumAtDivide) this.$set(e, "startingSumAtDivide", []);
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														e.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / e.divideWithThis;
														this.app.pointTypes[m].startingSum /= e.divideWithThis;
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.push(e);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1") this.app.variables[n].isTrue = !0;
														else if (e.changeType == "2") this.app.variables[n].isTrue = !1;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresS(e, t, tmpScores, 0);
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = e.wordChangeSelect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.isImageUpload) {
											this.$set(e, "defaultImage", e.image);
											this.currentComponent = "appImageUpload"
										}
										if (e.backpackBtnRequirement) {
											if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
										}
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.scrollToRow) {
											var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
												compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
											if (e.scrollToObject) {
												if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
													if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.comp[e.scrollObjectId];
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
														if (!coR.isEditModeOn) {
															this.$nextTick(() => {
																if (coR) {
																	var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																	if (coO) {
																		if (isBackpack) {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																		} else {
																			compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																		}
																	}
																}
															});
														}
													}
												}
											} else {
												if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
													if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
														var p = this.$el.offsetParent.offsetParent.parentElement.children,
															co = this.app.compR[e.scrollRowId];
															coR = p[co.rows];
														this.$nextTick(() => {
															if (coR) {
																if (isBackpack) {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																} else {
																	compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																}
															}
														});
													}
												}
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
												this.app.bgmIsPlaying = !0;
												this.playBgm(e, e.bgmId, 0);
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.mute) {
												this.$set(this.app, "isMute", !0);
												bgmPlayer.mute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													if (!coR.textIsRemoved) this.$set(coR, "textIsRemoved", true);
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", true);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", true);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", true);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", true);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", true);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", true);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", true);
													}
												}
											}
										}
										if (e.isFadeTransition) {
											"undefined" === typeof e.fadeTransitionColor || "" === e.fadeTransitionColor ? this.$set(this.app, "fadeTransitionColor", "000000FF") : this.$set(this.app, "fadeTransitionColor", e.fadeTransitionColor);
											"undefined" === typeof e.fadeTransitionTime || "" === e.fadeTransitionTime ? this.$set(this.app, "fadeTransitionTime", 0.25) : this.$set(this.app, "fadeTransitionTime", (e.fadeTransitionTime / 1000));
											this.$set(this.app, "fadeTransitionIsOn", !0);
											this.$nextTick(() => {
												setTimeout(() => {
													this.$set(this.app, "fadeTransitionIsOn", !1);
												}, this.app.fadeTransitionTime * 1000);
											});
										}
										e.isActive = !e.isActive, this.updateActivated();
										if (e.cleanACtivatedOnSelect) this.cleanActivated();
									}
								} else if (this.activated.includes(eid)) {
									if (this.checkPointsMD(e)) {
										for (var a = 0; a < e.scores.length; a++)
											if (this.checkRequireds(e.scores[a]) && e.scores[a].isActive || e.scores[a].isActive)
												for (var n = 0; n < this.app.pointTypes.length; n++) this.app.pointTypes[n].id == e.scores[a].id && (this.app.pointTypes[n].startingSum += (e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)), e.scores[a].isActive = !1, e.scores[a].setValue = !1, tmpScores.push({id: e.scores[a].id, value: e.scores[a].discountIsOn ? e.scores[a].discountScore : parseInt(e.scores[a].value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[n].id, this.app.pointTypes[n].startingSum), e.scores[a].isChangeDiscount && this.$set(e.scores[a], "isChangeDiscount", false));
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandom) {
												for (var v = e.activatedRandom.length - 1; v >= 0; v--) {
													var rdV = e.activatedRandom[v].split("/ON#"),
														rdNV = rdV.length > 1 ? rdV[1] : 1;
													if ("undefined" !== typeof this.app.comp[rdV[0]]) {
														this.forceDeactivate(e, rdV[0], rdNV);
													}
												}
											} else if (!e.isActivateRandom) {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== typeof this.app.comp[pv[0]]) {
														this.forceDeactivate(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivate(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var af = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[af[0]]) {
												var co = this.app.comp[af[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects];
												if (coO.id !== eid && !this.exceptedObjects.includes(coO.id)) {
													var nH = this.activated.indexOf(eid);
													this.activated.splice(nH, 1);
													t.currentChoices -= 1;
													var bR = this.checkRequireds(coO);
													this.activated.splice(nH, 0, eid);
													t.currentChoices += 1;
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.multiplyPointtypeIsOnCheck) {
											e.multiplyPointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToMultiply.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToMultiply[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.dividePointtypeIsOnCheck) {
											e.dividePointtypeIsOnCheck = !1;
											var ei = 0;
											for (var l = 0; l < e.pointTypeToDivide.length; l++) {
												for (var m = 0; m < this.app.pointTypes.length; m++) {
													if (this.app.pointTypes[m].id == e.pointTypeToDivide[l]) {
														for (var n = this.app.mdObjects.length - 1; n >= 0; n--) {
															var mdO = this.app.mdObjects[n];
															if (mdO.id != e.id) {
																if (mdO.multiplyPointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtMultiply[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtMultiply[l] / mdO.multiplyWithThis);
																} else if (mdO.dividePointtypeIsOnCheck) {
																	this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																	this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																}
															} else {
																this.app.pointTypes[m].startingSum -= mdO.startingSumAtDivide[l];
																this.app.pointTypes[m].startingSum += parseInt(mdO.startingSumAtDivide[l] * mdO.divideWithThis);
																ei = n;
																break
															}
														}
														for (var n = ei + 1; n < this.app.mdObjects.length; n++) {
															var mdO = this.app.mdObjects[n];
															if (mdO.multiplyPointtypeIsOnCheck) {
																if (mdO.multiplyPointtypeIsId) {
																	for (var x = 0; x < this.app.pointTypes.length; x++) {
																		if (this.app.pointTypes[x].id == mdO.multiplyWithThis) {
																			mdO.startingSumAtMultiply = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
																			this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
																		}
																	}
																} else {
																	mdO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * mdO.multiplyWithThis;
																	this.app.pointTypes[m].startingSum *= mdO.multiplyWithThis;
																}
															} else if (mdO.dividePointtypeIsOnCheck) {
																mdO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / mdO.divideWithThis;
																this.app.pointTypes[m].startingSum /= mdO.divideWithThis;
															}
														}
														this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum)
													}
												}
											}
											this.app.mdObjects.splice(ei, 1);
										}
										if (e.isChangeVariables) {
											for (var m = 0; m < e.changedVariables.length; m++) {
												for (var n = 0; n < this.app.variables.length; n++) {
													if (e.changedVariables[m] == this.app.variables[n].id) {
														if (e.changeType == "1" && this.app.variables[n].isTrue) this.app.variables[n].isTrue = !1;
														else if (e.changeType == "2" && !this.app.variables[n].isTrue) this.app.variables[n].isTrue = !0;
														else if (e.changeType == "3") this.app.variables[n].isTrue = !this.app.variables[n].isTrue;
													}
												}
											}
										}
										if (e.textfieldIsOn) {
											for (var m = 0; m < this.app.words.length; m++) {
												if (this.app.words[m].id == e.idOfTheTextfieldWord) {
													this.app.words[m].replaceText = "undefined" === typeof e.wordChangeDeselect ? "" : e.wordChangeDeselect;
													this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
												var d = coR.currentChoices;
												if (d > coR.allowedChoices) {
													var u = d - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) {
														if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
															if (coR.objects[v].isSelectableMultiple)
																for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
															else
																this.activateObject(coR.objects[v], coR);
															u--;
														}
													}
												}
											}
										if (e.discountOther) {
											if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
												if (e.isDisChoices) {
													if ("undefined" !== typeof e.discountChoices) {
														for (var a = 0; a < e.discountChoices.length; a++) {
															if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
																var co = this.app.comp[e.discountChoices[a]],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.discountGroups) {
														for (var a = 0; a < this.app.groups.length; a++) {
															if (e.discountGroups.includes(this.app.groups[a].id)) {
																for (var b = 0; b < this.app.groups[a].elements.length; b++) {
																	if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																		var co = this.app.comp[this.app.groups[a].elements[b].id],
																			coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																			coO = coR.objects[co.objects];
																		for (var c = 0; c < coO.scores.length; c++) {
																			var coS = coO.scores[c];
																			if (!coS.isNotDiscountable) {
																				this.discountC(e, coS);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										this.updateScoresC(e, t, tmpScores, 0);
										if (e.isImageUpload) {
											this.$set(e, "image", e.defaultImage);
										}
										if (e.backpackBtnRequirement)
											this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
										if (e.changeBackground) {
											if (e.changeBgImage) {
												var a = this.app.styling.backgroundImage;
												this.$set(this.app.styling, "backgroundImage", e.bgImage);
												this.$set(e, "bgImage", a);
											} else {
												var a = this.app.styling.backgroundColor;
												this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
												this.$set(e, "changedBgColorCode", a);
											}
										}
										if (e.changePointBar) {
											if (e.changeBarBgColorIsOn) {
												var a = this.app.styling.barBackgroundColor;
												this.$set(this.app.styling, "barBackgroundColor", e.changedBarBgColor);
												this.$set(e, "changedBarBgColor", a);
											}
											if (e.changeBarTextColorIsOn) {
												var a = this.app.styling.barTextColor;
												this.$set(this.app.styling, "barTextColor", e.changedBarTextColor);
												this.$set(e, "changedBarTextColor", a);
											}
											if (e.changeBarIconColorIsOn) {
												var a = this.app.styling.barIconColor;
												this.$set(this.app.styling, "barIconColor", e.changedBarIconColor);
												this.$set(e, "changedBarIconColor", a);
											}
										}
										if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
											if (e.bgmId) {
												this.app.bgmIsPlaying = !1;
												this.playBgm(e, e.bgmId, 0)
											}
										}
										if (e.muteBgm && "undefined" !== typeof bgmPlayer) {
											if ("undefined" !== typeof bgmPlayer.unMute) {
												this.$set(this.app, "isMute", !1);
												bgmPlayer.unMute();
											}
										}
										if (e.isContentHidden) {
											for (var a = 0; a < e.hiddenContentsRow.length; a++) {
												if ("undefined" !== typeof this.app.compR[e.hiddenContentsRow[a]]) {
													var co = this.app.compR[e.hiddenContentsRow[a]],
														coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
													for (var b = 0; b < e.hiddenContentsType.length; b++) {
														if (e.hiddenContentsType[b] == "1") this.$set(coR, "objectTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "2") this.$set(coR, "objectImageRemoved", false);
														else if (e.hiddenContentsType[b] == "3") this.$set(coR, "objectTextRemoved", false);
														else if (e.hiddenContentsType[b] == "4") this.$set(coR, "objectScoreRemoved", false);
														else if (e.hiddenContentsType[b] == "5") this.$set(coR, "objectRequirementRemoved", false);
														else if (e.hiddenContentsType[b] == "6") this.$set(coR, "addonTitleRemoved", false);
														else if (e.hiddenContentsType[b] == "7") this.$set(coR, "addonImageRemoved", false);
														else if (e.hiddenContentsType[b] == "8") this.$set(coR, "addonTextRemoved", false);
													}
												}
											}
										}
										this.activated.splice(this.activated.indexOf(eid), 1), e.isActive = !e.isActive, this.updateActivated(), t.currentChoices -= 1;
									}
								}
								if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
							}
							if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
						}
                    },
                    updateObject: function() {
                        this.$emit("objectWasChanged", this.object)
                    },
                    selectedOneMore: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
									var cnt = 0;
									for (var r = 0; r < t.objects.length; r++) {
										if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
											if (t.objects[r].isSelectableMultiple)
												for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
											else
												this.activateObject(t.objects[r], t);
											break
										}
										else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
									}
									if (cnt >= t.allowedChoices) 
										s = !1;
									else 
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								} else {
									e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesPluss > e.multipleUseVariable && this.checkPoints(e) ? (e.multipleUseVariable++, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesPluss > this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum++, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable));
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if ("undefined" === typeof this.exceptedObjects) this.$set(this, "exceptedObjects", []);
								if (!this.exceptedObjects.length == 0) this.exceptedObjects.push(e.id);
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable > 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																if (!coS.isNotDiscountable) {
																	this.discountS(e, coS);
																}
															}
														}
													}
												}
											}
										} else {
											if("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++)
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (e.discountPointTypes.length === 0 || e.discountPointTypes.includes(coS.id)) {
																		if (!coS.isNotDiscountable) {
																			this.discountS(e, coS);
																		}
																	}
																}
															}
													}
												}
											}
										} 
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp > 0) {
													if ("undefined" === typeof e.scores[i].isActiveMul) this.$set(e.scores[i], "isActiveMul", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMul[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable);
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * tmpVariable : parseInt(e.scores[i].value) * tmpVariable});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMulMinus[tmpVariable] || e.scores[i].isActiveMulMinus[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum -= (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.multipleUseVariable > e.numMultipleTimesMinus) {
										if (e.isActive == !1) {
											e.isActive = !0, t.currentChoices += 1, this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
											if (e.backpackBtnRequirement) {
												if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
												this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
											}
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.scrollToRow) {
												var isBackpack = "undefined" !== typeof this.app.backpackDialog && "undefined" !== typeof this.app.backpackDialog.$refs.dialog ? !0 : !1,
													compWindow = isBackpack ? this.app.backpackDialog.$refs.dialog : window;
												if (e.scrollToObject) {
													if ("undefined" !== typeof e.scrollObjectId && e.scrollObjectId.length > 0) {
														if ("undefined" !== typeof this.app.comp[e.scrollObjectId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.comp[e.scrollObjectId];
																coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
															if (!coR.isEditModeOn) {
																this.$nextTick(() => {
																	if (coR) {
																		var coO = p[co.rows].children.length > 1 ? p[co.rows].children[1].children[1].children[1].children[co.objects] : p[co.rows].children[0].children[0].children[1].children[co.objects];
																		if (coO) {
																			if (isBackpack) {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																			} else {
																				compWindow.scrollTo({top: coO.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																			}
																		}
																	}
																});
															}
														}
													}
												} else {
													if ("undefined" !== typeof e.scrollRowId && e.scrollRowId.length > 0) {
														if ("undefined" !== typeof this.app.compR[e.scrollRowId]) {
															var p = this.$el.offsetParent.offsetParent.parentElement.children,
																co = this.app.compR[e.scrollRowId];
																coR = p[co.rows];
															this.$nextTick(() => {
																if (coR) {
																	if (isBackpack) {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollTop, behavior: "smooth"});
																	} else {
																		compWindow.scrollTo({top: coR.getBoundingClientRect().top + compWindow.scrollY, behavior: "smooth"});
																	}
																}
															});
														}
													}
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
													this.app.bgmIsPlaying = !0;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										} else {
											if (e.multipleUseVariable == 0) {
												e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											} else {
												this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable - 1)), (e.id + "/ON#" + e.multipleUseVariable));
											}
										}
										if (e.multipleUseVariable > 0) {
											if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
												if (e.isActivateRandom) {
													this.forceRandomActivateMul(e);
												} else {
													for (var y = e.activateThisChoice.split(","), v = 0; v < y.length; v++) {
														var yv = y[v].split("/ON#"),
															yNV = yv.length > 1 ? yv[1] : 1;
														if ("undefined" !== typeof this.app.comp[yv[0]]) {
															this.forceActivate(e, yv[0], yNV)
														}
													}
												}
											}
										}
										for (var f = 0; f < this.activated.length; f++) {
											var aF = this.activated[f].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aF[0]]) {
												var co = this.app.comp[aF[0]],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
													coO = coR.objects[co.objects],
													nR = this.activated.indexOf(eid);
												if (!this.exceptedObjects.includes(coO.id)) {
													var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
													if (fI !== -1) var aFI = this.activated[fI].split("/ON#");
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) + 1) : (this.activated.push(eid), t.currentChoices += 1);
													var bR = this.checkRequireds(coO);
													fI !== -1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(this.activated.indexOf(eid), 1), t.currentChoices -= 1);
													if (!bR) {
														this.exceptedObjects.push(coO.id);
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
										if (e.addToAllowChoice)
											if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
												var co = this.app.compR[e.idOfAllowChoice],
													coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
												coR.allowedChoices += e.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += e.numbAddToAllowChoice;
												var I = coR.currentChoices;
												if (I > coR.allowedChoices) {
													var O = I - coR.allowedChoices;
													for (var v = 0; v < coR.objects.length; v++) O > 0 && coR.objects[v].isActive && (this.activateObject(coR.objects[v], coR), O--)
												}
											}
										this.updateScoresMulS(e, t, tmpScores, 0);
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    selectedOneLess: function(e, t) {
						var rowType = this.app.compR[t.id].type;
                        var s = !0, tmpPoint = {id: "", value: 0};
						if (!this.linkedObjects.includes(e.id)) {
							if (e.isMultipleUseVariable) {
								if (e.numMultipleTimesMinus < e.multipleUseVariable) {
									if (e.multipleUseVariable == 0 && t.currentChoices + 1 > t.allowedChoices && !e.isActive && 0 != t.allowedChoices) {
										var cnt = 0;
										for (var r = 0; r < t.objects.length; r++) {
											if (t.objects[r].isActive && !t.objects[r].forcedActivated) {
												if (t.objects[r].isSelectableMultiple)
													for (var a = t.objects[r].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(t.objects[r], t);
												else
													this.activateObject(t.objects[r], t);
												break
											}
											else if (t.objects[r].isActive && t.objects[r].forcedActivated) cnt++;
										}
										if (cnt >= t.allowedChoices) 
											s = !1;
										else 
											e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									} else {
										e.multipleUseVariable = "undefined" === typeof e.multipleUseVariable ? 0 : e.multipleUseVariable, e.numMultipleTimesMinus < e.multipleUseVariable && this.checkPointsR(e) ? (e.multipleUseVariable--, this.$set(e, "selectedThisManyTimesProp", e.multipleUseVariable), this.$set(this.app.objectMap, e.id, e.multipleUseVariable)) : s = !1;
									}
								} else {
									s = !1;
								}
							} else {
								for (var o = 0; o < this.app.pointTypes.length; o++) this.app.pointTypes[o].id == e.multipleScoreId && (e.numMultipleTimesMinus < this.app.pointTypes[o].startingSum ? (this.app.pointTypes[o].startingSum--, this.$set(e, "selectedThisManyTimesProp", this.app.pointTypes[o].startingSum), tmpPoint.id = e.multipleScoreId, tmpPoint.value = this.app.pointTypes[o].startingSum, this.$set(this.app.pointTypeMap, this.app.pointTypes[o].id, this.app.pointTypes[o].startingSum)) : s = !1);
							}
							if (s) {
								var eid, eidNum;
								if (e.isMultipleUseVariable) {
									eid = e.id + "/ON#" + (parseInt(e.multipleUseVariable) + 1);
									eidNum = parseInt(e.multipleUseVariable) + 1;
								} else {
									eid = e.id;
								}
								var tmpScores = [];
								var tmpVariable = e.isMultipleUseVariable ? Math.abs(parseInt(e.multipleUseVariable)) : tmpPoint.value;
								if (e.discountOther && e.isMultipleUseVariable && e.multipleUseVariable >= 0) {
									if ("undefined" !== typeof e.discountOperator && "undefined" !== typeof e.discountValue) {
										if (e.isDisChoices) {
											if ("undefined" !== typeof e.discountChoices) {
												for (var a = 0; a < e.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[e.discountChoices[a]]) {
														var co = this.app.comp[e.discountChoices[a]],
															coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
															coO = coR.objects[co.objects];
														for (var c = 0; c < coO.scores.length; c++) {
															var coS = coO.scores[c];
															if (!coS.isNotDiscountable) {
																this.discountC(e, coS);
															}
														}
													}
												}
											}
										} else {
											if ("undefined" !== typeof e.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (e.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++) {
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var co = this.app.comp[this.app.groups[a].elements[b].id],
																	coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
																	coO = coR.objects[co.objects];
																for (var c = 0; c < coO.scores.length; c++) {
																	var coS = coO.scores[c];
																	if (!coS.isNotDiscountable) {
																		this.discountC(e, coS);
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								if ("undefined" !== typeof e.scores) {
									for (var i = 0; i < e.scores.length; i++)
										for (var s = 0; s < this.app.pointTypes.length; s++) {
											if (this.app.pointTypes[s].id == e.scores[i].id) {
												if (e.selectedThisManyTimesProp < 0) {
													if ("undefined" === typeof e.scores[i].isActiveMulMinus) this.$set(e.scores[i], "isActiveMulMinus", []);
													if (this.checkRequireds(e.scores[i]) && !e.scores[i].isActiveMulMinus[tmpVariable - 1]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMulMinus[tmpVariable - 1] = !0;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												} else {
													if (this.checkRequireds(e.scores[i]) && e.scores[i].isActiveMul[tmpVariable] || e.scores[i].isActiveMul[tmpVariable]) {
														if (e.scores[i].multiplyByTimes) {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore * (tmpVariable + 1) : parseInt(e.scores[i].value) * (tmpVariable + 1)});
														} else {
															this.app.pointTypes[s].startingSum += (e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value));
															e.scores[i].isActiveMul[tmpVariable] = !1;
															tmpScores.push({id: e.scores[i].id, value: e.scores[i].discountIsOn ? e.scores[i].discountScore : parseInt(e.scores[i].value)});	
														}
														if (e.scores[i].isChangeDiscount) this.$set(e.scores[i], "isChangeDiscount", false);
													}
												}
												this.$set(this.app.pointTypeMap, this.app.pointTypes[s].id, this.app.pointTypes[s].startingSum);
											}
										}
								}
								if (e.isMultipleUseVariable) {
									if (e.isMultipleUseVariable >= 0) {
										if (e.activateOtherChoice && "undefined" !== typeof e.activateThisChoice) {
											if (e.isActivateRandom && "undefined" !== typeof e.activatedRandomMul && e.activatedRandomMul.length > 0) {
												for (var v = e.activatedRandomMul[e.selectedThisManyTimesProp].length - 1; v >= 0; v--) {
													var aRM = e.activatedRandomMul[e.selectedThisManyTimesProp][v].split("/ON#"),
														anRM = aRM.length > 1 ? aRM[1] : 1;
													if ("undefined" !== typeof this.app.comp[aRM[0]]) {
														this.forceRandomDeactivateMul(e, aRM[0], anRM);
													}
												}
												e.activatedRandomMul.splice(e.selectedThisManyTimesProp, 1);
											} else {
												for (var p = e.activateThisChoice.split(","), v = p.length - 1; v >= 0; v--) {
													var pv = p[v].split("/ON#"),
														pnV = pv.length > 1 ? pv[1] : 1;
													if ("undefined" !== this.app.comp[pv[0]]) {
														this.forceDeactivateMul(e, pv[0], pnV);
													} else if ("undefined" !== typeof this.app.compG[pv[0]]) {
														var coG = this.app.compG[pv[0]],
															coGE = this.app.groups[coG.groups].elements;
														for (var h = coGE.length - 1; h >= 0; h--) {
															if ("undefined" !== typeof this.app.comp[coGE[h].id]) {
																this.forceDeactivateMul(e, coGE[h].id, pnV);
															}
														}
													}
												}
											}
										}
									}
									for (var f = 0; f < this.activated.length; f++) {
										var aF = this.activated[f].split("/ON#");
										if ("undefined" !== typeof this.app.comp[aF[0]]) {
											var co = this.app.comp[aF[0]],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											if (coO.id !== e.id && !this.exceptedObjects.includes(coO.id)) {
												var fI = this.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI !== -1) {
													var	aFI = this.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.activated.splice(fI, 1), t.currentChoices -= 1);
													var bR = this.checkRequireds(coO);
													parseInt(aFI[1]) > 1 ? this.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.activated.splice(fI, 0, aFI[0] + "/ON#" + aFI[1]), t.currentChoices += 1);
													if (!bR) {
														if (coO.isMultipleUseVariable) {
															for (var N = coO.multipleUseVariable, n = 0; n < N; n++) {
																coO.forcedActivated ? (coO.forcedActivated = !1, coO.numMultipleTimesMinus--, this.selectedOneLess(coO, coR), coO.forcedActivated = !0) : this.selectedOneLess(coO, coR);
															}
															if (coO.forcedActivated) {
																if ("undefined" === typeof e.cancelForcedActivated) this.$set(e, "cancelForcedActivated", []);
																e.cancelForcedActivated.push(coO.id + "/ON#" + N);
																coO.forcedActivated = !1;
															}
														} else {
															if (coO.forcedActivated) coO.forcedActivated = !1;
															this.activateObject(coO, coR);
														}
														f--;
													}
												}
											}
										}
									}
									if (e.addToAllowChoice)
										if ("undefined" !== typeof this.app.compR[e.idOfAllowChoice]) {
											var co = this.app.compR[e.idOfAllowChoice],
												coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows];
											coR.allowedChoices -= e.numbAddToAllowChoice, coR.allowedChoicesChange -= coR.numbAddToAllowChoice;
											var d = coR.currentChoices;
											if (d > coR.allowedChoices) {
												var u = d - coR.allowedChoices;
												for (var v = 0; v < coR.objects.length; v++) {
													if (u > 0 && coR.objects[v].isActive && !coR.objects[v].forcedActivated && coR.objects[v].id != e.id) {
														if (coR.objects[v].isSelectableMultiple)
															for (var a = t.objects[v].multipleUseVariable, b = 0; b < a; b++) this.selectedOneLess(coR.objects[v], t);
														else
															this.activateObject(coR.objects[v], coR);
														u--;
													}
												}
											}
										}
									this.updateScoresMulC(e, t, tmpScores, 0);
									if (e.isActive == !0) {
										if (e.multipleUseVariable == 0 && ("undefined" === typeof e.forcedActivated || e.forcedActivated == !1)) {
											e.isActive = !1, this.activated.splice(this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), 1), t.currentChoices -= 1;
											if (e.backpackBtnRequirement) this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn - 1);
											if (e.changeBackground) {
												if (e.changeBgImage) {
													var a = this.app.styling.backgroundImage;
													this.$set(this.app.styling, "backgroundImage", e.bgImage);
													this.$set(e, "bgImage", a);
												} else {
													var a = this.app.styling.backgroundColor;
													this.$set(this.app.styling, "backgroundColor", e.changedBgColorCode);
													this.$set(e, "changedBgColorCode", a);
												}
											}
											if (e.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
												if (e.bgmId) {
													this.app.bgmIsPlaying = !1;
													this.playBgm(e, e.bgmId, 0);
												}
											}
										}
										else this.$set(this.activated, this.activated.indexOf(e.id + "/ON#" + (e.multipleUseVariable + 1)), (e.id + "/ON#" + e.multipleUseVariable));
									} else {
										if (e.multipleUseVariable == -1) {
											e.isActive = !0, t.currentChoices += 1;
											this.activated.push(e.id + "/ON#" + e.multipleUseVariable);
										}
									}
									if (this.exceptedObjects.indexOf(e.id) == 0) this.$set(this, "exceptedObjects", []);
								}
							}
						}
						if (this.linkedObjects.indexOf(e.id) == 0) this.$set(this, "linkedObjects", []);
                    },
                    updateActivated: function() {
                        this.$emit("activatedWasChanged", this.activated)
                    },
					duplicateRow: function(e, t) {
						var rowType = this.app.compR[t.id].type;
						var thisRow = rowType == "app" ? this.app.rows : this.backpack;
						var c, i, j, s, fr, fo, y, z, zx, zy, zz, nR = 0, nF = 0;
						for (var b = 0; b < thisRow.length; b++) {
							if (thisRow[b].id.split("/D#")[0] == e.duplicateRowId.split("/D#")[0]) {
								nR++;
							}
							if (thisRow[b].id == e.duplicateRowPlace) {
								nF = b + 1;
							}
						}
						for (var f = 0; f < thisRow.length; f++) {
							if (thisRow[f].id == e.duplicateRowId) {
								thisRow.splice(nF, 0, JSON.parse(JSON.stringify(thisRow[f])));
								fr = thisRow[nF], fr.currentChoices = 0;
								y = fr.id.split("/D#"), fr.id = y[0] + "/D#" + nR;
								for (fr.allowedChoicesChange > 0 && (fr.allowedChoices -= fr.allowedChoicesChange), s = 0; s < fr.objects.length; s++) {
									fo = fr.objects[s], z = fo.id.split("/D#"), fo.id = z[0] + "/D#" + nR;
									if (fo.multipleUseVariable) fo.multipleUseVariable = 0, fo.selectedThisManyTimesProp = 0;
									if (fo.isActive) fo.isActive = !1;
									fo.forcedActivated = !1;
									if (!e.dRowAddSufReq) {
										if ("undefined" !== typeof fo.requireds) {
											for (i = 0; i < fo.requireds.length; i++) {
												if ("id" == fo.requireds[i].type) {
													y = fo.requireds[i].reqId.split("/ON#");
													if (y.length > 1)
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
													else
														zx = y[0].split("/D#"), fo.requireds[i].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
												}
												else if ("or" == fo.requireds[i].type)
													for (c = 0; c < fo.requireds[i].orRequired.length; c++) {
														y = fo.requireds[i].orRequired[c].req.split("/ON#");
														if (y.length > 1)
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
														else
															zx = y[0].split("/D#"), fo.requireds[i].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
													}
												if ("undefined" !== typeof fo.requireds[i].requireds)
													for (j = 0; j < fo.requireds[i].requireds.length; j++) {
														if ("id" == fo.requireds[i].requireds[j].type) {
															y = fo.requireds[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.requireds[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.requireds[i].requireds[j].type)
															for (c = 0; c < fo.requireds[i].requireds[j].orRequired.length; c++) {
																y = fo.requireds[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.requireds[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
											}
										}
										if ("undefined" !== typeof fo.scores)
											for (i = 0; i < fo.scores.length; i++)
												if ("undefined" !== fo.scores[i].requireds)
													for (j = 0; j < fo.scores[i].requireds.length; j++) {
														if ("id" == fo.scores[i].requireds[j].type) {
															y = fo.scores[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = y[0].split("/D#"), fo.scores[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.scores[i].requireds[j].type)
															for (c = 0; c < fo.scores[i].requireds[j].orRequired.length; c++) {
																y = fo.scores[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = y[0].split("/D#"), fo.scores[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
																
													}
										if ("undefined" !== typeof fo.addons)
											for (i = 0; i < fo.addons.length; i++)
												if ("undefined" !== fo.addons[i].requireds)
													for (j = 0; j < fo.addons[i].requireds.length; j++) {
														if ("id" == fo.addons[i].requireds[j].type) {
															y = fo.addons[i].requireds[j].reqId.split("/ON#");
															if (y.length > 1)
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
															else
																zx = fo.addons[i].requireds[j].reqId.split("/D#"), fo.addons[i].requireds[j].reqId = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
														}
														else if ("or" == fo.addons[i].requireds[j].type)
															for (c = 0; c < fo.addons[i].requireds[j].orRequired.length; c++) {
																y = fo.addons[i].requireds[j].orRequired[c].req.split("/ON#");
																if (y.length > 1)
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR) + "/ON#" + y[1];
																else
																	zx = fo.addons[i].requireds[j].orRequired[c].req.split("/D#"), fo.addons[i].requireds[j].orRequired[c].req = zx[0] + "/D#" + (zx.length > 1 ? (parseInt(zx[1]) + 1) : nR);
															}
													}
									}
									if (!e.dRowAddSufFunc) {
										if (fo.activateOtherChoice) {
											zz = "";
											for (y = fo.activateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.activateThisChoice = zz.slice(0, -1);
										}
										if (fo.deactivateOtherChoice) {
											zz = "";
											for (y = fo.deactivateThisChoice.split(","), i = 0; i < y.length; i++) {
												zx = y[i].split("/ON#");
												if (zx.length > 1)
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + "/ON#" + zx[1] + ",";
												else
													zy = zx[0].split("/D#"), zz += zy[0] + "/D#" + (zy.length > 1 ? (parseInt(zy[1]) + 1) : nR) + ",";
											}
											fo.deactivateThisChoice = zz.slice(0, -1);
										}
										if (fo.duplicateRow) {
											y = fo.duplicateRowId.split("/D#"), fo.duplicateRowId = y[0] + "/D#" + nR;
											y = fo.duplicateRowPlace.split("/D#"), fo.duplicateRowPlace = y[0] + "/D#" + nR;
										}
									}
								}
								break
							}
						}
						for (var m = nF; m < thisRow.length; m++) {
							this.app.compR[thisRow[m].id] = {rows: m, type: rowType};
							for (var n = 0; n < thisRow[m].objects.length; n++) {
								var d = thisRow[m].objects[n].id;
								this.app.comp[thisRow[m].objects[n].id] = {rows: m, objects: n, type: rowType};
							}
						}
					}
                }
            },
            Os = Ss,
            Rs = (o("3b78"), Object(w["a"])(Os, ls, cs, !1, null, "4d803ed5", null)),
            Fs = Rs.exports;
        x()(Rs, {
            VBtn: C["a"],
            VCol: I["a"],
            VRow: S["a"],
            VTooltip: Q["a"]
        });
        var _s = o("c0e9"),
            qs = o.n(_s),
            As = {
                props: {
                    chapter: Object,
                    page: Object,
                    type: String
                },
                data: function() {
                    return {
                        dialog: !0,
						imgMap: {},
						bUrls: [],
						snackbar: !1,
						text: "",
						extension: "png",
						window: {
                            width: 0,
                            height: 0
                        }
                    }
                },
                components: {
                    appRow: Fs
                },
                computed: {
                    backpack: function() {
                        return this.$store.state.app.backpack
                    },
                    styling: function() {
                        return this.$store.state.app.styling
                    },
                    app: function() {
                        return this.$store.state.app
                    },
					groups: function() {
                        return this.$store.state.app.groups
                    },
					rows: function() {
                        return this.$store.state.app.rows
                    },
                    background: function() {
						var bgColor = this.app.styling.useBackpackDesign ? this.app.styling.backpackBgColor : this.app.styling.backgroundColor,
							bgImage = this.app.styling.useBackpackDesign ? this.app.styling.backpackBgImage : this.app.styling.backgroundImage,
							bgRepeat = this.app.styling.useBackpackDesign ? this.app.styling.isBackpackBgRepeat : this.app.styling.isBackgroundRepeat,
							bgStretch = this.app.styling.useBackpackDesign ? this.app.styling.isBackpackBgFitIn : this.app.styling.isBackgroundFitIn;
                        return bgImage ? 'background-image: url("' + bgImage + '");background-color: ' + bgColor + (bgRepeat ? ";background-repeat: repeat;" : (bgStretch ? ";background-size: 100% 100%;" : ";background-size: cover;")) : 'background-color: ' + bgColor + ';'
                    }
                },
				mounted: function() {
					this.resizeObserver = new ResizeObserver((e) => {
						for (var t of e) {
							this.window.width = t.contentRect.width;
							this.window.hegiht = t.contentRect.height;
						}
					});
					if ("undefined" !== typeof this.$refs.printThis) this.resizeObserver.observe(this.$refs.printThis.offsetParent);
					this.$set(this.app, "backpackDialog", this.$refs.dialog);
                },
                destroyed: function() {
                    if (this.resizeObserver) {
						this.resizeObserver.disconnect();
					}
					this.$delete(this.app, "backpackDialog");
                },
                methods: {
                    cleanCurrentComponent: function() {
						if (this.app.preloadImages) this.$set(this.app, "printThis", !1);
                        this.$emit("cleanCurrentComponent", "")
                    },
					checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
					resultArray: function(e, t) {
                        var o = [];
                        if ("standard" == this.type) {
                            for (var i = 0; i < this.allChapters.length; i++)
                                for (var s = 0; s < this.allChapters[i].pages.length; s++) this.findAllActiveObjects(this.allChapters[i].pages[s], this.allChapters[i]);
                            o = this.activeObjectList
                        } else if ("" == t.resultGroupId || null == t.resultGroupId)
                            for (var a = 0; a < e.length; a++)
                                for (var b = 0; b < e[a].objects.length; b++) {
									if (!this.rows[t].objects[e].isNotResult) this.rows[t].objects[e].isActive ? o.push(this.rows[t].objects[e]) : this.rows[t].objects[e].isSelectableMultiple && "undefined" !== typeof this.rows[t].objects[e].multipleUseVariable && this.rows[t].objects[e].multipleUseVariable > 0 && o.push(this.rows[t].objects[e]);
								}
						else
                            for (a = 0; a < this.rows.length; a++)
                                for (b = 0; b < this.rows[a].objects.length; b++) {
									if (!this.rows[a].objects[b].isNotResult) {
										if (this.rows[a].objects[b].isActive)
											for (var r = 0; r < this.groups.length; r++)
												if (t.resultGroupId == this.rows[a].resultGroupId && this.rows[a] != t && this.groups[r].id == this.rows[a].resultGroupId) o.push(this.rows[a].objects[b]);
												else
													for (var c = 0; c < this.rows[a].objects[b].groups.length; c++) this.rows[a].objects[b].groups[c].id == t.resultGroupId && this.groups[r].id == t.resultGroupId && o.push(this.rows[a].objects[b]);
										else if (this.rows[a].objects[b].isSelectableMultiple && ("undefined" !== typeof this.rows[a].objects[b].multipleUseVariable && this.rows[a].objects[b].multipleUseVariable > 0))
											for (var c = 0; c < this.groups.length; c++)
												if (t.resultGroupId == this.rows[a].resultGroupId && this.rows[a] != t && this.groups[c].id == this.rows[a].resultGroupId) o.push(this.rows[a].objects[b]);
												else
													for (var d = 0; d < this.rows[a].objects[b].groups.length; d++) this.rows[a].objects[b].groups[d].id == t.resultGroupId && this.groups[c].id == t.resultGroupId && o.push(this.rows[a].objects[b]);
									}
								}
                        return o
                    },
					findAllActiveObjects: function(e, t) {
                        for (var o = 0; o < e.app.rows.length; o++)
                            for (var i = 0; i < e.app.rows[o].objects.length; i++) e.app.rows[o].objects[i].isActive && this.activeObjectList.push(e.app.rows[o].objects[i]);
                        if (e && e.children && e.children.length > 0)
                            for (var s = 0; s < e.children.length; s++) this.findAllActiveObjects(e.children[s], t)
                    },
					compressImage: function(e) {
						return new Promise((resolve) => {
							const img = new Image();
							img.onload = () => {
								const canvas = document.createElement('canvas');
								const ctx = canvas.getContext('2d');
								canvas.width = img.width;
								canvas.height = img.height;
								ctx.drawImage(img, 0, 0);
								const l = canvas.toDataURL("image/webp", 0.5);
								b = P()(l.split(",")[1], "image/webp");
								if (b) {
									resolve(b);
								} else {
									resolve(e);
								}
							};
							img.onerror = () => {
								resolve(e);
							};
							img.src = e;
						});
					},
					replaceImages: function() {
						var m = "", i = "", k = "", x = "", o = [];
						var bgImage = this.app.styling.useBackpackDesign ? this.app.styling.backpackBgImage : this.app.styling.backgroundImage;
						this.imgMap = new Map();
						this.bUrl = [];
						
						function processImage(img) {
							return new Promise((resolve, reject) => {
								if (!this.imgMap.has(img)) {
									m = this.getMime(img);
									x = this.compressImage(img);
									x.then((compressedImage) => {
										k = URL.createObjectURL(compressedImage);
										this.imgMap.set(img, k);
										this.imgMap.set(k, img);
										this.bUrls.push(k);
										resolve(k);
									}).catch(reject);
								} else {
									resolve(this.imgMap.get(img));
								}
							});
						}
						
						var promiseChain = Promise.resolve();
						
						if (bgImage && this.isDataURL(bgImage)) {
							promiseChain = promiseChain.then(() => processImage.call(this, bgImage))
								.then((k) => {
									this.$refs.printThis.style.backgroundImage = 'url("' + k + '")';
								});
						}
						if ("undefined" !== typeof this.app.styling.rowBackgroundImage && this.isDataURL(this.app.styling.rowBackgroundImage)) {
							promiseChain = promiseChain.then(() => processImage.call(this, this.app.styling.rowBackgroundImage))
								.then((k) => {
									this.app.styling.rowBackgroundImage = k;
								});
						}
						if ("undefined" !== typeof this.app.styling.objectBackgroundImage && this.isDataURL(this.app.styling.objectBackgroundImage)) {
							promiseChain = promiseChain.then(() => processImage.call(this, this.app.styling.objectBackgroundImage))
								.then((k) => {
									this.app.styling.objectBackgroundImage = k;
								});
						}
						if ("undefined" !== typeof this.app.styling.rowBorderImage && this.isDataURL(this.app.styling.rowBorderImage)) {
							promiseChain = promiseChain.then(() => processImage.call(this, this.app.styling.rowBorderImage))
								.then((k) => {
									this.app.styling.rowBorderImage = k;
								});
						}
						if ("undefined" !== typeof this.app.styling.objectBorderImage && this.isDataURL(this.app.styling.objectBorderImage)) {
							promiseChain = promiseChain.then(() => processImage.call(this, this.app.styling.objectBorderImage))
								.then((k) => {
									this.app.styling.objectBorderImage = k;
								});
						}
						for (const row of this.backpack) {
							if (row.isResultRow) {
								o = this.resultArray(this.app.rows, row);
								for (const obj of o) {
									if (obj.image && this.isDataURL(obj.image)){
										promiseChain = promiseChain.then(() => processImage.call(this, obj.image))
											.then((k) => {
												obj.image = k;
											});
									}
									for (const addon of obj.addons) {
										if (addon.image && this.isDataURL(addon.image)) {
											promiseChain = promiseChain.then(() => processImage.call(this, addon.image))
												.then((k) => {
													addon.image = k;
												});
										}
									}
								}
							} else {
								if ("undefined" !== typeof row.styling && "undefined" !== typeof row.styling.backgroundImage && this.isDataURL(row.styling.backgroundImage)) {
									if (!this.imgMap.has(row.styling.backgroundImage)) {
										promiseChain = promiseChain.then(() => processImage.call(this, row.styling.backgroundImage))
											.then((k) => {
												row.styling.backgroundImage = k;
											});
									}
								}
								if ("undefined" !== typeof row.styling && "undefined" !== typeof row.styling.rowBackgroundImage && this.isDataURL(row.styling.rowBackgroundImage)) {
									if (!this.imgMap.has(row.styling.rowBackgroundImage)) {
										promiseChain = promiseChain.then(() => processImage.call(this, row.styling.rowBackgroundImage))
											.then((k) => {
												row.styling.rowBackgroundImage = k;
											});
									}
								}
								if ("undefined" !== typeof row.styling && "undefined" !== typeof row.styling.objectBackgroundImage && this.isDataURL(row.styling.objectBackgroundImage)) {
									if (!this.imgMap.has(row.styling.objectBackgroundImage)) {
										promiseChain = promiseChain.then(() => processImage.call(this, row.styling.objectBackgroundImage))
											.then((k) => {
												row.styling.objectBackgroundImage = k;
											});
									}
								}
								if ("undefined" !== typeof row.styling && "undefined" !== typeof row.styling.rowBorderImage && this.isDataURL(row.styling.rowBorderImage)) {
									if (!this.imgMap.has(row.styling.rowBorderImage)) {
										promiseChain = promiseChain.then(() => processImage.call(this, row.styling.rowBorderImage))
											.then((k) => {
												row.styling.rowBorderImage = k;
											});
									}
								}
								if ("undefined" !== typeof row.styling && "undefined" !== typeof row.styling.objectBorderImage && this.isDataURL(row.styling.objectBorderImage)) {
									if (!this.imgMap.has(row.styling.objectBorderImage)) {
										promiseChain = promiseChain.then(() => processImage.call(this, row.styling.objectBorderImage))
											.then((k) => {
												row.styling.objectBorderImage = k;
											});
									}
								}
								if (row.image && this.isDataURL(row.image)) {
									if (!this.imgMap.has(row.image)) {
										promiseChain = promiseChain.then(() => processImage.call(this, row.image))
											.then((k) => {
												row.image = k;
											});
									}
								}
								for (const obj of row.objects) {
									if ("undefined" !== typeof obj.styling && "undefined" !== typeof obj.styling.objectBackgroundImage && this.isDataURL(obj.styling.objectBackgroundImage)) {
										if (!this.imgMap.has(obj.styling.objectBackgroundImage)) {
											promiseChain = promiseChain.then(() => processImage.call(this, obj.styling.objectBackgroundImage))
												.then((k) => {
													obj.styling.objectBackgroundImage = k;
												});
										}
									}
									if ("undefined" !== typeof obj.styling && "undefined" !== typeof obj.styling.objectBorderImage && this.isDataURL(obj.styling.objectBorderImage)) {
										if (!this.imgMap.has(obj.styling.objectBorderImage)) {
											promiseChain = promiseChain.then(() => processImage.call(this, obj.styling.objectBorderImage))
												.then((k) => {
													obj.styling.objectBorderImage = k;
												});
										}
									}
									if (obj.image && this.isDataURL(obj.image)) {
										if (!this.imgMap.has(obj.image)) {
											promiseChain = promiseChain.then(() => processImage.call(this, obj.image))
												.then((k) => {
													obj.image = k;
												});
										}
									}
									for (const addon of obj.addons) {
										if (addon.image && this.isDataURL(addon.image)) {
											if (!this.imgMap.has(addon.image)) {
												promiseChain = promiseChain.then(() => processImage.call(this, addon.image))
													.then((k) => {
														addon.image = k;
													});
											}
										}
									}
								}
							}
						}
						return promiseChain;
					},
					restoreImages: function() {
						var e = new Set();
						var bgImage = this.$refs.printThis.style.backgroundImage;
						if (bgImage) {
							if (this.imgMap.has(bgImage) && !e.has(bgImage)) {
								this.$refs.printThis.style.backgroundImage = 'url("' + this.imgMap.get(bgImage) + '")';
								e.add(bgImage);
							}
						}
						if ("undefined" !== typeof this.app.styling.rowBackgroundImage) {
							if (this.imgMap.has(this.app.styling.rowBackgroundImage) && !e.has(this.app.styling.rowBackgroundImage)) {
								this.app.styling.rowBackgroundImage = this.imgMap.get(this.app.styling.rowBackgroundImage);
								e.add(this.app.styling.rowBackgroundImage);
							}
						}
						if ("undefined" !== typeof this.app.styling.objectBackgroundImage) {
							if (this.imgMap.has(this.app.styling.objectBackgroundImage) && !e.has(this.app.styling.objectBackgroundImage)) {
								this.app.styling.objectBackgroundImage = this.imgMap.get(this.app.styling.objectBackgroundImage);
								e.add(this.app.styling.objectBackgroundImage);
							}
						}
						if ("undefined" !== typeof this.app.styling.rowBorderImage) {
							if (this.imgMap.has(this.app.styling.rowBorderImage) && !e.has(this.app.styling.rowBorderImage)) {
								this.app.styling.rowBorderImage = this.imgMap.get(this.app.styling.rowBorderImage);
								e.add(this.app.styling.rowBorderImage);
							}
						}
						if ("undefined" !== typeof this.app.styling.objectBorderImage) {
							if (this.imgMap.has(this.app.styling.objectBorderImage) && !e.has(this.app.styling.objectBorderImage)) {
								this.app.styling.objectBorderImage = this.imgMap.get(this.app.styling.objectBorderImage);
								e.add(this.app.styling.objectBorderImage);
							}
						}
						for (var s = 0; s < this.backpack.length; s++) {
							if (this.backpack[s].isResultRow) {
								o = this.resultArray(this.app.rows, this.backpack[s]);
								for (var a = 0; a < o.length; a++) {
									if (this.imgMap.has(o[a].image) && !e.has(o[a])) {
										o[a].image = this.imgMap.get(o[a].image);
										e.add(o[a]);
									}
									for (var b = 0; b < o[a].addons.length; b++) {
										if (this.imgMap.has(o[a].addons[b].image) && !e.has(o[a].addons[b])) {
											o[a].addons[b].image = this.imgMap.get(o[a].addons[b].image);
											e.add(o[a].addons[b]);
										}
									}
								}
							} else {
								if ("undefined" !== typeof this.backpack[s].styling && "undefined" !== typeof this.backpack[s].styling.backgroundImage) {
									if (this.imgMap.has(this.backpack[s].styling.backgroundImage) && !e.has(this.backpack[s].styling.backgroundImage)) {
										this.backpack[s].styling.backgroundImage = this.imgMap.get(this.backpack[s].styling.backgroundImage);
										e.add(this.backpack[s].styling.backgroundImage);
									}
								}
								if ("undefined" !== typeof this.backpack[s].styling && "undefined" !== typeof this.backpack[s].styling.rowBackgroundImage) {
									if (this.imgMap.has(this.backpack[s].styling.rowBackgroundImage) && !e.has(this.backpack[s].styling.rowBackgroundImage)) {
										this.backpack[s].styling.rowBackgroundImage = this.imgMap.get(this.backpack[s].styling.rowBackgroundImage);
										e.add(this.backpack[s].styling.rowBackgroundImage);
									}
								}
								if ("undefined" !== typeof this.backpack[s].styling && "undefined" !== typeof this.backpack[s].styling.objectBackgroundImage) {
									if (this.imgMap.has(this.backpack[s].styling.objectBackgroundImage) && !e.has(this.backpack[s].styling.objectBackgroundImage)) {
										this.backpack[s].styling.objectBackgroundImage = this.imgMap.get(this.backpack[s].styling.objectBackgroundImage);
										e.add(this.backpack[s].styling.objectBackgroundImage);
									}
								}
								if ("undefined" !== typeof this.backpack[s].styling && "undefined" !== typeof this.backpack[s].styling.rowBorderImage) {
									if (this.imgMap.has(this.backpack[s].styling.rowBorderImage) && !e.has(this.backpack[s].styling.rowBorderImage)) {
										this.backpack[s].styling.rowBorderImage = this.imgMap.get(this.backpack[s].styling.rowBorderImage);
										e.add(this.backpack[s].styling.rowBorderImage);
									}
								}
								if ("undefined" !== typeof this.backpack[s].styling && "undefined" !== typeof this.backpack[s].styling.objectBorderImage) {
									if (this.imgMap.has(this.backpack[s].styling.objectBorderImage) && !e.has(this.backpack[s].styling.objectBorderImage)) {
										this.backpack[s].styling.objectBorderImage = this.imgMap.get(this.backpack[s].styling.objectBorderImage);
										e.add(this.backpack[s].styling.objectBorderImage);
									}
								}
								if (this.backpack[s].image) {
									if (this.imgMap.has(this.backpack[s].image) && !e.has(this.backpack[s].image)) {
										this.backpack[s].image = this.imgMap.get(this.backpack[s].image);
										e.add(this.backpack[s].image);
									}
								}
								for (var r = 0; r < this.backpack[s].objects.length; r++) {
									if ("undefined" !== typeof this.backpack[s].objects[r].styling && "undefined" !== typeof this.backpack[s].objects[r].styling.objectBackgroundImage) {
										if (this.imgMap.has(this.backpack[s].objects[r].styling.objectBackgroundImage) && !e.has(this.backpack[s].objects[r].styling.objectBackgroundImage)) {
											this.backpack[s].objects[r].styling.objectBackgroundImage = this.imgMap.get(this.backpack[s].objects[r].styling.objectBackgroundImage);
											e.add(this.backpack[s].objects[r].styling.objectBackgroundImage);
										}
									}
									if ("undefined" !== typeof this.backpack[s].objects[r].styling && "undefined" !== typeof this.backpack[s].objects[r].styling.objectBorderImage) {
										if (this.imgMap.has(this.backpack[s].objects[r].styling.objectBorderImage) && !e.has(this.backpack[s].objects[r].styling.objectBorderImage)) {
											this.backpack[s].objects[r].styling.objectBorderImage = this.imgMap.get(this.backpack[s].objects[r].styling.objectBorderImage);
											e.add(this.backpack[s].objects[r].styling.objectBorderImage);
										}
									}
									if (this.backpack[s].objects[r].image) {
										if (this.imgMap.has(this.backpack[s].objects[r].image) && !e.has(this.backpack[s].objects[r].image)) {
											this.backpack[s].objects[r].image = this.imgMap.get(this.backpack[s].objects[r].image);
											e.add(this.backpack[s].objects[r].image);
										}
									}
									for (var a = 0; a < this.backpack[s].objects[r].addons.length; a++) {
										if (this.backpack[s].objects[r].addons[a].image) {
											if (this.imgMap.has(this.backpack[s].objects[r].addons[a].image) && !e.has(this.backpack[s].objects[r].addons[a].image)) {
												this.backpack[s].objects[r].addons[a].image = this.imgMap.get(this.backpack[s].objects[r].addons[a].image);
												e.add(this.backpack[s].objects[r].addons[a].image);
											}
										}
									}
								}
							}
						}
						for (var a = 0; a < this.bUrls.length; a++) {
							URL.revokeObjectURL(this.bUrls[a]);
						}
						this.imgMap.clear();
						this.bUrls.splice(0);
					},
					isDataURL: function(e) {
						return /^data:(image\/[a-zA-Z]*);base64,/.test(e);
					},
					getMime: function(e) {
						return e.match(/^data:(image\/[^;]+);/)[1];
					},
                    print: function() {
						var e = this,
							bgColor = e.app.styling.useBackpackDesign ? e.app.styling.backpackBgColor : e.app.styling.backgroundColor,
							bgImage = e.app.styling.useBackpackDesign ? e.app.styling.backpackBgImage : e.app.styling.backgroundImage,
							bgRepeat = e.app.styling.useBackpackDesign ? e.app.styling.isBackpackBgRepeat : e.app.styling.isBackgroundRepeat,
							bSuccess = !1;
						if (bgImage) {
							e.$refs.printThis.style.backgroundImage = 'url("' + bgImage + '")';
							bgRepeat ? e.$refs.printThis.style.backgroundRepeat = 'repeat' : e.$refs.printThis.style.backgroundSize = 'cover';
							e.$refs.printThis.style.backgroundPosition = 'center';
							e.$refs.printThis.style.backgroundAttachment = 'fixed';
						}
						e.$refs.printThis.style.backgroundColor = bgColor;
						htmlToImage.toBlob(e.$refs.printThis, {
							type: "image/" + e.extension,
							quality: 0.9,
							style: {
								margin: 0
							}
						}).then(function(t) {
							var i = document.createEvent("MouseEvents"),
								s = document.createElement("a");
							s.download = "Finalized Build." + e.extension;
							s.href = window.URL.createObjectURL(t);
							s.dataset.downloadurl = ["image/" + e.extension, s.download, s.href].join(":");
							i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null);
							s.dispatchEvent(i);
							e.$refs.printThis.removeAttribute('style');
							bSuccess = !0;
						}).catch(function(error) {
							if (!bSuccess) {
								e.text = "Failed to generate image, Segmenting and regenerating the image...", e.snackbar = !0;
								e.$nextTick(() => {
									var maxLength = 5e6;
									var container = e.$refs.printThis.cloneNode(true);

									function splitNodes(node, maxLength) {
										var parts = [];
										var currentPart = document.createElement("div");
										currentPart.style.cssText = node.style.cssText;
										var currentLength = 0;
										
										function getBlobSize(node) {
											const s = new XMLSerializer();
											const str = s.serializeToString(node);
											const blob = new Blob([str], {type: "image/" + e.extension});
											return blob.size;
										}
										
										function addNodeToCurrentPart(node) {
											var clone = node.cloneNode(true);
											currentPart.appendChild(clone);
											currentLength += getBlobSize(node);
										}
										
										function addNodeToCurrentPartChild(node) {
											var clone = node.cloneNode(true);
											currentPart.childNodes[0].childNodes[0].childNodes[0].childNodes[1].appendChild(clone);
											currentLength += getBlobSize(node);
										}
										
										function initNode(node) {
											var c1 = node.cloneNode(false),
												c2 = node.childNodes[0].cloneNode(false),
												c3 = node.childNodes[0].childNodes[0].cloneNode(false),
												c4 = node.childNodes[0].childNodes[0].childNodes[0].cloneNode(true),
												c5 = node.childNodes[0].childNodes[0].childNodes[1].cloneNode(false);
											currentPart.appendChild(c1);
											currentPart.childNodes[0].appendChild(c2);
											currentPart.childNodes[0].childNodes[0].appendChild(c3);
											currentPart.childNodes[0].childNodes[0].childNodes[0].appendChild(c4);
											currentPart.childNodes[0].childNodes[0].childNodes[0].appendChild(c5);
											currentLength += getBlobSize(c1);
											currentLength += getBlobSize(c2);
											currentLength += getBlobSize(c3);
											currentLength += getBlobSize(c4);
											currentLength += getBlobSize(c5);
										}

										Array.from(node.childNodes).forEach(function(child) {
											var childLength = (new XMLSerializer().serializeToString(child)).length;
											if (childLength > maxLength) {
												var cParent = child.childNodes[0].childNodes[0],
													cRow = cParent.childNodes[0];
												if (currentLength > 0) parts.push(currentPart.innerHTML);
												currentPart = document.createElement("div");
												currentPart.style.cssText = node.style.cssText;
												currentLength = 0;
												initNode(child);
												Array.from(cParent.childNodes[1].childNodes).forEach(function(c) {
													var cLength = (new XMLSerializer().serializeToString(c)).length;
													if (currentLength + cLength > maxLength) {
														parts.push(currentPart.innerHTML);
														currentPart = document.createElement("div");
														currentPart.style.cssText = node.style.cssText;
														currentLength = 0;
														initNode(child);
													}
													addNodeToCurrentPartChild(c);
												});
											} else {
												if (currentLength + childLength > maxLength) {
														parts.push(currentPart.innerHTML);
														currentPart = document.createElement("div");
														currentPart.style.cssText = node.style.cssText;
														currentLength = 0;
												}
												addNodeToCurrentPart(child);
											}
										});

										if (currentPart.innerHTML) {
											parts.push(currentPart.innerHTML);
										}

										return parts;
									}

									var parts = splitNodes(container, maxLength),
										bS = !0;
									var promises = parts.map(function(part, index) {
										return new Promise(function(resolve) {
											var tempDiv = document.createElement("div");
											tempDiv.innerHTML = part;
											if (bgImage) {
												tempDiv.style.backgroundImage = 'url("' + bgImage + '")';
												bgRepeat ? tempDiv.style.backgroundRepeat = 'repeat' : tempDiv.style.backgroundSize = 'cover';
												tempDiv.style.backgroundPosition = 'center';
												tempDiv.style.backgroundAttachment = 'fixed';
											}
											tempDiv.style.backgroundColor = bgColor;
											e.$refs.printThis.appendChild(tempDiv);
											htmlToImage.toBlob(tempDiv, {
												type: "image/" + e.extension,
												quality: 0.9,
												style: {
													margin: 0
												}
											}).then(function(t) {
												var i = document.createEvent("MouseEvents"),
													s = document.createElement("a");
												s.download = "Finalized_Build_Part_" + (index + 1) + "." +  + e.extension;
												s.href = window.URL.createObjectURL(t);
												s.dataset.downloadurl = ["image/" + e.extension, s.download, s.href].join(":");
												i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null);
												s.dispatchEvent(i);
											}).catch(function(err) {
												e.text = "Failed to download the image. Please try again with a different extension.", e.snackbar = !0;
											}).finally(function() {
												e.$refs.printThis.removeChild(tempDiv);
												resolve();
											});
										});
									});
									Promise.all(promises).then(function() {
										e.$refs.printThis.removeAttribute('style');
									});
								});
							}
						});
					}
                }
            },
            $s = As,
            Ms = (o("0c2a"), Object(w["a"])($s, as, ns, !1, null, "960b5978", null)),
            Vs = Ms.exports;
        x()(Ms, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
			VIcon: J["a"],
            VSnackbar: Ct["a"],
			VRadio: Mt["a"],
            VRadioGroup: Vt["a"],
            VRow: S["a"],
			VSelect: K["a"],
			VToolbar: Tt["a"],
			VTooltip: Q["a"]
        });
        var Ps = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-row", {
                    attrs: {
                        align: "top"
                    }
                }, [o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "6" : "12"
					}
				}, [o("v-row", {
                    staticClass: "modal-header"
                }, [o("h5", {
                    staticClass: "modal-title"
                }, [e._v("Filter on Choice that is selected")])]), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterBlurIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBlurIsOn", t)
                        },
                        expression: "styling.selFilterBlurIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Blur",
                        suffix: "px",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterBlur,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBlur", t)
                        },
                        expression: "styling.selFilterBlur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterBrightIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBrightIsOn", t)
                        },
                        expression: "styling.selFilterBrightIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Brightness",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterBright,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBright", t)
                        },
                        expression: "styling.selFilterBright"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterContIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterContIsOn", t)
                        },
                        expression: "styling.selFilterContIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Contrast",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterCont,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterCont", t)
                        },
                        expression: "styling.selFilterCont"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterHueIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterHueIsOn", t)
                        },
                        expression: "styling.selFilterHueIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Hue-rotate",
                        suffix: "deg",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterHue,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterHue", t)
                        },
                        expression: "styling.selFilterHue"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterInvertIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterInvertIsOn", t)
                        },
                        expression: "styling.selFilterInvertIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Invert",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterInvert,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterInvert", t)
                        },
                        expression: "styling.selFilterInvert"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterSepiaIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSepiaIsOn", t)
                        },
                        expression: "styling.selFilterSepiaIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Sepia",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterSepia,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSepia", t)
                        },
                        expression: "styling.selFilterSepia"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterOpacIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterOpacIsOn", t)
                        },
                        expression: "styling.selFilterOpacIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Opacity",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterOpac,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterOpac", t)
                        },
                        expression: "styling.selFilterOpac"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterSaturIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSaturIsOn", t)
                        },
                        expression: "styling.selFilterSaturIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Saturate",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterSatur,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterSatur", t)
                        },
                        expression: "styling.selFilterSatur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.selFilterGrayIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterGrayIsOn", t)
                        },
                        expression: "styling.selFilterGrayIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Greyscale",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.selFilterGray,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterGray", t)
                        },
                        expression: "styling.selFilterGray"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Background Color"
                    },
                    model: {
                        value: e.styling.selBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selBgColorIsOn", t)
                        },
                        expression: "styling.selBgColorIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Overlay on Image?",
						disabled: !e.styling.selBgColorIsOn
                    },
                    model: {
                        value: e.styling.selOverlayOnImage,
                        callback: function(t) {
                            e.$set(e.styling, "selOverlayOnImage", t)
                        },
                        expression: "styling.selOverlayOnImage"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selBgColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBgColor", t)
                        },
                        expression: "styling.selFilterBgColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Border Color"
                    },
                    model: {
                        value: e.styling.selBorderColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selBorderColorIsOn", t)
                        },
                        expression: "styling.selBorderColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selBorderColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterBorderColor", t)
                        },
                        expression: "styling.selFilterBorderColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Title Color"
                    },
                    model: {
                        value: e.styling.selCTitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selCTitleColorIsOn", t)
                        },
                        expression: "styling.selCTitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selCTitleColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterCTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterCTitleColor", t)
                        },
                        expression: "styling.selFilterCTitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Text Color"
                    },
                    model: {
                        value: e.styling.selCTextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selCTextColorIsOn", t)
                        },
                        expression: "styling.selCTextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selCTextColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterCTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterCTextColor", t)
                        },
                        expression: "styling.selFilterCTextColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Title Color"
                    },
                    model: {
                        value: e.styling.selATitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selATitleColorIsOn", t)
                        },
                        expression: "styling.selATitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selATitleColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterATitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterATitleColor", t)
                        },
                        expression: "styling.selFilterATitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Text Color"
                    },
                    model: {
                        value: e.styling.selATextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "selATextColorIsOn", t)
                        },
                        expression: "styling.selATextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.selATextColorIsOn
                    },
                    model: {
                        value: e.styling.selFilterATextColor,
                        callback: function(t) {
                            e.$set(e.styling, "selFilterATextColor", t)
                        },
                        expression: "styling.selFilterATextColor"
                    }
                })], 1)])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "6" : "12"
					}
				}, [o("v-row", {
                    staticClass: "modal-header"
                }, [o("h5", {
                    staticClass: "modal-title"
                }, [e._v("Filter on Choice that is missing its required")])]), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterBlurIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBlurIsOn", t)
                        },
                        expression: "styling.reqFilterBlurIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Blur",
                        suffix: "px",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterBlur,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBlur", t)
                        },
                        expression: "styling.reqFilterBlur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterBrightIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBrightIsOn", t)
                        },
                        expression: "styling.reqFilterBrightIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Brightness",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterBright,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBright", t)
                        },
                        expression: "styling.reqFilterBright"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterContIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterContIsOn", t)
                        },
                        expression: "styling.reqFilterContIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Contrast",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterCont,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterCont", t)
                        },
                        expression: "styling.reqFilterCont"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterHueIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterHueIsOn", t)
                        },
                        expression: "styling.reqFilterHueIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
						disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Hue-rotate",
                        suffix: "deg",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterHue,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterHue", t)
                        },
                        expression: "styling.reqFilterHue"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterInvertIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterInvertIsOn", t)
                        },
                        expression: "styling.reqFilterInvertIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Invert",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterInvert,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterInvert", t)
                        },
                        expression: "styling.reqFilterInvert"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterSepiaIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSepiaIsOn", t)
                        },
                        expression: "styling.reqFilterSepiaIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Sepia",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterSepia,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSepia", t)
                        },
                        expression: "styling.reqFilterSepia"
                    }
                }), o("v-switch", {
                    attrs: {
                        dense: "",
                        label: "Hide The Choice Completely"
                    },
                    model: {
                        value: e.styling.reqFilterVisibleIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterVisibleIsOn", t)
                        },
                        expression: "styling.reqFilterVisibleIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterOpacIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterOpacIsOn", t)
                        },
                        expression: "styling.reqFilterOpacIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Opacity",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterOpac,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterOpac", t)
                        },
                        expression: "styling.reqFilterOpac"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterSaturIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSaturIsOn", t)
                        },
                        expression: "styling.reqFilterSaturIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Saturate",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterSatur,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterSatur", t)
                        },
                        expression: "styling.reqFilterSatur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.reqFilterGrayIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterGrayIsOn", t)
                        },
                        expression: "styling.reqFilterGrayIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        disabled: e.styling.reqFilterVisibleIsOn,
                        label: "Greyscale",
                        "hide-details": "",
                        suffix: "%",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.reqFilterGray,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterGray", t)
                        },
                        expression: "styling.reqFilterGray"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Background Color"
                    },
                    model: {
                        value: e.styling.reqBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqBgColorIsOn", t)
                        },
                        expression: "styling.reqBgColorIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Overlay on Image?",
						disabled: !e.styling.reqBgColorIsOn
                    },
                    model: {
                        value: e.styling.reqOverlayOnImage,
                        callback: function(t) {
                            e.$set(e.styling, "reqOverlayOnImage", t)
                        },
                        expression: "styling.reqOverlayOnImage"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqBgColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBgColor", t)
                        },
                        expression: "styling.reqFilterBgColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Border Color"
                    },
                    model: {
                        value: e.styling.reqBorderColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqBorderColorIsOn", t)
                        },
                        expression: "styling.reqBorderColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqBorderColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterBorderColor", t)
                        },
                        expression: "styling.reqFilterBorderColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Title Color"
                    },
                    model: {
                        value: e.styling.reqCTitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqCTitleColorIsOn", t)
                        },
                        expression: "styling.reqCTitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqCTitleColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterCTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterCTitleColor", t)
                        },
                        expression: "styling.reqFilterCTitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Choice Text Color"
                    },
                    model: {
                        value: e.styling.reqCTextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqCTextColorIsOn", t)
                        },
                        expression: "styling.reqCTextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqCTextColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterCTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterCTextColor", t)
                        },
                        expression: "styling.reqFilterCTextColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Title Color"
                    },
                    model: {
                        value: e.styling.reqATitleColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqATitleColorIsOn", t)
                        },
                        expression: "styling.reqATitleColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqATitleColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterATitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterATitleColor", t)
                        },
                        expression: "styling.reqFilterATitleColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 930 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": "",
                        label: "Addon Text Color"
                    },
                    model: {
                        value: e.styling.reqATextColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "reqATextColorIsOn", t)
                        },
                        expression: "styling.reqATextColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        dense: "",
                        "canvas-height": "50",
                        disabled: !e.styling.reqATextColorIsOn || e.styling.reqFilterVisibleIsOn
                    },
                    model: {
                        value: e.styling.reqFilterATextColor,
                        callback: function(t) {
                            e.$set(e.styling, "reqFilterATextColor", t)
                        },
                        expression: "styling.reqFilterATextColor"
                    }
                })], 1)])], 1), o("v-col", {
					attrs: {
						cols: "12"
					}
				}, [o("v-row", {
                    staticClass: "modal-header"
                }, [o("h5", {
                    staticClass: "modal-title"
                }, [e._v("Filter on Choice that is not selected")])]), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterBlurIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBlurIsOn", t)
                        },
                        expression: "styling.unselFilterBlurIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Blur",
                        suffix: "px",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterBlur,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBlur", t)
                        },
                        expression: "styling.unselFilterBlur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterBrightIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBrightIsOn", t)
                        },
                        expression: "styling.unselFilterBrightIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Brightness",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterBright,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterBright", t)
                        },
                        expression: "styling.unselFilterBright"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterContIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterContIsOn", t)
                        },
                        expression: "styling.unselFilterContIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Contrast",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterCont,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterCont", t)
                        },
                        expression: "styling.unselFilterCont"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterHueIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterHueIsOn", t)
                        },
                        expression: "styling.unselFilterHueIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Hue-rotate",
                        suffix: "deg",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterHue,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterHue", t)
                        },
                        expression: "styling.unselFilterHue"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterInvertIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterInvertIsOn", t)
                        },
                        expression: "styling.unselFilterInvertIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Invert",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterInvert,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterInvert", t)
                        },
                        expression: "styling.unselFilterInvert"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterSepiaIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSepiaIsOn", t)
                        },
                        expression: "styling.unselFilterSepiaIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Sepia",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterSepia,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSepia", t)
                        },
                        expression: "styling.unselFilterSepia"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 390 ? "4" : "12"
					}
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterOpacIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterOpacIsOn", t)
                        },
                        expression: "styling.unselFilterOpacIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Opacity",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterOpac,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterOpac", t)
                        },
                        expression: "styling.unselFilterOpac"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterSaturIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSaturIsOn", t)
                        },
                        expression: "styling.unselFilterSaturIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Saturate",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterSatur,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterSatur", t)
                        },
                        expression: "styling.unselFilterSatur"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        dense: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.unselFilterGrayIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterGrayIsOn", t)
                        },
                        expression: "styling.unselFilterGrayIsOn"
                    }
                }), o("v-text-field", {
                    attrs: {
                        dense: "",
                        label: "Greyscale",
                        suffix: "%",
                        filled: "",
                        "hide-details": "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.unselFilterGray,
                        callback: function(t) {
                            e.$set(e.styling, "unselFilterGray", t)
                        },
                        expression: "styling.unselFilterGray"
                    }
                })], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            Ds = [],
            zs = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    }
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight;
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    }
                }
            },
            Ls = zs,
            Ws = Object(w["a"])(Ls, Ps, Ds, !1, null, null, null),
            Hs = Ws.exports;
        x()(Ws, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VRow: S["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var Es = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", [o("p", {
                    staticClass: "text-center"
                }, [e._v("Color of the background")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.backgroundColor,
                        callback: function(t) {
                            e.$set(e.styling, "backgroundColor", t)
                        },
                        expression: "styling.backgroundColor"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Does it repeat?"
                    },
                    model: {
                        value: e.styling.isBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isBackgroundFitIn", !t);
                        },
                        expression: "styling.isBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isBackgroundRepeat", !t);
                        },
                        expression: "styling.isBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.backgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Background Image"
                        }
                    },
                    on: {
                        change: e.onImageChangeBackground,
                        remove: e.onImageRemoval
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Color of the row backgrounds"
                    },
                    model: {
                        value: e.styling.rowBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowBgColorIsOn", t)
                        },
                        expression: "styling.rowBgColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        disabled: !e.styling.rowBgColorIsOn
                    },
                    model: {
                        value: e.styling.rowBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowBgColor", t)
                        },
                        expression: "styling.rowBgColor"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Does it repeat?"
                    },
                    model: {
                        value: e.styling.isRowBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isRowBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isRowBackgroundFitIn", !t);
                        },
                        expression: "styling.isRowBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isRowBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isRowBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isRowBackgroundRepeat", !t);
                        },
                        expression: "styling.isRowBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.rowBackgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Row Background Image"
                        }
                    },
                    on: {
                        change: e.onImageChangeRow,
                        remove: e.onImageRemovalRow
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Color of the choice backgrounds",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.objectBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectBgColorIsOn", t)
                        },
                        expression: "styling.objectBgColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        disabled: !e.styling.objectBgColorIsOn
                    },
                    model: {
                        value: e.styling.objectBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectBgColor", t)
                        },
                        expression: "styling.objectBgColor"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Does it repeat?"
                    },
                    model: {
                        value: e.styling.isObjectBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isObjectBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isObjectBackgroundFitIn", !t);
                        },
                        expression: "styling.isObjectBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.isObjectBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isObjectBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isObjectBackgroundRepeat", !t);
                        },
                        expression: "styling.isObjectBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.objectBackgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Object Background Image"
                        }
                    },
                    on: {
                        change: e.onImageChangeObject,
                        remove: e.onImageRemovalObject
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            Ns = [],
            Gs = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0
                    }
                },
                components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    }
                },
                methods: {
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    },
                    onImageChangeBackground: function(e) {
                        this.$set(this.styling, "backgroundImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
                    onImageChangeObject: function(e) {
                        this.$set(this.styling, "objectBackgroundImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
                    onImageChangeRow: function(e) {
                        this.$set(this.styling, "rowBackgroundImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
                    onImageRemoval: function() {
                        this.$set(this.styling, "backgroundImage", "")
                    },
                    onImageRemovalObject: function() {
                        this.$set(this.styling, "objectBackgroundImage", "")
                    },
                    onImageRemovalRow: function() {
                        this.$set(this.styling, "rowBackgroundImage", "")
                    }
                }
            },
            Us = Gs,
            Ys = Object(w["a"])(Us, Es, Ns, !1, null, null, null),
            Js = Ys.exports;
        x()(Ys, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"]
        });
        var Xs = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					attrs: {
						cols: "12"
					}
				}, [o("v-switch", {
                    staticClass: "auto shrink",
                    attrs: {
                        label: "Use a Seperate Design?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.useBackpackDesign,
                        callback: function(t) {
                            e.$set(e.styling, "useBackpackDesign", t), e.$set(e.styling, "backpackBgColor", "#FFFFFFFF"), e.$set(e.styling, "isBackpackBgRepeat", !1), e.$set(e.styling, "backpackBgImage", "")
                        },
                        expression: "styling.useBackpackDesign"
                    }
                })], 1), o("v-col", [o("p", {
                    staticClass: "text-center"
                }, [e._v("Color of the background")]), o("v-color-picker", {
                    staticClass: "mx-auto",
					attrs: {
						disabled: !e.styling.useBackpackDesign
					},
                    model: {
                        value: e.styling.backpackBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "backpackBgColor", t)
                        },
                        expression: "styling.backpackBgColor"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink ml-8 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Does it repeat?",
						disabled: !e.styling.useBackpackDesign
                    },
                    model: {
                        value: e.styling.isBackpackBgRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isBackpackBgRepeat", t);
							if (t) e.$set(e.styling, "isBackpackBgFitIn", !t);
                        },
                        expression: "styling.isBackpackBgRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink ml-8 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Does it fit in?",
						disabled: !e.styling.useBackpackDesign
                    },
                    model: {
                        value: e.styling.isBackpackBgFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isBackpackBgFitIn", t);
							if (t) e.$set(e.styling, "isBackpackBgRepeat", !t);
							
                        },
                        expression: "styling.isBackpackBgFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: e.window.width > 1903 ? "col-4 ml-0 pl-0" : e.window.width > 1263 ? "col-6" : e.window.width > 960 ? "col-8" : "col-12",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.backpackBgImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Background Image"
                        }
                    },
					class: {
						"disabled": !e.styling.useBackpackDesign
					},
                    on: {
                        change: e.onImageChangeBackground,
                        remove: e.onImageRemoval
                    }
                })], 1)], 1), o("v-row", [o("v-col", [o("v-text-field", {
                    attrs: {
                        label: "Backpack Width",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.backPackWidth,
                        callback: function(t) {
                            e.$set(e.styling, "backPackWidth", t)
                        },
                        expression: "styling.backPackWidth"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            Ks = [],
            Zs = {
                data: function() {
                    return {
                        dialog: !0,
						window: {
                            width: 0,
                            height: 0
                        }
                    }
                },
				components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return this.$store.state.app.styling
                    }
                },
				created: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
                        this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    },
					onImageChangeBackground: function(e) {
                        this.$set(this.styling, "backpackBgImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
					onImageRemoval: function() {
						this.$set(this.styling, "backpackBgImage", "")
					}
                }
            },
            Qs = Zs,
            er = Object(w["a"])(Qs, Xs, Ks, !1, null, null, null),
            tr = er.exports;
        x()(er, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
			VSwitch: L["a"],
            VTextField: R["a"]
        });
        var or = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
                    staticClass: "col-12"
                }, [e._v(" Tier number "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customMultiTextFont,
						callback: function(t) {
							e.$set(e.styling, "customMultiTextFont", t)
						},
						expression: "styling.customMultiTextFont"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [e.styling.customMultiTextFont ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.multiChoiceTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceTextFont", t)
                        },
                        expression: "styling.multiChoiceTextFont"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.multiChoiceTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceTextFont", t)
                        },
                        expression: "styling.multiChoiceTextFont"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.multiChoiceTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceTextSize", t)
                        },
                        expression: "styling.multiChoiceTextSize"
                    }
                }, [e._v("%")])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-12"
                }, [e._v(" Counter "), o("v-row", [o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.counterPositions,
                        filled: "",
                        label: "Counter's Position"
                    },
                    model: {
                        value: e.styling.multiChoiceCounterPosition,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceCounterPosition", t);
                        },
                        expression: "styling.multiChoiceCounterPosition"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1",
					attrs: {
						cols: e.window.width > 540 ? !1 : "12"
					}
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Counter Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.multiChoiceCounterSize,
                        callback: function(t) {
                            e.$set(e.styling, "multiChoiceCounterSize", t)
                        },
                        expression: "styling.multiChoiceCounterSize"
                    }
                }, [e._v("%")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            ir = [],
            sr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        textFonts: [{
                            text: "Times New Roman",
                            value: "Times New Roman"
                        }, {
                            text: "Arial",
                            value: "Arial"
                        }, {
                            text: "Roboto",
                            value: "Roboto"
                        }, {
                            text: "Courier New",
                            value: "Courier New"
                        }, {
                            text: "Courier",
                            value: "Courier"
                        }, {
                            text: "Verdana",
                            value: "Verdana"
                        }, {
                            text: "Georgia",
                            value: "Georgia"
                        }, {
                            text: "Comic Sans MS(NO!)",
                            value: "Comic Sans MS"
                        }, {
                            text: "Candara",
                            value: "Candara"
                        }, {
                            text: "Arial Black",
                            value: "Arial Black"
                        }, {
                            text: "Impact",
                            value: "Impact"
                        }, {
                            text: "Helvetica",
                            value: "Helvetica"
                        }, {
                            text: "Calibri",
                            value: "Calibri"
                        }, {
                            text: "Cambria",
                            value: "Cambria"
                        }, {
                            text: "Trebuchet MS",
                            value: "Trebuchet MS"
                        }, {
                            text: "Tahoma",
                            value: "Tahoma"
                        }],
						counterPositions: [{
							text: "Bottom of Choice Title",
							value: 0
						}, {
							text: "Bottom of Choice Scores",
							value: 1
						}, {
							text: "Bottom of Choice Requirements",
							value: 2
						}, {
							text: "Bottom of Choice Text",
							value: 3
						}, {
							text: "Bottom of Choice Addons",
							value: 4
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
					app: function() {
						return this.$store.state.app
					},
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    }
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize(), this.fontImport()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight;
                    },
					fontImport: function() {
						for (var a = 0; a < this.app.googleFonts.length; a++) {
							this.textFonts.push({text: this.app.googleFonts[a], value: this.app.googleFonts[a]});
						}
					},
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    }
                }
            },
            rr = sr,
            ar = Object(w["a"])(rr, or, ir, !1, null, null, null),
            nr = ar.exports;
        x()(ar, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VTextField: R["a"]
        });
        var lr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [e.styling.objectDesignIsAdvanced ? o("v-row", [o("v-row", [o("v-col", [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the choices")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Margin",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectMargin,
                        callback: function(t) {
                            e.$set(e.styling, "objectMargin", t)
                        },
                        expression: "styling.objectMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Padding",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextPadding", t)
                        },
                        expression: "styling.objectTextPadding"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n6"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.objectBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderStyle", t)
                        },
                        expression: "styling.objectBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderWidth", t)
                        },
                        expression: "styling.objectBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border-Radius Cuts off overflow"
                    },
                    model: {
                        value: e.styling.objectOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectOverflowIsOn", t)
                        },
                        expression: "styling.objectOverflowIsOn"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Horizontal Shadow",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowH", t)
                        },
                        expression: "styling.objectDropShadowH"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Vertical Shadow",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowV,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowV", t)
                        },
                        expression: "styling.objectDropShadowV"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Blur",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowBlur,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowBlur", t)
                        },
                        expression: "styling.objectDropShadowBlur"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Spread",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectDropShadowSpread,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowSpread", t)
                        },
                        expression: "styling.objectDropShadowSpread"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow is turned on"
                    },
                    model: {
                        value: e.styling.objectDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowIsOn", t)
                        },
                        expression: "styling.objectDropShadowIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.objectBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderIsOn", t)
                        },
                        expression: "styling.objectBorderIsOn"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusTopLeft", t)
                        },
                        expression: "styling.objectBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusTopRight", t)
                        },
                        expression: "styling.objectBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusBottomRight", t)
                        },
                        expression: "styling.objectBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.objectBorderRadiusBottomLeft"
                    }
                }), o("v-switch", {
                    staticClass: "auto shrink mt-n3",
                    attrs: {
                        label: "Border-Radius Percent or Pixels?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.objectBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusIsPixels", t)
                        },
                        expression: "styling.objectBorderRadiusIsPixels"
                    }
                })], 1)], 1)], 1) : o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the choices")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the choices",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectMargin,
                        callback: function(t) {
                            e.$set(e.styling, "objectMargin", t)
                        },
                        expression: "styling.objectMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the text in the choices and its border",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextPadding", t)
                        },
                        expression: "styling.objectTextPadding"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "The Higher the number the bigger the shadow will be.",
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.shadowIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.objectDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowH", t)
                        },
                        expression: "styling.objectDropShadowH"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.objectDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowIsOn", t)
                        },
                        expression: "styling.objectDropShadowIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.objectBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderIsOn", t)
                        },
                        expression: "styling.objectBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.objectBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderStyle", t)
                        },
                        expression: "styling.objectBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderWidth", t)
                        },
                        expression: "styling.objectBorderWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the top of each choice",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.topBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.objectBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusTopLeft", t)
                        },
                        expression: "styling.objectBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the bottom of each choice",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.bottomBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.objectBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.objectBorderRadiusBottomLeft"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 1263 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the Drop Shadow")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50"
                    },
                    model: {
                        value: e.styling.objectDropShadowColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectDropShadowColor", t)
                        },
                        expression: "styling.objectDropShadowColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1263 ? "4" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-switch", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        label: "Advanced Design?"
                    },
                    model: {
                        value: e.styling.objectDesignIsAdvanced,
                        callback: function(t) {
                            e.$set(e.styling, "objectDesignIsAdvanced", t)
                        },
                        expression: "styling.objectDesignIsAdvanced"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
						"hide-details": "",
                        label: "If this is checked then every choice in a row will have identical height."
                    },
                    model: {
                        value: e.styling.objectHeight,
                        callback: function(t) {
                            e.$set(e.styling, "objectHeight", t)
                        },
                        expression: "styling.objectHeight"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Apply padding to the Choice Title"
                    },
                    model: {
                        value: e.styling.titlePaddingIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "titlePaddingIsOn", t)
                        },
                        expression: "styling.titlePaddingIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Remove the space below the addon text"
                    },
                    model: {
                        value: e.styling.removeSpaceAddonIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "removeSpaceAddonIsOn", t)
                        },
                        expression: "styling.removeSpaceAddonIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Object Gradient is turned on"
                    },
                    model: {
                        value: e.styling.objectGradientIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradientIsOn", t)
                        },
                        expression: "styling.objectGradientIsOn"
                    }
                }), e.styling.objectGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when not selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.objectGradient,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradient", t)
                        },
                        expression: "styling.objectGradient"
                    }
                }, [e._v("px")]) : e._e(), e.styling.objectGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.objectGradientOnSelect,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradientOnSelect", t)
                        },
                        expression: "styling.objectGradientOnSelect"
                    }
                }, [e._v("px")]) : e._e(), e.styling.objectGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when missing requirement",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.objectGradientOnReq,
                        callback: function(t) {
                            e.$set(e.styling, "objectGradientOnReq", t)
                        },
                        expression: "styling.objectGradientOnReq"
                    }
                }, [e._v("px")]) : e._e(), e.styling.objectGradientIsOn ? o("span", [e._v("You might need to leave for the main menu if things stop updating, using the background colors for filters does not work well, so you'll need to place gradients in ALL of them, but using something like (green, green) works. "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.w3schools.com/css/css3_gradients.asp"
                    }
                }, [e._v("https://www.w3schools.com/css/css3_gradients.asp")])]) : e._e()], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1263 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the choice border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50"
                    },
                    model: {
                        value: e.styling.objectBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderColor", t)
                        },
                        expression: "styling.objectBorderColor"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					staticClass: "text-center",
					attrs: {
						cols: "12"
					}
				}, [e._v("Border Image")], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 630 ? "4" : "12"
					}
				}, [o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.objectBorderImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Object Border Image"
                        }
                    },
                    on: {
                        change: e.onBorderImageChangeObject,
                        remove: e.onBorderImageRemovalObject
                    }
                })], 1), o("v-col", {
					staticClass: "pa-0",
					attrs: {
						cols: e.window.width > 630 ? "8" : "12"
					}
				}, [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-select", {
                    attrs: {
                        items: e.borderImageRepeat,
                        "item-value": "text",
                        filled: "",
                        label: "Repeat"
                    },
                    model: {
                        value: e.styling.objectBorderImageRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageRepeat", t)
                        },
                        expression: "styling.objectBorderImageRepeat"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageWidth", t)
                        },
                        expression: "styling.objectBorderImageWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Top",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceTop,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceTop", t)
                        },
                        expression: "styling.objectBorderImageSliceTop"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Bottom",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceBottom,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceBottom", t)
                        },
                        expression: "styling.objectBorderImageSliceBottom"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Left",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceLeft", t)
                        },
                        expression: "styling.objectBorderImageSliceLeft"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Right",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectBorderImageSliceRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectBorderImageSliceRight", t)
                        },
                        expression: "styling.objectBorderImageSliceRight"
                    }
                }, [e._v("px")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            cr = [],
            dr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						borderImageRepeat: [{
							text: "stretch"
						}, {
							text: "repeat"
						}, {
							text: "round"
						}, {
							text: "space"
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
				components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.objectBorderRadiusIsPixels ? "px" : "%"
                    }
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    shadowIsChanged: function() {
                        this.styling.objectDropShadowV = this.styling.objectDropShadowH, this.styling.objectDropShadowSpread = this.styling.objectDropShadowH, this.styling.objectDropShadowBlur = this.styling.objectDropShadowH
                    },
                    topBorderIsChanged: function() {
                        this.styling.objectBorderRadiusTopRight = this.styling.objectBorderRadiusTopLeft
                    },
                    bottomBorderIsChanged: function() {
                        this.styling.objectBorderRadiusBottomRight = this.styling.objectBorderRadiusBottomLeft
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    },
					cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					onBorderImageChangeObject: function(e) {
                        this.$set(this.styling, "objectBorderImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
					onBorderImageRemovalObject: function() {
                        this.$set(this.styling, "objectBorderImage" ,"")
                    }
                }
            },
            pr = dr,
            ur = (o("cb3f"), Object(w["a"])(pr, lr, cr, !1, null, "44585128", null)),
            hr = ur.exports;
        x()(ur, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var gr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Size and Margin of the choice image")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image inside of a choice",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageWidth", t)
                        },
                        expression: "styling.objectImageWidth"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Top of choice and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImageMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageMarginTop", t)
                        },
                        expression: "styling.objectImageMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Title and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImageMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageMarginBottom", t)
                        },
                        expression: "styling.objectImageMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Works only with the Image Left/Right template.")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image box inside of choice",
                        suffix: "%",
						placeholder: 50,
                        type: "number",
                        filled: "",
						min: 0,
						max: 100
                    },
                    model: {
                        value: e.styling.objectImageBoxWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectImageBoxWidth", Math.min(Math.max(0, t), 100));
                        },
                        expression: "styling.objectImageBoxWidth"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Style of the border"
                    },
                    model: {
                        value: e.styling.objectImgBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderStyle", t)
                        },
                        expression: "styling.objectImgBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        suffix: "px",
                        type: "number",
                        label: "Thickness of the border",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderWidth", t)
                        },
                        expression: "styling.objectImgBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Border Is On"
                    },
                    model: {
                        value: e.styling.objectImgBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderIsOn", t)
                        },
                        expression: "styling.objectImgBorderIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Cut off overflow images/text"
                    },
                    model: {
                        value: e.styling.objectImgOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgOverflowIsOn", t)
                        },
                        expression: "styling.objectImgOverflowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-row", [o("v-col", {
                    staticClass: "pt-0"
                }, [o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusTopLeft", t)
                        },
                        expression: "styling.objectImgBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusTopRight", t)
                        },
                        expression: "styling.objectImgBorderRadiusTopRight"
                    }
                })], 1), o("v-col", {
                    staticClass: "pt-0"
                }, [o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusBottomRight", t)
                        },
                        expression: "styling.objectImgBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.objectImgBorderRadiusBottomLeft"
                    }
                })], 1)], 1), o("v-switch", {
                    staticClass: "auto shrink pt-0",
                    attrs: {
                        label: "Pixels or Percents",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.objectImgBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderRadiusIsPixels", t)
                        },
                        expression: "styling.objectImgBorderRadiusIsPixels"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50"
                    },
                    model: {
                        value: e.styling.objectImgBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgBorderColor", t)
                        },
                        expression: "styling.objectImgBorderColor"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
                    staticClass: "py-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Object Fit"), o("br"), e._v(" How the images fit inside of the choice."), o("br"), e._v(" A textfield where you can decide the Size of the container will appear in Row Settings when the switch is on.")]), o("v-col", [o("v-select", {
                    attrs: {
                        items: e.objectFitStyles,
                        "item-value": "value",
                        "item-text": "text",
                        filled: "",
                        "hide-details": "",
                        label: "Object Fill"
                    },
                    model: {
                        value: e.styling.objectImgObjectFillStyle,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgObjectFillStyle", t)
                        },
                        expression: "styling.objectImgObjectFillStyle"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Object Fit Is On"
                    },
                    model: {
                        value: e.styling.objectImgObjectFillIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "objectImgObjectFillIsOn", t)
                        },
                        expression: "styling.objectImgObjectFillIsOn"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            br = [],
            vr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
                        objectFitStyles: [{
                            value: "fill",
                            text: "Fill: The replaced content is sized to fill the element's content box. If necessary, the object will be stretched or squished to fit"
                        }, {
                            value: "contain",
                            text: "Contain: The replaced content is scaled to maintain its aspect ratio while fitting within the element's content box"
                        }, {
                            value: "cover",
                            text: "Cover: The replaced content is sized to maintain its aspect ratio while filling the element's entire content box. The object will be clipped to fit"
                        }, {
                            value: "scale-down",
                            text: "Scale-down: The content is sized as if none or contain were specified (would result in a smaller concrete object size)"
                        }, {
                            value: "none",
                            text: "None: The replaced content is not resized"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.objectImgBorderRadiusIsPixels ? "px" : "%"
                    }
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    }
                }
            },
            mr = vr,
            fr = Object(w["a"])(mr, gr, br, !1, null, null, null),
            wr = fr.exports;
        x()(fr, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
		var alr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-col", {
					attrs: {
						cols: "12"
					}
				}, [o("v-switch", {
                    staticClass: "auto shrink",
                    attrs: {
                        label: "Use a Seperate Design?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.useAddonDesign,
                        callback: function(t) {
                            e.$set(e.styling, "useAddonDesign", t);
							if (t) {
								Object.keys(e.addonStyling).forEach(key => {
									e.$set(e.styling, key, e.addonStyling[key]);
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.addonStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "styling.useAddonImage"
                    }
                })], 1), e.styling.addonDesignIsAdvanced ? o("v-row", [o("v-row", [o("v-col", [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the choices")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Margin",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonMargin,
                        callback: function(t) {
                            e.$set(e.styling, "addonMargin", t)
                        },
                        expression: "styling.addonMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Padding",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextPadding", t)
                        },
                        expression: "styling.addonTextPadding"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n6"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderStyle", t)
                        },
                        expression: "styling.addonBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderWidth", t)
                        },
                        expression: "styling.addonBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border-Radius Cuts off overflow",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonOverflowIsOn", t)
                        },
                        expression: "styling.addonOverflowIsOn"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Horizontal Shadow",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowH", t)
                        },
                        expression: "styling.addonDropShadowH"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Vertical Shadow",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDropShadowV,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowV", t)
                        },
                        expression: "styling.addonDropShadowV"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Blur",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDropShadowBlur,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowBlur", t)
                        },
                        expression: "styling.addonDropShadowBlur"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Shadow Spread",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDropShadowSpread,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowSpread", t)
                        },
                        expression: "styling.addonDropShadowSpread"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow is turned on",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowIsOn", t)
                        },
                        expression: "styling.addonDropShadowIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderIsOn", t)
                        },
                        expression: "styling.addonBorderIsOn"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusTopLeft", t)
                        },
                        expression: "styling.addonBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusTopRight", t)
                        },
                        expression: "styling.addonBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusBottomRight", t)
                        },
                        expression: "styling.addonBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.addonBorderRadiusBottomLeft"
                    }
                }), o("v-switch", {
                    staticClass: "auto shrink mt-n3",
                    attrs: {
                        label: "Border-Radius Percent or Pixels?",
                        "hide-details": "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusIsPixels", t)
                        },
                        expression: "styling.addonBorderRadiusIsPixels"
                    }
                })], 1)], 1)], 1) : o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "pa-0"
                }, [e._v("Margin and Padding of the choices")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the choices",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonMargin,
                        callback: function(t) {
                            e.$set(e.styling, "addonMargin", t)
                        },
                        expression: "styling.addonMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "Space between the text in the choices and its border",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextPadding", t)
                        },
                        expression: "styling.addonTextPadding"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "The Higher the number the bigger the shadow will be.",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    on: {
                        change: function(t) {
                            return e.shadowIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.addonDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowH", t)
                        },
                        expression: "styling.addonDropShadowH"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowIsOn", t)
                        },
                        expression: "styling.addonDropShadowIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderIsOn", t)
                        },
                        expression: "styling.addonBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderStyle", t)
                        },
                        expression: "styling.addonBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderWidth", t)
                        },
                        expression: "styling.addonBorderWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 780 ? "3" : e.window.width > 480 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the top of each choice",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    on: {
                        change: function(t) {
                            return e.topBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.addonBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusTopLeft", t)
                        },
                        expression: "styling.addonBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the bottom of each choice",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    on: {
                        change: function(t) {
                            return e.bottomBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.addonBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.addonBorderRadiusBottomLeft"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 1263 ? "3" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the Drop Shadow")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDropShadowColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonDropShadowColor", t)
                        },
                        expression: "styling.addonDropShadowColor"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1263 ? "3" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-switch", {
                    staticClass: "pt-0 mt-0",
                    attrs: {
                        label: "Advanced Design?",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonDesignIsAdvanced,
                        callback: function(t) {
                            e.$set(e.styling, "addonDesignIsAdvanced", t)
                        },
                        expression: "styling.addonDesignIsAdvanced"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Apply padding to the Addon Title",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonTitlePaddingIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitlePaddingIsOn", t)
                        },
                        expression: "styling.addonTitlePaddingIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Remove the space below the addon text",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonRemoveSpaceAddonIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonRemoveSpaceAddonIsOn", t)
                        },
                        expression: "styling.addonRemoveSpaceAddonIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Addon Gradient is turned on",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonGradientIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradientIsOn", t)
                        },
                        expression: "styling.addonGradientIsOn"
                    }
                }), e.styling.addonGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when not selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonGradient,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradient", t)
                        },
                        expression: "styling.addonGradient"
                    }
                }, [e._v("px")]) : e._e(), e.styling.addonGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when selected",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonGradientOnSelect,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradientOnSelect", t)
                        },
                        expression: "styling.addonGradientOnSelect"
                    }
                }, [e._v("px")]) : e._e(), e.styling.addonGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient when missing requirement",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonGradientOnReq,
                        callback: function(t) {
                            e.$set(e.styling, "addonGradientOnReq", t)
                        },
                        expression: "styling.addonGradientOnReq"
                    }
                }, [e._v("px")]) : e._e(), e.styling.addonGradientIsOn ? o("span", [e._v("You might need to leave for the main menu if things stop updating, using the background colors for filters does not work well, so you'll need to place gradients in ALL of them, but using something like (green, green) works. "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.w3schools.com/css/css3_gradients.asp"
                    }
                }, [e._v("https://www.w3schools.com/css/css3_gradients.asp")])]) : e._e()], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1263 ? "3" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the choice border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderColor", t)
                        },
                        expression: "styling.addonBorderColor"
                    }
                })], 1), o("v-col", {
					staticClass: "pt-0",
					attrs: {
						cols: e.window.width > 1263 ? "3" : e.window.width > 620 ? "6" : "12"
					}
				}, [o("v-col", {
					staticClass: "pa-0"
				}, [o("v-switch", {
                    staticClass: "mt-0 pt-0 auto shrink",
                    attrs: {
                        label: "Use a Background Image?",
                        "hide-details": "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.useAddonBackgroundImage,
                        callback: function(t) {
                            e.$set(e.styling, "useAddonBackgroundImage", t);
							if (!t) e.$delete(e.styling, "addonBackgroundImage");
                        },
                        expression: "styling.useAddonBackgroundImage"
                    }
                }), e.styling.useAddonBackgroundImage ? o("v-col", {
					staticClass: "pa-0"
				}, [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Does it repeat?",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.isAddonBackgroundRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "isAddonBackgroundRepeat", t);
							if (t) e.$set(e.styling, "isAddonBackgroundFitIn", !t);
                        },
                        expression: "styling.isAddonBackgroundRepeat"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        label: "Does it fit in?",
                        "hide-details": "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.isAddonBackgroundFitIn,
                        callback: function(t) {
                            e.$set(e.styling, "isAddonBackgroundFitIn", t);
							if (t) e.$set(e.styling, "isAddonBackgroundRepeat", !t);
                        },
                        expression: "styling.isAddonBackgroundFitIn"
                    }
                }), o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.addonBackgroundImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Addon Background Image"
                        },
						disabled: !e.styling.useAddonDesign
                    },
                    on: {
                        change: e.onImageChangeAddon,
                        remove: e.onImageRemovalAddon
                    }
                })], 1) : [o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
						"hide-details": "",
                        label: "Color of the addon backgrounds",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBgColorIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonBgColorIsOn", t)
                        },
                        expression: "styling.addonBgColorIsOn"
                    }
                }), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
						"canvas-height": "50",
                        disabled: !e.styling.useAddonDesign || !e.styling.addonBgColorIsOn
                    },
                    model: {
                        value: e.styling.addonBgColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonBgColor", t)
                        },
                        expression: "styling.addonBgColor"
                    }
                })]], 1)])], 1), o("v-row", [o("v-col", {
					staticClass: "text-center",
					attrs: {
						cols: "12"
					}
				}, [e._v("Border Image")], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 630 ? "4" : "12"
					}
				}, [o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.addonBorderImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Addon Border Image"
                        }
                    },					
					class: {
						"disabled": !e.styling.useAddonDesign
					},
                    on: {
                        change: e.onBorderImageChangeAddon,
                        remove: e.onBorderImageRemovalAddon
                    }
                })], 1), o("v-col", {
					staticClass: "pa-0",
					attrs: {
						cols: e.window.width > 630 ? "8" : "12"
					}
				}, [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-select", {
                    attrs: {
                        items: e.borderImageRepeat,
                        "item-value": "text",
                        filled: "",
                        label: "Repeat",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderImageRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageRepeat", t)
                        },
                        expression: "styling.addonBorderImageRepeat"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Width",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageWidth", t)
                        },
                        expression: "styling.addonBorderImageWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Top",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceTop,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceTop", t)
                        },
                        expression: "styling.addonBorderImageSliceTop"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Bottom",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceBottom,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceBottom", t)
                        },
                        expression: "styling.addonBorderImageSliceBottom"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Left",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceLeft", t)
                        },
                        expression: "styling.addonBorderImageSliceLeft"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Slice Right",
                        filled: "",
						disabled: !e.styling.useAddonDesign
                    },
                    model: {
                        value: e.styling.addonBorderImageSliceRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonBorderImageSliceRight", t)
                        },
                        expression: "styling.addonBorderImageSliceRight"
                    }
                }, [e._v("px")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            acr = [],
            adr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						borderImageRepeat: [{
							text: "stretch"
						}, {
							text: "repeat"
						}, {
							text: "round"
						}, {
							text: "space"
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
				components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.addonBorderRadiusIsPixels ? "px" : "%"
                    },
					addonStyling: function() {
						return this.$store.state.addonStyling
					}
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    shadowIsChanged: function() {
                        this.styling.addonDropShadowV = this.styling.addonDropShadowH, this.styling.addonDropShadowSpread = this.styling.addonDropShadowH, this.styling.addonDropShadowBlur = this.styling.addonDropShadowH
                    },
                    topBorderIsChanged: function() {
                        this.styling.addonBorderRadiusTopRight = this.styling.addonBorderRadiusTopLeft
                    },
                    bottomBorderIsChanged: function() {
                        this.styling.addonBorderRadiusBottomRight = this.styling.addonBorderRadiusBottomLeft
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    },
					cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					onBorderImageChangeAddon: function(e) {
                        this.$set(this.styling, "addonBorderImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
                    },
					onBorderImageRemovalAddon: function() {
                        this.$set(this.styling, "addonBorderImage", "")
                    },
					onImageChangeAddon: function(e) {
						this.$set(this.styling, "addonBackgroundImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
					},
					onImageRemovalAddon: function() {
						this.$set(this.styling, "addonBackgroundImage", "")
					}
                }
            },
            apr = adr,
            aur = (o("cb3f"), Object(w["a"])(apr, alr, acr, !1, null, "44585128", null)),
            ahr = aur.exports;
        x()(aur, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
		var agr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					attrs: {
						cols: "12"
					}
				}, [o("v-switch", {
                    staticClass: "auto shrink",
                    attrs: {
                        label: "Use a Seperate Design?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.useAddonImage,
                        callback: function(t) {
							if (t) {
								Object.keys(e.addonImageStyling).forEach(key => {
									e.$set(e.styling, key, e.addonImageStyling[key]);
								});
							} else {
								Object.keys(e.styling).forEach(key => {
									if ((key in e.addonImageStyling)) {
										e.$delete(e.styling, key);
									}
								});
							}
                        },
                        expression: "styling.useAddonImage"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Size and Margin of the addon image")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image inside of a addon",
                        suffix: "%",
                        type: "number",
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageWidth", t)
                        },
                        expression: "styling.addonImageWidth"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Top of addon and Image",
                        suffix: "%",
                        type: "number",
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImageMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageMarginTop", t)
                        },
                        expression: "styling.addonImageMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Title and Image",
                        suffix: "%",
                        type: "number",
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImageMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageMarginBottom", t)
                        },
                        expression: "styling.addonImageMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Works only with the Image Left/Right template.")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image box inside of addon",
                        suffix: "%",
						placeholder: 50,
                        type: "number",
                        filled: "",
						min: 0,
						max: 100,
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImageBoxWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonImageBoxWidth", Math.min(Math.max(0, t), 100));
                        },
                        expression: "styling.addonImageBoxWidth"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Style of the border",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderStyle", t)
                        },
                        expression: "styling.addonImgBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        suffix: "px",
                        type: "number",
                        label: "Thickness of the border",
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderWidth", t)
                        },
                        expression: "styling.addonImgBorderWidth"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Border Is On",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderIsOn", t)
                        },
                        expression: "styling.addonImgBorderIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Cut off overflow images/text",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgOverflowIsOn", t)
                        },
                        expression: "styling.addonImgOverflowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-row", [o("v-col", {
                    staticClass: "pt-0"
                }, [o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusTopLeft", t)
                        },
                        expression: "styling.addonImgBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusTopRight", t)
                        },
                        expression: "styling.addonImgBorderRadiusTopRight"
                    }
                })], 1), o("v-col", {
                    staticClass: "pt-0"
                }, [o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusBottomRight", t)
                        },
                        expression: "styling.addonImgBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.addonImgBorderRadiusBottomLeft"
                    }
                })], 1)], 1), o("v-switch", {
                    staticClass: "auto shrink pt-0",
                    attrs: {
                        label: "Pixels or Percents",
                        "hide-details": "",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderRadiusIsPixels", t)
                        },
                        expression: "styling.addonImgBorderRadiusIsPixels"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgBorderColor", t)
                        },
                        expression: "styling.addonImgBorderColor"
                    }
                })], 1)], 1), o("v-row", [o("v-col", {
                    staticClass: "py-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Object Fit"), o("br"), e._v(" How the images fit inside of the addon."), o("br"), e._v(" A textfield where you can decide the Size of the container will appear in Row Settings when the switch is on.")]), o("v-col", [o("v-select", {
                    attrs: {
                        items: e.objectFitStyles,
                        "item-value": "value",
                        "item-text": "text",
                        filled: "",
                        "hide-details": "",
                        label: "Object Fill",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgObjectFillStyle,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgObjectFillStyle", t)
                        },
                        expression: "styling.addonImgObjectFillStyle"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Object Fit Is On",
						disabled: !e.styling.useAddonImage
                    },
                    model: {
                        value: e.styling.addonImgObjectFillIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "addonImgObjectFillIsOn", t)
                        },
                        expression: "styling.addonImgObjectFillIsOn"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            abr = [],
            avr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
                        objectFitStyles: [{
                            value: "fill",
                            text: "Fill: The replaced content is sized to fill the element's content box. If necessary, the object will be stretched or squished to fit"
                        }, {
                            value: "contain",
                            text: "Contain: The replaced content is scaled to maintain its aspect ratio while fitting within the element's content box"
                        }, {
                            value: "cover",
                            text: "Cover: The replaced content is sized to maintain its aspect ratio while filling the element's entire content box. The object will be clipped to fit"
                        }, {
                            value: "scale-down",
                            text: "Scale-down: The content is sized as if none or contain were specified (would result in a smaller concrete object size)"
                        }, {
                            value: "none",
                            text: "None: The replaced content is not resized"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.addonImgBorderRadiusIsPixels ? "px" : "%"
                    },
					addonImageStyling: function() {
						return this.$store.state.addonImageStyling
					}
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    }
                }
            },
            amr = avr,
            afr = Object(w["a"])(amr, agr, abr, !1, null, null, null),
            awr = afr.exports;
        x()(afr, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var yr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", [e._v(" Style of text inside the point-bar "), o("v-text-field", {
                    attrs: {
                        label: "Bar Text Padding",
                        suffix: "px",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barTextPadding,
                        callback: function(t) {
                            e.$set(e.styling, "barTextPadding", t)
                        },
                        expression: "styling.barTextPadding"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Bar Text Margin",
                        suffix: "px",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barTextMargin,
                        callback: function(t) {
                            e.$set(e.styling, "barTextMargin", t)
                        },
                        expression: "styling.barTextMargin"
                    }
                }), o("v-checkbox", {
					staticClass: "shrink mr-2 mt-1 mb-n4",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customBarTextFont,
						callback: function(t) {
							e.$set(e.styling, "customBarTextFont", t)
						},
						expression: "styling.customBarTextFont"
					}
				}), e.styling.customBarTextFont ? o("v-text-field", {
					staticClass: "mb-8",
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.barTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "barTextFont", t)
                        },
                        expression: "styling.barTextFont"
                    }
                }) : o("v-select", {
                    attrs: {
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.barTextFont,
                        callback: function(t) {
                            e.$set(e.styling, "barTextFont", t)
                        },
                        expression: "styling.barTextFont"
                    }
                }), e._v(" Style of the bar itself "), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Bar Padding",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barPadding,
                        callback: function(t) {
                            e.$set(e.styling, "barPadding", t)
                        },
                        expression: "styling.barPadding"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Bar Margin",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barMargin,
                        callback: function(t) {
                            e.$set(e.styling, "barMargin", t)
                        },
                        expression: "styling.barMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        type: "number",
                        label: "Bar Text Size",
                        suffix: "px",
                        filled: ""
                    },
                    model: {
                        value: e.styling.barTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "barTextSize", t)
                        },
                        expression: "styling.barTextSize"
                    }
                })], 1), o("v-col", [e._v(" Bar Text Color "), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
                    },
                    model: {
                        value: e.styling.barTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "barTextColor", t)
                        },
                        expression: "styling.barTextColor"
                    }
                }), e._v(" Bar Points Color Positive "), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
                    },
                    model: {
                        value: e.styling.barPointPos,
                        callback: function(t) {
                            e.$set(e.styling, "barPointPos", t)
                        },
                        expression: "styling.barPointPos"
                    }
                }), e._v(" Bar Icon Color "), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
                    },
                    model: {
                        value: e.styling.barIconColor,
                        callback: function(t) {
							e.$set(e.styling, "barIconColor", t)
                        },
                        expression: "styling.barIconColor"
                    }
                })], 1), o("v-col", [e._v(" Bar Background Color "), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
                    },
                    model: {
                        value: e.styling.barBackgroundColor,
                        callback: function(t) {
                            e.$set(e.styling, "barBackgroundColor", t)
                        },
                        expression: "styling.barBackgroundColor"
                    }
                }), e._v(" Bar Points Color Negative "), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "50",
                    },
                    model: {
                        value: e.styling.barPointNeg,
                        callback: function(t) {
                            e.$set(e.styling, "barPointNeg", t)
                        },
                        expression: "styling.barPointNeg"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            xr = [],
            Cr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        textFonts: [{
                            text: "Times New Roman",
                            value: "Times New Roman"
                        }, {
                            text: "Arial",
                            value: "Arial"
                        }, {
                            text: "Roboto",
                            value: "Roboto"
                        }, {
                            text: "Courier New",
                            value: "Courier New"
                        }, {
                            text: "Courier",
                            value: "Courier"
                        }, {
                            text: "Verdana",
                            value: "Verdana"
                        }, {
                            text: "Georgia",
                            value: "Georgia"
                        }, {
                            text: "Comic Sans MS(NO!)",
                            value: "Comic Sans MS"
                        }, {
                            text: "Candara",
                            value: "Candara"
                        }, {
                            text: "Arial Black",
                            value: "Arial Black"
                        }, {
                            text: "Impact",
                            value: "Impact"
                        }, {
                            text: "Helvetica",
                            value: "Helvetica"
                        }, {
                            text: "Calibri",
                            value: "Calibri"
                        }, {
                            text: "Cambria",
                            value: "Cambria"
                        }, {
                            text: "Trebuchet MS",
                            value: "Trebuchet MS"
                        }, {
                            text: "Tahoma",
                            value: "Tahoma"
                        }]
                    }
                },
                computed: {
					app: function() {
						return this.$store.state.app
					},
                    styling: function() {
                        return this.$store.state.app.styling
                    }
                },
				mounted: function() {
					this.fontImport()
				},
                methods: {
					fontImport: function() {
						for (var a = 0; a < this.app.googleFonts.length; a++) {
							this.textFonts.push({text: this.app.googleFonts[a], value: this.app.googleFonts[a]});
						}
					},
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    }
                }
            },
            Tr = Cr,
            jr = Object(w["a"])(Tr, yr, xr, !1, null, null, null),
            Ir = jr.exports;
        x()(jr, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VTextField: R["a"]
        });
        var kr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-switch", {
                    attrs: {
                        label: "Advanced Design?"
                    },
                    model: {
                        value: e.styling.rowDesignIsAdvanced,
                        callback: function(t) {
                            e.$set(e.styling, "rowDesignIsAdvanced", t)
                        },
                        expression: "styling.rowDesignIsAdvanced"
                    }
                }), e.styling.rowDesignIsAdvanced ? o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 959 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Margin and Padding")]), o("v-text-field", {
                    attrs: {
                        label: "Text Margin",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowMargin,
                        callback: function(t) {
                            e.$set(e.styling, "rowMargin", t)
                        },
                        expression: "styling.rowMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Row Left and Right Margin",
                        filled: "",
                        type: "number",
                        suffix: "px"
                    },
                    model: {
                        value: e.styling.rowBodyMarginSides,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginSides", t)
                        },
                        expression: "styling.rowBodyMarginSides"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        label: "Row Top Margin",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBodyMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginTop", t)
                        },
                        expression: "styling.rowBodyMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Row Bottom Margin",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBodyMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginBottom", t)
                        },
                        expression: "styling.rowBodyMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Text Padding")]), o("v-text-field", {
                    attrs: {
                        label: "Text Left and Right Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingY,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingY", t)
                        },
                        expression: "styling.rowTextPaddingY"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Text Top and Bottom Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingX,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingX", t)
                        },
                        expression: "styling.rowTextPaddingX"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border-Radius Cuts off overflow"
                    },
                    model: {
                        value: e.styling.rowOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowOverflowIsOn", t)
                        },
                        expression: "styling.rowOverflowIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Object Gradient is turned on"
                    },
                    model: {
                        value: e.styling.rowGradientIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowGradientIsOn", t)
                        },
                        expression: "styling.rowGradientIsOn"
                    }
                }), e.styling.rowGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient",
                        filled: "",
                        "hide-details": "",
                        placeholder: "to left, blue, red"
                    },
                    model: {
                        value: e.styling.rowGradient,
                        callback: function(t) {
                            e.$set(e.styling, "rowGradient", t)
                        },
                        expression: "styling.rowGradient"
                    }
                }, [e._v("px")]) : e._e(), e.styling.rowGradientIsOn ? o("span", [e._v("You might need to leave for the main menu if things stop updating, using something like (green, green) works. "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.w3schools.com/css/css3_gradients.asp"
                    }
                }, [e._v("https://www.w3schools.com/css/css3_gradients.asp")])]) : e._e()], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 959 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Shadow that the row makes")]), o("v-text-field", {
                    attrs: {
                        label: "Horizontal Shadow",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowH", t)
                        },
                        expression: "styling.rowDropShadowH"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Vertical Shadow",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowV,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowV", t)
                        },
                        expression: "styling.rowDropShadowV"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Shadow Blur",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowBlur,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowBlur", t)
                        },
                        expression: "styling.rowDropShadowBlur"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Shadow Spread",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowDropShadowSpread,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowSpread", t)
                        },
                        expression: "styling.rowDropShadowSpread"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("The Width and Height of the buttons")]), o("v-text-field", {
                    attrs: {
                        label: "Button Height",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowButtonXPadding,
                        callback: function(t) {
                            e.$set(e.styling, "rowButtonXPadding", t)
                        },
                        expression: "styling.rowButtonXPadding"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Button Width",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowButtonYPadding,
                        callback: function(t) {
                            e.$set(e.styling, "rowButtonYPadding", t)
                        },
                        expression: "styling.rowButtonYPadding"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.rowDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowIsOn", t)
                        },
                        expression: "styling.rowDropShadowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 959 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusTopLeft", t)
                        },
                        expression: "styling.rowBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusTopRight", t)
                        },
                        expression: "styling.rowBorderRadiusTopRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusBottomRight", t)
                        },
                        expression: "styling.rowBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.rowBorderRadiusBottomLeft"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Border Style and Width")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.rowBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderStyle", t)
                        },
                        expression: "styling.rowBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        label: "Border Width",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderWidth", t)
                        },
                        expression: "styling.rowBorderWidth"
                    }
                }, [e._v("px")]), o("v-switch", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        label: "Border-Radius Percent or Pixels?",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.rowBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusIsPixels", t)
                        },
                        expression: "styling.rowBorderRadiusIsPixels"
                    }
                }), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.rowBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderIsOn", t)
                        },
                        expression: "styling.rowBorderIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : "12"
					}
				}, [o("v-row", [o("v-col", [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Border Color")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "70"
                    },
                    model: {
                        value: e.styling.rowBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderColor", t)
                        },
                        expression: "styling.rowBorderColor"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "pb-0 colorPickerText"
                }, [e._v("Color of the choice shadow")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "70"
                    },
                    model: {
                        value: e.styling.rowDropShadowColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowColor", t)
                        },
                        expression: "styling.rowDropShadowColor"
                    }
                })], 1)], 1)], 1)], 1) : o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 959 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Size of the row")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the row top.",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowMargin,
                        callback: function(t) {
                            e.$set(e.styling, "rowMargin", t)
                        },
                        expression: "styling.rowMargin"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Space at the right and left of the rows",
                        filled: "",
                        type: "number",
                        suffix: "%"
                    },
                    model: {
                        value: e.styling.rowBodyMarginSides,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginSides", t)
                        },
                        expression: "styling.rowBodyMarginSides"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        label: "Space Between Rows",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowBodyMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowBodyMarginBottom", t)
                        },
                        expression: "styling.rowBodyMarginBottom"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Border is turned on"
                    },
                    model: {
                        value: e.styling.rowBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderIsOn", t)
                        },
                        expression: "styling.rowBorderIsOn"
                    }
                }), o("v-checkbox", {
                    staticClass: "auto shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Object Gradient is turned on"
                    },
                    model: {
                        value: e.styling.rowGradientIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowGradientIsOn", t)
                        },
                        expression: "styling.rowGradientIsOn"
                    }
                }), e.styling.rowGradientIsOn ? o("v-text-field", {
                    attrs: {
                        label: "Gradient",
                        filled: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.rowGradient,
                        callback: function(t) {
                            e.$set(e.styling, "rowGradient", t)
                        },
                        expression: "styling.rowGradient"
                    }
                }, [e._v("px")]) : e._e(), e.styling.rowGradientIsOn ? o("span", [e._v("You might need to leave for the main menu if things stop updating, using something like (green, green) works. "), o("a", {
                    attrs: {
                        target: "_blank",
                        href: "https://www.w3schools.com/css/css3_gradients.asp"
                    }
                }, [e._v("https://www.w3schools.com/css/css3_gradients.asp")])]) : e._e()], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 959 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Padding of the text inside of row")]), o("v-text-field", {
                    attrs: {
                        label: "Text Left and Right Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingY,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingY", t)
                        },
                        expression: "styling.rowTextPaddingY"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Text Top and Bottom Padding",
                        suffix: "px",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowTextPaddingX,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextPaddingX", t)
                        },
                        expression: "styling.rowTextPaddingX"
                    }
                }), o("v-col", {
                    staticClass: "py-0 mt-n5"
                }, [e._v("Shadow that the choice makes")]), o("v-text-field", {
                    attrs: {
                        type: "number",
                        suffix: "px",
                        label: "The Higher the number the bigger the shadow will be.",
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.shadowIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.rowDropShadowH,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowH", t)
                        },
                        expression: "styling.rowDropShadowH"
                    }
                }, [e._v("px")]), o("v-checkbox", {
                    staticClass: "shrink mr-2 mt-0",
                    attrs: {
                        "hide-details": "",
                        label: "Drop Shadow Is turned on"
                    },
                    model: {
                        value: e.styling.rowDropShadowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowIsOn", t)
                        },
                        expression: "styling.rowDropShadowIsOn"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 959 ? "4" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Border Styles"
                    },
                    model: {
                        value: e.styling.rowBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderStyle", t)
                        },
                        expression: "styling.rowBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderWidth", t)
                        },
                        expression: "styling.rowBorderWidth"
                    }
                }, [e._v("px")]), o("v-col", {
                    staticClass: "py-0 mt-n5"
                }, [e._v("Rounded corners on the choices")]), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the top of each row",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.topBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.rowBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusTopLeft", t)
                        },
                        expression: "styling.rowBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Rounded corners in the bottom of each row",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    on: {
                        change: function(t) {
                            return e.bottomBorderIsChanged()
                        }
                    },
                    model: {
                        value: e.styling.rowBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.rowBorderRadiusBottomLeft"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : "12"
					}
				}, [o("v-row", [o("v-col", [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Border Color")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "70"
                    },
                    model: {
                        value: e.styling.rowBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderColor", t)
                        },
                        expression: "styling.rowBorderColor"
                    }
                })], 1), o("v-col", [o("v-col", {
                    staticClass: "py-0 colorPickerText"
                }, [e._v("Color of the choice shadow")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "70"
                    },
                    model: {
                        value: e.styling.rowDropShadowColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowDropShadowColor", t)
                        },
                        expression: "styling.rowDropShadowColor"
                    }
                })], 1)], 1)], 1)], 1), o("v-row", [o("v-col", {
					staticClass: "text-center",
					attrs: {
						cols: "12"
					}
				}, [e._v("Border Image")], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 630 ? "4" : "12"
					}
				}, [o("picture-input", {
                    ref: "pictureInput",
                    staticClass: "col",
                    attrs: {
                        removeButtonClass: "v-btn v-btn--contained " + (this.$vuetify.theme.isDark ? "theme--dark" : "theme--light") + " v-size--default",
                        hideChangeButton: !0,
                        removable: !0,
                        crop: !1,
                        zIndex: 0,
                        width: 200,
						height: 200,
                        prefill: e.styling.rowBorderImage,
                        "custom-strings": {
                            upload: "<h1>Error!</h1>",
                            drag: "Upload Row Border Image"
                        }
                    },
                    on: {
                        change: e.onBorderImageChangeRow,
                        remove: e.onBorderImageRemovalRow
                    }
                })], 1), o("v-col", {
					staticClass: "pa-0",
					attrs: {
						cols: e.window.width > 630 ? "8" : "12"
					}
				}, [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-select", {
                    attrs: {
                        items: e.borderImageRepeat,
                        "item-value": "text",
                        filled: "",
                        label: "Border Image Repeat"
                    },
                    model: {
                        value: e.styling.rowBorderImageRepeat,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageRepeat", t)
                        },
                        expression: "styling.rowBorderImageRepeat"
                    }
                }), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Image Width",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageWidth", t)
                        },
                        expression: "styling.rowBorderImageWidth"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Image Slice Top",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceTop,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceTop", t)
                        },
                        expression: "styling.rowBorderImageSliceTop"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Image Slice Bottom",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceBottom", t)
                        },
                        expression: "styling.rowBorderImageSliceBottom"
                    }
                }, [e._v("px")])], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 510 ? "4" : "12"
					}
				}, [o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Image Slice Left",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceLeft", t)
                        },
                        expression: "styling.rowBorderImageSliceLeft"
                    }
                }, [e._v("px")]), o("v-text-field", {
                    attrs: {
                        suffix: "px",
                        type: "number",
                        label: "Border Image Slice Right",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowBorderImageSliceRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowBorderImageSliceRight", t)
                        },
                        expression: "styling.rowBorderImageSliceRight"
                    }
                }, [e._v("px")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            Br = [],
            Sr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						borderImageRepeat: [{
							text: "stretch"
						}, {
							text: "repeat"
						}, {
							text: "round"
						}, {
							text: "space"
						}],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
				components: {
                    PictureInput: $["a"]
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.rowBorderRadiusIsPixels ? "px" : "%"
                    }
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    shadowIsChanged: function() {
                        this.styling.rowDropShadowV = this.styling.rowDropShadowH, this.styling.rowDropShadowSpread = this.styling.rowDropShadowH, this.styling.rowDropShadowBlur = this.styling.rowDropShadowH
                    },
                    topBorderIsChanged: function() {
                        this.styling.rowBorderRadiusTopRight = this.styling.rowBorderRadiusTopLeft
                    },
                    bottomBorderIsChanged: function() {
                        this.styling.rowBorderRadiusBottomRight = this.styling.rowBorderRadiusBottomLeft
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    },
					onBorderImageChangeRow: function(e) {
						this.$set(this.styling, "rowBorderImage", e), this.$refs.pictureInput.image ? console.log("Picture loaded.") : console.log("FileReader API not supported: use the <form>, Luke!")
					},
					onBorderImageRemovalRow: function() {
						this.$set(this.styling, "rowBorderImage", "")
					}
                }
            },
            Or = Sr,
            Rr = (o("7f1a"), Object(w["a"])(Or, kr, Br, !1, null, "9e8b99a8", null)),
            Fr = Rr.exports;
        x()(Rr, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var _r = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "pt-0 pb-0"
                }, [e._v("Size and Margin of the row image")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image inside of a choice",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImageWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageWidth", t)
                        },
                        expression: "styling.rowImageWidth"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Top of row and Image",
                        suffix: "%",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImageMarginTop,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageMarginTop", t)
                        },
                        expression: "styling.rowImageMarginTop"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Distance Between Title and Image",
                        suffix: "%",
                        placeholder: "0",
                        type: "number",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImageMarginBottom,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageMarginBottom", t)
                        },
                        expression: "styling.rowImageMarginBottom"
                    }
                }), o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Works only with the Image Left/Right template.")]), o("v-text-field", {
                    attrs: {
                        label: "Width of the image box inside of row",
                        suffix: "%",
						placeholder: 50,
                        type: "number",
                        filled: "",
						min: 0,
						max: 100
                    },
                    model: {
                        value: e.styling.rowImageBoxWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowImageBoxWidth", Math.min(Math.max(0, t), 100));
                        },
                        expression: "styling.rowImageBoxWidth"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-select", {
                    attrs: {
                        items: e.borderStyles,
                        "item-value": "text",
                        filled: "",
                        label: "Style of the border"
                    },
                    model: {
                        value: e.styling.rowImgBorderStyle,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderStyle", t)
                        },
                        expression: "styling.rowImgBorderStyle"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        placeholder: "0",
                        suffix: "px",
                        label: "Thickness of the border",
                        filled: "",
                        type: "number"
                    },
                    model: {
                        value: e.styling.rowImgBorderWidth,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderWidth", t)
                        },
                        expression: "styling.rowImgBorderWidth"
                    }
                }), o("v-row", [o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Border Is On"
                    },
                    model: {
                        value: e.styling.rowImgBorderIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderIsOn", t)
                        },
                        expression: "styling.rowImgBorderIsOn"
                    }
                })], 1), o("v-col", [o("v-checkbox", {
                    staticClass: "auto shrink mr-2",
                    attrs: {
                        "hide-details": "",
                        label: "Cut off overflow"
                    },
                    model: {
                        value: e.styling.rowImgOverflowIsOn,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgOverflowIsOn", t)
                        },
                        expression: "styling.rowImgOverflowIsOn"
                    }
                })], 1)], 1)], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Rounded corners on the choices")]), o("v-row", [o("v-col", {
                    staticClass: "py-0"
                }, [o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusTopLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusTopLeft", t)
                        },
                        expression: "styling.rowImgBorderRadiusTopLeft"
                    }
                }), o("v-text-field", {
                    attrs: {
                        label: "Border-radius Top Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: "",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusTopRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusTopRight", t)
                        },
                        expression: "styling.rowImgBorderRadiusTopRight"
                    }
                })], 1), o("v-col", {
                    staticClass: "pt-0"
                }, [o("v-text-field", {
                    attrs: {
                        label: "Border-radius Bottom Right",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusBottomRight,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusBottomRight", t)
                        },
                        expression: "styling.rowImgBorderRadiusBottomRight"
                    }
                }), o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        label: "Border-radius Bottom Left",
                        placeholder: "0",
                        type: "number",
                        suffix: e.borderRadiusSuffix,
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusBottomLeft,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusBottomLeft", t)
                        },
                        expression: "styling.rowImgBorderRadiusBottomLeft"
                    }
                })], 1)], 1), o("v-switch", {
                    staticClass: "auto shrink",
                    attrs: {
                        label: "Pixels or Percents",
                        "hide-details": ""
                    },
                    model: {
                        value: e.styling.rowImgBorderRadiusIsPixels,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderRadiusIsPixels", t)
                        },
                        expression: "styling.rowImgBorderRadiusIsPixels"
                    }
                })], 1), o("v-col", {
					attrs: {
						cols: e.window.width > 1903 ? "3" : e.window.width > 610 ? "6" : "12"
					}
				}, [o("v-col", {
                    staticClass: "py-0"
                }, [e._v("Style and Width of the border")]), o("v-color-picker", {
                    staticClass: "mx-auto",
                    attrs: {
                        "canvas-height": "70"
                    },
                    model: {
                        value: e.styling.rowImgBorderColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowImgBorderColor", t)
                        },
                        expression: "styling.rowImgBorderColor"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            qr = [],
            Ar = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        borderStyles: [{
                            text: "solid"
                        }, {
                            text: "dotted"
                        }, {
                            text: "dashed"
                        }, {
                            text: "double"
                        }, {
                            text: "groove"
                        }, {
                            text: "ridge"
                        }, {
                            text: "inset"
                        }, {
                            text: "outset"
                        }, {
                            text: "hidden"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    },
                    borderRadiusSuffix: function() {
                        return this.styling.rowImgBorderRadiusIsPixels ? "px" : "%"
                    }
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    }
                }
            },
            $r = Ar,
            Mr = Object(w["a"])($r, _r, qr, !1, null, null, null),
            Vr = Mr.exports;
        x()(Mr, {
            VBtn: C["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
            VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VSwitch: L["a"],
            VTextField: R["a"]
        });
        var Pr = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("v-card", {
                    attrs: {
                        width: "100%"
                    }
                }, [o("v-card-text", [o("v-container", [o("v-row", [o("v-col", [e._v(" Row Title "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customRowTitle,
						callback: function(t) {
							e.$set(e.styling, "customRowTitle", t)
						},
						expression: "styling.customRowTitle"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1"
                }, [e.styling.customRowTitle ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.rowTitle,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitle", t)
                        },
                        expression: "styling.rowTitle"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.rowTitle,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitle", t)
                        },
                        expression: "styling.rowTitle"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowTitleTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitleTextSize", t)
                        },
                        expression: "styling.rowTitleTextSize"
                    }
                }, [e._v("%")])], 1)], 1), o("v-col", {
                    staticClass: "px-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn-toggle", {
                    attrs: {
                        tile: "",
                        color: "deep-purple accent-3"
                    },
                    model: {
                        value: e.styling.rowTitleAlign,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitleAlign", t)
                        },
                        expression: "styling.rowTitleAlign"
                    }
                }, e._l(e.textAlignment, (function(t) {
                    return o("v-btn", {
                        key: t.index,
						staticClass: "pa-0",
                        staticStyle: {
                            width: "25%"
                        },
                        attrs: {
                            value: t.value,
							large: e.window.width > 390 ? !0 : !1,
							small: e.window.width > 390 ? !1 : !0
                        }
                    }, [e._v(e._s(t.text))])
                })), 1)], 1), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.rowTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowTitleColor", t)
                        },
                        expression: "styling.rowTitleColor"
                    }
                })], 1), o("v-col", [e._v(" Row Text "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customRowText,
						callback: function(t) {
							e.$set(e.styling, "customRowText", t)
						},
						expression: "styling.customRowText"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1"
                }, [e.styling.customRowText ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.rowText,
                        callback: function(t) {
                            e.$set(e.styling, "rowText", t)
                        },
                        expression: "styling.rowText"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.rowText,
                        callback: function(t) {
                            e.$set(e.styling, "rowText", t)
                        },
                        expression: "styling.rowText"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.rowTextTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextTextSize", t)
                        },
                        expression: "styling.rowTextTextSize"
                    }
                }, [e._v("%")])], 1)], 1), o("v-col", {
                    staticClass: "px-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn-toggle", {
                    attrs: {
                        tile: "",
                        color: "deep-purple accent-3"
                    },
                    model: {
                        value: e.styling.rowTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextAlign", t)
                        },
                        expression: "styling.rowTextAlign"
                    }
                }, e._l(e.textAlignment, (function(t) {
                    return o("v-btn", {
                        key: t.index,
						staticClass: "pa-0",
                        staticStyle: {
                            width: "25%"
                        },
                        attrs: {
                            value: t.value,
							large: e.window.width > 390 ? !0 : !1,
							small: e.window.width > 390 ? !1 : !0
                        }
                    }, [e._v(e._s(t.text))])
                })), 1)], 1), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.rowTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "rowTextColor", t)
                        },
                        expression: "styling.rowTextColor"
                    }
                })], 1), o("v-col", [e._v(" Choice Title "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customObjectTitle,
						callback: function(t) {
							e.$set(e.styling, "customObjectTitle", t)
						},
						expression: "styling.customObjectTitle"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1"
                }, [e.styling.customObjectTitle ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.objectTitle,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitle", t)
                        },
                        expression: "styling.objectTitle"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.objectTitle,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitle", t)
                        },
                        expression: "styling.objectTitle"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTitleTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitleTextSize", t)
                        },
                        expression: "styling.objectTitleTextSize"
                    }
                }, [e._v("%")])], 1)], 1), o("v-col", {
                    staticClass: "px-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn-toggle", {
                    attrs: {
                        tile: "",
                        color: "deep-purple accent-3"
                    },
                    model: {
                        value: e.styling.objectTitleAlign,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitleAlign", t)
                        },
                        expression: "styling.objectTitleAlign"
                    }
                }, e._l(e.textAlignment, (function(t) {
                    return o("v-btn", {
                        key: t.index,
						staticClass: "pa-0",
                        staticStyle: {
                            width: "25%"
                        },
                        attrs: {
                            value: t.value,
							large: e.window.width > 390 ? !0 : !1,
							small: e.window.width > 390 ? !1 : !0
                        }
                    }, [e._v(e._s(t.text))])
                })), 1)], 1), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.objectTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectTitleColor", t)
                        },
                        expression: "styling.objectTitleColor"
                    }
                })], 1), o("v-col", [e._v(" Choice Text "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customObjectText,
						callback: function(t) {
							e.$set(e.styling, "customObjectText", t)
						},
						expression: "styling.customObjectText"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1"
                }, [e.styling.customObjectText ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.objectText,
                        callback: function(t) {
                            e.$set(e.styling, "objectText", t)
                        },
                        expression: "styling.objectText"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.objectText,
                        callback: function(t) {
                            e.$set(e.styling, "objectText", t)
                        },
                        expression: "styling.objectText"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.objectTextTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextTextSize", t)
                        },
                        expression: "styling.objectTextTextSize"
                    }
                }, [e._v("%")])], 1)], 1), o("v-col", {
                    staticClass: "px-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn-toggle", {
                    attrs: {
                        tile: "",
                        color: "deep-purple accent-3"
                    },
                    model: {
                        value: e.styling.objectTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextAlign", t)
                        },
                        expression: "styling.objectTextAlign"
                    }
                }, e._l(e.textAlignment, (function(t) {
                    return o("v-btn", {
                        key: t.index,
						staticClass: "pa-0",
                        staticStyle: {
                            width: "25%"
                        },
                        attrs: {
                            value: t.value,
							large: e.window.width > 390 ? !0 : !1,
							small: e.window.width > 390 ? !1 : !0
                        }
                    }, [e._v(e._s(t.text))])
                })), 1)], 1), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.objectTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "objectTextColor", t)
                        },
                        expression: "styling.objectTextColor"
                    }
                })], 1), o("v-col", [e._v(" Addon Title "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customAddonTitle,
						callback: function(t) {
							e.$set(e.styling, "customAddonTitle", t)
						},
						expression: "styling.customAddonTitle"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1"
                }, [e.styling.customAddonTitle ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.addonTitle,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitle", t)
                        },
                        expression: "styling.addonTitle"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.addonTitle,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitle", t)
                        },
                        expression: "styling.addonTitle"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonTitleTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitleTextSize", t)
                        },
                        expression: "styling.addonTitleTextSize"
                    }
                }, [e._v("%")])], 1)], 1), o("v-col", {
                    staticClass: "px-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn-toggle", {
                    attrs: {
                        tile: "",
                        color: "deep-purple accent-3"
                    },
                    model: {
                        value: e.styling.addonTitleAlign,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitleAlign", t)
                        },
                        expression: "styling.addonTitleAlign"
                    }
                }, e._l(e.textAlignment, (function(t) {
                    return o("v-btn", {
                        key: t.index,
						staticClass: "pa-0",
                        staticStyle: {
                            width: "25%"
                        },
                        attrs: {
                            value: t.value,
							large: e.window.width > 390 ? !0 : !1,
							small: e.window.width > 390 ? !1 : !0
                        }
                    }, [e._v(e._s(t.text))])
                })), 1)], 1), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.addonTitleColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonTitleColor", t)
                        },
                        expression: "styling.addonTitleColor"
                    }
                })], 1), o("v-col", [e._v(" Addon Text "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customAddonText,
						callback: function(t) {
							e.$set(e.styling, "customAddonText", t)
						},
						expression: "styling.customAddonText"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1"
                }, [e.styling.customAddonText ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.addonText,
                        callback: function(t) {
                            e.$set(e.styling, "addonText", t)
                        },
                        expression: "styling.addonText"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.addonText,
                        callback: function(t) {
                            e.$set(e.styling, "addonText", t)
                        },
                        expression: "styling.addonText"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.addonTextTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextTextSize", t)
                        },
                        expression: "styling.addonTextTextSize"
                    }
                }, [e._v("%")])], 1)], 1), o("v-col", {
                    staticClass: "px-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn-toggle", {
                    attrs: {
                        tile: "",
                        color: "deep-purple accent-3"
                    },
                    model: {
                        value: e.styling.addonTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextAlign", t)
                        },
                        expression: "styling.addonTextAlign"
                    }
                }, e._l(e.textAlignment, (function(t) {
                    return o("v-btn", {
                        key: t.index,
						staticClass: "pa-0",
                        staticStyle: {
                            width: "25%"
                        },
                        attrs: {
                            value: t.value,
							large: e.window.width > 390 ? !0 : !1,
							small: e.window.width > 390 ? !1 : !0
                        }
                    }, [e._v(e._s(t.text))])
                })), 1)], 1), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.addonTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "addonTextColor", t)
                        },
                        expression: "styling.addonTextColor"
                    }
                })], 1), o("v-col", [e._v(" Score and Requirement Text "), o("v-row", [o("v-col", {
					staticClass: "pb-0",
					attrs: {
						cols: "12"
					}
				}, [o("v-checkbox", {
					staticClass: "mr-2 mt-1 mb-n6",
					attrs: {
						label: "Use Local Custom Font?"
					},
					model: {
						value: e.styling.customScoreText,
						callback: function(t) {
							e.$set(e.styling, "customScoreText", t)
						},
						expression: "styling.customScoreText"
					}
				})], 1), o("v-col", {
                    staticClass: "px-1"
                }, [e.styling.customScoreText ? o("v-text-field", {
					attrs: {
						"hide-details": "",
						label: "Text Font",
						filled: ""
					},
                    model: {
                        value: e.styling.scoreText,
                        callback: function(t) {
                            e.$set(e.styling, "scoreText", t)
                        },
                        expression: "styling.scoreText"
                    }
                }) : o("v-select", {
                    attrs: {
                        "hide-details": "",
                        items: e.textFonts,
                        filled: "",
                        label: "Text Font"
                    },
                    model: {
                        value: e.styling.scoreText,
                        callback: function(t) {
                            e.$set(e.styling, "scoreText", t)
                        },
                        expression: "styling.scoreText"
                    }
                })], 1), o("v-col", {
                    staticClass: "px-1"
                }, [o("v-text-field", {
                    attrs: {
                        "hide-details": "",
                        type: "number",
                        label: "Text Size",
                        filled: ""
                    },
                    model: {
                        value: e.styling.scoreTextSize,
                        callback: function(t) {
                            e.$set(e.styling, "scoreTextSize", t)
                        },
                        expression: "styling.scoreTextSize"
                    }
                }, [e._v("%")])], 1)], 1), o("v-col", {
                    staticClass: "px-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-btn-toggle", {
                    attrs: {
                        tile: "",
                        color: "deep-purple accent-3"
                    },
                    model: {
                        value: e.styling.scoreTextAlign,
                        callback: function(t) {
                            e.$set(e.styling, "scoreTextAlign", t)
                        },
                        expression: "styling.scoreTextAlign"
                    }
                }, e._l(e.textAlignment, (function(t) {
                    return o("v-btn", {
                        key: t.index,
						staticClass: "pa-0",
                        staticStyle: {
                            width: "25%"
                        },
                        attrs: {
                            value: t.value,
							large: e.window.width > 390 ? !0 : !1,
							small: e.window.width > 390 ? !1 : !0
                        }
                    }, [e._v(e._s(t.text))])
                })), 1)], 1), o("v-color-picker", {
                    staticClass: "mx-auto",
                    model: {
                        value: e.styling.scoreTextColor,
                        callback: function(t) {
                            e.$set(e.styling, "scoreTextColor", t)
                        },
                        expression: "styling.scoreTextColor"
                    }
                })], 1)], 1)], 1)], 1), o("v-card-actions", [o("v-btn", {
                    attrs: {
                        color: "green darken-1",
                        text: ""
                    },
                    on: {
                        click: e.cleanCurrentDesignComponent
                    }
                }, [e._v("Close")])], 1)], 1)
            },
            Dr = [],
            zr = {
                props: {
                    from: String,
                    row: Object,
                    isAdvanced: Boolean
                },
                data: function() {
                    return {
                        dialog: !0,
                        textAlignment: [{
                            text: "Left",
                            value: "left"
                        }, {
                            text: "Center",
                            value: "center"
                        }, {
                            text: "Right",
                            value: "right"
                        }, {
                            text: "Justify",
                            value: "justify"
                        }],
                        textFonts: [{
                            text: "Times New Roman",
                            value: "Times New Roman"
                        }, {
                            text: "Arial",
                            value: "Arial"
                        }, {
                            text: "Roboto",
                            value: "Roboto"
                        }, {
                            text: "Courier New",
                            value: "Courier New"
                        }, {
                            text: "Courier",
                            value: "Courier"
                        }, {
                            text: "Verdana",
                            value: "Verdana"
                        }, {
                            text: "Georgia",
                            value: "Georgia"
                        }, {
                            text: "Comic Sans MS(NO!)",
                            value: "Comic Sans MS"
                        }, {
                            text: "Candara",
                            value: "Candara"
                        }, {
                            text: "Arial Black",
                            value: "Arial Black"
                        }, {
                            text: "Impact",
                            value: "Impact"
                        }, {
                            text: "Helvetica",
                            value: "Helvetica"
                        }, {
                            text: "Calibri",
                            value: "Calibri"
                        }, {
                            text: "Cambria",
                            value: "Cambria"
                        }, {
                            text: "Trebuchet MS",
                            value: "Trebuchet MS"
                        }, {
                            text: "Tahoma",
                            value: "Tahoma"
                        }],
						window: {
							width: 0,
							height: 0
						}
                    }
                },
                computed: {
					app: function() {
						return this.$store.state.app
					},
                    styling: function() {
                        return "private" === this.from ? this.row.styling : this.$store.state.app.styling
                    }
                },
				mounted: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize(), this.fontImport()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
					handleResize: function() {
						this.window.width = window.innerWidth, this.window.height = window.innerHeight;
                    },
					fontImport: function() {
						for (var a = 0; a < this.app.googleFonts.length; a++) {
							this.textFonts.push({text: this.app.googleFonts[a], value: this.app.googleFonts[a]});
						}
					},
                    cleanCurrentDesignComponent: function() {
                        this.$emit("cleanCurrentDesignComponent", "")
                    }
                }
            },
            Lr = zr,
            Wr = o("a609"),
            Hr = Object(w["a"])(Lr, Pr, Dr, !1, null, null, null),
            Er = Hr.exports;
        x()(Hr, {
            VBtn: C["a"],
            VBtnToggle: Wr["a"],
            VCard: T["a"],
            VCardActions: j["a"],
            VCardText: j["b"],
			VCheckbox: ae["a"],
            VCol: I["a"],
            VColorPicker: xe["a"],
            VContainer: k["a"],
            VRow: S["a"],
            VSelect: K["a"],
            VTextField: R["a"]
        });
        var Nr = {
                data: function() {
                    return {
                        currentComponent: "",
                        navComponentButtons: [{
                            component: "appRowList",
                            text: "Open Row List",
                            icon: "mdi-format-list-bulleted",
                            desc: "Opens a List of The Rows"
                        }, {
                            component: "appFeature",
                            text: "Open Features",
                            icon: "mdi-tools",
                            desc: "Opens the Features Menu"
                        }, {
                            component: "appDesign",
                            text: "Modify Design",
                            icon: "mdi-fountain-pen",
                            desc: "Opens The Design Menu"
                        }, {
                            component: "appLoad",
                            text: "Save/Load Project",
                            icon: "mdi-floppy",
                            desc: "Opens The Saving/Loading Menu"
                        }],
                        window: {
                            width: 0,
                            height: 0
                        },
                        drawer: !0,
                        mini: !0,
						mute: !1
                    }
                },
                components: {
                    appRow: Qt,
                    appDesign: Mo,
                    appLoad: fo,
                    appFeature: Ni,
                    appRowList: Qi,
                    appBackpackPreview: Vs,
                    appActivatedViewer: rs,
                    appFilter: Hs,
                    appBackground: Js,
                    appBackpack: tr,
                    appMultiChoice: nr,
                    appObjectDesign: hr,
                    appObjectImage: wr,
					appAddonDesign: ahr,
					appAddonImage: awr,
                    appPointBar: Ir,
                    appRowDesign: Fr,
                    appRowImage: Vr,
                    appText: Er,
                    appIdSearch: Li,
					appGlobalSettings: SLi,
                    ConfirmDlg: function() {
                        return o.e("chunk-2d0e6102").then(o.bind(null, "96c2"))
                    }
                },
                created: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                computed: {
                    background: function() {
                        return this.app.styling.backgroundImage ? 'background-image: url("' + this.app.styling.backgroundImage + '");background-color: ' + this.app.styling.backgroundColor + (this.app.styling.isBackgroundRepeat ? ";background-repeat: repeat;" : (this.app.styling.isBackgroundFitIn ? ";background-size: 100% 100%;" : ";background-size: cover;")) : 'background-color: ' + this.app.styling.backgroundColor + ';'
                    },
                    pointBar: function() {
                        return "background-color: " + this.app.styling.barBackgroundColor + "; margin: " + this.app.styling.barMargin + "px; padding: " + this.app.styling.barPadding + "px;"
                    },
                    pointBarText: function() {
                        return "color: " + this.app.styling.barTextColor + "; margin: " + this.app.styling.barTextMargin + "px; padding: " + this.app.styling.barTextPadding + 'px;font-family: "' + this.app.styling.barTextFont + '";font-size: ' + this.app.styling.barTextSize + "px;"
                    },
					pointBarIcon: function() {
						return "undefined" !== typeof this.app.styling.barIconColor ? "color: " + this.app.styling.barIconColor + ";" : ""
					},
                    app: function() {
                        return this.$store.state.app
                    },
					activated: function() {
                        return this.$store.state.app.activated
                    },
                    currentDesignComponent: function() {
                        return this.$store.state.currentDesignComponent
                    },
					bgmTitle: function() {
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							return bgmPlayer.playerInfo.videoData.title != "" ? bgmPlayer.playerInfo.videoData.title : "No Audio Title"
						}
						return "No Audio Title"
					},
					bgmTime: function() {
						return this.calTime(this.app.curBgmTime) + "|" + this.calTime(this.app.curBgmLength)
					},
					globalVariables: function() {
						return this.$store.state.globalVariables
					},
					fadeOverlay: function() {
						var e = this.app.fadeTransitionIsOn ? 1 : 0;
						return "opacity: " + e + "; transition: opacity " + this.app.fadeTransitionTime + "s ease-out; background-color: " + this.app.fadeTransitionColor + ";"
					}
                },
                methods: {
					calTime: function(e) {
						const h = parseInt(Math.floor(e / 3600));
						const m = parseInt(Math.floor((e % 3600) / 60));
						const s = parseInt(e % 60);
						const rm = String(m).padStart(2, "0");
						const rs = String(s).padStart(2, "0");
						return h > 0 ? (h + ":") : (rm + ":" + rs)
					},
                    cloneRow: function(e) {
						var t = "",
							o = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
                        this.app.rows.splice(this.app.rows.indexOf(e) + 1, 0, JSON.parse(JSON.stringify(e)));
						function generateRowId() {
							var s = "";
							for (var f = 0; f < th.app.rowIdLength; f++) {
								s += o.charAt(Math.floor(Math.random() * o.length));
							}
							if ("undefined" !== typeof th.app.compR[s]) {
								return generateRowId()
							} else {
								return s
							}
						}
						function generateObjectId() {
							var s = "";
							for (var f = 0; f < th.app.objectIdLength; f++) {
								s += o.charAt(Math.floor(Math.random() * o.length));
							}
							if ("undefined" !== typeof th.app.comp[s]) {
								return generateObjectId()
							} else {
								return s
							}
						}
						t = generateRowId();
                        this.app.rows[this.app.rows.indexOf(e) + 1].id = t;
						this.app.compR[t] = {rows: (this.app.rows.indexOf(e) + 1), type: "app"};
						if ("undefined" !== typeof this.app.rows[this.app.rows.indexOf(e) + 1].rowDesignGroups) {
							for (var f = 0; f < this.app.rows[this.app.rows.indexOf(e) + 1].rowDesignGroups.length; f++) {
								var co = this.app.compRDG[this.app.rows[this.app.rows.indexOf(e) + 1].rowDesignGroups[f].id],
									coD = this.app.rowDesignGroups[co.designGroups];
								coD.elements.push({id: t});
							}
						}
                        for (var r = 0; r < this.app.rows[this.app.rows.indexOf(e) + 1].objects.length; r++) {
                            t = generateObjectId();
                            this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].id = t;
							this.app.comp[t] = {rows: this.app.rows.indexOf(e) + 1, objects: r, type: "app"};
							for (var c = 0; c < this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].groups.length; c++) {
								if ("undefined" !== typeof this.app.compG[this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].groups[c].id]) {
									var co = this.app.compG[this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].groups[c].id],
										coG = this.app.groups[co.groups];
									coG.elements.push({id: t});
								}
							}
							if ("undefined" !== typeof this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].objectDesignGroups) {
								for (var d = 0; d < this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].objectDesignGroups.length; d++) {
									if ("undefined" !== typeof this.app.compODG[this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].objectDesignGroups[d].id]) {
										var co = this.app.compODG[this.app.rows[this.app.rows.indexOf(e) + 1].objects[r].objectDesignGroups[d].id],
											coD = this.app.objectDesignGroups[co.designGroups];
										coD.elements.push({id: t});
									}
								}
							}
                        }
						for (var b = this.app.rows.indexOf(e) + 2; b < this.app.rows.length; b++) {
							this.app.compR[this.app.rows[b].id] = {rows: b, type: "app"};
							for (var c = 0; c < this.app.rows[b].objects.length; c++) {
								this.app.comp[this.app.rows[b].objects[c].id] = {rows: b, objects: c, type: "app"};
							}
						}
                    },
                    handleResize: function() {
                        this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
                    cleanActivated: function() {
                        this.$store.commit({
                            type: "cleanActivated"
                        })
                    },
                    createNewRow: function() {
						var e = "",
							t = "abcdefghijklmnopqrstuvwxyz0123456789",
							th = this;
						function generateRowId() {
							var s = "";
							for (var o = 0; o < th.app.rowIdLength; o++) {
								s += t.charAt(Math.floor(Math.random() * t.length));
							}
							if ("undefined" !== typeof th.app.compR[s]) {
								return generateRowId()
							} else {
								return s
							}
						}
						e = generateRowId();
                        this.app.rows.push({
                            id: e,
                            title: this.app.defaultRowTitle,
                            titleText: this.app.defaultRowText,
							debugTitle: "",
                            objectWidth: "col-md-3",
                            image: "",
                            template: 1,
                            isButtonRow: !1,
                            buttonType: !0,
                            buttonId: "",
                            buttonText: "Click",
                            buttonRandom: !1,
                            buttonRandomNumber: 1,
                            isResultRow: !1,
                            resultGroupId: "",
                            isInfoRow: !1,
                            defaultAspectWidth: 1,
                            defaultAspectHeight: 1,
                            allowedChoices: 0,
                            currentChoices: 0,
                            requireds: [],
                            isEditModeOn: !1,
                            isRequirementOpen: !1,
                            objects: [],
							rowDesignGroups: []
                        });
						this.app.compR[e] = {rows: this.app.rows.length - 1, type: "app"};
                    },
                    deleteRow: function(e) {
                        var t = this;
						if (this.app.checkDeleteRow) {
							return Object(l["a"])(regeneratorRuntime.mark((function o() {
								return regeneratorRuntime.wrap((function(o) {
									while (1) switch (o.prev = o.next) {
										case 0:
											return o.next = 2, t.$refs.confirm.open("Confirm", "Are you sure you want to delete this row? Be sure to deselect all choices before deleting this row.");
										case 2:
											if (!o.sent) {
												o.next = 4;
												break
											}
											var s = t.app.rows.indexOf(e);
											for (var a = 0; a < e.objects.length; a++) {
												if (e.objects[a].backpackBtnRequirement) t.$set(t.app, "hideBackpackBtn", t.app.hideBackpackBtn - 1);
											}
											for (var f = s + 1; f < t.app.rows.length; f++) {
												t.app.compR[t.app.rows[f].id].rows -= 1;
												for (var b = 0; b < t.app.rows[f].objects.length; b++) {
													if ("undefined" !== typeof t.app.comp[t.app.rows[f].objects[b].id]) {
														t.app.comp[t.app.rows[f].objects[b].id].rows -= 1;
													}
												}
											}
											for (var c = 0; c < e.objects.length; c++) {
												t.$delete(t.app.comp, e.objects[c].id);
												t.$delete(t.app.objectMap, e.objects[c].id);
											}
											t.$delete(t.app.compR, e.id);
											t.$store.commit("deleteRow", e);
										case 4:
										case "end":
											return o.stop()
									}
								}), o)
							})))()
						} else {
							var s = t.app.rows.indexOf(e);
							for (var f = s + 1; f < t.app.rows.length; f++) {
								for (var b = 0; b < t.app.rows[f].objects.length; b++) {
									t.app.compR[t.app.rows[f].id].rows -= 1;
									if ("undefined" !== typeof t.app.comp[t.app.rows[f].objects[b].id]) {
										t.app.comp[t.app.rows[f].objects[b].id].rows -= 1;
									}
								}
							}
							for (var c = 0; c < e.objects.length; c++) {
								t.$delete(t.app.comp, e.objects[c].id);
								t.$delete(t.app.objectMap, e.objects[c].id);
							}
							t.$delete(t.app.compR, e.id);
							t.$store.commit("deleteRow", e);
						}
                    },
                    moveRowUp: function(e) {
                        var t = this.app.rows.indexOf(e);
                        if (t > 0) {
                            var o = this.app.rows[t];
                            this.$set(this.app.rows, t, this.app.rows[t - 1]), this.$set(this.app.rows, t - 1, o);
							this.app.compR[this.app.rows[t - 1].id].rows = t - 1, this.app.compR[this.app.rows[t].id].rows = t;
							for (var b = 0; b < this.app.rows[t - 1].objects.length; b++) {
								this.app.comp[this.app.rows[t - 1].objects[b].id].rows = t - 1;
							}
							for (var c = 0; c < this.app.rows[t].objects.length; c++) {
								this.app.comp[this.app.rows[t].objects[c].id].rows = t;
							}
                        }
                    },
                    moveRowDown: function(e) {
                        var t = this.app.rows.indexOf(e);
                        if (-1 !== t && t < this.app.rows.length - 1) {
                            var o = this.app.rows[t];
                            this.$set(this.app.rows, t, this.app.rows[t + 1]), this.$set(this.app.rows, t + 1, o);
							this.app.compR[this.app.rows[t + 1].id].rows = t + 1, this.app.compR[this.app.rows[t].id].rows = t;
							for (var b = 0; b < this.app.rows[t + 1].objects.length; b++) {
								this.app.comp[this.app.rows[t + 1].objects[b].id].rows = t + 1;
							}
							for (var c = 0; c < this.app.rows[t].objects.length; c++) {
								this.app.comp[this.app.rows[t].objects[c].id].rows = t;
							}
                        }
                    },
                    cleanSelectedChoices: function() {
                        this.cleanActivated()
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
					resetState: function() {
						var e = this;
						e.$set(e.app, "comp", {});
						e.$set(e.app, "compR", {});
						e.$set(e.app, "compG", {});
						e.$set(e.app, "compODG", {});
						e.$set(e.app, "compRDG", {});
						e.$set(e.app, "compGR", {});
						if ("undefined" !== typeof e.app.pointTypes) e.app.pointTypes.forEach(pt => {e.$set(e.app.pointTypeMap, pt.id, pt.startingSum)});
						if ("undefined" !== typeof e.app.words) e.app.words.forEach(w => {e.$set(e.app.wordMap, w.id, w.replaceText)});
						if ("undefined" !== typeof e.app.rows) e.app.rows.forEach(row => {row.objects.filter(object => object.isMultipleUseVariable).forEach(o => {e.$set(e.app.objectMap, o.id, o.multipleUseVariable)})});
						for (var b = 0; b < e.app.rows.length; b++) {
							var coR = e.app.rows[b],
								g = coR.id;
							e.app.compR[g] = {rows: b, type: "app"};
							for (var c = 0; c < coR.objects.length; c++) {
								var coO = coR.objects[c],
									d = coO.id;
								e.app.comp[d] = {rows: b, objects: c, type: "app"};
							}
						}
						for (var b = 0; b < e.app.backpack.length; b++) {
							var coR = e.app.backpack[b],
								g = coR.id;
							e.app.compR[g] = {rows: b, type: "backpack"};
							for (var c = 0; c < coR.objects.length; c++) {
								var coO = coR.objects[c],
									d = coO.id;
								e.app.comp[d] = {rows: b, objects: c, type: "backpack"};
							}
						}
						for (var f = 0; f < e.app.groups.length; f++) {
							var r = e.app.groups[f].id;
							e.app.compG[r] = {groups: f};
						}
						for (var h = 0; h < e.app.objectDesignGroups.length; h++) {
							var oDG = e.app.objectDesignGroups[h],
								i = oDG.id;
							e.app.compODG[i] = {designGroups: h};
						}
						for (var h = 0; h < e.app.rowDesignGroups.length; h++) {
							var rDG = e.app.rowDesignGroups[h],
								i = rDG.id;
							e.app.compRDG[i] = {designGroups: h};
						}
						for (var h = 0; h < e.app.globalRequirements.length; h++) {
							var i = e.app.globalRequirements[h].id;
							e.app.compGR[i] = {globalRequirements: h};
						}
					},
					isPointtypeActivated: function(e) {
						if ("" != e.activatedId) {
							if ("undefined" !== typeof this.app.compGR[e.activatedId]) {
								var co = this.app.compGR[e.activatedId],
									cGR = this.app.globalRequirements[co.globalRequirements];
								return this.checkRequireds(cGR);
							} else {
								return (this.activated.includes(e.activatedId) || !e.isNotShownPointBar);
							}
						} else {
							return !e.isNotShownPointBar;
						}
                        return !0
                    },
					checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    }
                }
            },
            Gr = Nr,
            Ur = (o("2f00"), o("b81c")),
            Yr = o("a722"),
            Jr = o("8860"),
            Xr = o("34c3"),
            Kr = o("f6c4"),
            Zr = o("f774"),
			Sd = o("ba0d"),
            Qr = Object(w["a"])(Gr, a, n, !1, null, null, null),
            ea = Qr.exports;
        x()(Qr, {
            VBottomNavigation: Ur["a"],
            VBtn: C["a"],
            VCol: I["a"],
            VDivider: li["a"],
            VIcon: J["a"],
			VImg: X["a"],
            VLayout: Yr["a"],
            VList: Jr["a"],
            VListItem: Xi["a"],
            VListItemContent: Ut["a"],
            VListItemIcon: Xr["a"],
            VListItemTitle: Ut["c"],
            VMain: Kr["a"],
            VNavigationDrawer: Zr["a"],
            VRow: S["a"],
			VSlider: Sd["a"], 
            VSpacer: O["a"],
			VSnackbar: Ct["a"],
            VToolbar: Tt["a"],
            VToolbarTitle: xi["a"],
            VTooltip: Q["a"]
        });
        var ta = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("div", {
                    ref: "printThiss",
                    staticClass: "ab-0",
                    staticStyle: {
                        "text-align": "center",
						"font-size": e.app.useVW ? "0.835vw" : "16px",
						"padding-top": e.paddingNavigation && e.isTop ? (e.app.showMusicPlayer ? "88px" : "56px") : (e.app.showMusicPlayer ? "32px" : ""),
						"padding-bottom": e.paddingNavigation && !e.isTop ? "56px" : ""
                    },
                    style: e.background
                }, [o("div", {
					class: "fadeOverlay",
					style: e.fadeOverlay
				}, 1), o("v-navigation-drawer", {
                    attrs: {
                        "data-html2canvas-ignore": "",
                        app: "",
						"temporary": ""
                    },
                    model: {
                        value: e.drawer,
                        callback: function(t) {
                            e.drawer = t
                        },
                        expression: "drawer"
                    }
                }, [o("v-layout", {
                    attrs: {
                        column: "",
                        "fill-height": ""
                    }
                }, [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", e._g({
                    on: {
                        click: e.closeDrawer
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-chevron-left")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Close Menu ")])], 1)], 1), o("v-divider"), o("v-list-item", e._g({
                    on: {
                        click: e.toggleTheme
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-theme-light-dark")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Dark/Light Theme ")])], 1)], 1), o("v-list-item", e._g({
                    on: {
                        click: function(t) {
							e.$set(e, "isTop", !e.isTop)
						}
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-swap-vertical")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Top/Bottom Point Bar ")])], 1)], 1), o("v-list-item", e._g({
                    on: {
                        click: e.cleanActivated
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-select-off")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Clean Selected Choices ")])], 1)], 1), o("v-list-item", e._g({
                    on: {
                        click: function(t) {
							e.$set(e.app, "showMusicPlayer", !e.app.showMusicPlayer);
							if (e.app.showMusicPlayer) {
								if (e.app.bgmIsPlaying) {
									if (e.app.bgmTitleInterval !== 0) clearInterval(e.app.bgmTitleInterval), e.app.bgmTitleInterval = 0;
									e.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && "undefined" !== typeof e.app.bgmObjectId) {
											var co = e.app.comp[e.app.bgmObjectId],
												coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows],
												coO = coR.objects[co.objects];
											if (bgmPlayer.playerInfo.videoData.video_id == coO.bgmId && bgmPlayer.playerInfo.videoData.title !== "") {
												e.$set(e.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												e.$set(e.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(e.app.bgmTitleInterval);
												e.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
									e.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !e.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== e.app.curBgmTime) {
												if (k !== curTime) {
													e.$set(e.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > e.app.curBgmLength) o = 1;
													e.$set(e.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												e.$set(e.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							} else {
								if (e.app.bgmIsPlaying) {
									if (e.app.bgmTitleInterval !== 0) clearInterval(e.app.bgmTitleInterval), e.app.bgmTitleInterval = 0;
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
								}
							}
						}
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-music")])], 1), o("v-list-item-content", [o("v-list-item-title", [e.app.showMusicPlayer ? e._v("Hide Music Player ") : e._v("Show Music Player ")])], 1)], 1), e.app.importedChoicesIsOpen ? o("v-list-item", e._g({
                    on: {
                        click: e.openBuildForm
                    }
                }, e.on), [o("v-list-item-icon", [o("v-icon", [e._v("mdi-format-list-checks")])], 1), o("v-list-item-content", [o("v-list-item-title", [e._v("Open Build Form ")])], 1)], 1) : e._e(), e.app.importedChoicesIsOpen ? o("v-list-item", [o("v-list-item-content", [o("v-list-item-title", [o("v-row", [o("v-col", {
					staticClass: "pt-0 pb-0 pr-0",
					attrs: {
						cols: "9"
					}
				}, [o("v-text-field", {
					staticClass: "pt-0 mt-0",
                    attrs: {
						"hide-details": "",
                        label: "Build Title",
						"prepend-icon": "mdi-content-save-all"
                    },
                    model: {
                        value: e.buildTitle,
                        callback: function(t) {
                            e.$set(e, "buildTitle", t)
                        },
                        expression: "buildTitle"
                    },
					on: {
						keyup: function(t) {
							if (t.key === "Enter" || t.key === "Done") {
								return e.saveBuild()
							}
						}
					}
                })], 1), o("v-col", {
					staticClass: "pa-0"
				}, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "gray"
                    },
                    attrs: {
                        icon: ""
                    },
                    on: {
                        click: e.saveBuild
                    }
                }, [o("v-icon", [e._v("mdi-plus-circle-outline")])], 1)], 1)], 1)])], 1)], 1) : e._e(), e.app.importedChoicesIsOpen ? e._l(e.builds, (function(t) {
                    return o("v-list-item", {
                        key: t.index,
						on: {
                            click: function(o) {
								return e.loadBuild(t)
							}
                        }
                    }, [o("v-list-item-icon", {
						staticClass: "mr-2"
					}, [o("v-icon", [e._v("mdi-import")])], 1), o("v-list-item-content", [o("v-list-item-title", {
						staticClass: "text-left"
					}, [e._v(e._s(t.title))])], 1), o("v-btn", {
                    staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        icon: ""
                    },
                    on: {
                        click: function(o) {
							o.stopPropagation();
                            return e.deleteBuild(t)
                        }
                    }
                }, [o("v-icon", [e._v("mdi-minus-circle-outline")])], 1)], 1)
                })) : e._e()], 2)], 1)], 1), o("v-row", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.showMenu,
                        expression: "showMenu"
                    }],
                    staticClass: "px-2",
                    attrs: {
                        "data-html2canvas-ignore": ""
                    }
                }, [o("v-toolbar", {
					staticClass: "overflow--auto " + (e.$vuetify.theme.isDark ? "grey darken-2" : "grey lighten-5"),
					attrs: {
						height: "48"
					}
				}, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
						icon: ""
                    },
                    on: {
                        click: function(t) {
                            return e.cleanCurrentComponent()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-left")])], 1), o("v-spacer"), o("v-col", {
					staticClass: "pa-0 " + (e.window.width > 1200 ? "col-2" : e.window.width > 800 ? "col-3" : "")
				}, [o("v-tooltip", {
                        attrs: {
                            bottom: "",
                            "open-delay": "300"
                        },
                        scopedSlots: e._u([{
                            key: "activator",
                            fn: function(i) {
                                var s = i.on;
                                return [o("v-btn", e._g({
                                    attrs: {
										text: "",
										large: ""
									},
									on: {
                                        click: function(o) {
                                            return e.print()
                                        }
                                    }
                                }, s), [o("v-icon", [e._v("mdi-file-image")]), o("span", [e._v("Download Image")])], 1)]
                            }
                        }], null, !0)
                    }, [o("span", [e._v("Go all the way to the bottom to load in the pictures first")])])], 1), o("v-col", {
						staticClass: "pa-0 " + (e.window.width > 1200 ? "col-2" : e.window.width > 800 ? "col-3" : "")
					}, [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
						text: "",
						large: ""
                    },
                    on: {
                        click: function(t) {
                            e.currentComponent = "appLoad"
                        }
                    }
                }, [o("v-icon", [e._v("mdi-content-save")]), o("span", [e._v("Load Project")])], 1)], 1)], 1)], 1), e.app.pointTypes.length > 0 || e.app.backpack.length > 0 || e.app.importedChoicesIsOpen ? o("v-bottom-navigation", {
                    style: e.pointBar,
                    attrs: {
                        "data-html2canvas-ignore": "",
                        fixed: ""
                    }
                }, [o("v-col", [o("v-btn", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: !0
                    }],
                    attrs: {
                        text: "",
                        icon: "",
                        "x-large": ""
                    },
					style: e.pointBarIcon,
                    on: {
                        click: function(t) {
							e.drawer = !e.drawer
                        }
                    }
                }, [o("v-icon", [e._v("mdi-format-list-checks")])], 1)], 1), e._l(e.app.pointTypes, (function(t) {
                    return o("v-col", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.isPointtypeActivated(t),
                            expression: "\n            score.activatedId == '' ||\n            app.activated.includes(score.activatedId)\n          "
                        }],
                        key: t.index,
                        style: e.pointBarText
                    }, [o("span", {
						style: t.pointPrivateColorIsOn ? ("color: " + t.privateColor.hexa + ";") : ""
					}, [t.iconIsOn && !t.imageOnSide && !t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e(), e._v(" " + e._s(t.beforeText) + " "), t.iconIsOn && t.imageOnSide && !t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e(), o("span", {
						staticClass: "notranslate",
                        style: t.startingSum >= 0 ? "undefined" !== typeof e.app.styling.barPointPos ? "color: " + e.app.styling.barPointPos.hex : "" : "undefined" !== typeof e.app.styling.barPointNeg ? "color: " + e.app.styling.barPointNeg.hex : ""
                    }, [e._v(e._s(" " + Math.round(t.startingSum) + " "))]), t.iconIsOn && !t.imageOnSide && t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e(), e._v(" " + e._s(t.afterText) + " "), t.iconIsOn && t.imageOnSide && t.imageSidePlacement ? o("img", {
						style: "width:" + t.iconWidth + "px;height:" + t.iconHeight + "px;",
						attrs: {
							src: t.image
						}
					}) : e._e()])])
                })), o("v-col", [o("v-btn", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.app.backpack.length > 0 && (("undefined" === typeof e.app.hideBackpackBtn || e.app.hideBackpackBtn == 0) || (e.app.hideBackpackBtn > 0 && e.app.hideBackpackBtn == e.app.btnBackpackIsOn)),
                        expression: "app.backpack.length > 0"
                    }],
                    attrs: {
                        text: "",
                        icon: "",
                        "x-large": ""
                    },
					style: e.pointBarIcon,
                    on: {
                        click: function(t) {
							if (e.app.preloadImages) e.$set(e.app, "printThis", !0);
                            e.currentComponent = "appBackpackPreview"
                        }
                    }
                }, [o("v-icon", [e._v("mdi-checkbox-marked-circle-outline")])], 1)], 1)], 2) : e._e(), e.app.showMusicPlayer ? o("v-bottom-navigation", {
					staticClass: "v-bottom-navigation--top",
					staticStyle: {
						overflow: "hidden",
						height: "32px"
					},
					attrs: {
                        "data-html2canvas-ignore": "",
                        fixed: ""
                    }
				}, [o("v-row", [o("v-toolbar", {
					staticClass: "px-4 " + (e.$vuetify.theme.isDark ? "grey darken-2" : "grey lighten-5"),
					attrs: {
						height: "32"
					}
				}, [o("v-btn", {
					staticStyle: {
						"min-width": "32px",
						"border-radius": "50%",
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
                    attrs: {
                        icon: "",
						small: ""
                    },
                    on: {
                        click: function(t) {
							if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.curBgmLength !== 0) {
								e.app.bgmIsPlaying ? bgmPlayer.pauseVideo() : bgmPlayer.playVideo();
								e.$set(e.app, "bgmIsPlaying", !e.app.bgmIsPlaying);
								if (e.app.bgmIsPlaying) {
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
									let k = 0,
										o = 0;
									e.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !e.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== e.app.curBgmTime) {
												if (k !== curTime) {
													e.$set(e.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > e.app.curBgmLength) o = 1;
													e.$set(e.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												e.$set(e.app, "curBgmTime", o);
											}
										}
									}, 1000);
								} else {
									if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
								}
							}
                        }
                    }
                }, [o("v-icon", [e.app.bgmIsPlaying ? e._v("mdi-pause") : e._v("mdi-play")])], 1), o("v-btn", {
					staticStyle: {
						"min-width": "32px",
						"border-radius": "50%",
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
                    attrs: {
                        icon: "",
						small: ""
                    },
                    on: {
                        click: function(t) {
							if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && e.app.curBgmLength !== 0) {
								bgmPlayer.stopVideo();
								e.$set(e.app, "bgmIsPlaying", !1);
								if (e.app.bgmPlayInterval !== 0) clearInterval(e.app.bgmPlayInterval), e.app.bgmPlayInterval = 0;
								e.$set(e.app, "curBgmTime", 0);
							}
                        }
                    }
                }, [o("v-icon", [e._v("mdi-stop")])], 1), o("v-btn", {
					staticStyle: {
						"min-width": "32px",
						"border-radius": "50%",
						color: e.$vuetify.theme.isDark ? "white" : "black"
					},
                    attrs: {
                        icon: "",
						small: ""
                    },
                    on: {
                        click: function(t) {
							if ("undefined" !== typeof bgmPlayer) {
								if (!e.app.isMute && "undefined" !== typeof bgmPlayer.mute) {
									e.$set(e.app, "isMute", !0);
									bgmPlayer.mute();
								} else if (e.app.isMute && "undefined" !== typeof bgmPlayer.unMute) {
									e.$set(e.app, "isMute", !1);
									bgmPlayer.unMute();
								}
							}
                        }
                    }
                }, [o("v-icon", [e.app.isMute ? e._v("mdi-volume-off") : e._v("mdi-volume-high")])], 1), o("v-slider", {
					staticStyle: {
						"max-width": "104px",
						"padding-right": "4px"
					},
					attrs: {
						"hide-details": "",
						max: 100,
						min: 0,
						color: e.$vuetify.theme.isDark ? "white" : "black",
						"track-color": "gray",
						disabled: e.app.isMute || e.app.isFadingOut
					},
					model: {
						value: e.app.curVolume,
						expression: "app.curVolume"
					},
					on: {
						change: function(t) {
							e.$set(e.app, "curVolume", t);
							if ("undefined" !== typeof bgmPlayer.setVolume) {
								if (!e.app.isFadingOut) bgmPlayer.setVolume(t);
							}
						}
					}
				}), e.window.width > 600 ? e._e() : o("v-spacer"), o("v-col", {
					staticClass: "pa-0",
					staticStyle: {
						"max-width": "150px",
						overflow: "hidden"
					}
				}, [o("span", {
					staticClass: "scrolling-text"
				}, [e._v(e._s(e.app.bgmTitle))])], 1), e.window.width > 600 ? [o("v-slider", {
					attrs: {
						"hide-details": "",
						max: e.app.curBgmLength,
						min: 0,
						color: e.$vuetify.theme.isDark ? "white" : "black",
						"track-color": "gray",
						disabled: "undefined" === typeof bgmPlayer || "undefined" === typeof bgmPlayer.playerInfo.videoData || e.app.curBgmLength === 0 || !e.app.bgmIsPlaying
					},
					model: {
						value: e.app.curBgmTime,
						expression: "app.curBgmTime"
					},
					on: {
						change: function(t) {
							e.$set(e.app, "curBgmTime", t);
							bgmPlayer.seekTo(t, true);
						},
						mousedown: function(t) {
							e.$set(e.app, "isSeeking", !0);
						},
						mouseup: function(t) {
							setTimeout(() => {
								e.$set(e.app, "isSeeking", !1);
							}, 100);
						},
					},
				}), o("v-col", {
					staticClass: "pa-0",
					staticStyle: {
						"max-width": "150px"
					}
				}, [o("span", [e._v(e._s(e.bgmTime))])], 1)] : e._e()], 1)], 1)], 1) : e._e(), o(e.currentComponent, {
                    tag: "component",
                    attrs: {
                        "data-html2canvas-ignore": ""
                    },
                    on: {
                        cleanCurrentComponent: function(t) {
                            e.currentComponent = t
                        }
                    }
                }), o("v-row", e._l(e.app.rows, (function(t) {
                    return o("v-col", {
                        key: t.index,
                        class: e.window.width > 1200 && t.width ? "col-6 pt-0 pb-0" : "col-12 pt-0 pb-0"
                    }, [o("app-Row", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.checkRequireds(t),
                            expression: "checkRequireds(row)"
                        }],
                        attrs: {
                            row: t
                        },
                        on: {
                            rowWasChanged: function(e) {
                                t = e
                            }
                        }
                    })], 1)
                })), 1), e.snackbar ? o("span", [o("v-snackbar", {
                    attrs: {
                        top: "",
                        timeout: 2e3
                    },
                    model: {
                        value: e.snackbar,
                        callback: function(t) {
                            e.snackbar = t
                        },
                        expression: "snackbar"
                    }
                }, [o("div", {
                    staticStyle: {
                        "text-align": "center"
                    }
                }, [e._v(e._s(e.text))])])], 1) : e._e()], 1)
            },
            oa = [],
            ia = {
                data: function() {
                    return {
                        currentComponent: "",
                        showMenu: !0,
                        window: {
                            width: 0,
                            height: 0
                        },
						buildTitle: "",
						builds: [],
						db: "",
						drawer: !1,
						exceptedScores: [],
						extension: "png",
						isTop: !1,
						newActivated: "",
						newActivatedList: [],
						snackbar : !1,
						text: "",
						mute: !1
                    }
                },
                components: {
                    appRow: Fs,
                    appLoad: fo,
                    appActivatedViewer: rs,
                    appBackpackPreview: Vs
                },
                computed: {
                    background: function() {
                        return this.app.styling.backgroundImage ? 'background-image: url("' + this.app.styling.backgroundImage + '");background-color: ' + this.app.styling.backgroundColor + (this.app.styling.isBackgroundRepeat ? ";background-repeat: repeat;" : (this.app.styling.isBackgroundFitIn ? ";background-size: 100% 100%;" : ";background-size: cover;")) : 'background-color: ' + this.app.styling.backgroundColor + ';'
                    },
                    pointBar: function() {
                        return "background-color: " + this.app.styling.barBackgroundColor + "; margin: " + this.app.styling.barMargin + "px; padding: " + this.app.styling.barPadding + "px;" + (this.isTop ? (this.app.showMusicPlayer ? "top: 32px" : "top: 0px") : "")
                    },
                    pointBarText: function() {
                        return "color: " + this.app.styling.barTextColor + "; margin: " + this.app.styling.barTextMargin + "px; padding: " + this.app.styling.barTextPadding + 'px;font-family: "' + this.app.styling.barTextFont + '";font-size: ' + this.app.styling.barTextSize + "px;"
                    },
					pointBarIcon: function() {
						return "undefined" !== typeof this.app.styling.barIconColor ? "color: " + this.app.styling.barIconColor + ";" : ""
					},
                    app: function() {
                        return this.$store.state.app
                    },
                    activated: function() {
                        return this.$store.state.app.activated
                    },
					paddingNavigation: function() {
						return (this.app.pointTypes.length > 0 || this.app.backpack.length > 0 || this.app.importedChoicesIsOpen)
					},
					bgmTitle: function() {
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							return bgmPlayer.playerInfo.videoData.title != "" ? bgmPlayer.playerInfo.videoData.title : "No Audio Title"
						}
						return "No Audio Title"
					},
					bgmTime: function() {
						return this.calTime(this.app.curBgmTime) + "|" + this.calTime(this.app.curBgmLength)
					},
					generateBuild: function() {
						for (var e = [], t = 0; t < this.app.activated.length; t++) {
							if ("undefined" !== typeof this.app.comp[this.app.activated[t].split("/ON#")[0]]) {
								var co = this.app.comp[this.app.activated[t].split("/ON#")[0]],
									coR = co.type === "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									a = coO.id;
								if (!coO.isSelectableMultiple) {
									if (coO.isActivateRandom && coO.activatedRandom.length > 0) {
										a += "/RND#" + coO.activatedRandom.join("/AND#").replaceAll("/ON#", "/RON#");
									}
									if (coO.textfieldIsOn && coO.customTextfieldIsOn) {
										a += "/WORD#" + coO.wordChangeSelect.replaceAll(",", "/CHAR#");
									}
									if (coO.isImageUpload && coO.image !== coO.defaultImage) {
										a += "/IMG#" + coO.image.replaceAll(",", "/CHAR#");
									}
									e.push(a);
								} else if (coO.isMultipleUseVariable && coO.multipleUseVariable !== 0) {
									a += "/ON#" + coO.multipleUseVariable;
									if (coO.isActivateRandom && coO.activatedRandomMul.length > 0) {
										a += "/RND#" + coO.activatedRandomMul.flat(2).join("/AND#").replaceAll("/ON#", "/RON#");
									}
									e.push(a);
								}
							}
						}
                        return e
                    },
					fadeOverlay: function() {
						var e = this.app.fadeTransitionIsOn ? 1 : 0;
						return "opacity: " + e + "; transition: opacity " + this.app.fadeTransitionTime + "s ease-out; background-color: " + this.app.fadeTransitionColor + ";"
					}
                },
                beforeCreate: function() {
                    var e = this,
                        t = new XMLHttpRequest;
                    t.onreadystatechange = function() {
                        if (4 == this.readyState && 200 == this.status) {
                            var t = this.responseText,
                                o = JSON.parse(t);
                            e.$store.commit("loadApp", o)
                        }
                    }, t.open("GET", "project.json", !0), t.send()
                },
                created: function() {
                    window.addEventListener("resize", this.handleResize), this.handleResize(), this.initializeBuildDB()
                },
                destroyed: function() {
                    window.removeEventListener("resize", this.handleResize)
                },
                methods: {
                    handleResize: function() {
                        this.window.width = window.innerWidth, this.window.height = window.innerHeight
                    },
					calTime: function(e) {
						const h = parseInt(Math.floor(e / 3600));
						const m = parseInt(Math.floor((e % 3600) / 60));
						const s = parseInt(e % 60);
						const rm = String(m).padStart(2, "0");
						const rs = String(s).padStart(2, "0");
						return h > 0 ? (h + ":") : (rm + ":" + rs)
					},
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    },
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    },
                    cleanActivated: function() {
                        this.$store.commit({
                            type: "cleanActivated"
                        })
                    },
					closeDrawer: function() {
						this.drawer = !1
					},
					deleteBuild: function(e) {
						const transaction = this.db.transaction(["buildStore"], "readwrite");
						const store = transaction.objectStore("buildStore");
						store.delete(e.title);
						this.builds.splice(this.builds.indexOf(e), 1);
						this.text = "Build: " + e.title + " is deleted.", this.snackbar = !0;
					},
					loadBuild: function(e) {
						this.newActivated = e.value.join(",");
						this.loadActivated();
						this.text = "Build: " + e.title + " is loaded.", this.snackbar = !0;
					},
					openBuildForm: function() {
						this.currentComponent = "appActivatedViewer";
						this.drawer = !1
					},
					toggleTheme: function() {
						this.$vuetify.theme.isDark = !this.$vuetify.theme.isDark;
						this.app.darkMode = !this.app.darkMode;
					},
					initializeBuildDB: function() {
						var e = this;
						const request = indexedDB.open("cyoaDB", 1);
						request.onupgradeneeded = function(t) {
							e.db = t.target.result;
							if (!e.db.objectStoreNames.contains("buildStore")) {
								e.db.createObjectStore("buildStore", {keyPath: "title"});
							}
						};
						request.onsuccess = function(t) {
							e.db = t.target.result;
							const transaction = e.db.transaction(["buildStore"], "readonly");
							const store = transaction.objectStore("buildStore");
							const getRequest = store.openCursor();
							getRequest.onsuccess = function(o) {
								const i = o.target.result;
								if (i) {
									e.builds.push({title: i.value.title, value: i.value.value});
									i.continue();
								}
							};
							getRequest.onerror = function(o) {
								console.error("Database error:", o.target.errorCode);
							};
						};
						request.onerror = function(t) {
							console.error("Database error:", t.target.errorCode);
						};
					},
					saveBuild: function() {
						var e = this.buildTitle.trim(),
							t = this.generateBuild;
						if (this.builds.some(item => item.title === e)) {
							this.text = "Build: " + e + " is already in use.", this.snackbar = !0;
						} else {
							const transaction = this.db.transaction(["buildStore"], "readwrite");
							const store = transaction.objectStore("buildStore");
							store.put({title: e, value: t});
							this.builds.push({title: e, value: t});
							this.text = "Build: " + e + " is saved.", this.snackbar = !0;
						}
						this.buildTitle = "";
					},					
					isPointtypeActivated: function(e) {
						if ("" != e.activatedId) {
							if ("undefined" !== typeof this.app.compGR[e.activatedId]) {
								var co = this.app.compGR[e.activatedId],
									cGR = this.app.globalRequirements[co.globalRequirements];
								return this.checkRequireds(cGR);
							} else {
								return (this.activated.includes(e.activatedId) || !e.isNotShownPointBar);
							}
						} else {
							return !e.isNotShownPointBar;
						}
                        return !0
                    },
                    print: function() {
						var e = this,
							bSuccess = !1;
						htmlToImage.toBlob(e.$refs.printThiss, {
							backgroundColor: e.app.styling.backgroundColor,
							type: "image/" + e.extension,
							quality: 0.9,
							filter: (node) => {
								return node.nodeType !== Node.ELEMENT_NODE || !node.hasAttribute('data-html2canvas-ignore');
							}
						}).then(function(t) {
							var i = document.createEvent("MouseEvents"),
								s = document.createElement("a");
							s.download = "Finalized Build." + e.extension;
							s.href = window.URL.createObjectURL(t);
							s.dataset.downloadurl = ["image/" + e.extension, s.download, s.href].join(":");
							i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null);
							s.dispatchEvent(i);
							bSuccess = !0;
						}).catch(function(error) {
							if (!bSuccess) {
								e.text = "Failed to generate image, Segmenting and regenerating the image...", e.snackbar = !0;
								e.$nextTick(() => {
									var maxLength = 5e6;
									var container = e.$refs.printThiss.cloneNode(true);
									function splitNodes(node, maxLength) {
										var parts = [];
										var currentPart = document.createElement("div");
										currentPart.style.cssText = node.style.cssText;
										var currentLength = 0;
										
										function getBlobSize(node) {
											const s = new XMLSerializer();
											const str = s.serializeToString(node);
											const blob = new Blob([str], {type: "image/" + e.extension});
											return blob.size;
										}
										
										function addNodeToCurrentPart(node) {
											var clone = node.cloneNode(true);
											currentPart.appendChild(clone);
											currentLength += getBlobSize(node);
										}
										
										function addNodeToCurrentPartChild(node) {
											var clone = node.cloneNode(true);
											currentPart.childNodes[0].childNodes[0].childNodes[0].childNodes[1].appendChild(clone);
											currentLength += getBlobSize(node);
										}
										
										function initNode(node) {
											var c1 = node.cloneNode(false),
												c2 = node.childNodes[0].cloneNode(false),
												c3 = node.childNodes[0].childNodes[0].cloneNode(false),
												c4 = node.childNodes[0].childNodes[0].childNodes[0].cloneNode(true),
												c5 = node.childNodes[0].childNodes[0].childNodes[1].cloneNode(false);
											currentPart.appendChild(c1);
											currentPart.childNodes[0].appendChild(c2);
											currentPart.childNodes[0].childNodes[0].appendChild(c3);
											currentPart.childNodes[0].childNodes[0].childNodes[0].appendChild(c4);
											currentPart.childNodes[0].childNodes[0].childNodes[0].appendChild(c5);
											currentLength += getBlobSize(c1);
											currentLength += getBlobSize(c2);
											currentLength += getBlobSize(c3);
											currentLength += getBlobSize(c4);
											currentLength += getBlobSize(c5);
										}

										Array.from(node.childNodes).forEach(function(child) {
											var childLength = (new XMLSerializer().serializeToString(child)).length;
											if (childLength > maxLength) {
												var cParent = child.childNodes[0].childNodes[0],
													cRow = cParent.childNodes[0];
												if (currentLength > 0) parts.push(currentPart.innerHTML);
												currentPart = document.createElement("div");
												currentPart.style.cssText = node.style.cssText;
												currentLength = 0;
												initNode(child);
												Array.from(cParent.childNodes[1].childNodes).forEach(function(c) {
													var cLength = (new XMLSerializer().serializeToString(c)).length;
													if (currentLength + cLength > maxLength) {
														parts.push(currentPart.innerHTML);
														currentPart = document.createElement("div");
														currentPart.style.cssText = node.style.cssText;
														currentLength = 0;
														initNode(child);
													}
													addNodeToCurrentPartChild(c);
												});
											} else {
												if (currentLength + childLength > maxLength) {
														parts.push(currentPart.innerHTML);
														currentPart = document.createElement("div");
														currentPart.style.cssText = node.style.cssText;
														currentLength = 0;
												}
												addNodeToCurrentPart(child);
											}
										});

										if (currentPart.innerHTML) {
											parts.push(currentPart.innerHTML);
										}

										return parts;
									}

									var parts = splitNodes(container, maxLength),
										bS = !0;
									var promises = parts.map(function(part, index) {
										return new Promise(function(resolve) {
											var tempDiv = document.createElement("div");
											tempDiv.innerHTML = part;
											htmlToImage.toBlob(tempDiv, {
												backgroundColor: e.app.styling.backgroundColor,
												type: "image/" + e.extension,
												quality: 0.9,
												filter: (node) => {
													return node.nodeType !== Node.ELEMENT_NODE || !node.hasAttribute('data-html2canvas-ignore');
												}
											}).then(function(t) {
												var i = document.createEvent("MouseEvents"),
													s = document.createElement("a");
												s.download = "Finalized_Build_Part_" + (index + 1) + "." +  + e.extension;
												s.href = window.URL.createObjectURL(t);
												s.dataset.downloadurl = ["image/" + e.extension, s.download, s.href].join(":");
												i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null);
												s.dispatchEvent(i);
											}).catch(function(err) {
												e.text = "Failed to download the image. Please try again with a different browser.", e.snackbar = !0;
											}).finally(function() {
												resolve();
											});
										});
									});
								});
							}
						});
                    },
					playBgm: function(e, t, i) {
						function bgmFadeIn(th, f) {
							let v = 0,
								k = 0,
								o = 0;
							if (th.app.isFadingOut) {
								const lastTime = parseInt(th.app.lastFadeTime);
								if (th.app.bgmFadeTimer !== 0) clearTimeout(th.app.bgmFadeTimer), th.app.bgmFadeTimer = 0;
								th.app.bgmFadeTimer = setTimeout(() => {
									if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
									if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
										const iTime = e.bgmFadeInSec / 20;
										th.app.lastFadeTime = e.bgmFadeInSec;
										bgmPlayer.setVolume(0);
										bgmPlayer.playVideo();
										if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										if (th.app.isFadingOut) th.app.isFadingOut = !1;
										th.app.bgmFadeInterval = setInterval(() => {
											if (bgmPlayer.playerInfo.playerState === 1) {
												if (v < th.app.curVolume) {
													v += 5;
													bgmPlayer.setVolume(v);
													th.app.lastFadeTime = th.app.lastFadeTime - iTime;
												} else {
													bgmPlayer.setVolume(th.app.curVolume);
													clearInterval(th.app.bgmFadeInterval);
													th.app.bgmFadeInterval = 0;
													th.app.lastFadeTime = 0;
												}
											}
										}, iTime);
									} else {
										if (th.app.isFadingOut) th.app.isFadingOut = !1, clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
										bgmPlayer.playVideo();
										bgmPlayer.setVolume(th.app.curVolume);
									}
									th.$set(th.app, "bgmObjectId", e.id);
									if (th.app.showMusicPlayer) {
										if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
										th.app.bgmTitleInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
												if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
													th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
													th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
													clearInterval(th.app.bgmTitleInterval);
													th.app.bgmTitleInterval = 0;
												}
											}
										}, 1000);
										if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
										th.app.bgmPlayInterval = setInterval(() => {
											if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
												const curTime = parseInt(bgmPlayer.getCurrentTime());
												if (curTime !== th.app.curBgmTime) {
													if (k !== curTime) {
														th.$set(th.app, "curBgmTime", curTime);
													} else {
														o++;
														if (o > th.app.curBgmLength) o = 1;
														th.$set(th.app, "curBgmTime", o);
													}
												} else {
													k = curTime;
													o = curTime + 1;
													th.$set(th.app, "curBgmTime", o);
												}
											}
										}, 1000);
									}
								}, lastTime);
							} else {
								if (f) e.bgmNoLoop ? (bgmPlayer.loadVideoById(t), bgmPlayer.setLoop(!1)) : (bgmPlayer.loadVideoById(t), bgmPlayer.loadPlaylist(t), bgmPlayer.setLoop(!0));
								if (e.bgmFadeIn && e.bgmFadeInSec > 0) {
									const iTime = e.bgmFadeInSec / 20;
									th.app.lastFadeTime = e.bgmFadeInSec;
									bgmPlayer.setVolume(0);
									bgmPlayer.playVideo();
									if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									if (th.app.isFadingOut) th.app.isFadingOut = !1;
									th.app.bgmFadeInterval = setInterval(() => {
										if (bgmPlayer.playerInfo.playerState === 1) {
											if (v < th.app.curVolume) {
												v += 5;
												bgmPlayer.setVolume(v);
												th.app.lastFadeTime = th.app.lastFadeTime - iTime;
											} else {
												bgmPlayer.setVolume(th.app.curVolume);
												clearInterval(th.app.bgmFadeInterval);
												th.app.bgmFadeInterval = 0;
												th.app.lastFadeTime = 0;
											}
										}
									}, iTime);
								} else {
									bgmPlayer.playVideo();
									bgmPlayer.setVolume(th.app.curVolume);
								}
								th.$set(th.app, "bgmObjectId", e.id);
								if (th.app.showMusicPlayer) {
									if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
									th.app.bgmTitleInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
											if (bgmPlayer.playerInfo.videoData.video_id == t && bgmPlayer.playerInfo.videoData.title !== "") {
												th.$set(th.app, "bgmTitle", bgmPlayer.playerInfo.videoData.title);
												th.$set(th.app, "curBgmLength", bgmPlayer.getDuration());
												clearInterval(th.app.bgmTitleInterval);
												th.app.bgmTitleInterval = 0;
											}
										}
									}, 1000);
									if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
									th.app.bgmPlayInterval = setInterval(() => {
										if ("undefined" !== typeof bgmPlayer.playerInfo.videoData && !th.app.isSeeking && bgmPlayer.getPlayerState() == 1) {
											const curTime = parseInt(bgmPlayer.getCurrentTime());
											if (curTime !== th.app.curBgmTime) {
												if (k !== curTime) {
													th.$set(th.app, "curBgmTime", curTime)
												} else {
													o++;
													if (o > th.app.curBgmLength) o = 1;
													th.$set(th.app, "curBgmTime", o);
												}
											} else {
												k = curTime;
												o = curTime + 1;
												th.$set(th.app, "curBgmTime", o);
											}
										}
									}, 1000);
								}
							}
						}
						function bgmFadeOut(th) {
							const steps = th.app.curVolume / 5;
							if (e.bgmFadeOut && e.bgmFadeOutSec > 0 && steps > 0) {
								const iTime = e.bgmFadeOutSec / steps;
								let v = th.app.curVolume;
								th.app.lastFadeTime = e.bgmFadeOutSec;
								th.app.isFadingOut = !0;
								if (th.app.bgmFadeInterval !== 0) clearInterval(th.app.bgmFadeInterval), th.app.bgmFadeInterval = 0;
								th.app.bgmFadeInterval = setInterval(() => {
									if (v > 0 && "undefined" !== typeof bgmPlayer.setVolume) {
										v -= 5;
										bgmPlayer.setVolume(v);
										th.app.lastFadeTime = th.app.lastFadeTime - iTime;
									} else {
										if (th.app.isFadingOut) {
											bgmPlayer.pauseVideo();
											bgmPlayer.setVolume(th.app.curVolume);
											clearInterval(th.app.bgmFadeInterval);
											th.app.bgmFadeInterval = 0;
											th.app.lastFadeTime = 0;
											th.app.isFadingOut = !1;
											if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
											if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
											th.$set(th.app, "bgmTitle", "No Audio Title");
											th.$set(th.app, "curBgmTime", 0);
											th.$set(th.app, "curBgmLength", 0);
										}
									}
								}, iTime);
							} else {
								bgmPlayer.pauseVideo();
								if (th.app.bgmTitleInterval !== 0) clearInterval(th.app.bgmTitleInterval), th.app.bgmTitleInterval = 0;
								if (th.app.bgmPlayInterval !== 0) clearInterval(th.app.bgmPlayInterval), th.app.bgmPlayInterval = 0;
								th.$set(th.app, "bgmTitle", "No Audio Title");
								th.$set(th.app, "curBgmTime", 0);
								th.$set(th.app, "curBgmLength", 0);
							}
						}
						if ("undefined" !== typeof bgmPlayer.playerInfo.videoData) {
							var p = this.app.bgmIsPlaying,
								s = bgmPlayer.playerInfo.videoData.video_id,
								o = bgmPlayer.playerInfo.playerState,
								v = 0,
								f = !1;
							if ("undefined" === typeof this.app.bgmObjectId) this.$set(this.app, "bgmObjectId", e.id);
							if (s == t) {
								if (this.app.bgmObjectId == e.id) {
									if (p) {
										if (o === 2) {
											bgmFadeIn(this, f);
										} else {
											bgmPlayer.stopVideo();
											bgmFadeIn(this, f);
										}
									} else {
										bgmFadeOut(this);
									}
								} else {
									if (p) {
										bgmPlayer.stopVideo(), bgmFadeIn(this, f);
									} else {
										bgmFadeOut(this);
									}
								}
							} else {
								if (p) {
									f = !0;
									bgmFadeIn(this, f);
								}
							}
						} else {
							if (i < 10) {
								i++;
								setTimeout(() => {
									this.playBgm(e, t, i);
								}, 200);
							}
						}
					},
					updateScores: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						var eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						for (var f = 0; f < this.app.activated.length; f++) {
							var aF = this.app.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (!this.exceptedScores.includes(coO.id)) {
									if (e.discountOther) {
										for (var b = 0; b < coO.scores.length; b++) {
											var coS = coO.scores[b];
											if (!coS.isNotRecalculatable) {
												if (coS.isChangeDiscount) {
													for (var m = 0; m < this.app.pointTypes.length; m++) {
														if (this.app.pointTypes[m].id == coS.id) {
															if (coO.isMultipleUseVariable) {
																for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																	this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																}
															} else {
																this.app.pointTypes[m].startingSum += coS.tmpDisScore;
															}
															this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
														}
													}
													coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
												}
											}
										}
									}
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											var nH = this.app.activated.indexOf(eid);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											this.app.activated.splice(nH, 1);
											t.currentChoices -= 1;
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											this.app.activated.splice(nH, 0, eid);
											t.currentChoices += 1;
											var bE = this.checkRequireds(coS);
											if (bC !== bE) {
												var nC = 0;
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum += coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !1;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum -= coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !0;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScores(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
						}
					},
					updateScoresMulC: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + parseInt(e.multipleUseVariable + 1) : e.id;
						for (var f = 0; f < this.app.activated.length; f++) {
							var aF = this.app.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.app.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value);
										if (!coS.isNotRecalculatable) {
											if (e.discountOther) {
												for (var b = 0; b < coO.scores.length; b++) {
													var coS = coO.scores[b];
													if (!coS.isNotRecalculatable) {
														if (coS.isChangeDiscount) {
															for (var m = 0; m < this.app.pointTypes.length; m++) {
																if (this.app.pointTypes[m].id == coS.id) {
																	if (coO.isMultipleUseVariable) {
																		for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																			this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																		}
																	} else {
																		this.app.pointTypes[m].startingSum += coS.tmpDisScore;
																	}
																	this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
																}
															}
															coS.isChangeDiscount = !1, coS.tmpDisScore = 0;
														}
													}
												}
											}
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
												}
											}
											var bC = this.checkRequireds(coS);
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											var bE = !1;
											if (e.id == this.exceptedScores[0]) {
												var fI = this.app.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.app.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bE = this.checkRequireds(coS);
													this.app.activated.splice(this.app.activated.length - 1, 1), t.currentChoices -= 1;
												} else {
													var aFI = this.app.activated[fI].split("/ON#");
													parseInt(aFI[1]) > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.app.activated.splice(fI, 1), t.currentChoices -= 1);
													bE = this.checkRequireds(coS);
													parseInt(aFI[1]) > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.app.activated.splice(fI, 0, eid), t.currentChoices += 1);
												}
											} else {
												var nH = this.app.activated.indexOf(eid);
												this.app.activated.splice(nH, 1);
												t.currentChoices -= 1;
												var bE = this.checkRequireds(coS);
												this.app.activated.splice(nH, 0, eid);
												t.currentChoices += 1;
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum += coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !1;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum -= coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !0;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulC(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
						}
					},
					updateScoresMulS: function(e, t, o, i) {
						var tmpScores = [],
							count = i;
						if (!this.exceptedScores.includes(e.id)) this.exceptedScores.push(e.id);
						var nC = 0,
							eid = e.isMultipleUseVariable ? e.id + "/ON#" + e.multipleUseVariable : e.id;
						for (var f = 0; f < this.app.activated.length; f++) {
							var aF = this.app.activated[f].split("/ON#");
							if ("undefined" !== typeof this.app.comp[aF[0]]) {
								var co = this.app.comp[aF[0]],
									coR = co.type == "app" ? this.app.rows[co.rows] : this.app.backpack[co.rows],
									coO = coR.objects[co.objects],
									nR = this.app.activated.indexOf(eid);
								if (!this.exceptedScores.includes(coO.id)) {
									for (var b = 0; b < coO.scores.length; b++) {
										var coS = coO.scores[b],
											coSValue = coS.discountIsOn ? coS.discountScore : parseInt(coS.value),
											bC = !1, bE = !1;
										if (!coS.isNotRecalculatable) {
											var isActive = coO.isSelectableMultiple ? coS.isActiveMul[coO.multipleUseVariable - 1] : coS.isActive;
											for (var a = 0; a < o.length; a++) {
												for (var n = 0; n < this.app.pointTypes.length; n++) {
													this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum += o[a].value);
												}
											}
											if (e.id == this.exceptedScores[0]) {
												var fI = this.app.activated.findIndex(item => item.split("/ON#")[0] == e.id);
												if (fI == -1) {
													this.app.activated.push(e.id + "/ON#" + -1), t.currentChoices += 1;
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													this.app.activated.splice(this.app.activated.length - 1, 1), t.currentChoices -= 1;
													bE = this.checkRequireds(coS);
												} else {
													var aFI = this.app.activated[fI].split("/ON#");
													aFI[1] > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1]) - 1) : (this.app.activated.splice(fI, 1), t.currentChoices -= 1);
													bC = this.checkRequireds(coS);
													for (var a = 0; a < o.length; a++) {
														for (var n = 0; n < this.app.pointTypes.length; n++) {
															this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
														}
													}
													aFI[1] > 1 ? this.app.activated[fI] = aFI[0] + "/ON#" + (parseInt(aFI[1])) : (this.app.activated.splice(fI, 0, eid), t.currentChoices += 1);
													bE = this.checkRequireds(coS);
												}
											} else {
												this.app.activated.splice(nR, 1);
												t.currentChoices -= 1;
												bC = this.checkRequireds(coS);
												for (var a = 0; a < o.length; a++) {
													for (var n = 0; n < this.app.pointTypes.length; n++) {
														this.app.pointTypes[n].id == o[a].id && (this.app.pointTypes[n].startingSum -= o[a].value);
													}
												}
												this.app.activated.splice(nR, 0, eid);
												t.currentChoices += 1;
												bE = this.checkRequireds(coS);
											}
											if (bC !== bE) {
												if (bC) {
													if (isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum += coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !1;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum += coSValue, coS.isActive = !1, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												} else {
													if (!isActive) {
														this.exceptedScores.push(coO.id);
														tmpScores = [];
														for (var m = 0; m < this.app.pointTypes.length; m++)
															if (this.app.pointTypes[m].id == coS.id) {
																if (coO.isMultipleUseVariable) {
																	for (var X = coO.multipleUseVariable, x = 0; x < X; x++) {
																		this.app.pointTypes[m].startingSum -= coSValue;
																		tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																		for (var ee = 0; ee < coO.multipleUseVariable; ee++) {
																			coS.isActiveMul[ee] = !0;
																		}
																	}
																} else {
																	this.app.pointTypes[m].startingSum -= coSValue, coS.isActive = !0, tmpScores.push({id: this.app.pointTypes[m].id, value: coSValue});
																}
																this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
															}
													}
												}
												count++;
												this.updateScoresMulS(coO, coR, tmpScores, count);
											}
										}
									}
								}
							}
						}
						if (i == 0) {
							this.$set(this, "exceptedScores", []);
						}
					},
					activateObjectI: function(e) {
						var eID = e.split("/IMG#"),
							eImage = eID.length > 1 ? eID[1] : "";
						eID = eID[0].split("/WORD#");
						var eWord = eID.length > 1 ? eID[1].replaceAll("/CHAR#", ",") : "";
						eID = eID[0].split("/RND#");
						var eRand = eID.length > 1 ? eID[1].split("/AND#") : "";
						eID = eID[0];
						if ("undefined" !== typeof this.app.comp[eID]) {
							var co = this.app.comp[eID],
								coR = this.app.rows[co.rows],
								coO = coR.objects[co.objects];
							var tmpScores = [];
							if (coO.discountOther) {
								if ("undefined" !== typeof coO.discountOperator && "undefined" !== typeof coO.discountValue) {
									if (coO.isDisChoices) {
										if ("undefined" !== typeof coO.discountChoices) {
											for (var a = 0; a < coO.discountChoices.length; a++) {
												if ("undefined" !== typeof this.app.comp[coO.discountChoices[a]]) {
													var coT = this.app.comp[coO.discountChoices[a]],
														coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
														coTO = coTR.objects[coT.objects];
													for (var c = 0; c < coTO.scores.length; c++) {
														var coTS = coTO.scores[c];
														if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
															if (!coTS.isNotDiscountable) {
																if (coO.stackableDiscount) {
																	var scoreVal = parseInt(coTS.value),
																		stackDiscount = 0,
																		stackDiscountCal = 0,
																		bTempStacked = !1,
																		tmpNum = 0,
																		discountedFrom = [],
																		aDiscount = [];
																	if (coTS.notStackableDiscount) {
																		for (var f = 0; f < coTS.tmpDiscount.length; f++) {
																			if (coTS.tmpDiscount[f][0]) {
																				discountedFrom = coTS.tmpDiscount[f][1];
																				discountedFrom.push(coO.id);
																				scoreVal = coTS.tmpDiscount[f][2];
																				bTempStacked = !0;
																				tmpNum = f;
																			}
																		}
																		if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																		else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																		else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																		else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																		stackDiscountCal = stackDiscount;
																		if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																		if (coO.discountShow) {
																			if (coO.discountAfterText != "") {
																				if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																				var dA = !1;
																				if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																				if (coO.discountTextDuplicated) {
																					if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																					if (dA) {
																						coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																					} else {
																						coTS.dupTextA[coO.discountAfterText] = 1;
																						coTS.discountTextA.push(coO.discountAfterText);
																					}
																				} else {
																					coTS.discountTextA.push(coO.discountAfterText);
																				}
																			}
																			if (coO.discountBeforeText != "") {
																				if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																				var dB = !1;
																				if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																				if (coO.discountTextDuplicated) {
																					if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																					if (dB) {
																						coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																					} else {
																						coTS.dupTextB[coO.discountBeforeText] = 1;
																						coTS.discountTextB.push(coO.discountBeforeText);
																					}
																				} else {
																					coTS.discountTextB.push(coO.discountBeforeText);
																				}
																			}
																		}
																		if (coTS.discountScore > stackDiscount) {
																			this.$set(coTS, "tmpDisScore", coTS.discountScore - stackDiscount);
																			this.$set(coTS, "isChangeDiscount", true);
																			aDiscount.push(false);
																			aDiscount.push(coTS.discountedFrom);
																			aDiscount.push(coTS.discountScoreCal);
																			aDiscount.push(coTS.discountScore);
																			if (coTS.discountShow) {
																				aDiscount.push(true);
																				aDiscount.push(coO.discountBeforeText);
																				aDiscount.push(coO.discountAfterText);
																			} else {
																				aDiscount.push(false);
																			}
																			coTS.discountScore = stackDiscount;
																			coTS.discountScoreCal = stackDiscountCal;
																			if ("undefined" !== typeof coTS.discountTextA) this.$set(coTS, "discountAfterText", coTS.discountTextA.join(""));
																			if ("undefined" !== typeof coTS.discountTextB) this.$set(coTS, "discountBeforeText", coTS.discountTextB.join(""));
																			if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																			coTS.discountedFrom.push(...discountedFrom);
																			if (bTempStacked) coTS.tmpDiscount.splice(tmpNum, 1);
																			coTS.tmpDiscount.push(aDiscount);
																			this.$set(coTS, "notStackableDiscount", false);
																		} else {
																			discountedFrom.push(coO.id);
																			if (bTempStacked) {
																				coTS.tmpDiscount[tmpNum][1] = discountedFrom;
																				coTS.tmpDiscount[tmpNum][2] = stackDiscountCal;
																				coTS.tmpDiscount[tmpNum][3] = stackDiscount;
																			} else {
																				if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																				"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																				aDiscount.push(discountedFrom);
																				aDiscount.push(stackDiscountCal);
																				aDiscount.push(stackDiscount);
																				coTS.tmpDiscount.push(aDiscount);
																			}
																		}
																	} else {
																		scoreVal = coTS.discountIsOn ? coTS.discountScoreCal : parseInt(coTS.value);
																		var tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value);
																		if (1 == coO.discountOperator) coTS.discountScore = scoreVal - parseInt(coO.discountValue);
																		else if (2 == coO.discountOperator) coTS.discountScore = scoreVal + parseInt(coO.discountValue);
																		else if (3 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal * coO.discountValue);
																		else if (4 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal / coO.discountValue);
																		this.$set(coTS, "discountScoreCal", coTS.discountScore);
																		if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) coTS.discountScore = Math.max(coTS.discountScore, parseInt(coO.discountLowLimit));
																		if (coO.discountShow) {
																			if (coO.discountAfterText != "") {
																				this.$set(coTS, "discountShow", coO.discountShow);
																				if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																				var dA = !1;
																				if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																				if (coO.discountTextDuplicated) {
																					if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																					if (dA) {
																						coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																					} else {
																						"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																						coTS.dupTextA[coO.discountAfterText] = 1;
																						coTS.discountTextA.push(coO.discountAfterText);
																					}
																				} else {
																					"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																					coTS.discountTextA.push(coO.discountAfterText);
																				}
																			}
																			if (coO.discountBeforeText != "") {
																				this.$set(coTS, "discountShow", coO.discountShow);
																				if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																				var dB = !1;
																				if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																				if (coO.discountTextDuplicated) {
																					if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																					if (dB) {
																						coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																					} else {
																						"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																						coTS.dupTextB[coO.discountBeforeText] = 1;
																						coTS.discountTextB.push(coO.discountBeforeText);
																					}
																				} else {
																					"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																					coTS.discountTextB.push(coO.discountBeforeText);
																				}
																			}
																		}
																		if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																		coTS.discountedFrom.push(coO.id);
																		coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																		if (!coTS.discountIsOn) this.$set(coTS, "discountIsOn", true);
																	}
																} else {
																	var scoreVal = parseInt(coTS.value),
																		tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value),
																		stackDiscount = 0,
																		stackDiscountCal = 0,
																		aDiscount = [];
																	if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																	if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																	else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																	else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																	else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																	stackDiscountCal = stackDiscount;
																	if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																	if (coTS.discountIsOn) {
																		"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																		if (coTS.discountScore > stackDiscount) {
																			aDiscount.push(coTS.discountedFrom);
																			aDiscount.push(coTS.discountScoreCal);
																			aDiscount.push(coTS.discountScore);
																			if (coTS.discountShow) {
																				aDiscount.push(true);
																				aDiscount.push(coO.discountBeforeText);
																				aDiscount.push(coO.discountAfterText);
																			} else {
																				aDiscount.push(false);
																			}
																			this.$set(coTS, "discountScore", stackDiscount);
																			this.$set(coTS, "discountScoreCal", stackDiscountCal);
																			this.$set(coTS, "discountShow", coO.discountShow);
																			this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																			this.$set(coTS, "discountAfterText", coO.discountAfterText);
																			this.$set(coTS, "discountedFrom", coO.id);
																			this.$set(coTS, "notStackableDiscount", true);
																		} else {
																			aDiscount.push(coO.id);
																			aDiscount.push(stackDiscountCal);
																			aDiscount.push(stackDiscount);
																			if (coO.discountShow) {
																				aDiscount.push(true);
																				aDiscount.push(coO.discountBeforeText);
																				aDiscount.push(coO.discountAfterText);
																			} else {
																				aDiscount.push(false);
																			}
																		}
																		coTS.tmpDiscount.push(aDiscount);
																	} else {
																		coTS.discountScore = stackDiscount;
																		coTS.discountScoreCal = stackDiscountCal;
																		if (coO.discountShow) this.$set(coTS, "discountShow", coO.discountShow), this.$set(coTS, "discountBeforeText", coO.discountBeforeText), this.$set(coTS, "discountAfterText", coO.discountAfterText);
																		this.$set(coTS, "discountIsOn", true);
																		this.$set(coTS, "discountedFrom", coO.id);
																		this.$set(coTS, "notStackableDiscount", true);
																	}
																	coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																}
															}
														}
													}
												}
											}
										}
									} else {
										if("undefined" !== typeof coO.discountGroups) {
											for (var a = 0; a < this.app.groups.length; a++) {
												if (coO.discountGroups.includes(this.app.groups[a].id)) {
													for (var b = 0; b < this.app.groups[a].elements.length; b++)
														if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
															var coT = this.app.comp[this.app.groups[a].elements[b].id],
																coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																coTO = coTR.objects[coT.objects];
															for (var c = 0; c < coTO.scores.length; c++) {
																var coTS = coTO.scores[c];
																if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
																	if (!coTS.isNotDiscountable) {
																		if (coO.stackableDiscount) {
																			var scoreVal = parseInt(coTS.value),
																				stackDiscount = 0,
																				stackDiscountCal = 0,
																				bTempStacked = !1,
																				tmpNum = 0,
																				discountedFrom = [],
																				aDiscount = [];
																			if (coTS.notStackableDiscount) {
																				for (var f = 0; f < coTS.tmpDiscount.length; f++) {
																					if (coTS.tmpDiscount[f][0]) {
																						discountedFrom = coTS.tmpDiscount[f][1];
																						discountedFrom.push(coO.id);
																						scoreVal = coTS.tmpDiscount[f][2];
																						bTempStacked = !0;
																						tmpNum = f;
																					}
																				}
																				if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																				else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																				else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																				else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																				stackDiscountCal = stackDiscount;
																				if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																				if (coO.discountShow) {
																					if (coO.discountAfterText != "") {
																						if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																						var dA = !1;
																						if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																						if (coO.discountTextDuplicated) {
																							if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																							if (dA) {
																								coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																							} else {
																								coTS.dupTextA[coO.discountAfterText] = 1;
																								coTS.discountTextA.push(coO.discountAfterText);
																							}
																						} else {
																							coTS.discountTextA.push(coO.discountAfterText);
																						}
																					}
																					if (coO.discountBeforeText != "") {
																						if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																						var dB = !1;
																						if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																						if (coO.discountTextDuplicated) {
																							if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																							if (dB) {
																								coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																							} else {
																								coTS.dupTextB[coO.discountBeforeText] = 1;
																								coTS.discountTextB.push(coO.discountBeforeText);
																							}
																						} else {
																							coTS.discountTextB.push(coO.discountBeforeText);
																						}
																					}
																				}
																				if (coTS.discountScore > stackDiscount) {
																					this.$set(coTS, "tmpDisScore", coTS.discountScore - stackDiscount);
																					this.$set(coTS, "isChangeDiscount", true);
																					aDiscount.push(false);
																					aDiscount.push(coTS.discountedFrom);
																					aDiscount.push(coTS.discountScoreCal);
																					aDiscount.push(coTS.discountScore);
																					if (coTS.discountShow) {
																						aDiscount.push(true);
																						aDiscount.push(coO.discountBeforeText);
																						aDiscount.push(coO.discountAfterText);
																					} else {
																						aDiscount.push(false);
																					}
																					coTS.discountScore = stackDiscount;
																					coTS.discountScoreCal = stackDiscountCal;
																					if ("undefined" !== typeof coTS.discountTextA) this.$set(coTS, "discountAfterText", coTS.discountTextA.join(""));
																					if ("undefined" !== typeof coTS.discountTextB) this.$set(coTS, "discountBeforeText", coTS.discountTextB.join(""));
																					if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																					coTS.discountedFrom.push(...discountedFrom);
																					if (bTempStacked) coTS.tmpDiscount.splice(tmpNum, 1);
																					coTS.tmpDiscount.push(aDiscount);
																					this.$set(coTS, "notStackableDiscount", false);
																				} else {
																					discountedFrom.push(coO.id);
																					if (bTempStacked) {
																						coTS.tmpDiscount[tmpNum][1] = discountedFrom;
																						coTS.tmpDiscount[tmpNum][2] = stackDiscountCal;
																						coTS.tmpDiscount[tmpNum][3] = stackDiscount;
																					} else {
																						if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																						"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																						aDiscount.push(discountedFrom);
																						aDiscount.push(stackDiscountCal);
																						aDiscount.push(stackDiscount);
																						coTS.tmpDiscount.push(aDiscount);
																					}
																				}
																			} else {
																				scoreVal = coTS.discountIsOn ? coTS.discountScoreCal : parseInt(coTS.value);
																				var tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value);
																				if (1 == coO.discountOperator) coTS.discountScore = scoreVal - parseInt(coO.discountValue);
																				else if (2 == coO.discountOperator) coTS.discountScore = scoreVal + parseInt(coO.discountValue);
																				else if (3 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal * coO.discountValue);
																				else if (4 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal / coO.discountValue);
																				this.$set(coTS, "discountScoreCal", coTS.discountScore);
																				if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) coTS.discountScore = Math.max(coTS.discountScore, parseInt(coO.discountLowLimit));
																				if (coO.discountShow) {
																					if (coO.discountAfterText != "") {
																						this.$set(coTS, "discountShow", coO.discountShow);
																						if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																						var dA = !1;
																						if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																						if (coO.discountTextDuplicated) {
																							if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																							if (dA) {
																								coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																							} else {
																								"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																								coTS.dupTextA[coO.discountAfterText] = 1;
																								coTS.discountTextA.push(coO.discountAfterText);
																							}
																						} else {
																							"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																							coTS.discountTextA.push(coO.discountAfterText);
																						}
																					}
																					if (coO.discountBeforeText != "") {
																						this.$set(coTS, "discountShow", coO.discountShow);
																						if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																						var dB = !1;
																						if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																						if (coO.discountTextDuplicated) {
																							if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																							if (dB) {
																								coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																							} else {
																								"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																								coTS.dupTextB[coO.discountBeforeText] = 1;
																								coTS.discountTextB.push(coO.discountBeforeText);
																							}
																						} else {
																							"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																							coTS.discountTextB.push(coO.discountBeforeText);
																						}
																					}
																				}
																				if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																				coTS.discountedFrom.push(coO.id);
																				coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																				if (!coTS.discountIsOn) this.$set(coTS, "discountIsOn", true);
																			}
																		} else {
																			var scoreVal = parseInt(coTS.value),
																				tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value),
																				stackDiscount = 0,
																				stackDiscountCal = 0,
																				aDiscount = [];
																			if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																			if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																			else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																			else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																			else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																			stackDiscountCal = stackDiscount;
																			if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																			if (coTS.discountIsOn) {
																				"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																				if (coTS.discountScore > stackDiscount) {
																					aDiscount.push(coTS.discountedFrom);
																					aDiscount.push(coTS.discountScoreCal);
																					aDiscount.push(coTS.discountScore);
																					if (coTS.discountShow) {
																						aDiscount.push(true);
																						aDiscount.push(coO.discountBeforeText);
																						aDiscount.push(coO.discountAfterText);
																					} else {
																						aDiscount.push(false);
																					}
																					this.$set(coTS, "discountScore", stackDiscount);
																					this.$set(coTS, "discountScoreCal", stackDiscountCal);
																					this.$set(coTS, "discountShow", coO.discountShow);
																					this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																					this.$set(coTS, "discountAfterText", coO.discountAfterText);
																					this.$set(coTS, "discountedFrom", coO.id);
																					this.$set(coTS, "notStackableDiscount", true);
																				} else {
																					aDiscount.push(coO.id);
																					aDiscount.push(stackDiscountCal);
																					aDiscount.push(stackDiscount);
																					if (coO.discountShow) {
																						aDiscount.push(true);
																						aDiscount.push(coO.discountBeforeText);
																						aDiscount.push(coO.discountAfterText);
																					} else {
																						aDiscount.push(false);
																					}
																				}
																				coTS.tmpDiscount.push(aDiscount);
																			} else {
																				coTS.discountScore = stackDiscount;
																				coTS.discountScoreCal = stackDiscountCal;
																				if (coO.discountShow) this.$set(coTS, "discountShow", coO.discountShow), this.$set(coTS, "discountBeforeText", coO.discountBeforeText), this.$set(coTS, "discountAfterText", coO.discountAfterText);
																				this.$set(coTS, "discountIsOn", true);
																				this.$set(coTS, "discountedFrom", coO.id);
																				this.$set(coTS, "notStackableDiscount", true);
																			}
																			coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																		}
																	}
																}
															}
														}
												}
											}
										}
									} 
								}
							}
							for (var h = 0; h < coO.scores.length; h++) {
								var coS = coO.scores[h];
								for (var j = 0; j < this.app.pointTypes.length; j++) {
									if (this.app.pointTypes[j].id == coS.id) {
										this.checkRequireds(coS) && !coS.isActive && (this.app.pointTypes[j].startingSum -= (coS.discountIsOn ? coS.discountScore : parseInt(coS.value)), coS.isActive = !0, tmpScores.push({id: coS.id, value: coS.discountIsOn ? coS.discountScore : parseInt(coS.value)}), this.$set(this.app.pointTypeMap, this.app.pointTypes[j].id, this.app.pointTypes[j].startingSum), coS.isChangeDiscount && this.$set(coS, "isChangeDiscount", false));
									}
								}
							}
							this.app.activated.push(eID), coO.isActive = !0, coR.currentChoices += 1;
							if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice) {
								if (coO.isActivateRandom && "undefined" !== typeof coO.isActivateRandom) {
									if (eRand == "") {
										var y = coO.activateThisChoice.split(","),
											RD = y.slice(),
											rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
											nAR = parseInt(coO.numActivateRandom) > rd.length ? rd.length : parseInt(coO.numActivateRandom);
										this.$set(coO, 'activatedRandom', []);
										var rdS = new Set();
										for (var v = 0; v < rd.length; v++) {
											if ("undefined" !== typeof this.app.comp[rd[v]]) {
												var coT = this.app.comp[rd[v]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!this.checkRequireds(coTO)) {
													var rdV = rd[v];
													rd.splice(v, 1), rd.push(rdV);
												}
											}
										}
										for (var v = rd.length - 1; v >= 0; v--) rdS.add(rd[v]);
										rd = [...rdS].reverse();
										coO.activatedRandom = rd.slice(0, nAR);
										for (var v = 0; v < nAR; v++) {
											var aRM = coO.activatedRandom[v].split("/ON#");
											if ("undefined" !== typeof this.app.comp[aRM[0]]) {
												var coT = this.app.comp[aRM[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!coTO.isAllowDeselect) {
													if (coTO.isMultipleUseVariable) {
														for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
															if (ee > 0) {
																coTO.numMultipleTimesMinus++;
															} else if (ee < 0) {
																coTO.numMultipleTimesMinus--;
															}
														}
													}
													coTO.forcedActivated = !0;
												}
											}
										}
									} else {
										var rd = eRand.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/RON#")[0]));
										this.$set(coO, "activatedRandom", rd);
										for (var v = 0; v < rd.length; v++) {
											var aRM = coO.activatedRandom[v].split("/RON#");
											if ("undefined" !== typeof this.app.comp[aRM[0]]) {
												var coT = this.app.comp[aRM[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!coTO.isAllowDeselect) {
													if (coTO.isMultipleUseVariable) {
														for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
															if (ee > 0) {
																coTO.numMultipleTimesMinus++;
															} else if (ee < 0) {
																coTO.numMultipleTimesMinus--;
															}
														}
													}
													coTO.forcedActivated = !0;
												}
											}
										}
									}
								} else {
									var y = coO.activateThisChoice.split(",");
									var RD = y.slice(),
										rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
										nrd = RD.filter(item => !this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0]));
									for (var v = 0; v < rd.length; v++) {
										var rdV = rd[v].split("/ON#");
										if ("undefined" !== typeof this.app.comp[rdV[0]]) {
											var coT = this.app.comp[rdV[0]],
												coTR = this.app.rows[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (!coTO.isAllowDeselect) {
												if (coTO.isMultipleUseVariable) {
													if (coO.isMultipleUseVariable) {
														for (var E = 0; E < Math.abs(coO.multipleUseVariable); E++) {
															for (var ee = rd[v].split("/ON#")[1], x = 0; x < Math.abs(ee); x++) {
																if (ee > 0) {
																	coTO.numMultipleTimesMinus++;
																} else if (ee < 0) {
																	coTO.numMultipleTimesMinus--;
																}
															}
														}
													} else {
														for (var ee = rdV[1], x = 0; x < Math.abs(ee); x++) {
															if (ee > 0) {
																coTO.numMultipleTimesMinus++;
															} else if (ee < 0) {
																coTO.numMultipleTimesMinus--;
															}
														}
													}
												}
												coTO.forcedActivated = !0;
											}
										}
									}
									for (var v = 0; v < nrd.length; v++) {
										var nrdV = nrd[v].split("/ON#");
										if ("undefined" !== typeof this.app.comp[nrdV[0]]) {
											var coT = this.app.comp[nrdV[0]],
												coTR = this.app.rows[coT.rows],
												coTO = coTR.objects[coT.objects];
											if (coTO.isSelectableMultiple) {
												if ("undefined" === typeof coO.cancelForcedActivated) this.$set(coO, "cancelForcedActivated", []);
												coO.cancelForcedActivated.push(coTO.id + "/ON#" + nrdV[1]);
											}
										}
									}
								}
							}
							if (coO.multiplyPointtypeIsOn) {
								coO.multiplyPointtypeIsOnCheck = !0;
								if ("object" !== typeof coO.startingSumAtMultiply) this.$set(coO, "startingSumAtMultiply", []);
								for (var l = 0; l < coO.pointTypeToMultiply.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++)
										if (this.app.pointTypes[m].id == coO.pointTypeToMultiply[l]) {
											if (coO.multiplyPointtypeIsId)
												for (var x = 0; x < this.app.pointTypes.length; x++) {
													if (this.app.pointTypes[x].id == coO.multiplyWithThis) {
														coO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * this.app.pointTypes[x].startingSum;
														this.app.pointTypes[m].startingSum *= this.app.pointTypes[x].startingSum;
													}
												}
											else coO.startingSumAtMultiply[l] = this.app.pointTypes[m].startingSum * coO.multiplyWithThis, this.app.pointTypes[m].startingSum *= coO.multiplyWithThis; this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
										}
								}
								this.app.mdObjects.push(coO);
							}
							if (coO.dividePointtypeIsOn) {
								coO.dividePointtypeIsOnCheck = !0;
								for (var l = 0; l < coO.pointTypeToDivide.length; l++) {
									for (var m = 0; m < this.app.pointTypes.length; m++) {
										if (this.app.pointTypes[m].id == coO.pointTypeToDivide[l]) {
											coO.startingSumAtDivide[l] = this.app.pointTypes[m].startingSum / coO.divideWithThis;
											this.app.pointTypes[m].startingSum /= coO.divideWithThis;
											this.$set(this.app.pointTypeMap, this.app.pointTypes[m].id, this.app.pointTypes[m].startingSum);
										}
									}
								}
								this.app.mdObjects.push(coO);
							}
							if (coO.addToAllowChoice)
								for (var m = 0; m < this.app.rows.length; m++)
									if (coO.idOfAllowChoice == this.app.rows[m].id) {
										this.app.rows[m].allowedChoices += coO.numbAddToAllowChoice, isNaN(this.app.rows[m].allowedChoicesChange) && (this.app.rows[m].allowedChoicesChange = 0), this.app.rows[m].allowedChoicesChange += coO.numbAddToAllowChoice;
									}
							this.updateScores(coO, coR, tmpScores, 0);
							if (coO.changeBackground) {
								if (coO.changeBgImage) {
									var a = this.app.styling.backgroundImage;
									this.$set(this.app.styling, "backgroundImage", coO.bgImage);
									this.$set(coO, "bgImage", a);
								} else {
									var a = this.app.styling.backgroundColor;
									this.$set(this.app.styling, "backgroundColor", coO.changedBgColorCode);
									this.$set(coO, "changedBgColorCode", a);
								}
							}
							if (coO.changePointBar) {
								if (coO.changeBarBgColorIsOn) {
									var a = this.app.styling.barBackgroundColor;
									this.$set(this.app.styling, "barBackgroundColor", coO.changedBarBgColor);
									this.$set(coO, "changedBarBgColor", a);
								}
								if (coO.changeBarTextColorIsOn) {
									var a = this.app.styling.barTextColor;
									this.$set(this.app.styling, "barTextColor", coO.changedBarTextColor);
									this.$set(coO, "changedBarTextColor", a);
								}
								if (coO.changeBarBgColorIsOn) {
									var a = this.app.styling.barIconColor;
									this.$set(this.app.styling, "barIconColor", coO.changedBarIconColor);
									this.$set(coO, "changedBarIconColor", a);
								}
							}
							if (coO.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
								if (coO.bgmId) {
									if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
									this.app.bgmIsPlaying = !0;
									this.playBgm(coO, coO.bgmId, 0);
								}
							}
							if (coO.muteBgm && "undefined" !== typeof bgmPlayer) {
								if ("undefined" !== typeof bgmPlayer.mute) {
									this.$set(this.app, "isMute", !0);
									bgmPlayer.mute();
								}
							}
							if (coO.isImageUpload) {
								coO.defaultImage = "undefined" === typeof coO.image ? "" : coO.image;
								coO.image = eImage.replaceAll("/CHAR#", ",");
							}
							if (coO.textfieldIsOn)
								for (var m = 0; m < this.app.words.length; m++) this.app.words[m].id == coO.idOfTheTextfieldWord && (coO.customTextfieldIsOn ? (this.app.words[m].replaceText = eWord, coO.wordChangeSelect = eWord) : this.app.words[m].replaceText = coO.wordChangeSelect), this.$set(this.app.wordMap, this.app.words[m].id, this.app.words[m].replaceText);
						}
					},
					selectedOneMoreI: function(e) {
						var eID = e.split("/RND#"),
							eRand = eID.length > 1 ? eID[1].split("/AND#") : "";
						eID = eID[0];
						if ("undefined" !== typeof this.app.comp[eID]) {
							var s = !0;
							var co = this.app.comp[eID],
								coR = this.app.rows[co.rows],
								coO = coR.objects[co.objects];
							coO.multipleUseVariable = "undefined" === typeof coO.multipleUseVariable ? 0 : coO.multipleUseVariable;
							coO.numMultipleTimesPluss > coO.multipleUseVariable ? (coO.multipleUseVariable++, this.$set(coO, "selectedThisManyTimesProp", coO.multipleUseVariable), this.$set(this.app.objectMap, coO.id, coO.multipleUseVariable)) : s = !1;
							if (s) {
								var tmpScores = [];
								if (coO.discountOther) {
									if ("undefined" !== typeof coO.discountOperator && "undefined" !== typeof coO.discountValue) {
										if (coO.isDisChoices) {
											if ("undefined" !== typeof coO.discountChoices) {
												for (var a = 0; a < coO.discountChoices.length; a++) {
													if ("undefined" !== typeof this.app.comp[coO.discountChoices[a]]) {
														var coT = this.app.comp[coO.discountChoices[a]],
															coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
															coTO = coTR.objects[coT.objects];
														for (var c = 0; c < coTO.scores.length; c++) {
															var coTS = coTO.scores[c];
															if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
																if (!coTS.isNotDiscountable) {
																	if (coO.stackableDiscount) {
																		var scoreVal = parseInt(coTS.value),
																			stackDiscount = 0,
																			stackDiscountCal = 0,
																			bTempStacked = !1,
																			tmpNum = 0,
																			discountedFrom = [],
																			aDiscount = [];
																		if (coTS.notStackableDiscount) {
																			for (var f = 0; f < coTS.tmpDiscount.length; f++) {
																				if (coTS.tmpDiscount[f][0]) {
																					discountedFrom = coTS.tmpDiscount[f][1];
																					discountedFrom.push(coO.id);
																					scoreVal = coTS.tmpDiscount[f][2];
																					bTempStacked = !0;
																					tmpNum = f;
																				}
																			}
																			if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																			else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																			else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																			else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																			stackDiscountCal = stackDiscount;
																			if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																			if (coO.discountShow) {
																				if (coO.discountAfterText != "") {
																					if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																					var dA = !1;
																					if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																					if (coO.discountTextDuplicated) {
																						if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																						if (dA) {
																							coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																						} else {
																							coTS.dupTextA[coO.discountAfterText] = 1;
																							coTS.discountTextA.push(coO.discountAfterText);
																						}
																					} else {
																						coTS.discountTextA.push(coO.discountAfterText);
																					}
																				}
																				if (coO.discountBeforeText != "") {
																					if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																					var dB = !1;
																					if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																					if (coO.discountTextDuplicated) {
																						if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																						if (dB) {
																							coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																						} else {
																							coTS.dupTextB[coO.discountBeforeText] = 1;
																							coTS.discountTextB.push(coO.discountBeforeText);
																						}
																					} else {
																						coTS.discountTextB.push(coO.discountBeforeText);
																					}
																				}
																			}
																			if (coTS.discountScore > stackDiscount) {
																				this.$set(coTS, "tmpDisScore", coTS.discountScore - stackDiscount);
																				this.$set(coTS, "isChangeDiscount", true);
																				aDiscount.push(false);
																				aDiscount.push(coTS.discountedFrom);
																				aDiscount.push(coTS.discountScoreCal);
																				aDiscount.push(coTS.discountScore);
																				if (coTS.discountShow) {
																					aDiscount.push(true);
																					aDiscount.push(coO.discountBeforeText);
																					aDiscount.push(coO.discountAfterText);
																				} else {
																					aDiscount.push(false);
																				}
																				coTS.discountScore = stackDiscount;
																				coTS.discountScoreCal = stackDiscountCal;
																				if ("undefined" !== typeof coTS.discountTextA) this.$set(coTS, "discountAfterText", coTS.discountTextA.join(""));
																				if ("undefined" !== typeof coTS.discountTextB) this.$set(coTS, "discountBeforeText", coTS.discountTextB.join(""));
																				if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																				coTS.discountedFrom.push(...discountedFrom);
																				if (bTempStacked) coTS.tmpDiscount.splice(tmpNum, 1);
																				coTS.tmpDiscount.push(aDiscount);
																				this.$set(coTS, "notStackableDiscount", false);
																			} else {
																				discountedFrom.push(coO.id);
																				if (bTempStacked) {
																					coTS.tmpDiscount[tmpNum][1] = discountedFrom;
																					coTS.tmpDiscount[tmpNum][2] = stackDiscountCal;
																					coTS.tmpDiscount[tmpNum][3] = stackDiscount;
																				} else {
																					if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																					"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																					aDiscount.push(discountedFrom);
																					aDiscount.push(stackDiscountCal);
																					aDiscount.push(stackDiscount);
																					coTS.tmpDiscount.push(aDiscount);
																				}
																			}
																		} else {
																			scoreVal = coTS.discountIsOn ? coTS.discountScoreCal : parseInt(coTS.value);
																			var tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value);
																			if (1 == coO.discountOperator) coTS.discountScore = scoreVal - parseInt(coO.discountValue);
																			else if (2 == coO.discountOperator) coTS.discountScore = scoreVal + parseInt(coO.discountValue);
																			else if (3 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal * coO.discountValue);
																			else if (4 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal / coO.discountValue);
																			this.$set(coTS, "discountScoreCal", coTS.discountScore);
																			if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) coTS.discountScore = Math.max(coTS.discountScore, parseInt(coO.discountLowLimit));
																			if (coO.discountShow) {
																				if (coO.discountAfterText != "") {
																					this.$set(coTS, "discountShow", coO.discountShow);
																					if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																					var dA = !1;
																					if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																					if (coO.discountTextDuplicated) {
																						if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																						if (dA) {
																							coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																						} else {
																							"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																							coTS.dupTextA[coO.discountAfterText] = 1;
																							coTS.discountTextA.push(coO.discountAfterText);
																						}
																					} else {
																						"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																						coTS.discountTextA.push(coO.discountAfterText);
																					}
																				}
																				if (coO.discountBeforeText != "") {
																					this.$set(coTS, "discountShow", coO.discountShow);
																					if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																					var dB = !1;
																					if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																					if (coO.discountTextDuplicated) {
																						if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																						if (dB) {
																							coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																						} else {
																							"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																							coTS.dupTextB[coO.discountBeforeText] = 1;
																							coTS.discountTextB.push(coO.discountBeforeText);
																						}
																					} else {
																						"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																						coTS.discountTextB.push(coO.discountBeforeText);
																					}
																				}
																			}
																			if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																			coTS.discountedFrom.push(coO.id);
																			coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																			if (!coTS.discountIsOn) this.$set(coTS, "discountIsOn", true);
																		}
																	} else {
																		var scoreVal = parseInt(coTS.value),
																			tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value),
																			stackDiscount = 0,
																			stackDiscountCal = 0,
																			aDiscount = [];
																		if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																		if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																		else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																		else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																		else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																		stackDiscountCal = stackDiscount;
																		if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																		if (coTS.discountIsOn) {
																			"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																			if (coTS.discountScore > stackDiscount) {
																				aDiscount.push(coTS.discountedFrom);
																				aDiscount.push(coTS.discountScoreCal);
																				aDiscount.push(coTS.discountScore);
																				if (coTS.discountShow) {
																					aDiscount.push(true);
																					aDiscount.push(coO.discountBeforeText);
																					aDiscount.push(coO.discountAfterText);
																				} else {
																					aDiscount.push(false);
																				}
																				this.$set(coTS, "discountScore", stackDiscount);
																				this.$set(coTS, "discountScoreCal", stackDiscountCal);
																				this.$set(coTS, "discountShow", coO.discountShow);
																				this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																				this.$set(coTS, "discountAfterText", coO.discountAfterText);
																				this.$set(coTS, "discountedFrom", coO.id);
																				this.$set(coTS, "notStackableDiscount", true);
																			} else {
																				aDiscount.push(coO.id);
																				aDiscount.push(stackDiscountCal);
																				aDiscount.push(stackDiscount);
																				if (coO.discountShow) {
																					aDiscount.push(true);
																					aDiscount.push(coO.discountBeforeText);
																					aDiscount.push(coO.discountAfterText);
																				} else {
																					aDiscount.push(false);
																				}
																			}
																			coTS.tmpDiscount.push(aDiscount);
																		} else {
																			coTS.discountScore = stackDiscount;
																			coTS.discountScoreCal = stackDiscountCal;
																			if (coO.discountShow) this.$set(coTS, "discountShow", coO.discountShow), this.$set(coTS, "discountBeforeText", coO.discountBeforeText), this.$set(coTS, "discountAfterText", coO.discountAfterText);
																			this.$set(coTS, "discountIsOn", true);
																			this.$set(coTS, "discountedFrom", coO.id);
																			this.$set(coTS, "notStackableDiscount", true);
																		}
																		coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																	}
																}
															}
														}
													}
												}
											}
										} else {
											if("undefined" !== typeof coO.discountGroups) {
												for (var a = 0; a < this.app.groups.length; a++) {
													if (coO.discountGroups.includes(this.app.groups[a].id)) {
														for (var b = 0; b < this.app.groups[a].elements.length; b++)
															if ("undefined" !== typeof this.app.comp[this.app.groups[a].elements[b].id]) {
																var coT = this.app.comp[this.app.groups[a].elements[b].id],
																	coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows],
																	coTO = coTR.objects[coT.objects];
																for (var c = 0; c < coTO.scores.length; c++) {
																	var coTS = coTO.scores[c];
																	if (coO.discountPointTypes.length === 0 || coO.discountPointTypes.includes(coTS.id)) {
																		if (!coTS.isNotDiscountable) {
																			if (coO.stackableDiscount) {
																				var scoreVal = parseInt(coTS.value),
																					stackDiscount = 0,
																					stackDiscountCal = 0,
																					bTempStacked = !1,
																					tmpNum = 0,
																					discountedFrom = [],
																					aDiscount = [];
																				if (coTS.notStackableDiscount) {
																					for (var f = 0; f < coTS.tmpDiscount.length; f++) {
																						if (coTS.tmpDiscount[f][0]) {
																							discountedFrom = coTS.tmpDiscount[f][1];
																							discountedFrom.push(coO.id);
																							scoreVal = coTS.tmpDiscount[f][2];
																							bTempStacked = !0;
																							tmpNum = f;
																						}
																					}
																					if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																					else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																					else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																					else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																					stackDiscountCal = stackDiscount;
																					if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																					if (coO.discountShow) {
																						if (coO.discountAfterText != "") {
																							if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																							var dA = !1;
																							if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																							if (coO.discountTextDuplicated) {
																								if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																								if (dA) {
																									coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																								} else {
																									coTS.dupTextA[coO.discountAfterText] = 1;
																									coTS.discountTextA.push(coO.discountAfterText);
																								}
																							} else {
																								coTS.discountTextA.push(coO.discountAfterText);
																							}
																						}
																						if (coO.discountBeforeText != "") {
																							if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																							var dB = !1;
																							if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																							if (coO.discountTextDuplicated) {
																								if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																								if (dB) {
																									coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																								} else {
																									coTS.dupTextB[coO.discountBeforeText] = 1;
																									coTS.discountTextB.push(coO.discountBeforeText);
																								}
																							} else {
																								coTS.discountTextB.push(coO.discountBeforeText);
																							}
																						}
																					}
																					if (coTS.discountScore > stackDiscount) {
																						this.$set(coTS, "tmpDisScore", coTS.discountScore - stackDiscount);
																						this.$set(coTS, "isChangeDiscount", true);
																						aDiscount.push(false);
																						aDiscount.push(coTS.discountedFrom);
																						aDiscount.push(coTS.discountScoreCal);
																						aDiscount.push(coTS.discountScore);
																						if (coTS.discountShow) {
																							aDiscount.push(true);
																							aDiscount.push(coO.discountBeforeText);
																							aDiscount.push(coO.discountAfterText);
																						} else {
																							aDiscount.push(false);
																						}
																						coTS.discountScore = stackDiscount;
																						coTS.discountScoreCal = stackDiscountCal;
																						if ("undefined" !== typeof coTS.discountTextA) this.$set(coTS, "discountAfterText", coTS.discountTextA.join(""));
																						if ("undefined" !== typeof coTS.discountTextB) this.$set(coTS, "discountBeforeText", coTS.discountTextB.join(""));
																						if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																						coTS.discountedFrom.push(...discountedFrom);
																						if (bTempStacked) coTS.tmpDiscount.splice(tmpNum, 1);
																						coTS.tmpDiscount.push(aDiscount);
																						this.$set(coTS, "notStackableDiscount", false);
																					} else {
																						discountedFrom.push(coO.id);
																						if (bTempStacked) {
																							coTS.tmpDiscount[tmpNum][1] = discountedFrom;
																							coTS.tmpDiscount[tmpNum][2] = stackDiscountCal;
																							coTS.tmpDiscount[tmpNum][3] = stackDiscount;
																						} else {
																							if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																							"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																							aDiscount.push(discountedFrom);
																							aDiscount.push(stackDiscountCal);
																							aDiscount.push(stackDiscount);
																							coTS.tmpDiscount.push(aDiscount);
																						}
																					}
																				} else {
																					scoreVal = coTS.discountIsOn ? coTS.discountScoreCal : parseInt(coTS.value);
																					var tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value);
																					if (1 == coO.discountOperator) coTS.discountScore = scoreVal - parseInt(coO.discountValue);
																					else if (2 == coO.discountOperator) coTS.discountScore = scoreVal + parseInt(coO.discountValue);
																					else if (3 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal * coO.discountValue);
																					else if (4 == coO.discountOperator) coTS.discountScore = parseInt(scoreVal / coO.discountValue);
																					this.$set(coTS, "discountScoreCal", coTS.discountScore);
																					if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) coTS.discountScore = Math.max(coTS.discountScore, parseInt(coO.discountLowLimit));
																					if (coO.discountShow) {
																						if (coO.discountAfterText != "") {
																							this.$set(coTS, "discountShow", coO.discountShow);
																							if ("undefined" === typeof coTS.discountTextA) this.$set(coTS, "discountTextA", []);
																							var dA = !1;
																							if (coTS.discountTextA.includes(coO.discountAfterText)) dA = !0;
																							if (coO.discountTextDuplicated) {
																								if ("undefined" === typeof coTS.dupTextA) this.$set(coTS, "dupTextA", {});
																								if (dA) {
																									coTS.dupTextA[coO.discountAfterText] = coTS.dupTextA[coO.discountAfterText] + 1
																								} else {
																									"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																									coTS.dupTextA[coO.discountAfterText] = 1;
																									coTS.discountTextA.push(coO.discountAfterText);
																								}
																							} else {
																								"undefined" !== typeof coTS.discountAfterText ? this.$set(coTS, "discountAfterText", coTS.discountAfterText + coO.discountAfterText) : this.$set(coTS, "discountAfterText", coO.discountAfterText);
																								coTS.discountTextA.push(coO.discountAfterText);
																							}
																						}
																						if (coO.discountBeforeText != "") {
																							this.$set(coTS, "discountShow", coO.discountShow);
																							if ("undefined" === typeof coTS.discountTextB) this.$set(coTS, "discountTextB", []);
																							var dB = !1;
																							if (coTS.discountTextB.includes(coO.discountBeforeText)) dB = !0
																							if (coO.discountTextDuplicated) {
																								if ("undefined" === typeof coTS.dupTextB) this.$set(coTS, "dupTextB", {});
																								if (dB) {
																									coTS.dupTextB[coO.discountBeforeText] = coTS.dupTextB[coO.discountBeforeText] + 1
																								} else {
																									"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																									coTS.dupTextB[coO.discountBeforeText] = 1;
																									coTS.discountTextB.push(coO.discountBeforeText);
																								}
																							} else {
																								"undefined" !== typeof coTS.discountBeforeText ? this.$set(coTS, "discountBeforeText", coTS.discountBeforeText + coO.discountBeforeText) : this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																								coTS.discountTextB.push(coO.discountBeforeText);
																							}
																						}
																					}
																					if ("undefined" === typeof coTS.discountedFrom || "string" === typeof coTS.discountedFrom) this.$set(coTS, "discountedFrom", []);
																					coTS.discountedFrom.push(coO.id);
																					coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																					if (!coTS.discountIsOn) this.$set(coTS, "discountIsOn", true);
																				}
																			} else {
																				var scoreVal = parseInt(coTS.value),
																					tmpDisScore = coTS.discountIsOn ? coTS.discountScore : parseInt(coTS.value),
																					stackDiscount = 0,
																					stackDiscountCal = 0,
																					aDiscount = [];
																				if ("undefined" === typeof coTS.tmpDiscount) this.$set(coTS, "tmpDiscount", []);
																				if (1 == coO.discountOperator) stackDiscount = scoreVal - parseInt(coO.discountValue);
																				else if (2 == coO.discountOperator) stackDiscount = scoreVal + parseInt(coO.discountValue);
																				else if (3 == coO.discountOperator) stackDiscount = parseInt(scoreVal * coO.discountValue);
																				else if (4 == coO.discountOperator) stackDiscount = parseInt(scoreVal / coO.discountValue);
																				stackDiscountCal = stackDiscount;
																				if (coO.discountLowLimitIsOn && "undefined" !== typeof coO.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(coO.discountLowLimit));
																				if (coTS.discountIsOn) {
																					"undefined" === typeof coO.stackableDiscount ? aDiscount.push(false) : aDiscount.push(coO.stackableDiscount);
																					if (coTS.discountScore > stackDiscount) {
																						aDiscount.push(coTS.discountedFrom);
																						aDiscount.push(coTS.discountScoreCal);
																						aDiscount.push(coTS.discountScore);
																						if (coTS.discountShow) {
																							aDiscount.push(true);
																							aDiscount.push(coO.discountBeforeText);
																							aDiscount.push(coO.discountAfterText);
																						} else {
																							aDiscount.push(false);
																						}
																						this.$set(coTS, "discountScore", stackDiscount);
																						this.$set(coTS, "discountScoreCal", stackDiscountCal);
																						this.$set(coTS, "discountShow", coO.discountShow);
																						this.$set(coTS, "discountBeforeText", coO.discountBeforeText);
																						this.$set(coTS, "discountAfterText", coO.discountAfterText);
																						this.$set(coTS, "discountedFrom", coO.id);
																						this.$set(coTS, "notStackableDiscount", true);
																					} else {
																						aDiscount.push(coO.id);
																						aDiscount.push(stackDiscountCal);
																						aDiscount.push(stackDiscount);
																						if (coO.discountShow) {
																							aDiscount.push(true);
																							aDiscount.push(coO.discountBeforeText);
																							aDiscount.push(coO.discountAfterText);
																						} else {
																							aDiscount.push(false);
																						}
																					}
																					coTS.tmpDiscount.push(aDiscount);
																				} else {
																					coTS.discountScore = stackDiscount;
																					coTS.discountScoreCal = stackDiscountCal;
																					if (coO.discountShow) this.$set(coTS, "discountShow", coO.discountShow), this.$set(coTS, "discountBeforeText", coO.discountBeforeText), this.$set(coTS, "discountAfterText", coO.discountAfterText);
																					this.$set(coTS, "discountIsOn", true);
																					this.$set(coTS, "discountedFrom", coO.id);
																					this.$set(coTS, "notStackableDiscount", true);
																				}
																				coTS.discountScore != tmpDisScore ? (this.$set(coTS, "tmpDisScore", tmpDisScore - coTS.discountScore), this.$set(coTS, "isChangeDiscount", true)) : this.$set(coTS, "isChangeDiscount", false);
																			}
																		}
																	}
																}
															}
													}
												}
											}
										} 
									}
								}
								for (var h = 0; h < coO.scores.length; h++) {
									var coS = coO.scores[h],
										k = coO.multipleUseVariable;
									for (var j = 0; j < this.app.pointTypes.length; j++) {
										if (this.app.pointTypes[j].id == coS.id) {
											var tmpValue = coS.multiplyByTimes ? k : 1;
											if ("undefined" === typeof coS.isActiveMul) this.$set(coS, "isActiveMul", []);
											if (this.checkRequireds(coS) && !coS.isActiveMul[k - 1]) {
												this.app.pointTypes[j].startingSum -= (coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue);
												coS.isActiveMul[k - 1] = !0;
												tmpScores.push({id: coS.id, value: coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue});
												this.$set(this.app.pointTypeMap, this.app.pointTypes[j].id, this.app.pointTypes[j].startingSum);
												if (coS.isChangeDiscount) this.$set(coS, "isChangeDiscount", false);
											}
										}
									}
								}
								if (coO.isActive == !1) {
									coO.isActive = !0, coR.currentChoices += 1, this.app.activated.push(coO.id + "/ON#" + coO.multipleUseVariable);
									if (coO.backpackBtnRequirement) {
										if ("undefined" === typeof this.app.btnBackpackIsOn) this.$set(this.app, "btnBackpackIsOn", 0);
										this.$set(this.app, "btnBackpackIsOn", this.app.btnBackpackIsOn + 1);
									}
									if (coO.changeBackground) {
										if (coO.changeBgImage) {
											var a = this.app.styling.backgroundImage;
											this.$set(this.app.styling, "backgroundImage", coO.bgImage);
											this.$set(coO, "bgImage", a);
										} else {
											var a = this.app.styling.backgroundColor;
											this.$set(this.app.styling, "backgroundColor", coO.changedBgColorCode);
											this.$set(coO, "changedBgColorCode", a);
										}
									}
									if (coO.setBgmIsOn && "undefined" !== typeof bgmPlayer) {
										if (coO.bgmId) {
											if ("undefined" === typeof this.app.bgmIsPlaying) this.$set(this.app, "bgmIsPlaying", !1);
											this.app.bgmIsPlaying = !0;
											this.playBgm(coO, coO.bgmId, 0);
										}
									}
								} else {
									this.$set(this.app.activated, this.app.activated.indexOf(coO.id + "/ON#" + (coO.multipleUseVariable - 1)), (coO.id + "/ON#" + coO.multipleUseVariable));
								}
								if (coO.activateOtherChoice && "undefined" !== typeof coO.activateThisChoice) {
									if (coO.isActivateRandom && "undefined" !== typeof coO.isActivateRandom) {
										if (eRand == "") {
											if (coO.multipleUseVariable == 1) {
												var y = coO.activateThisChoice.split(",");
												var RD = y.slice(),
													rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0]));
												var rdS = new Set();
												for (var v = 0; v < rd.length; v++) {
													if ("undefined" !== typeof this.app.comp[rd[v]]) {
														var coT = this.app.comp[rd[v]],
															coTR = this.app.rows[coT.rows],
															coTO = coTR.objects[coT.objects];
														if (!this.checkRequireds(coTO)) {
															var rdV = rd[v];
															rd.splice(v, 1), rd.push(rdV);
														}
													}
												}
												for (var v = rd.length - 1; v >= 0; v--) rdS.add(rd[v]);
												rd = [...rdS].reverse();
												if ("undefined" === typeof coO.activatedRandomMul) this.$set(coO, "activatedRandomMul", []);
												var preNAR = 0,
													nAR = [];
												for (var v = 0; v < parseInt(coO.numActivateRandom); v++) {
													nAR[v] = rd.length / (parseInt(coO.numActivateRandom) * (v + 1)) < 1 ? rd.length % (parseInt(coO.numActivateRandom) * (v + 1)) : parseInt(coO.numActivateRandom);
													coO.activatedRandomMul.push(rd.slice(preNAR, nAR[v] + preNAR));
													for (var f = 0; f < nAR[v] - preNAR; f++) {
														var aRM = coO.activatedRandomMul[v][f].split("/ON#");
														if ("undefined" !== typeof this.app.comp[aRM[0]]) {
															var coT = this.app.comp[aRM[0]],
																coTR = this.app.rows[coT.rows],
																coTO = coTR.objects[coT.objects];
															if (!coTO.isAllowDeselect) {
																if (coTO.isMultipleUseVariable) {
																	for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
																		if (ee > 0) {
																			coTO.numMultipleTimesMinus++;
																		} else if (ee < 0) {
																			coTO.numMultipleTimesMinus--;
																		}
																	}
																}
																coTO.forcedActivated = !0;
															}
														}
													}
													preNAR += nAR[v];
												}
											}
										} else {
											if ("undefined" === typeof coO.activatedRandomMul) this.$set(coO, "activatedRandomMul", []);
											var nR = (coO.multipleUseVariable - 1) * coO.numActivateRandom,
												rd = eRand.splice(nR, nR + coO.numActivateRandom);
											coO.activatedRandomMul.push(rd);
											for (var v = 0; v < coO.activatedRandomMul[coO.multipleUseVariable - 1].length; v++) {
												var aRM = coO.activatedRandomMul[coO.multipleUseVariable - 1][v].split("/RON#");
												if ("undefined" !== typeof this.app.comp[aRM[0]]) {
													var coT = this.app.comp[aRM[0]],
														coTR = this.app.rows[coT.rows],
														coTO = coTR.objects[coT.objects];
													if (!coTO.isAllowDeselect && this.newActivatedList.some(item => item.split("/ON#")[0] == coTO.id)) {
														if (coTO.isMultipleUseVariable) {
															for (var ee = aRM[1], x = 0; x < Math.abs(ee); x++) {
																if (ee > 0) {
																	coTO.numMultipleTimesMinus++;
																} else if (ee < 0) {
																	coTO.numMultipleTimesMinus--;
																}
															}
														}
														coTO.forcedActivated = !0;
													}
												}
											}
										}
									} else {
										var y = coO.activateThisChoice.split(",");
										var RD = y.slice(),
											rd = RD.filter(item => this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0])),
											nrd = RD.filter(item => !this.newActivatedList.some(activatedItem => activatedItem.split("/ON#")[0] == item.split("/ON#")[0]));
										for (var v = 0; v < rd.length; v++) {
											var rdV = rd[v].split("/ON#");
											if ("undefined" !== typeof this.app.comp[rdV[0]]) {
												var coT = this.app.comp[rdV[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (!coTO.isAllowDeselect) {
													if (coTO.isMultipleUseVariable) {
														if (coO.isMultipleUseVariable) {
															for (var E = 0; E < Math.abs(coO.multipleUseVariable); E++) {
																for (var ee = rd[v].split("/ON#")[1], x = 0; x < Math.abs(ee); x++) {
																	if (ee > 0) {
																		coTO.numMultipleTimesMinus++;
																	} else if (ee < 0) {
																		coTO.numMultipleTimesMinus--;
																	}
																}
															}
														} else {
															for (var ee = rdV[1], x = 0; x < Math.abs(ee); x++) {
																if (ee > 0) {
																	coTO.numMultipleTimesMinus++;
																} else if (ee < 0) {
																	coTO.numMultipleTimesMinus--;
																}
															}
														}
													}
													coTO.forcedActivated = !0;
												}
											}
										}
										for (var v = 0; v < nrd.length; v++) {
											var nrdV = nrd[v].split("/ON#");
											if ("undefined" !== typeof this.app.comp[nrdV[0]]) {
												var coT = this.app.comp[nrdV[0]],
													coTR = this.app.rows[coT.rows],
													coTO = coTR.objects[coT.objects];
												if (coTO.isSelectableMultiple) {
													if ("undefined" === typeof coO.cancelForcedActivated) this.$set(coO, "cancelForcedActivated", []);
													coO.cancelForcedActivated.push(coTO.id + "/ON#" + nrdV[1]);
												}
											}
										}
									}
								}
								this.updateScoresMulS(coO, coR, tmpScores, 0);
								if (coO.addToAllowChoice) {
									if ("undefined" !== typeof this.app.compR[coO.idOfAllowChoice]) {
										var coT = this.app.compR[coO.idOfAllowChoice],
											coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows];
										coTR.allowedChoices += coO.numbAddToAllowChoice, isNaN(coTR.allowedChoicesChange) && (coTR.allowedChoicesChange = 0), coTR.allowedChoicesChange += coO.numbAddToAllowChoice;
									}
								}
							}
						}
					},
					selectedOneLessI: function(e) {
						if ("undefined" !== typeof this.app.comp[e]) {
							var co = this.app.comp[e],
								coR = this.app.rows[co.rows],
								coO = coR.objects[co.objects];
							coO.multipleUseVariable = "undefined" === typeof coO.multipleUseVariable ? 0 : coO.multipleUseVariable;
							coO.numMultipleTimesMinus < coO.multipleUseVariable ? (coO.multipleUseVariable--, this.$set(coO, "selectedThisManyTimesProp", coO.multipleUseVariable), this.$set(this.app.objectMap, coO.id, coO.multipleUseVariable)) : s = !1;
							if (s) {
								var tmpScores = [];
								for (var h = 0; h < coO.scores.length; h++) {
									var coS = coO.scores[h],
										k = Math.abs(coO.multipleUseVariable);
									for (var j = 0; j < this.app.pointTypes.length; j++) {
										if (this.app.pointTypes[j].id == coS.id) {
											var tmpValue = coS.multiplyByTimes ? k : 1;
											if ("undefined" === typeof coS.isActiveMulMinus) this.$set(coS, "isActiveMulMinus", []);
											if (this.checkRequireds(coS) && !coS.isActiveMulMinus[k]) {
												this.app.pointTypes[j].startingSum += (coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue);
												coS.isActiveMulMinus[k] = !0;
												tmpScores.push({id: coS.id, value: coS.discountIsOn ? coS.discountScore * tmpValue : parseInt(coS.value) * tmpValue});
												this.$set(this.app.pointTypeMap, this.app.pointTypes[j].id, this.app.pointTypes[j].startingSum);
												if (coS.isChangeDiscount) this.$set(coS, "isChangeDiscount", false);
											}
										}
									}
								}
								if (coO.isActive == !1) {
									coO.isActive = !0, coR.currentChoices += 1, this.app.activated.push(coO.id + "/ON#" + coO.multipleUseVariable);
								} else {
									this.$set(this.app.activated, this.app.activated.indexOf(coO.id + "/ON#" + (coO.multipleUseVariable + 1)), (coO.id + "/ON#" + coO.multipleUseVariable));
								}
								this.updateScoresMulC(coO, coR, tmpScores, 0);
								if (coO.addToAllowChoice) {
									if ("undefined" !== typeof this.app.compR[coO.idOfAllowChoice]) {
										var coT = this.app.compR[coO.idOfAllowChoice],
											coTR = coT.type == "app" ? this.app.rows[coT.rows] : this.app.backpack[coT.rows];
										coTR.allowedChoices -= coO.numbAddToAllowChoice, isNaN(coTR.allowedChoicesChange) && (coTR.allowedChoicesChange = 0), coTR.allowedChoicesChange += coO.numbAddToAllowChoice;
									}
								}
							}
						}
					},
                    loadActivated: function() {
                        this.$store.commit({
                            type: "cleanActivated"
                        });
						if (this.newActivated.length > 0) {
							var e = this.newActivated.split(",");
							this.newActivatedList = e.map(item => item.split("/IMG#")[0]);
							this.newActivatedList = this.newActivatedList.map(item => item.split("/WORD#")[0]);
							this.newActivatedList = this.newActivatedList.map(item => item.split("/RND#")[0]);
							for (var a = 0; a < e.length; a++) {
								var ea = e[a].split("/ON#");
								if (!this.app.activated.some(item => item.split("/ON#")[0] == ea[0])) {
									if (ea.length > 1) {
										var eaR = ea[1].split("/RND#");
										ea[0] = eaR.length > 1 ? ea[0] + "/RND#" + eaR[1] : ea[0];
										for (var b = 0; b < Math.abs(parseInt(eaR[0])); b++) {
											eaR[0] > 0 ? this.selectedOneMoreI(ea[0]) : this.selectedOneLessI(ea[0]);
										}
									} else {
										this.activateObjectI(ea[0]);
									}
								}
							}
							this.newActivatedList.splice(0);
							this.newActivated = "";
						}
                    },
                    checkRequireds: function(e) {
                        return this.$store.getters.checkRequireds(e)
                    }
                }
            },
            sa = ia,
            ra = (o("c64f"), Object(w["a"])(sa, ta, oa, !1, null, null, null)),
            aa = ra.exports;
        x()(ra, {
            VBottomNavigation: Ur["a"],
            VBtn: C["a"],
            VCol: I["a"],
			VDivider: li["a"],
            VIcon: J["a"],
			VLayout: Yr["a"],
            VList: Jr["a"],
            VListItem: Xi["a"],
            VListItemContent: Ut["a"],
            VListItemIcon: Xr["a"],
            VListItemTitle: Ut["c"],
            VNavigationDrawer: Zr["a"],
            VRow: S["a"],
			VSlider: Sd["a"],
			VSnackbar: Ct["a"],
			VSpacer: O["a"],
			VTextField: R["a"],
			VToolbar: Tt["a"],
			VTooltip: Q["a"]
        });
        var na = function() {
                var e = this,
                    t = e.$createElement,
                    o = e._self._c || t;
                return o("div", [o("nav", {
                    staticClass: "navbar navbar-light bg-dark"
                }, [o("v-row", {
                    attrs: {
                        align: "center"
                    }
                }, [o("v-col", e._g({
                    staticClass: "text-center",
                    attrs: {
                        cols: "1",
                        icon: ""
                    }
                }, e.on), [o("v-btn", {
                    staticStyle: {
                        color: e.$vuetify.theme.isDark ? "white" : "black"
                    },
                    attrs: {
                        small: ""
                    },
                    on: {
                        click: function(t) {
                            return e.cleanCurrentComponent()
                        }
                    }
                }, [o("v-icon", [e._v("mdi-chevron-left")])], 1)], 1)], 1)], 1), o("v-row", [o("v-col", {
                    staticClass: "px-7",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("CHANGELOG")]), o("v-expansion-panel-content", [o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("25.01.2025")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 25.01.2025")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to use group IDs to the 'Forces Active' function. "), o("br"), o("br"), e._v(" Added a feature to scroll to the corresponding item in the Open Row List. "), o("br"), o("br"), e._v(" Added a feature to set the Choice ID instead of Row ID in the scroll function. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the feature to save a project with separate images was not working properly. "), o("br"), o("br"), e._v(" Fixed an issue where Styling data was being inserted into each row even when Private Styling wasn't used. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("18.01.2025")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 18.01.2025")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to prevent the generation of duplicate IDs when creating Row or Choice. "), o("br"), o("br"), e._v(" Added a feature to apply justify to the addons. "), o("br"), o("br"), e._v(" Added a feature to set tooltip in External URL Image. "), o("br"), o("br"), e._v(" Added an option in Global Settings to import custom fonts from Google Fonts. "), o("br"), o("br"), e._v(" Added an option in Global Settings to change the cursor type when hovering over choices. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where lazy load was not applied to the addon image. "), o("br"), o("br"), e._v(" Fixed an issue where the multi-choice with the 'Select Impossible' function enabled could still be selected. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("03.01.2025")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 03.01.2025")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added an option in Global Settings to enable Music Player. "), o("br"), o("br"), e._v(" Added a feature to enable Music Player in Viewer. "), o("br"), o("br"), e._v(" Added a feature to search items in the dropdown menu. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the default value of the Multi Choice Design was not being set automatically. "), o("br"), o("br"), e._v(" Fixed an issue where Multi Choice Design could not be set in the Private Styling/Design Group. "), o("br"), o("br"), e._v(" Fixed an issue where Addon Design/Addon Image Design could not be set in the Design Group. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("28.12.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 28.12.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to set Addon Design/Addon Image Design. "), o("br"), o("br"), e._v(" Added a feature to allow uploading .avif format images. "), o("br"), o("br"), e._v(" Added a feature to allow setting the Global Requirement for the 'Id Needed To Show' of Points. "), o("br"), o("br"), e._v(" Added a feature to allow setting the Global Requirement for the 'Id Needed To Show' of Design Groups. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the display of discounted scores was not refreshing. "), o("br"), o("br"), e._v(" Fixed an issue where the choice with the discount function could not be deselected. "), o("br"), o("br"), e._v(" Fixed an issue where discounted scores were displayed incorrectly. "), o("br"), o("br"), e._v(" Fixed an issue where the border-radius was not applied to the Addon Image. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("08.12.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 08.12.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to set 'Image Center' option in Row/Choice/Addon Templates. "), o("br"), o("br"), e._v(" Added a feature to set a Debug Title for each Choice. "), o("br"), o("br"), e._v(" Added a feature to allow selecting choices directly instead of using groups for the discount function. "), o("br"), o("br"), e._v(" Added a feature to allow stacking the discount function multiple times. "), o("br"), o("br"), e._v(" Added an option in Global Settings to preload external images in Viewer. "), o("br"), o("br"), e._v(" Added a feature to set fade-in and fade-out in the BGM function. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where some UIs in editor mode were not rendering correctly. "), o("br"), o("br"), e._v(" Fixed an issue where the Debug Title was not displaying in the Row List and ID/Title List. "), o("br"), o("br"), e._v(" Fixed an issue where discounted scores were displayed incorrectly. "), o("br"), o("br"), e._v(" Fixed an issue where the 'Fit-in' option of the background did not work in the Viewer. "), o("br"), o("br"), e._v(" Fixed an issue where the buttons did not work when clicking outside the icon area. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("15.11.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 15.11.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to remove the space between addons in choice design. "), o("br"), o("br"), e._v(" Added a feature to remove an image in the external image URL tab of the Change Image window. "), o("br"), o("br"), e._v(" Updated the UI design for downloading the build as an image. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the page froze when dragging to reorder objects in the Objects list. "), o("br"), o("br"),e._v(" Fixed an issue where the requirements could not delete in Manage Global Requirements. "), o("br"), o("br"),e._v(" Fixed an issue where empty space appeared at the top and right of the downloaded build image. "), o("br"), o("br"),e._v(" Fixed an issue where the UI in editor mode was not rendering correctly on small screens. "), o("br"), o("br"),e._v(" Fixed an issue where white space appeared on the right side of the screen in mobile environments. "), o("br"), o("br"),e._v(" Fixed an issue where other Viewer features were unavailable when Import Choices was disabled. "), o("br"), o("br"),e._v(" Fixed an issue where the loading screen background color was overlaying the CYOA background color. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("05.11.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 05.11.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to set the Image template in the Addon. "), o("br"), o("br"), e._v(" Added a feature to change the file extension before downloading the build as an image. "), o("br"), o("br"), e._v(" Added a feature to allow the build code generated by Import Choice to save random selections. "), o("br"), o("br"), e._v(" Added a feature to set the value of the variables by selecting a choice. "), o("br"), o("br"), e._v(" Added a feature to scroll the Point Bar in a mobile environment. "), o("br"), o("br"), e._v(" Added a feature to position the Point Bar at the top in the Viewer. "), o("br"), o("br"), e._v(" Added a feature to save the builds in the Viewer. "), o("br"), o("br"), e._v(" Added a feature to set dark mode in the Viewer. "), o("br"), o("br"), e._v(" Added a feature to clean Selected Choices in the Viewer. "), o("br"), o("br"), e._v(" Added a feature to select multiple PointTypes in the Multiply/Divide functions. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the padding in Choice Design was not applied to the Addon. "), o("br"), o("br"), e._v(" Fixed an issue where the BGM did not change when using multiple BGM choices. "), o("br"), o("br"), e._v(" Fixed an issue where performance dropped when opening the Import Choice window. "), o("br"), o("br"), e._v(" Fixed an issue where the focus didn't change correctly when typing in a dropdown menu. "), o("br"), o("br"), e._v(" Fixed an issue where the page froze when dragging to reorder rows in the Rows list. "), o("br"), o("br"), e._v(" Fixed an issue where the scores did not update when import choices included Multiply/Divide functions. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("01.10.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 01.10.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added an option in Global Settings to hide 'Scores Updated On' Message. "), o("br"), o("br"), e._v(" Added an option in Global Settings to enable shortcuts for switching between Editor and Viewer modes. "), o("br"), o("br"), e._v(" Added an option in Global Settings to use vw instead of px for the default font-size. "), o("br"), o("br"), e._v(" Assigned CSS class names generated from their IDs to each row and choice. "), o("br"), o("br"), e._v(" Added a feature to create multiple choices at once. "), o("br"), o("br"), e._v(" Added a feature to move a choice within its row. "), o("br"), o("br"), e._v(" Added a feature to set Global Requirements. "), o("br"), o("br"), e._v(" Added a feature to set the background image fit in choice/row/window. "), o("br"), o("br"), e._v(" Added a feature to set width of image box in 'Manage Rows/Choices Image Design'. "), o("br"), o("br"), e._v(" Added a feature to set default text of 'Or/Selected From Requirements'. "), o("br"), o("br"), e._v(" Added a feature to print simple variable of multi-select using Word. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the 'Half of the screen' option did not work in backpack. "), o("br"), o("br"), e._v(" Fixed an issue where the 'Object Gradient' did not work properly. "), o("br"), o("br"), e._v(" Fixed an issue where the point discount feature did not work properly. "), o("br"), o("br"), e._v(" Fixed an issue where the 'Score Updated On' did not work properly with multi-select choices. "), o("br"), o("br"), e._v(" Fixed an issue where the multi-select choice did not work properly when decreased below 0. "), o("br"), o("br"), e._v(" Fixed an issue where the 'Import Choices' feature did not work properly. "), o("br"), o("br"), e._v(" Fixed an issue where performance degraded when the number of Word variables was high. "), o("br"), o("br"), e._v(" Fixed an issue where the last Word was always deleted when attempting to remove a Word. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("30.08.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 30.08.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to choose all items in the dropdown menu at once. "), o("br"), o("br"), e._v(" Added a feature to set which points to discount. "), o("br"), o("br"), e._v(" Added a feature to set Design Groups for backpack. "), o("br"), o("br"), e._v(" Added a feature to hide contents outside of backpack. "), o("br"), o("br"), e._v(" Added a feature to multiply the score by the number of selections when using multi-select. "), o("br"), o("br"), e._v(" Added a feature that allows multi-select choices to adjust Allowed Choices. "), o("br"), o("br"), e._v(" Added a feature to set the size/position of the counter for multi-select choices. "), o("br"), o("br"), e._v(" Added a feature to hide the counter when the choice is missing requirements. "), o("br"), o("br"), e._v(" Added a feature to keep the choice selected when the Clean Activated feature is used. "), o("br"), o("br"), e._v(" Added a feature to disable 'Use Alternate Menu' in Config Global Settings. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the copy/paste requirement feature was not working correctly in certain situations. "), o("br"), o("br"), e._v(" Fixed an issue where the Clean Activated feature did not update visual effects correctly. "), o("br"), o("br"), e._v(" Fixed an issue where scores in multi-select choices were not calculated properly when a simple variable was not used. "), o("br"), o("br"), e._v(" Fixed an issue where multi-select choices were not being properly canceled. "), o("br"), o("br"), e._v(" Fixed an issue where choices couldn't be selected after deleting a choice. "), o("br"), o("br"), e._v(" Fixed an issue where the 'player image upload' function did not work with the other choice functions. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("20.08.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 20.08.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added an option in 'Score' to determine whether the 'Scores Updated On' should be activated. "), o("br"), o("br"), e._v(" Added a feature to use the modulo operator in 'point comparison' requirements. "), o("br"), e._v(" Added a feature to directly load a project from the 'CYOA.zip' file. "), o("br"), o("br"), e._v(" Added a feature to copy/paste a requirement. "), o("br"), o("br"), e._v(" Added a feature to merge duplicate images when exporting a project as a zip file. "), o("br"), o("br"), e._v(" Added a feature to increase or decrease the 'Number of requirements' for 'X of these'. "), o("br"), o("br"), e._v(" Added an option in Global Settings to enable or disable automatic image conversion. "), o("br"), o("br"), e._v(" Added an option in Global Settings to enable image preloading in the backpack. "), o("br"), o("br"), e._v(" Added a feature to display the discounted score. "), o("br"), o("br"), e._v(" Added a feature to export ID/Name list as a CSV file. "), o("br"), o("br"), e._v(" Added a feature to choose the display type in the loading animation (see index.html). ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where 'Will make another choice unselected' feature was not working correctly. "), o("br"), o("br"), e._v(" Fixed an issue where 'Multiply/Divide' features were not working correctly. "), o("br"), o("br"), e._v(" Fixed an issue where the toggle buttons of 'Show Score/Hide Value' were not working correctly. "), o("br"), o("br"), e._v(" Fixed an issue where choices activated by 'Forces another choice active' were de-selectable. "), o("br"), o("br"), e._v(" Fixed an issue where image split downloads do not work correctly in the Firefox browser. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("11.08.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 11.08.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to set the row background in the row private settings. "), o("br"), o("br"), e._v(" Added a feature to import/export design settings. "), o("br"), o("br"), e._v(" Added a feature to hide score value. "), o("br"), o("br"), e._v(" Added a feature to toggle 'Show Score/Hide Value' for all choices. "), o("br"), o("br"), e._v(" Added a feature to manage backpack design. "), o("br"), o("br"), e._v(" Added a feature to change the design of point bar when a choice is selected. "), o("br"), o("br"), e._v(" Added a feature to set filter designs for unselected choices. "), o("br"), o("br"), e._v(" Added an option in 'Force Active' to make other choices deselectable. "), o("br"), o("br"), e._v(" Added a feature to change focus in the dropdown menu based on key inputs. "), o("br"), o("br"), e._v(" Added a feature to put the font name directly for using custom fonts. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where changing the Group/Design group's ID did not apply to choices. "), o("br"), o("br"), e._v(" Fixed an issue where problems occurred when conditions were not met due to score changes. "), o("br"), o("br"), e._v(" Fixed an issue where the score was sometimes not updated correctly after using the Import Choices. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("06.08.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 06.08.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to change the order of Scores/Requirements/Addons in the choices. "), o("br"), o("br"), e._v(" Added a feature to set ID to activate the Design Groups. "), o("br"), o("br"), e._v(" Added an option in 'Force Active' that keeps other choices active when a choice is deselected. "), o("br"), o("br"), e._v(" Expanded the 'Remove the text of the choices' Feature: "), o("br"), o("br"), e._v("　Now can choose which contents to remove from the title, image, text, score, requirement, or addon. "), o("br"), o("br"), e._v(" Added a feature to allow users to use the 'Remove the contents of the choices'. "), o("br"), o("br"), e._v(" Added a feature to mute background music when a choice is selected. "), o("br"), o("br"), e._v(" Added a feature to hide the requirement when it is met. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where Design Groups were not being properly loaded in the Viewer. "), o("br"), o("br"), e._v(" Fixed an issue where Scroll feature did not work properly in the Viewer. "), o("br"), o("br"), e._v(" Fixed an issue where background changes were not reset when 'Clean Activated' was used. "), o("br"), o("br"), e._v(" Fixed an issue where 'Id Needed To Show' in 'Points' did not work properly. "), o("br"), o("br"), e._v(" Fixed an issue where choices set to 1 per row were being forced to 2 per row in mobile environments. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("01.08.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 01.08.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to set whether the background music should loop or not. "), o("br"), o("br"), e._v(" Added a feature to display titles of Rows/Choices in the Groups/Design Groups settings. "), o("br"), o("br"), e._v(" Added a feature to import custom words using the import choices feature. "), o("br"), o("br"), e._v(" Added a feature to set the length of Row/Choice IDs to be generated in global settings. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where points were not properly refunded when choices were canceled. "), o("br"), o("br"), e._v(" Fixed an issue where Private Styling doesn't work properly. "), o("br"), o("br"), e._v(" Fixed an issue where Debug Title doesn't be shown in copy rows features. "), o("br"), o("br"), e._v(" Fixed an issue where hidden rows in Backpack were still occupying space. "), o("br"), o("br"), e._v(" Fixed an issue in Choice Design Groups where a choice once set was not being canceled. "), o("br"), e._v(" Fixed an issue where choices created in Backpack could not be deleted. "), o("br"), o("br"), e._v(" Fixed an issue where choices were not canceled when some requirements were not met. "), o("br"), o("br"), e._v(" Fixed an issue where project file was not being saved. "), o("br"), o("br"), e._v(" Fixed an issue where Rows/Choices were not being deleted correctly. "), o("br"), o("br"), e._v(" Fixed an issue where Addons were not affected by Design Groups. "), o("br"), o("br"), e._v(" Fixed an issue where Design Groups were not being properly loaded in the Viewer. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("25.07.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 25.07.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to hide choices in the Backpack. "), o("br"), o("br"), e._v(" Added a feature to hide the button that displays the Backpack. "), o("br"), o("br"), e._v(" Added a feature where the player can input their own words when selecting choice. "), o("br"), o("br"), e._v(" Added a feature to check how many choices from groups have been selected. "), o("br"), o("br"), e._v(" Added a feature to choose whether points will be shown on the points bar/choices. "), o("br"), o("br"), e._v(" Added a feature to change the scroll position when a choice is selected. "), o("br"), o("br"), e._v(" Added a feature to set background music when a choice is selected. "), o("br"), o("br"), e._v(" Added a feature to change the background-color or background-image when a choice is selected. "), o("br"), o("br"), e._v(" Added a feature to choose whether the filter color will overlay on background-image. "), o("br"), o("br"), e._v(" Added a feature to manage Private Styles separately for each design feature. "), o("br"), o("br"), e._v(" Added a feature to manage Private Styles for design groups globally. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the browser would freeze when saving project with separate images. "), o("br"), o("br"), e._v(" Fixed issues with 'Clean Activated' feature. "), o("br"), o("br"), e._v(" Fixed issues with 'Scores Updated On'. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("20.07.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 20.07.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature to Auto-save in local storage. "), o("br"), o("br"), e._v(" Added requirements to check how many choices have been selected in rows/entire. "), o("br"), o("br"), e._v(" Added a feature to set Border Color and Text Color in Filter design. "), o("br"), o("br"), e._v(" Added a feature to apply a discount to all Choices within Groups. "), o("br"), o("br"), e._v(" Added a feature to set the initial value of points applied when using Clean Activated. "), o("br"), o("br"), e._v(" Added a feature to customize the color of each point text in the point bar. ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where Forces Another Choice couldn't be used with multi-select. "), o("br"), o("br"), e._v(" Fixed an issue where the choices in hidden rows weren't deselected automatically. "), o("br"), o("br"), e._v(" Fixed an issue where 'X of these is selected' couldn't be set X to 0. "), o("br"), o("br"), e._v(" Fixed an issue where words were not resetting with Clean Activated. "), o("br"), o("br"), e._v(" Fixed an issue where Manage Groups didn't synchronize with the Group settings in Choices. "), o("br"), o("br"), e._v(" A slight performance improvement. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("11.07.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 11.07.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where multi-selects did not refund points when canceled. "), o("br"), o("br"), e._v(" Fixed an issue where the position of the point-icon was not displayed correctly. "), o("br"), o("br"), e._v(" Fixed an issue where the points icon was not being displayed on the points bar. "), o("br"), o("br"), e._v(" Fixed an issue where tags couldn't be used in Show Score. "), o("br"), o("br"), e._v(" Fixed an issue where Forces Another Choice couldn't be used with multi-select. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("09.07.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 09.07.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Added a feature to change the order of points. "), o("br"), o("br"), e._v(" Added Global Settings Config: Auto-save, Check before delete, Dark Mode. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Fixed an issue where multi-select bypass points were allowed to go negative. "), o("br"), o("br"), e._v(" Fixed issues with 'Scores Updated On': "), o("br"), o("br"), e._v(" - Now it only works when all conditions are met. "), o("br"), o("br"), e._v(" - Instead of canceling choices, scores are recalculated. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("05.07.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 05.07.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("  Added a feature to the choice function where 'Selecting this choice will duplicate a row' "), o("br"), o("br"), e._v(" Added a feature where change the icon color in the point bar. "), o("br"), o("br"), e._v(" Added a feature to specify whether the background image should repeat. "), o("br"), o("br"), e._v(" Added a feature to display the amount of data loaded so far during loading. "), o("br"), o("br"), e._v(" Added the feature to use multi-select as a requirement (ex. ID/ON#3). ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Fixed an issue where Clean Activated feature was not working properly. "), o("br"), o("br"), e._v(" Fixed the issue where multi-select choices were not deselected when losing requirements. "), o("br"), o("br"), e._v(" Fixed the issue of loading not completing properly when loading a large project.json file. "), o("br"), o("br"), e._v(" Fixed the issue where the Import Choices feature was not working properly. "), o("br"), o("br"), e._v(" Fixed the issue where the random choices activation feature would select choices that were already selected. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("01.07.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 01.07.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" New Features: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Added a feature that 'X of these is selected' requirement. "), o("br"), o("br"), e._v(" Added a feature that 'Force another choice active' at random. "), o("br"), o("br"), e._v(" Added a feature that costs points at random. "), o("br"), o("br"), e._v(" Added a feature that prevents each choice from being unselected. "), o("br"), o("br"), e._v(" Added a feature that 'Point Comparison' requirement can reference multiple point-type. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("26.06.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 26.06.2024")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Fixed an issue where the highlighting didn't display when multi-select was selected. "), o("br"), o("br"), e._v(" Fixed an issue where the subtract feature of multi-select was not working properly. "), o("br"), o("br"), e._v(" Fixed an issue where the Background Image was not visible when downloading Backpack as an image. "), o("br"), o("br"), e._v(" Fixed an issue where Clean Activated feature was not working properly. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("ICC Plus First Release : 22.06.2024")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 22.06.2024")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" Interactive CYOA Creator Plus First Release ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "blue"
                    },
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" New Feature: ")]), o("v-col", {
                    staticClass: "pb-0",
					staticStyle: {
                        color: "red"
                    },
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Fixed: ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Added a feature that automatically converts PNG or JPEG files larger than 500KB to WebP format upon set Choce/Row images. "), o("br"), o("br"), e._v(" Added a feature to set Border-Image in Manage Choice/Row Design. "), o("br"), o("br"), e._v(" Added a feature to download images of backpacks by splitting them if the size is too large for successful download. "), o("br"), o("br"), e._v(" Added a feature to manipulate choices that can be selected multiple times using 'Force another choice active' (e.g., id/ON#3). "), o("br"), o("br"), e._v(" Added a loading animation to the viewer. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Fixed an issue where background images were set for each row, obscuring the overall background image when 'private styling' was not enabled. "), o("br"), o("br"), e._v(" Fixed an issue where choices would not appear when 'private styling' was enabled and the requirements were not met. "), o("br"), o("br"), e._v(" Fixed an issue where choices activated by 'Force another choice active' feature could be deselected by clicking on them. "), o("br"), o("br"), e._v(" Fixed an issue where Addons were not being removed when the 'Remove the text of the choices' feature was activated in Backpack. "), o("br"), o("br"), e._v(" Fixed an issue where 'Point Comparison Requirements' could not be applied to points and addons. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("03.03.2021 / 28.02.2021")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 03.03.2021")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" A lot of work has been put into making the score-calculation work better. ")]), o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 28.02.2021")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" There is now a button at the top of the backpack-dialog, which will allow a user to download an image of it. There are some problems with the aspect of images in it. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" A new switch has been added in the Choices Functions. This will add to or remove from the number of allowed choices to press in a row. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" Moved the button settings into a dialog, and the button can now add a random sum between two numbers into a point-type. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" Choices can now be hidden completely by the filter if it uses its own private styling. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" A lot of work has been put into making the score-calculation work better. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" Lots and lots of bugfixes. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" Anonymous feedback can be given "), o("a", {
                    staticClass: "pb-0",
                    attrs: {
                        href: "https://app.suggestionox.com/r/i4womu",
                        target: "_blank"
                    }
                }, [e._v(" Here ")])])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("30.01.2021")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 30.01.2021")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Force and unselect functions on choices can now use the ID's of other choices like this: ID,ID,ID/ON#1 (No spaces). ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Choices can now be aligned in five different ways, Start, Center, End, Space-Around, and Space-Between. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" The numbers in the point bar can now switch colors depending on whether it's negative or positive, the color can be changed in design. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" The design of choices can now be designed separately from all the other choices in a row, with the Gear placed beside the delete-button. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Added a button that deselects all choices at the top of the creator, going back to the main menu will no longer do it. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Made some changes to the side-menu, which should now be easier to use and work better on smaller screens. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Added a switch under the button on the rows that will only let it select choices that aren't selected from before off. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" There are a lot more Choice Widths to chose between, with most of them placed between 1 and 2 per row. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Added gradient-backgrounds to Rows and Choices, can be found in the design menus 'Manage Choice Design' and 'Manage Row Design', some know-how is needed to use them so there is a link underneath it that can be of help. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Made some new switches in rows placed in backpacks, one that removes the text of the choices placed there, another that shows the title of the row it is originally placed in above its image. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("12.01.2021")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 12.01.2021")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "5"
                    }
                }, [e._v(" Choices that have Scores with Requirements will now be turned off automatically when the Requirement loses its conditions. This only works with 'Selected' and 'Non-selected' choice requirements for now. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "7"
                    }
                }, [e._v(" Large update for the Point-types. + and - can now be placed automatically with a switch in the Point Types dialog and can be inverted. Colors can be set for both positive and negative numbers. Icons can be uploaded and added for each Point-Type, and the size and placement of these can be adjusted. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "3"
                    }
                }, [e._v(" Multi-Choices should now appear in the summary-rows that normally go into where selected choices are when Groups are used. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "3"
                    }
                }, [e._v(" Rows now have a switch that will make a result-row of choices be the same template and width. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Object-fit has been added to images on choices and can be found in 'Manage Choice Design'. The options that can be selected are Fill, Contain, Cover, Scale-down, and None. The image container's height for each row can be found in its 'Row Settings' and leaving it empty will make no changes. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Rows now have a switch that says 'Deselects choices when Row lack requirements'. Turning this on will deselect any choices within the row if one or more of the row's requirements is lost. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Background on Multi-Choices will now show the correct color after the first time it has been selected. You might need to clone a choice and delete the original if it does not work, just move the Id to the next one. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Background on Multi-Choices will now show the correct color after the first time it has been selected. You might need to clone a previously made choice and delete the original if it does not work, just move the Id to the next one. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("05.01.2021")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v(" User-uploaded images should now work with the choice import/export feature, but you should probably ask any players to use the external URL, as the sizes of the strings will be massive. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Made some changes to the menu and placed it on the side but the old menu can still be used with the lowest button. Hover over a button to see what it does. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Choices that can be selected multiple times should now work with the choice import/export feature. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Added a few premade Design Templates to the list, these can be found in features. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Cloning choices will now work as it is supposed to, and not change the ID of the last choice in the row. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("The ID of groups can now be placed in the 'Will make another choice unselected' to turn off multiple choices at once. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Rows can now be cloned in the same way as choices with a button placed next to the 'Delete Row'-button. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Projects can now be loaded into the Viewer by placing the project-file in the top folder of the Viewer and if it has the name 'project'. But doing it this way will only show your CYOA successfully when the Viewer is uploaded on a web-page, and not on your own computer. Updated 'Help and Instructions' ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("05.12.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Fixed Equal in requirements, should now work as it is supposed to do.")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Rows can now take half the screen, by pressing the 'Half of the screen?'-switch. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("There has been added a confirmation dialog that asks for confirmation when a row is being deleted. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("At the bottom of the Functions section of every choice, you can now check a box that will allow a player to add a picture of their choosing onto it. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Added a list of IDs and names in a new Feature dialog, should make it easier to find out which choice an id belongs to. ")]), o("v-col", {
                    staticClass: "pb-0",
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Inline styling is now possible to use in all text, can be used to style things like the color of text-parts. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("30.8.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Changed words so that the sum of a point type can be shown in the text, on rows, choices, and add-ons. To do this, the id of the point-type should be pretty unique, and be identical to the id of the Word.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Changed the addons so that they will show themself below instead of the side when images are placed to the right or left on choices.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Cloning a choice will now place it next to the original rather than at the bottom, to make it easier to place new choices in large rows.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Added 'Equal or More' in comparison-requirements between two point-types.")]), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("The function that allows for a choice to be selected multiple times does no longer need a point-type, but without using one the number of times it has been pressed will not be possible to use in a requirement.")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("26.7.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Images can now be stored separately from the JSON file and can be done when your project is not too large, is it too large some images might not load when placed on the net. Just be careful not to overwrite your project file when you do it.")]), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Changeable words have now been added to features and whenever the ID of such a word is placed in the CYOA then it will be replaced by something else, choices can now change what that something else is when selected and deselected in Functions.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("The annoying white line at the bottom of the page that is seen when 'Download Image' is used has been removed.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Deleting a point-type will now delete the correct one instead of the last one.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("In features, the 'show import choices' switch can now be found in 'Manage backpack and choice import'.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("In features -> point types, one can now decide if the point-types is allowed to go lower than zero or not.")]), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("In features, there is a new button for image compression where all images can be compressed at once. Good if you, for example, need a project file that can be placed on services with size limits.")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("12.7.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Did some work on Multiplying points, will work a little better now, and point-types can be multiplied with other point-types.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("The design-dialogs have been moved so it is above the rows and not in front of it, which should make it easier to use.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Addons now have a button that will add an image to them, these images are styled in the same way as the object-images.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Row-backgrounds should now work as they are supposed too when private styles are used.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Added Point-to-Point comparison, but only 'Bigger than' and 'Equal to' for now, will add more later. Can be found in requirements like the others.")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("12.6.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Added a new dialog in features that show some of the symbols that people can use in the text, just copy and paste it in where you want it.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("I'm planning to remake the design part of the creator so that changes are made in a sidebar instead, rather than in a dialog, so changes can be seen in realtime.")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("Fixed the filter in private styling, should work now.")]), o("v-col", {
                    staticClass: "pb-0",
                    staticStyle: {
                        color: "green"
                    },
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Update: 20.5.2020")]), o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("By using the ID of a Group in the 'Will make another choice unselected' every choice in the group will be deselected.")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("7.5.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    attrs: {
                        cols: "4"
                    }
                }, [o("b", [e._v("A choice can now be selected multiple times")]), e._v(", by checking the 'This choice can be selected multiple times' in a choice's functions. You need to make a point-type to add to it, and then it can be used for requirements in other choices. And the points can be hidden by writing anything into the 'Id needed to activate' ")]), o("v-col", {
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" By checking the 'Will make other choices unselected', the choice with "), o("b", [e._v("the specified id will be deselected")]), e._v(" when this choice is clicked on. Very useful when that choice is the requirement to a score in another choice, as the player needs to click the choice to right the score otherwise. ")]), o("v-col", {
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" A button has been placed in Defaults that will "), o("b", [e._v("make the Id of the choices and rows into their titles")]), e._v(", as long as the titles are longer than two letters and not the default title. ")]), o("v-col", {
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" Besides the 'Delete this choice' symbol in a choice, a new symbol that "), o("b", [e._v("makes a copy of the choice")]), e._v(" can be found. The copy will be placed at the end of the row. ")]), o("v-col", {
                    attrs: {
                        cols: "4"
                    }
                }, [e._v(" Made some more changes to the point-bar, and the text will "), o("b", [e._v("shrink on smaller screens")]), e._v(", making it easier to read on phones and tablets. ")]), o("v-col", {
                    attrs: {
                        cols: "4"
                    }
                }, [e._v("Images will now load in as the player moves down on the screen, not sure if this will better load-times, but hopefully, it will.")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("28.4.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v("The Point-bar should work better, but to keep it mobile-friendly the text-size on it needs to be small. Requirements can now be added to requirements, via the small symbol above it. This should work both on rows and objects. Made the Viewer work better for small screens, mainly making it so that choices changes to 2 per row on a small screen and 1 per row on even smaller screens. ")]), o("v-col", {
                    attrs: {
                        cols: "6"
                    }
                }, [e._v(" Fixed bugs: The cropper bloated the images, projects should be a lot smaller now. A problem with loading in builds happened with the last update, should be fixed now. Other: If you have an older project, it might not work correctly after the last update. Selecting and unselecting all choices, and then resetting the starting sums of on points should fix it. Uploaded a new Viewer. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("18.4.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    attrs: {
                        cols: "12"
                    }
                }, [e._v("Changed score so that people can now choose 'More than', 'Equal To', and 'Less or Equal to' besides 'Less than' and 'More or Equal to'. The Viewer has also been fixed and should work now.")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("13.4.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [o("v-col", {
                    staticClass: "pt-0"
                }, [o("b", [e._v("Requirements can now be added to scores")]), e._v(", works best if the choice also has the requirement for now, as the choice will not be un-selected by itself. "), o("br"), o("br"), o("b", [e._v("Multiplier and divider")]), e._v(" added to functions, but there are still some things that need to be done for it to work correctly, at the moment it messes with the score. ")]), o("v-col", {
                    staticClass: "pt-0"
                }, [o("b", [e._v("In the image section, a tooltip can now be added.")]), e._v(" This will be revealed when someone hovers over an image for longer than 1.5 seconds. "), o("br"), o("br"), o("b", [e._v("Weighted dice rolls")]), e._v(" can be created when a button is pressed, but only works when one choice is to be selected. ")]), o("v-col", {
                    staticClass: "py-0",
                    attrs: {
                        cols: "12"
                    }
                }, [o("b", [e._v("A choice can now force another choice to be selected")]), e._v(", but at the moment it works badly if multiple of the choices activates the same choice, or if the target has requirements attached. ")]), o("v-col", {
                    staticClass: "pb-0"
                }, [e._v(" If your project stops working because of the update, or if you have any thoughts of features to add or other constructive feedback, then feel free to send a message to MeanDelay on Reddit. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("19/20.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Added Groups to features, these can be attached to a row in its settings, or an object. Groups work as rows, in that they create a connection between choices. "), o("br"), o("br"), e._v(" It can currently only be used in Result-rows, to choose which choices will be listed if active. But will be used for more later. Projects started before this update will have trouble using Groups, can be fixed by moving text and images over to a new project, or making changes to the project file. ")])], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("18.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Changed the image dialog so that it makes more sense. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("17.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Creators can now choose between different fonts in the Text-design dialog, will add more thematic ones later. ")])], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("16.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Whenever a user presses the button to leave the Creator or Viewer all choices will be deselected, and it will go back to default. will make it so this happens when the project is saved too later. ")])], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("15.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Fixed a problem with selected choices in row, any input was read as a String instead of an Integer. ")])], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("14.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Added a list over the choices in each row, this can be used to drag objects up and down. ")])], 1)], 1)], 1)], 1)], 1)], 1), o("v-row", [o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("13.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Added text-alignment settings in the Text-design dialog, the Viewer will be updated in a few days. ")])], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("12.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Added image capture on the viewer in the creator, creators can now download static images of their projects. ")])], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("11.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Added a way for people to copy/move objects from one row to another in row-settings. ")])], 1), o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Redesigned the choices in edit-mode. ")])], 1), o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" When someone click on more than what allowed-choices allow the first selected will be unselected. ")])], 1)], 1)], 1)], 1)], 1), o("v-col", [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("10.02.2020")]), o("v-expansion-panel-content", [o("v-list", {
                    attrs: {
                        dense: ""
                    }
                }, [o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Started writing this changelog and added it to the help section of the page. ")])], 1), o("v-list-item", {
                    staticClass: "pa-0",
                    attrs: {
                        "two-line": ""
                    }
                }, [o("v-list-item-content", [e._v(" Made the viewer and creator more responsive. "), o("v-list-item-subtitle", [e._v(" The choices should default to 1 in width if the screen becomes too small. "), o("br"), e._v(" The row in edit-mode have been changed to better fit a small screen. "), o("br"), e._v(" The image dialog is now easier to use on a small screen. "), o("br"), e._v(" Bar on top is now responsive."), o("br")])], 1)], 1), o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Sanitizes now the output of various texts to hinder the rendering of malicious script tags. "), o("v-list-item-subtitle", [e._v(" The Viewer has been updated. ")])], 1)], 1), o("v-list-item", {
                    staticClass: "pa-0"
                }, [o("v-list-item-content", [e._v(" Started working on the ‘Help’ section, is currently a mess and became more of a FAQ than a tutorial, will finish it another day. ")])], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1), o("v-col", {
                    staticClass: "px-7",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("How do I show off my CYOA?")]), o("v-expansion-panel-content", [o("v-row", [o("v-col", [o("p", [e._v("1. Host it yourself on a free hosting service.")]), o("p", [e._v("Either")]), o("p", [e._v(" A. Download the Viewer from the link below, open the JSON file of the project and the app.XXXXXXX.js file in notepad. Then copy all from your project and place it in the gap between "), o("b", [e._v("{state:{app:")]), e._v(" and "), o("b", [e._v("},getters:")]), e._v(" near the bottom of the smallest .js file in the js folder. ")]), o("p", [e._v("OR")]), o("p", [e._v(" B. Download the Viewer from the link below, get your project file, make sure the project file is named 'project', place it next to the index.html file in the Viewer. If you do it this way then it will not work unless it's uploaded onto a hosting service, but when its there all you need is to replace the project file to update your project, it's the better solution. ")]), o("p", [e._v("Then")]), o("p", [e._v(" Create a user on Neocities or another free hosting service, move to the 'Edit your page' part of the site and upload the Viewer, anyone that enters the page will now see the Cyoa. ")]), o("p", [o("a", {
                    attrs: {
                        href: "https://github.com/wahaha303/ICCPlus/releases/latest",
						target: "_blank"
                    }
                }, [e._v("New Viewer 1.18.9")]), o("br"), e._v(" https://github.com/wahaha303/ICCPlus/releases/latest ")])]), o("v-col", [o("p", [e._v("2. Share the project file.")]), o("p", [e._v(" Upload it to Mega or some other site, and let people download it and open it in the creator themselves. ")])])], 1)], 1)], 1)], 1)], 1), o("v-col", {
                    staticClass: "px-7",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("Can I create static Image Cyoa's with this?")]), o("v-expansion-panel-content", [o("v-row", [o("v-col", [o("p", [e._v(" Yes, yes you can!"), o("br"), e._v(" In the top menu of the viewer in the creator, you can see a button named 'Download image', press this and a download will start. The bigger your project is the longer it will take before the download starts, and the bigger the file will be. ")])]), o("v-col", [o("p", [o("br"), e._v(" Make them big enough and pictures near the bottom will not appear on the image, if this happens you should temporarily delete some rows and split your project into multiple pictures. ")])]), o("v-col", [o("br"), o("p", [e._v(" If your project is very large, then it might be wiser for you to download an extension with more options, like "), o("a", {
                    attrs: {
                        href: "https://www.awesomescreenshot.com"
                    }
                }, [e._v("Awesome Screenshot")]), e._v(" which you can use to download your project as PDF or only capture a part of it. ")])])], 1)], 1)], 1)], 1)], 1), o("v-col", {
                    staticClass: "px-7",
                    attrs: {
                        cols: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("How do I use the Interactive CYOA Creator?")]), o("v-expansion-panel-content", [o("v-row", [o("v-col", {
                    staticClass: "col-lg-12 pa-1"
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("How should I go about creating a CYOA with this?")]), o("v-expansion-panel-content", [o("v-row", [o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "4"
                    }
                }, [o("p", [e._v(" First off, after figuring out what you want to make a CYOA about, find a color palette that fits the theme, you can use a "), o("a", {
                    attrs: {
                        href: "https://color.adobe.com/nb/create/"
                    }
                }, [e._v("Color theme generator")]), e._v(" if you need help. Placing a repeating image in the background that fits the theme is always a good idea. "), o("br"), o("br")])]), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "4"
                    }
                }, [o("p", [e._v(" Create the point system if you have one, it's not necessary, you can always go for the 'select x from each row' type of Cyoa. Now create the rows you have planned before-hand, give them names, and add any choices you have planned. ")])])], 1)], 1)], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("What is a requirement and how do I Create one?")]), o("v-expansion-panel-content", [o("p", [e._v(" A requirement is something that can be created on both rows and objects and will decide if the row is visible, or if the object can be activated. "), o("br"), o("br"), e._v(" A requirement can be added to a row by pressing the key+ symbol in the right corner, and on the object by pressing the button that says 'Requirement'. "), o("br"), o("br"), e._v(" When one of these buttons is pressed you a dialog opens up where you have to choose what condition you'll want. "), o("br"), o("br"), e._v(" 1. The first one will let the user activate the choice if the choice with the id is already activated. "), o("br"), e._v(" 2. The second will let the user activate the choice only if the choice the id belongs to is not already pressed. "), o("br"), e._v(" 3. The third will only let the choice be activated if the selected point type is less than the value you write in. "), o("br"), e._v(" 4. The fourth will only let the choice be activated if the selected point type is equal or more to the value you write in. "), o("br"), o("br"), e._v(" More than one of these requirements can be added to each row and object. ")])])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("What is a Pointtype and how do I create one?")]), o("v-expansion-panel-content", [o("p", [e._v(" A point-type is a system where you can create some type of valuta, be it gold points, XP or just points, that the player can spend and earn trough their choices. These can be created in the dialog that pops up when you press the 'Feature' button in the top menu and can be added to choices by pressing the 'Score' button on a choice. "), o("br"), o("br"), e._v(" In the 'Point Type' select you choose the point-type you have created, the value which needs to be in the negative if you want it to give the player points, and the text that will be shown before and after. "), o("br"), o("br"), e._v(" If the 'Show Score?' checkbox is unchecked then the value and text will not show on the object, in case you want to write it in the text or you want it to be hidden. ")])])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("How do I load and save my project?")]), o("v-expansion-panel-content", [o("p", [e._v(" In the upper right corner of the creator and the creator-viewer, you'll see a button named 'Load/Save Project'. Pressing this button will lead you to a dialog where you can find a text field that says 'Load Game' and a button that say 'Save Game'. "), o("br"), o("br"), e._v(" Pressing on the text field will take you to the explorer where you have to find your project, and clicking on the button will take you to the explorer where you'll need to choose where to store it and what name to give it. ")])])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("How do I change the design of my project?")]), o("v-expansion-panel-content", [o("p", [e._v(" If you look at the top bar in the image designer you'll see a button named 'Modify Design', click on this and a dialog with a lot of buttons will show itself. Each of these buttons will open another dialog where you can make changes to the design of whatever is written on it. "), o("br"), o("br"), e._v(" An example will be that the 'Manage Filters' button will let you change the look of the deactivated and activated filters, and the 'Text' button will let you change the color, size, and font of the different texts on the page. "), o("br"), o("br"), e._v(" Each row can have different designs if you press the Coq in the left corner of the row and flips the switch 'Use private styling?' in the dialog that pops up. Now the styling of the row will be whatever you change in the buttons that show up under. ")])])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("What is variables used for?")]), o("v-expansion-panel-content", [e._v(" At this point, variables can only be used with button rows and can be attached to a button when it is created. Clicking a button with a variable attached to it will push the id of the variable into the array where the ids of selected choices lie. This makes it possible to use the id in requirements for rows and objects. ")])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("What is allowed choices and selected choices?")]), o("v-expansion-panel-content", [o("p", [e._v(" In the edit-mode of the row, there is a text field that says 'Allowed Choices' and a text field that says 'Selected Choices'. The 'Allowed Choices' decides how many choices that the player can select at one time, write 1 in the text field and the user may only choose one. If there is no limit then let it stay 0. "), o("br"), o("br"), e._v(" The 'Selected Choices' will show how many that is currently selected, and should normally be 0, if it is something else and none is selected then some wonky shit has happened, and you can clear it by changing the value to 0. ")])])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("What does the three switches on a row do?")]), o("v-expansion-panel-content", [o("p", [e._v(" The three switches in the row when it is on edit-mode changes how the rows operate when pressed. "), o("br"), o("br"), e._v(" The upper-most one named 'Button?' will switch the image of the row out with a button, which in turn can be used to activate or deactivate variables, whose ids can be used in requirements. "), o("br"), o("br"), e._v(" The middle button named 'Selected Choices?' can be used to make the row show all choices that have been selected, good to use at the end of the project to let the player see the choices they have made. A private row design should be used to make filters invisible. "), o("br"), o("br"), e._v(" The third button will make it impossible for a player to change any of the choices, if one is selected then it will stay selected and visa versa. Good to use when the user should be given information or story, and not choices. ")])])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("What is an Addon?")]), o("v-expansion-panel-content", [o("p", [e._v(" An Addon is going to be a smaller choice in the choices but is currently only an under title and undertext of the choice it is attached to. ")])])], 1)], 1)], 1), o("v-col", {
                    staticClass: "col-md-4 pa-1",
                    attrs: {
                        xs: "12",
                        sm: "12"
                    }
                }, [o("v-expansion-panels", {
                    attrs: {
                        multiple: "",
                        accordion: ""
                    }
                }, [o("v-expansion-panel", [o("v-expansion-panel-header", [e._v("What is the image cropper and compressor?")]), o("v-expansion-panel-content", [o("p", [e._v(" The image cropper and compressor can be found when someone presses the 'Change Image'-button on either a row or a choice and will open up in its own dialog. "), o("br"), o("br"), e._v(" The cropper lets you change the height and width aspect of your image, and cut off parts that you don't need. To change the aspect you'll have to change the value of the two text fields, and then press the 'Change Aspect'-button. To crop the image you need to press the 'Crop Image'-button. "), o("br"), o("br"), e._v(" The compressor cuts down the size of the image at the cost of its quality, which everyone should do to keep the project file small and thus the same with the bandwidth and storage cost. The image quality and the image scale text field shows the percentage to cut down to in quality and scale. "), o("br"), o("br"), e._v(" Cutting down to 40sih percent quality will make little visible difference in most cases, but shave off up to 60-70 percent of the image file size. ")])])], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1)], 1)
            },
            la = [],
            ca = {
                data: function() {
                    return {
                        currentComponent: ""
                    }
                },
                computed: {
                    app: function() {
                        return this.$store.state.app
                    }
                },
                methods: {
                    cleanCurrentComponent: function() {
                        this.$emit("cleanCurrentComponent", "")
                    }
                }
            },
            da = ca,
            pa = (o("63c6"), Object(w["a"])(da, na, la, !1, null, null, null)),
            ua = pa.exports;
        x()(pa, {
            VBtn: C["a"],
            VCol: I["a"],
            VExpansionPanel: ft["a"],
            VExpansionPanelContent: wt["a"],
            VExpansionPanelHeader: yt["a"],
            VExpansionPanels: xt["a"],
            VIcon: J["a"],
            VList: Jr["a"],
            VListItem: Xi["a"],
            VListItemContent: Ut["a"],
            VListItemSubtitle: Ut["b"],
            VRow: S["a"]
        });
        var ha = {
                data: function() {
                    return {
                        currentComponent: "",
                        dialog: !0,
                        menuComponentButtons: [{
                            component: "appImageCyoa",
                            text: "Open Image-cyoa Creator (Alt + 1)"
                        }, {
                            component: "appImageCyoaViewer",
                            text: "Open Image-cyoa Viewer (Alt + 2)"
                        }, {
                            component: "appInformation",
                            text: "Help and Instructions (Alt + 3)"
                        }]
                    }
                },
                components: {
                    appImageCyoa: ea,
                    appImageCyoaViewer: aa,
                    appInformation: ua
                },
                computed: {
					app: function() {
                        return this.$store.state.app
                    }
				},
				beforeCreate: function() {
					window.addEventListener("unload", () => {
						clearInterval(this.app.bgmPlayInterval);
						clearInterval(this.app.bgmTitleInterval);
						clearInterval(this.app.bgmFadeInterval);
						clearInterval(this.app.bgmFadeTimer);
						clearInterval(this.app.autoSaveInterval);
						if (bgmPlayer) bgmPlayer.destroy();
					});
				},
				mounted: function() {
					this.$store.state.handleKeydown = this.handleKeydown;
					window.addEventListener("keydown", this.$store.state.handleKeydown);
				},
                methods: {
					handleKeydown: function(e) {
						if (e.altKey && e.key === "1") this.currentComponent = "appImageCyoa";
						if (e.altKey && e.key === "2") this.currentComponent = "appImageCyoaViewer";
						if (e.altKey && e.key === "3") this.currentComponent = "appInformation";
					}
				}
            },
            ga = ha,
            ba = (o("034f"), o("7496")),
            va = Object(w["a"])(ga, s, r, !1, null, null, null),
            ma = va.exports;
        x()(va, {
            VApp: ba["a"],
            VBtn: C["a"],
            VCard: T["a"],
            VCardText: j["b"],
            VCol: I["a"],
            VContainer: k["a"],
            VDialog: B["a"],
            VRow: S["a"]
        });
        var fa = o("2f62");
        i["a"].use(fa["a"]);
        var wa = new fa["a"].Store({
                state: {
                    currentDesignComponent: "none",
                    app: {
                        isEditModeOnAll: !0,
                        isStyleOpen: !1,
                        isPointsOpen: !1,
                        isChoicesOpen: !1,
                        isDesignOpen: !1,
                        isViewerVersion: !1,
						isFadingOut: !1,
						isPointerCursor: !1,
						importedChoicesIsOpen: !0,
						bgmPlayInterval: 0,
						bgmTitleInterval: 0,
						bgmFadeInterval: 0,
						bgmFadeTimer: 0,
						bgmTitle: "No Audio Title",
						curBgmTime: 0,
						curBgmLength: 0,
						curVolume: 100,
						isSeeking: !1,
						isMute: !1,
						lastFadeTime: 0,
						showMusicPlayer: !1,
						fadeTransitionColor: "#000000FF",
						fadeTransitionTime: 0.25,
						comp: {},
						compR: {},
						compG: {},
						compODG: {},
						compRDG: {},
						compGR: {},
						tmpRequired: [],
						pointTypeMap: {},
						wordMap: {},
						objectMap: {},
						rowIdLength: 4,
						objectIdLength: 4,
                        words: [],
						wordChangeComplete: !1,
                        groups: [],
						rowDesignGroups: [],
						objectDesignGroups: [],
						objectsPerRow: "col-6",
						globalRequirements: [],
						googleFonts: [],
                        chapters: [],
                        activated: [],
                        rows: [],
                        pointTypes: [],
                        variables: [],
						mdObjects: [],
						printThis: !1,
						autoSaveIsOn: !1,
						autoSaveInterval: null,
						checkDeleteRow: !0,
						checkDeleteObject: !1,
                        defaultRowTitle: "Row",
                        defaultRowText: "This is a row, and inside of it, you can place choices. On both rows and choices Requirements can be placed, which will block a row from being viewed, or make the player unable to select a choice, depending on either Point-types or the Ids of other choices. Point-types can be made in Features then Manage Points. Hovering over buttons will explain what they do. The Design of the project can be changed in 'Modify Design' at the side navigation bar, and private styling for each row can be turned on in the rows Settings. Default text like this can be turned off in Features -> Manage Defaults.",
                        defaultChoiceTitle: "Choice",
                        defaultChoiceText: "This is a Choice, and inside of it, you can place images and text. Scores can be added to it, and have Point-types attached. Addons can be added underneath the image and text. In the Functions at the bottom of the choice, there is an array of different things that can be done. Default text like this can be turned off in Features then Manage Defaults.",
                        defaultBeforePoint: "Cost:",
                        defaultAfterPoint: "points",
                        defaultBeforeReq: "Required:",
                        defaultAfterReq: "choice",
                        defaultAddonTitle: "Addon",
                        defaultAddonText: "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
						enableShortcut: !0,
						orderOrReqText: "0",
						defaultOrReq: "of",
						orderSelReqText: "0",
						defaultSelReq: "choice from",
						backpack: [{
							id: "default_backpack_row",
                            title: "Result",
                            titleText: "",
                            objectWidth: "col-md-3",
                            image: "",
                            template: 1,
                            isButtonRow: !1,
                            buttonType: !0,
                            buttonId: "",
                            buttonText: "Click",
                            buttonRandom: !1,
                            buttonRandomNumber: 1,
                            isResultRow: !0,
                            resultGroupId: "",
                            isInfoRow: !0,
                            defaultAspectWidth: 1,
                            defaultAspectHeight: 1,
                            allowedChoices: 0,
                            currentChoices: 0,
                            requireds: [],
                            isEditModeOn: !1,
                            isRequirementOpen: !1,
                            objects: [],
							rowDesignGroups: []
						}],
                        styling: {
                            rowTitle: "Times New Roman",
                            rowText: "Times New Roman",
                            objectTitle: "Times New Roman",
                            objectText: "Times New Roman",
                            addonTitle: "Times New Roman",
                            addonText: "Times New Roman",
                            scoreText: "Times New Roman",
                            rowTitleTextSize: 200,
                            rowTextTextSize: 100,
                            objectTitleTextSize: 200,
                            objectTextTextSize: 100,
                            addonTitleTextSize: 200,
                            addonTextTextSize: 100,
                            scoreTextSize: 75,
                            barTextColor: "#000000",
							barIconColor: "#0000008A",
                            barBackgroundColor: "#FFFFFFFF",
                            barTextPadding: 17,
                            barTextMargin: 0,
                            barTextFont: "Times New Roman",
                            barTextSize: 15,
                            barPadding: 0,
                            barMargin: 0,
                            rowTitleColor: "#000000",
                            rowTextColor: "#000000",
                            objectTitleColor: "#000000",
                            objectTextColor: "#000000",
                            addonTitleColor: "#000000",
                            addonTextColor: "#000000",
                            scoreTextColor: "#000000",
                            objectHeight: !0,
                            rowTitleAlign: "center",
                            rowTextAlign: "center",
                            objectTitleAlign: "center",
                            objectTextAlign: "center",
                            addonTitleAlign: "center",
                            addonTextAlign: "center",
                            scoreTextAlign: "center",
                            rowButtonXPadding: 0,
                            rowButtonYPadding: 0,
                            backgroundImage: "",
                            rowBackgroundImage: "",
                            objectBackgroundImage: "",
                            rowBorderImage: "",
                            rowBorderImageRepeat: "stretch",
                            rowBorderImageWidth: 5,
							rowBorderImageSliceTop: 5,
							rowBorderImageSliceBottom: 5,
							rowBorderImageSliceLeft: 5,
							rowBorderImageSliceRight: 5,
                            objectBorderImage: "",
                            objectBorderImageRepeat: "stretch",
                            objectBorderImageWidth: 5,
							objectBorderImageSliceTop: 5,
							objectBorderImageSliceBottom: 5,
							objectBorderImageSliceLeft: 5,
							objectBorderImageSliceRight: 5,
                            backgroundColor: "#FFFFFFFF",
                            objectBgColor: "#FFFFFFFF",
                            rowBgColor: "#FFFFFFFF",
                            rowBgColorIsOn: !1,
                            objectBgColorIsOn: !1,
							backpackBgColor: "#FFFFFFFF",
							backpackBgImage: "",
							isBackpackBgRepeat: !1,
                            objectImageWidth: 100,
                            rowImageWidth: 100,
                            objectImageMarginTop: 0,
                            objectImageMarginBottom: 0,
                            rowImageMarginTop: 0,
                            objectMargin: 10,
                            rowMargin: 10,
                            rowTextPaddingY: 5,
                            rowTextPaddingX: 10,
                            objectTextPadding: 10,
                            rowBodyMarginTop: 25,
                            rowBodyMarginBottom: 25,
                            rowBodyMarginSides: 1,
                            objectDropShadowH: 0,
                            objectDropShadowV: 0,
                            objectDropShadowSpread: 0,
                            objectDropShadowBlur: 0,
                            objectDropShadowColor: "grey",
                            objectDropShadowIsOn: !1,
                            rowDropShadowH: 0,
                            rowDropShadowV: 0,
                            rowDropShadowSpread: 0,
                            rowDropShadowBlur: 0,
                            rowDropShadowColor: "grey",
                            rowDropShadowIsOn: !1,
                            selFilterBlurIsOn: !1,
                            selFilterBlur: 0,
                            selFilterBrightIsOn: !1,
                            selFilterBright: 100,
                            selFilterContIsOn: !1,
                            selFilterCont: 100,
                            selFilterGrayIsOn: !1,
                            selFilterGray: 0,
                            selFilterHueIsOn: !1,
                            selFilterHue: 0,
                            selFilterInvertIsOn: !1,
                            selFilterInvert: 0,
                            selFilterOpacIsOn: !1,
                            selFilterOpac: 100,
                            selFilterSaturIsOn: !1,
                            selFilterSatur: 1,
                            selFilterSepiaIsOn: !1,
                            selFilterSepia: 0,
                            selBgColorIsOn: !0,
							selOverlayOnImage: !1,
                            selFilterBgColor: "#70FF7EFF",
							selBorderColorIsOn: !1,
							selFilterBorderColor: "#000000FF",
							selCTitleColorIsOn: !1,
							selFilterCTitleColor: "#000000FF",
							selCTextColorIsOn: !1,
							selFilterCTextColor: "#000000FF",
							selATitleColorIsOn: !1,
							selFilterATitleColor: "#000000FF",
							selATextColorIsOn: !1,
							selFilterATextColor: "#000000FF",
                            reqFilterBlurIsOn: !1,
                            reqFilterBlur: 0,
                            reqFilterBrightIsOn: !1,
                            reqFilterBright: 100,
                            reqFilterContIsOn: !1,
                            reqFilterCont: 100,
                            reqFilterGrayIsOn: !1,
                            reqFilterGray: 0,
                            reqFilterHueIsOn: !1,
                            reqFilterHue: 0,
                            reqFilterInvertIsOn: !1,
                            reqFilterInvert: 0,
                            reqFilterOpacIsOn: !0,
                            reqFilterOpac: 50,
                            reqFilterSaturIsOn: !1,
                            reqFilterSatur: 1,
                            reqFilterSepiaIsOn: !1,
                            reqFilterSepia: 0,
                            reqBgColorIsOn: !1,
							reqOverlayOnImage: !1,
                            reqFilterBgColor: "#FFFFFFFF",
							reqBorderColorIsOn: !1,
							reqFilterBorderColor: "#000000FF",
							reqCTitleColorIsOn: !1,
							reqFilterCTitleColor: "#000000FF",
							reqCTextColorIsOn: !1,
							reqFilterCTextColor: "#000000FF",
							reqATitleColorIsOn: !1,
							reqFilterATitleColor: "#000000FF",
							reqATextColorIsOn: !1,
							reqFilterATextColor: "#000000FF",
							reqFilterVisibleIsOn: !1,
							unselFilterBlurIsOn: !1,
                            unselFilterBlur: 0,
                            unselFilterBrightIsOn: !1,
                            unselFilterBright: 100,
                            unselFilterContIsOn: !1,
                            unselFilterCont: 100,
                            unselFilterGrayIsOn: !1,
                            unselFilterGray: 0,
                            unselFilterHueIsOn: !1,
                            unselFilterHue: 0,
                            unselFilterInvertIsOn: !1,
                            unselFilterInvert: 0,
                            unselFilterOpacIsOn: !1,
                            unselFilterOpac: 100,
                            unselFilterSaturIsOn: !1,
                            unselFilterSatur: 1,
                            unselFilterSepiaIsOn: !1,
                            unselFilterSepia: 0,
                            rowBorderRadiusTopLeft: 0,
                            rowBorderRadiusTopRight: 0,
                            rowBorderRadiusBottomRight: 0,
                            rowBorderRadiusBottomLeft: 0,
                            rowBorderRadiusIsPixels: !0,
                            rowOverflowIsOn: !0,
                            rowBorderIsOn: !1,
                            rowBorderColor: "red",
                            rowBorderStyle: "solid",
                            rowBorderWidth: 2,
                            objectBorderRadiusTopLeft: 0,
                            objectBorderRadiusTopRight: 0,
                            objectBorderRadiusBottomRight: 0,
                            objectBorderRadiusBottomLeft: 0,
                            objectBorderRadiusIsPixels: !0,
                            objectOverflowIsOn: !0,
                            objectBorderIsOn: !1,
                            objectBorderColor: "red",
                            objectBorderStyle: "solid",
                            objectBorderWidth: 2,
                            objectImgBorderRadiusTopLeft: 0,
                            objectImgBorderRadiusTopRight: 0,
                            objectImgBorderRadiusBottomRight: 0,
                            objectImgBorderRadiusBottomLeft: 0,
                            objectImgBorderRadiusIsPixels: !0,
                            objectImgBorderIsOn: !1,
                            objectImgBorderColor: "red",
                            objectImgBorderStyle: "solid",
                            objectImgBorderWidth: 2,
							objectImageBoxWidth: 50,
                            rowImgBorderRadiusTopLeft: 0,
                            rowImgBorderRadiusTopRight: 0,
                            rowImgBorderRadiusBottomRight: 0,
                            rowImgBorderRadiusBottomLeft: 0,
                            rowImgBorderRadiusIsPixels: !0,
                            rowImgBorderIsOn: !1,
                            rowImgBorderColor: "red",
                            rowImgBorderStyle: "solid",
                            rowImgBorderWidth: 2,
							rowImageBoxWidth: 50,
                            backPackWidth: 1200,
							multiChoiceCounterPosition: 0,
							multiChoiceCounterSize: 170,
                            multiChoiceTextFont: "Times New Roman",
							multiChoiceTextSize: 100
                        }
                    },
                    objectWidths: [{
                        text: "Row",
                        value: ""
                    }, {
                        text: "1 per row",
                        value: "col-12"
                    }, {
                        text: "11/12",
                        value: "col-sm-11"
                    }, {
                        text: "10/12",
                        value: "col-sm-10"
                    }, {
                        text: "9/12",
                        value: "col-sm-9"
                    }, {
                        text: "8/12",
                        value: "col-sm-8"
                    }, {
                        text: "7/12",
                        value: "col-sm-7"
                    }, {
                        text: "2 per row",
                        value: "col-sm-6"
                    }, {
                        text: "5/12",
                        value: "col-sm-5"
                    }, {
                        text: "3 per Row",
                        value: "col-md-4"
                    }, {
                        text: "4 per Row",
                        value: "col-md-3"
                    }, {
                        text: "5 per Row",
                        value: "w-20"
                    }, {
                        text: "6 per Row",
                        value: "col-lg-2"
                    }, {
                        text: "7 per Row ",
                        value: "w-14"
                    }, {
                        text: "8 per Row ",
                        value: "w-12"
                    }, {
                        text: "9 per Row ",
                        value: "w-11"
                    }, {
                        text: "10 per Row",
                        value: "w-10"
                    }, {
                        text: "11 per Row ",
                        value: "w-9"
                    }, {
                        text: "12 per Row",
                        value: "col-xl-1"
                    }],
					saveWait: !1,
					filterStyling: {
						selFilterBlurIsOn: !1,
						selFilterBlur: 0,
						selFilterBrightIsOn: !1,
						selFilterBright: 100,
						selFilterContIsOn: !1,
						selFilterCont: 100,
						selFilterGrayIsOn: !1,
						selFilterGray: 0,
						selFilterHueIsOn: !1,
						selFilterHue: 0,
						selFilterInvertIsOn: !1,
						selFilterInvert: 0,
						selFilterOpacIsOn: !1,
						selFilterOpac: 100,
						selFilterSaturIsOn: !1,
						selFilterSatur: 1,
						selFilterSepiaIsOn: !1,
						selFilterSepia: 0,
						selBgColorIsOn: !0,
						selOverlayOnImage: !1,
						selFilterBgColor: "#70FF7EFF",
						selBorderColorIsOn: !1,
						selFilterBorderColor: "#000000FF",
						selCTitleColorIsOn: !1,
						selFilterCTitleColor: "#000000FF",
						selCTextColorIsOn: !1,
						selFilterCTextColor: "#000000FF",
						selATitleColorIsOn: !1,
						selFilterATitleColor: "#000000FF",
						selATextColorIsOn: !1,
						selFilterATextColor: "#000000FF",
						reqFilterBlurIsOn: !1,
						reqFilterBlur: 0,
						reqFilterBrightIsOn: !1,
						reqFilterBright: 100,
						reqFilterContIsOn: !1,
						reqFilterCont: 100,
						reqFilterGrayIsOn: !1,
						reqFilterGray: 0,
						reqFilterHueIsOn: !1,
						reqFilterHue: 0,
						reqFilterInvertIsOn: !1,
						reqFilterInvert: 0,
						reqFilterOpacIsOn: !0,
						reqFilterOpac: 50,
						reqFilterSaturIsOn: !1,
						reqFilterSatur: 1,
						reqFilterSepiaIsOn: !1,
						reqFilterSepia: 0,
						reqBgColorIsOn: !1,
						reqOverlayOnImage: !1,
						reqFilterBgColor: "#FFFFFFFF",
						reqBorderColorIsOn: !1,
						reqFilterBorderColor: "#000000FF",
						reqCTitleColorIsOn: !1,
						reqFilterCTitleColor: "#000000FF",
						reqCTextColorIsOn: !1,
						reqFilterCTextColor: "#000000FF",
						reqATitleColorIsOn: !1,
						reqFilterATitleColor: "#000000FF",
						reqATextColorIsOn: !1,
						reqFilterATextColor: "#000000FF",
						reqFilterVisibleIsOn: !1,
						unselFilterBlurIsOn: !1,
						unselFilterBlur: 0,
						unselFilterBrightIsOn: !1,
						unselFilterBright: 100,
						unselFilterContIsOn: !1,
						unselFilterCont: 100,
						unselFilterGrayIsOn: !1,
						unselFilterGray: 0,
						unselFilterHueIsOn: !1,
						unselFilterHue: 0,
						unselFilterInvertIsOn: !1,
						unselFilterInvert: 0,
						unselFilterOpacIsOn: !1,
						unselFilterOpac: 100,
						unselFilterSaturIsOn: !1,
						unselFilterSatur: 1,
						unselFilterSepiaIsOn: !1,
						unselFilterSepia: 0
					},
					textStyling: {
						customRowTitle: !1,
						rowTitle: "Times New Roman",
						customRowText: !1,
						rowText: "Times New Roman",
						customObjectTitle: !1,
						objectTitle: "Times New Roman",
						customObjectText: !1,
						objectText: "Times New Roman",
						customAddonTitle: !1,
						addonTitle: "Times New Roman",
						customAddonText: !1,
						addonText: "Times New Roman",
						customScoreText: !1,
						scoreText: "Times New Roman",
						rowTitleTextSize: 200,
						rowTextTextSize: 100,
						objectTitleTextSize: 200,
						objectTextTextSize: 100,
						addonTitleTextSize: 200,
						addonTextTextSize: 100,
						scoreTextSize: 75,
						rowTitleColor: "#000000",
						rowTextColor: "#000000",
						objectTitleColor: "#000000",
						objectTextColor: "#000000",
						addonTitleColor: "#000000",
						addonTextColor: "#000000",
						scoreTextColor: "#000000",
						rowTitleAlign: "center",
						rowTextAlign: "center",
						objectTitleAlign: "center",
						objectTextAlign: "center",
						addonTitleAlign: "center",
						addonTextAlign: "center",
						scoreTextAlign: "center"
					},
					objectImageStyling: {
						objectImgBorderStyle: "solid",
						objectImgBorderWidth: 2,
						objectImageWidth: 100,
						objectImageMarginTop: 0,
						objectImageMarginBottom: 0,
						objectImgBorderRadiusTopLeft: 0,
						objectImgBorderRadiusTopRight: 0,
						objectImgBorderRadiusBottomRight: 0,
						objectImgBorderRadiusBottomLeft: 0,
						objectImgBorderRadiusIsPixels: !0,
						objectImgBorderIsOn: !1,
						objectImgOverflowIsOn: !1,
						objectImgBorderColor: "red",
						objectImgObjectFillStyle: null,
						objectImgObjectFillIsOn: null,
						objectImageBoxWidth: 50
					},
					rowImageStyling: {
						rowImgBorderStyle: "solid",
						rowImgBorderWidth: 2,
						rowImageWidth: 100,
						rowImageMarginTop: 0,
						rowImageMarginBottom: 0,
						rowImgBorderRadiusTopLeft: 0,
						rowImgBorderRadiusTopRight: 0,
						rowImgBorderRadiusBottomRight: 0,
						rowImgBorderRadiusBottomLeft: 0,
						rowImgBorderRadiusIsPixels: !0,
						rowImgBorderIsOn: !1,
						rowImgOverflowIsOn: !1,
						rowImgBorderColor: "red",
						rowImageBoxWidth: 50
					},
					addonImageStyling: {
						useAddonImage: !0,
						addonImgBorderStyle: "solid",
						addonImgBorderWidth: 2,
						addonImageWidth: 100,
						addonImageMarginTop: 0,
						addonImageMarginBottom: 0,
						addonImgBorderRadiusTopLeft: 0,
						addonImgBorderRadiusTopRight: 0,
						addonImgBorderRadiusBottomRight: 0,
						addonImgBorderRadiusBottomLeft: 0,
						addonImgBorderRadiusIsPixels: !0,
						addonImgBorderIsOn: !1,
						addonImgOverflowIsOn: !1,
						addonImgBorderColor: "red",
						addonImgObjectFillStyle: null,
						addonImgObjectFillIsOn: null,
						addonImageBoxWidth: 50
					},
					backgroundStyling: {
						bgColorIsOn: !1,
						backgroundColor: "#FFFFFFFF",
						rowBgColorIsOn: !1,
						rowBgColor: "#FFFFFFFF",
						objectBgColorIsOn: !1,
						objectBgColor: "#FFFFFFFF",
						isBackgroundRepeat: !1,
						isBackgroundFitIn: !1,
						backgroundImage: "",
						isRowBackgroundRepeat: !1,
						isRowBackgroundFitIn: !1,
						rowBackgroundImage: "",
						isObjectBackgroundRepeat: !1,
						isObjectBackgroundFitIn: !1,
						objectBackgroundImage: ""
					},
					objectStyling: {
						objectHeight: !0,
						objectDesignIsAdvanced: !1,
						objectMargin: 10,
						objectTextPadding: 10,
						objectBorderStyle: "solid",
						objectBorderWidth: 2,
						objectBorderIsOn: !1,
						objectDropShadowH: 0,
						objectDropShadowV: 0,
						objectDropShadowBlur: 0,
						objectDropShadowSpread: 0,
						objectDropShadowIsOn: !1,
						objectBorderRadiusTopLeft: 0,
						objectBorderRadiusTopRight: 0,
						objectBorderRadiusBottomRight: 0,
						objectBorderRadiusBottomLeft: 0,
						objectBorderRadiusIsPixels: !0,
						objectOverflowIsOn: !0,
						objectDropShadowColor: "grey",
						objectGradientIsOn: null,
						objectGradient: null,
						objectGradientOnSelect: null,
						objectGradientOnReq: null,
						objectBorderColor: "red",
						objectBorderImage: "",
						objectBorderImageRepeat: "stretch",
						objectBorderImageWidth: 5,
						objectBorderImageSliceTop: 5,
						objectBorderImageSliceBottom: 5,
						objectBorderImageSliceLeft: 5,
						objectBorderImageSliceRight: 5,
						removeSpaceAddonIsOn: !1,
						titlePaddingIsOn: !1
					},
					rowStyling: {
						rowDesignIsAdvanced: !1,
						rowMargin: 10,
						rowBodyMarginSides: 1,
						rowBodyMarginTop: 25,
						rowBodyMarginBottom: 25,
						rowTextPaddingY: 5,
						rowTextPaddingX: 10,
						rowOverflowIsOn: !0,
						rowDropShadowH: 0,
						rowDropShadowV: 0,
						rowDropShadowBlur: 0,
						rowDropShadowSpread: 0,
						rowDropShadowColor: "grey",
						rowButtonXPadding: 0,
						rowButtonYPadding: 0,
						rowDropShadowIsOn: !1,
						rowBorderRadiusTopLeft: 0,
						rowBorderRadiusTopRight: 0,
						rowBorderRadiusBottomRight: 0,
						rowBorderRadiusBottomLeft: 0,
						rowBorderRadiusIsPixels: !0,
						rowBorderStyle: "solid",
						rowBorderWidth: 2,
						rowBorderIsOn: !1,
						rowBorderColor: "red",
						rowMargin: 10,
						rowBodyMarginSides: 1,
						rowBodyMarginBottom: 25,
						rowBodyMarginTop: 25,
						rowGradientIsOn: null,
						rowGradient: null,
						rowDropShadowColor: "grey",
						rowBorderImage: "",
						rowBorderImageRepeat: "stretch",
						rowBorderImageWidth: 5,
						rowBorderImageSliceTop: 5,
						rowBorderImageSliceBottom: 5,
						rowBorderImageSliceLeft: 5,
						rowBorderImageSliceRight: 5
					},
					addonStyling: {
						useAddonDesign: !0,
						addonDesignIsAdvanced: !1,
						addonMargin: 10,
						addonTextPadding: 10,
						addonBorderStyle: "solid",
						addonBorderWidth: 2,
						addonBorderIsOn: !1,
						addonDropShadowH: 0,
						addonDropShadowV: 0,
						addonDropShadowBlur: 0,
						addonDropShadowSpread: 0,
						addonDropShadowIsOn: !1,
						addonBorderRadiusTopLeft: 0,
						addonBorderRadiusTopRight: 0,
						addonBorderRadiusBottomRight: 0,
						addonBorderRadiusBottomLeft: 0,
						addonBorderRadiusIsPixels: !0,
						addonOverflowIsOn: !0,
						addonDropShadowColor: "grey",
						addonGradientIsOn: null,
						addonGradient: null,
						addonGradientOnSelect: null,
						addonGradientOnReq: null,
						addonBorderColor: "red",
						addonBorderImage: "",
						addonBorderImageRepeat: "stretch",
						addonBorderImageWidth: 5,
						addonBorderImageSliceTop: 5,
						addonBorderImageSliceBottom: 5,
						addonBorderImageSliceLeft: 5,
						addonBorderImageSliceRight: 5,
						removeSpaceAddonIsOn: !1,
						useAddonBackgroundImage: !1,
						addonBackgroundImage: "",
						isAddonBackgroundFitIn: !1,
						isAddonBackgroundRepeat: !1,
						addonBgColorIsOn: !1,
						addonBgColor: "#FFFFFFFF",
						addonTitlePaddingIsOn: !1
					},
					multiChoiceStyling: {
						multiChoiceCounterPosition: 0,
						multiChoiceCounterSize: 170,
						multiChoiceTextFont: "Times New Roman",
						multiChoiceTextSize: 100
					},
					globalVariables: {
						text: "",
						snackbar: !1
					},
					scoreUpdate: "",
					exceptedObjects: [],
					exceptedScores: [],
					linkedObjects: [],
					handleKeydown: {}
                },
                getters: {
                    checkRequireds: function(e, t) {
                        return function(o) {
                            if ("undefined" !== typeof o.requireds)
                                for (var i = 0; i < o.requireds.length; i++) {
                                    var s = !1;
                                    if ("undefined" !== typeof o.requireds[i].requireds ? t.checkRequireds(o.requireds[i]) && (s = !0) : s = !0, s) {
                                        if (o.requireds[i].required) {
											if ("id" == o.requireds[i].type) {
												var ri = o.requireds[i].reqId.split("/ON#");
												if (ri.length > 1) {
													if (!e.app.activated.some(RI => {if (RI.includes(ri[0] + "/ON#")) {return parseInt(RI.split("/ON#")[1]) >= parseInt(ri[1])} return !1})) return !1;
												} else {
													if (!e.app.activated.includes(o.requireds[i].reqId)) return !1;
												}
											} else if ("points" == o.requireds[i].type) {
                                                if ("undefined" == typeof o.requireds[i].operator) {
                                                    for (var r = 0; r < e.app.pointTypes.length; r++)
                                                        if (o.requireds[i].reqId == e.app.pointTypes[r].id && o.requireds[i].reqPoints > e.app.pointTypes[r].startingSum) return !1;
                                                } else
                                                    for (var a = 0; a < e.app.pointTypes.length; a++)
                                                        if (o.requireds[i].reqId == e.app.pointTypes[a].id)
                                                            if (isNaN(parseInt(o.requireds[i].reqPoints))) {
                                                                for (var n = 0; n < e.app.pointTypes.length; n++)
                                                                    if (o.requireds[i].startingSum == e.app.pointTypes[n].id) {
                                                                        if (1 == o.requireds[i].operator && e.app.pointTypes[a].startingSum >= e.app.pointTypes[n].startingSum) return !1;
                                                                        if (2 == o.requireds[i].operator && e.app.pointTypes[a].startingSum > e.app.pointTypes[n].startingSum) return !1;
                                                                        if (3 == o.requireds[i].operator && parseInt(e.app.pointTypes[a].startingSum) !== parseInt(e.app.pointTypes[n].startingSum)) return !1;
                                                                        if (4 == o.requireds[i].operator && e.app.pointTypes[a].startingSum < e.app.pointTypes[n].startingSum) return !1;
                                                                        if (5 == o.requireds[i].operator && e.app.pointTypes[a].startingSum <= e.app.pointTypes[n].startingSum) return !1;
                                                                    }
                                                            } else {
                                                                if (1 == o.requireds[i].operator && o.requireds[i].reqPoints >= e.app.pointTypes[a].startingSum) return !1;
                                                                if (2 == o.requireds[i].operator && o.requireds[i].reqPoints > e.app.pointTypes[a].startingSum) return !1;
                                                                if (3 == o.requireds[i].operator && parseInt(o.requireds[i].reqPoints) !== parseInt(e.app.pointTypes[a].startingSum)) return !1;
                                                                if (4 == o.requireds[i].operator && o.requireds[i].reqPoints < e.app.pointTypes[a].startingSum) return !1;
                                                                if (5 == o.requireds[i].operator && o.requireds[i].reqPoints <= e.app.pointTypes[a].startingSum) return !1;
                                                            }
                                            } else if ("or" == o.requireds[i].type) {
												o.requireds[i].orNum = "undefined" === typeof o.requireds[i].orNum ? 1 : o.requireds[i].orNum;
                                                for (var l = 0, c = 0; c < o.requireds[i].orRequired.length; c++) e.app.activated.includes(o.requireds[i].orRequired[c].req) && "" != o.requireds[i].orRequired[c].req && l++;
                                                if (l < o.requireds[i].orNum) return !1;
												else if (o.requireds[i].orNum == 0 && l > 0) return !1;
                                            } else if ("pointCompare" == o.requireds[i].type) {
                                                for (var d = void 0, p = void 0, u = 0; u < e.app.pointTypes.length; u++) o.requireds[i].reqId == e.app.pointTypes[u].id && (d = e.app.pointTypes[u].startingSum);
                                                for (var h = 0; h < e.app.pointTypes.length; h++) o.requireds[i].reqId1 == e.app.pointTypes[h].id && (p = e.app.pointTypes[h].startingSum);
												if ("undefined" !== typeof o.requireds[i].more) {
													for (var cp = 0, a = 0; a < o.requireds[i].more.length; a++) {
														if ("undefined" !== typeof o.requireds[i].more[a].id) {
															for (var s = 0; s < e.app.pointTypes.length; s++) o.requireds[i].more[a].id == e.app.pointTypes[s].id && (cp = e.app.pointTypes[s].startingSum);
														} else {
															cp = o.requireds[i].more[a].points;
														}
														if (1 == o.requireds[i].more[a].operator) p += parseInt(cp);
														else if (2 == o.requireds[i].more[a].operator) p -= parseInt(cp);
														else if (3 == o.requireds[i].more[a].operator) p *= parseInt(cp);
														else if (4 == o.requireds[i].more[a].operator) p /= parseInt(cp);
														else if (5 == o.requireds[i].more[a].operator) p %= parseInt(cp);
													}
												}
                                                if (d <= p && 1 == o.requireds[i].operator) return !1;
                                                if (d != p && 2 == o.requireds[i].operator) return !1;
                                                if (d < p && 3 == o.requireds[i].operator) return !1;
                                                if (d > p && 4 == o.requireds[i].operator) return !1;
                                                if (d >= p && 5 == o.requireds[i].operator) return !1;
                                            } else if ("selFromGroups" == o.requireds[i].type) {
												if ("undefined" !== typeof o.requireds[i].selGroups) {
													o.requireds[i].selFromOperators = "undefined" === typeof o.requireds[i].selFromOperators ? "1" : o.requireds[i].selFromOperators;
													for (var x = 0, f = 0; f < o.requireds[i].selGroups.length; f++)
														if ("undefined" !== typeof e.app.compG[o.requireds[i].selGroups[f]]) {
															var co = e.app.compG[o.requireds[i].selGroups[f]],
																coG = e.app.groups[co.groups],
																z = coG.elements;
																x += e.app.activated.filter(item => z.some(zitem => {if (zitem.id == item.split("/ON#")[0]) {return !0} else return !1})).length;
														}
													if (o.requireds[i].selFromOperators == "1") {
														if (x < o.requireds[i].selNum) return !1;
														else if (o.requireds[i].selNum == 0 && x > 0) return !1;
													} else if (o.requireds[i].selFromOperators == "2") {
														if (x != o.requireds[i].selNum) return !1;
													} else if (o.requireds[i].selFromOperators == "3") {
														if (x > o.requireds[i].selNum) return !1;
														else if (o.requireds[i].selNum == 0 && x > 0) return !1;
													}
												}
											} else if ("selFromRows" == o.requireds[i].type) {
												if ("undefined" !== typeof o.requireds[i].selRows) {
													o.requireds[i].selFromOperators = "undefined" === typeof o.requireds[i].selFromOperators ? "1" : o.requireds[i].selFromOperators;
													for (var x = 0, f = 0; f < o.requireds[i].selRows.length; f++) {
														if ("undefined" !== typeof e.app.compR[o.requireds[i].selRows[f]]) {
															var co = e.app.compR[o.requireds[i].selRows[f]],
																coR = e.app.rows[co.rows];
															x += coR.currentChoices;
														}
													}
													if (o.requireds[i].selFromOperators == "1") {
														if (x < o.requireds[i].selNum) return !1;
														else if (o.requireds[i].selNum == 0 && x > 0) return !1;
													} else if (o.requireds[i].selFromOperators == "2") {
														if (x != o.requireds[i].selNum) return !1;
													} else if (o.requireds[i].selFromOperators == "3") {
														if (x > o.requireds[i].selNum) return !1;
														else if (o.requireds[i].selNum == 0 && x > 0) return !1;
													}
												}
											} else if ("selFromWhole" == o.requireds[i].type) {
												o.requireds[i].selFromOperators = "undefined" === typeof o.requireds[i].selFromOperators ? "1" : o.requireds[i].selFromOperators;
												for (var x = 0, m = 0; m < e.app.rows.length; m++) x += e.app.rows[m].currentChoices;
												if (o.requireds[i].selFromOperators == "1") {
													if (x < o.requireds[i].selNum) return !1;
													else if (o.requireds[i].selNum == 0 && x > 0) return !1;
												} else if (o.requireds[i].selFromOperators == "2") {
													if (x != o.requireds[i].selNum) return !1;
												} else if (o.requireds[i].selFromOperators == "3") {
													if (x > o.requireds[i].selNum) return !1;
													else if (o.requireds[i].selNum == 0 && x > 0) return !1;
												}
											} else if ("gid" == o.requireds[i].type) {
												if ("undefined" !== typeof e.app.compGR[o.requireds[i].reqId]) {
													var co = e.app.compGR[o.requireds[i].reqId],
														cGR = e.app.globalRequirements[co.globalRequirements];
													if (!t.checkRequireds(cGR)) return !1;
												}
											}
                                        }
                                        if (!o.requireds[i].required) {
											if ("id" == o.requireds[i].type) {
												var ri = o.requireds[i].reqId.split("/ON#");
												if (ri.length > 1) {
													if (e.app.activated.some(RI => {if (RI.includes(ri[0] + "/ON#")) {return parseInt(RI.split("/ON#")[1]) >= parseInt(ri[1])} return !1})) return !1;
												} else {
													if (e.app.activated.includes(o.requireds[i].reqId)) return !1;
												}
											} else if ("or" == o.requireds[i].type) {
												o.requireds[i].orNum = "undefined" === typeof o.requireds[i].orNum ? 1 : o.requireds[i].orNum;
                                                for (var l = 0, c = 0; c < o.requireds[i].orRequired.length; c++) e.app.activated.includes(o.requireds[i].orRequired[c].req) || "" == o.requireds[i].orRequired[c].req || l++;
                                                if (l < o.requireds[i].orNum) return !1;
                                            }
                                        }
                                    }
                                }
                            return !0;
                        }
                    }
                },
                mutations: {
                    loadApp: function(e, t) {
                        e.app = t;
                    },
                    cleanActivated: function(e) {
						function checkRequireds(t) {
							if ("undefined" !== typeof t.requireds)
								for (var i = 0; i < t.requireds.length; i++) {
									var s = !1;
									if ("undefined" !== typeof t.requireds[i].requireds ? checkRequireds(t.requireds[i]) && (s = !0) : s = !0, s) {
										if (t.requireds[i].required) {
											if ("id" == t.requireds[i].type) {
												var ri = t.requireds[i].reqId.split("/ON#");
												if (ri.length > 1) {
													if (!e.app.activated.some(RI => {if (RI.includes(ri[0] + "/ON#")) {return parseInt(RI.split("/ON#")[1]) >= parseInt(ri[1])} return !1})) return !1;
												} else {
													if (!e.app.activated.includes(t.requireds[i].reqId)) return !1;
												}
											}
											if ("points" == t.requireds[i].type) {
												if ("undefined" == typeof t.requireds[i].operator) {
													for (var r = 0; r < e.app.pointTypes.length; r++)
														if (t.requireds[i].reqId == e.app.pointTypes[r].id && t.requireds[i].reqPoints > e.app.pointTypes[r].startingSum) return !1;
												} else
													for (var a = 0; a < e.app.pointTypes.length; a++)
														if (t.requireds[i].reqId == e.app.pointTypes[a].id)
															if (isNaN(parseInt(t.requireds[i].reqPoints))) {
																for (var n = 0; n < e.app.pointTypes.length; n++)
																	if (t.requireds[i].startingSum == e.app.pointTypes[n].id) {
																		if (1 == t.requireds[i].operator && e.app.pointTypes[a].startingSum >= e.app.pointTypes[n].startingSum) return !1;
																		if (2 == t.requireds[i].operator && e.app.pointTypes[a].startingSum > e.app.pointTypes[n].startingSum) return !1;
																		if (3 == t.requireds[i].operator && parseInt(e.app.pointTypes[a].startingSum) !== parseInt(e.app.pointTypes[n].startingSum)) return !1;
																		if (4 == t.requireds[i].operator && e.app.pointTypes[a].startingSum < e.app.pointTypes[n].startingSum) return !1;
																		if (5 == t.requireds[i].operator && e.app.pointTypes[a].startingSum <= e.app.pointTypes[n].startingSum) return !1;
																	}
															} else {
																if (1 == t.requireds[i].operator && t.requireds[i].reqPoints >= e.app.pointTypes[a].startingSum) return !1;
																if (2 == t.requireds[i].operator && t.requireds[i].reqPoints > e.app.pointTypes[a].startingSum) return !1;
																if (3 == t.requireds[i].operator && parseInt(t.requireds[i].reqPoints) !== parseInt(e.app.pointTypes[a].startingSum)) return !1;
																if (4 == t.requireds[i].operator && t.requireds[i].reqPoints < e.app.pointTypes[a].startingSum) return !1;
																if (5 == t.requireds[i].operator && t.requireds[i].reqPoints <= e.app.pointTypes[a].startingSum) return !1;
															}
											} else if ("or" == t.requireds[i].type) {
												t.requireds[i].orNum = "undefined" === typeof t.requireds[i].orNum ? 1 : t.requireds[i].orNum;
												for (var l = 0, c = 0; c < t.requireds[i].orRequired.length; c++) e.app.activated.includes(t.requireds[i].orRequired[c].req) && "" != t.requireds[i].orRequired[c].req && l++;
												if (l < t.requireds[i].orNum) return !1;
												else if (t.requireds[i].orNum == 0 && l > 0) return !1;
											} else if ("pointCompare" == t.requireds[i].type) {
												for (var d = void 0, p = void 0, u = 0; u < e.app.pointTypes.length; u++) t.requireds[i].reqId == e.app.pointTypes[u].id && (d = e.app.pointTypes[u].startingSum);
												for (var h = 0; h < e.app.pointTypes.length; h++) t.requireds[i].reqId1 == e.app.pointTypes[h].id && (p = e.app.pointTypes[h].startingSum);
												if ("undefined" !== typeof t.requireds[i].more) {
													for (var cp = 0, a = 0; a < t.requireds[i].more.length; a++) {
														if ("undefined" !== typeof t.requireds[i].more[a].id) {
															for (var s = 0; s < e.app.pointTypes.length; s++) t.requireds[i].more[a].id == e.app.pointTypes[s].id && (cp = e.app.pointTypes[s].startingSum);
														} else {
															cp = t.requireds[i].more[a].points;
														}
														if (1 == t.requireds[i].more[a].operator) p += parseInt(cp);
														else if (2 == t.requireds[i].more[a].operator) p -= parseInt(cp);
														else if (3 == t.requireds[i].more[a].operator) p *= parseInt(cp);
														else if (4 == t.requireds[i].more[a].operator) p /= parseInt(cp);
														else if (5 == t.requireds[i].more[a].operator) p %= parseInt(cp);
													}
												}
												if (d <= p && 1 == t.requireds[i].operator) return !1;
												if (d != p && 2 == t.requireds[i].operator) return !1;
												if (d < p && 3 == t.requireds[i].operator) return !1;
												if (d > p && 4 == t.requireds[i].operator) return !1;
												if (d >= p && 5 == t.requireds[i].operator) return !1;
											} else if ("selFromGroups" == t.requireds[i].type) {
												if ("undefined" !== typeof t.requireds[i].selGroups) {
													t.requireds[i].selFromOperators = "undefined" === typeof t.requireds[i].selFromOperators ? "1" : t.requireds[i].selFromOperators;
													for (var x = 0, f = 0; f < t.requireds[i].selGroups.length; f++)
														if ("undefined" !== typeof e.app.compG[t.requireds[i].selGroups[f]]) {
															var co = e.app.compG[t.requireds[i].selGroups[f]],
																coG = e.app.groups[ct.groups],
																z = coG.elements;
																x += e.app.activated.filter(item => z.some(zitem => {if (zitem.id == item.split("/ON#")[0]) {return !0} else return !1})).length;
														}
													if (t.requireds[i].selFromOperators == "1") {
														if (x < t.requireds[i].selNum) return !1;
														else if (t.requireds[i].selNum == 0 && x > 0) return !1;
													} else if (t.requireds[i].selFromOperators == "2") {
														if (x != t.requireds[i].selNum) return !1;
													} else if (t.requireds[i].selFromOperators == "3") {
														if (x > t.requireds[i].selNum) return !1;
														else if (t.requireds[i].selNum == 0 && x > 0) return !1;
													}
												}
											} else if ("selFromRows" == t.requireds[i].type) {
												if ("undefined" !== typeof t.requireds[i].selRows) {
													t.requireds[i].selFromOperators = "undefined" === typeof t.requireds[i].selFromOperators ? "1" : t.requireds[i].selFromOperators;
													for (var x = 0, f = 0; f < t.requireds[i].selRows.length; f++) {
														if ("undefined" !== typeof e.app.compR[t.requireds[i].selRows[f]]) {
															var co = e.app.compR[t.requireds[i].selRows[f]],
																coR = e.app.rows[ct.rows];
															x += coR.currentChoices;
														}
													}
													if (t.requireds[i].selFromOperators == "1") {
														if (x < t.requireds[i].selNum) return !1;
														else if (t.requireds[i].selNum == 0 && x > 0) return !1;
													} else if (t.requireds[i].selFromOperators == "2") {
														if (x != t.requireds[i].selNum) return !1;
													} else if (t.requireds[i].selFromOperators == "3") {
														if (x > t.requireds[i].selNum) return !1;
														else if (t.requireds[i].selNum == 0 && x > 0) return !1;
													}
												}
											} else if ("selFromWhole" == t.requireds[i].type) {
												t.requireds[i].selFromOperators = "undefined" === typeof t.requireds[i].selFromOperators ? "1" : t.requireds[i].selFromOperators;
												for (var x = 0, m = 0; m < e.app.rows.length; m++) x += e.app.rows[m].currentChoices;
												if (t.requireds[i].selFromOperators == "1") {
													if (x < t.requireds[i].selNum) return !1;
													else if (t.requireds[i].selNum == 0 && x > 0) return !1;
												} else if (t.requireds[i].selFromOperators == "2") {
													if (x != t.requireds[i].selNum) return !1;
												} else if (t.requireds[i].selFromOperators == "3") {
													if (x > t.requireds[i].selNum) return !1;
													else if (t.requireds[i].selNum == 0 && x > 0) return !1;
												}
											} else if ("gid" == t.requireds[i].type) {
												if ("undefined" !== typeof e.app.compGR[t.requireds[i].reqId]) {
													var co = e.app.compGR[t.requireds[i].reqId],
														cGR = e.app.globalRequirements[co.globalRequirements];
													if (!checkRequireds(cGR)) return !1;
												}
											}
										}
										if (!t.requireds[i].required) {
											if ("id" == t.requireds[i].type) {
												var ri = t.requireds[i].reqId.split("/ON#");
												if (ri.length > 1) {
													if (e.app.activated.some(RI => {if (RI.includes(ri[0] + "/ON#")) {return parseInt(RI.split("/ON#")[1]) >= parseInt(ri[1])} return !1})) return !1;
												} else {
													if (e.app.activated.includes(t.requireds[i].reqId)) return !1;
												}
											} else if ("or" == t.requireds[i].type) {
												t.requireds[i].orNum = "undefined" === typeof t.requireds[i].orNum ? 1 : t.requireds[i].orNum;
												for (var l = 0, c = 0; c < t.requireds[i].orRequired.length; c++) e.app.activated.includes(t.requireds[i].orRequired[c].req) || "" == t.requireds[i].orRequired[c].req || l++;
												if (l < t.requireds[i].orNum) return !1;
											}
										}
									}
								}
							return !0;
						}
						function checkActivateOther(t) {
							if (t.activateOtherChoice && "undefined" !== typeof t.activateThisChoice) {
								if (t.isActivateRandom) {
									if (t.isSelectableMultiple) {
										for (var b = 0; b < t.multipleUseVariable; b++) {
											for (var c = 0; c < t.activatedRandomMul[b].length; c++) {
												var y = t.activatedRandomMul[b][c].split("/ON#"),
													yCo = e.app.comp[y[0]],
													yCoR = yCo.type == "app" ? e.app.rows[yCo.rows] : e.app.backpack[yCo.rows],
													yCoO = yCoR.objects[yCo.objects];
												if (tmpList.has(y[0])) {
													preserveList.add(y[0]);
													if (!t.isAllowDeselect) forcedList.add(y[0]);
													if (y.length > 1) {
														if (forcedMulList.has(y[0])) forcedMulList.set(y[0], forcedMulList.get(y[0]) + parseInt(y[1]));
														else forcedMulList.set(y[0], parseInt(y[1]));
														if (multiList.has(y[0])) {
															if (!yCoO.notDeselectedByClean) multiList.set(y[0], multiList.get(y[0]) + parseInt(y[1]));
														} else multiList.set(y[0], parseInt(y[1]));
													}
													checkActivateOther(yCoO);
												} else {
													if (y.length > 1) {
														if ("undefined" === typeof t.cancelForcedActivated) t.cancelForcedActivated = [];
														t.cancelForcedActivated.push(y[0] + "/ON#" + y[1]);
													}
												}
											}
										}
									} else {
										if ("undefined" !== typeof t.activatedRandom) {
											for (var b = 0; b < t.activatedRandom.length; b++) {
												var y = t.activatedRandom[b].split("/ON#"),
													yCo = e.app.comp[y[0]],
													yCoR = yCo.type == "app" ? e.app.rows[yCo.rows] : e.app.backpack[yCo.rows],
													yCoO = yCoR.objects[yCo.objects];
												if (tmpList.has(y[0])) {
													preserveList.add(y[0]);
													if (!t.isAllowDeselect) forcedList.add(y[0]);
													if (y.length > 1) {
														if (forcedMulList.has(y[0])) forcedMulList.set(y[0], forcedMulList.get(y[0]) + parseInt(y[1]));
														else forcedMulList.set(y[0], parseInt(y[1]));
														if (multiList.has(y[0])) {
															if (!yCoO.notDeselectedByClean) multiList.set(y[0], multiList.get(y[0]) + parseInt(y[1]));
														} else multiList.set(y[0], parseInt(y[1]));
													}
													checkActivateOther(yCoO);
												} else {
													if (y.length > 1) {
														if ("undefined" === typeof t.cancelForcedActivated) t.cancelForcedActivated = [];
														t.cancelForcedActivated.push(y[0] + "/ON#" + y[1]);
													}
												}
											}
										}
									}
								} else {
									var y = t.activateThisChoice.split(",");
									for (var b = 0; b < y.length; b++) {
										var yb = y[b].split("/ON#"),
											yCo = e.app.comp[yb[0]],
											yCoR = yCo.type == "app" ? e.app.rows[yCo.rows] : e.app.backpack[yCo.rows],
											yCoO = yCoR.objects[yCo.objects];
										if (tmpList.has(yb[0])) {
											preserveList.add(yb[0]);
											if (!t.isAllowDeselect) forcedList.add(yb[0]);
											if (yb.length > 1) {
												if (forcedMulList.has(yb[0])) forcedMulList.set(yb[0], forcedMulList.get(yb[0]) + parseInt(yb[1]));
												else forcedMulList.set(yb[0], parseInt(yb[1]));
												if (multiList.has(yb[0])) {
													if (!yCoO.notDeselectedByClean) multiList.set(yb[0], multiList.get(yb[0]) + parseInt(yb[1]));
												} else multiList.set(yb[0], parseInt(yb[1]));
											}
											checkActivateOther(yCoO);
										} else {
											if (yb.length > 1) {
												if ("undefined" === typeof t.cancelForcedActivated) t.cancelForcedActivated = [];
												t.cancelForcedActivated.push(yb[0] + "/ON#" + yb[1]);
											}
										}
									}
								}
							}
						}
						function clearChoices(t) {
							if (t.textfieldIsOn)
								for (var m = 0; m < e.app.words.length; m++) e.app.words[m].id == t.idOfTheTextfieldWord && (e.app.words[m].replaceText = "undefined" === typeof t.wordChangeDeselect ? "" : t.wordChangeDeselect), e.app.wordMap[e.app.words[m].id] = e.app.words[m].replaceText;
							if (t.isImageUpload) t.image = t.defaultImage;
							if ("undefined" !== typeof t.activatedRandom) t.activatedRandom.splice(0);
							if ("undefined" !== typeof t.activatedRandomMul) t.activatedRandomMul.splice(0);
							if (t.multiplyPointtypeIsOnCheck) t.multiplyPointtypeIsOnCheck = !1;
							if (t.dividePointtypeIsOnCheck) t.dividePointtypeIsOnCheck = !1;
							if (t.isActive) {
								if (t.changeBackground) {
									if (t.changeBgImage) {
										var c = e.app.styling.backgroundImage;
										e.app.styling.backgroundImage = t.bgImage;
										t.bgImage = c;
									} else {
										var c = e.app.styling.backgroundColor;
										e.app.styling.backgroundColor = t.changedBgColorCode;
										t.changedBgColorCode = c;
									}
								}
								if (t.changePointBar) {
									if (t.changeBarBgColorIsOn) {
										var c = e.app.styling.barBackgroundColor;
										e.app.styling.barBackgroundColor = t.changedBarBgColor;
										t.changedBarBgColor = c;
									}
									if (t.changeBarTextColorIsOn) {
										var c = e.app.styling.barTextColor;
										e.app.styling.barTextColor = t.changedBarTextColor;
										t.changedBarTextColor = c;
									}
									if (t.changeBarIconColorIsOn) {
										var c = e.app.styling.barIconColor;
										e.app.styling.barIconColor = t.changedBarIconColor;
										t.changedBarIconColor = c;
									}
								}
								if (t.setBgmIsOn){
									if ("undefined" !== typeof bgmPlayer && e.app.bgmObjectId == t.id) {
										bgmPlayer.stopVideo(), e.app.bgmObjectId = "", e.app.bgmIsPlaying = !1;
										clearInterval(e.app.bgmFadeInterval);
										e.app.bgmFadeInterval = 0;
										e.app.lastFadeTime = 0;
										e.app.isFadingOut = !1;
										clearInterval(e.app.bgmPlayInterval);
										e.app.bgmPlayInterval = 0;
										clearInterval(e.app.bgmTitleInterval);
										e.app.bgmTitleInterval = 0;
										e.app.bgmTitle = "No Audio Title";
										e.app.curBgmTime = 0;
										e.app.curBgmLength = 0;
									}
								}
								if (t.isContentHidden) {
									for (var a = 0; a < t.hiddenContentsRow.length; a++) {
										if ("undefined" !== typeof e.app.compR[t.hiddenContentsRow[a]]) {
											var co = e.app.compR[t.hiddenContentsRow[a]],
												coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows];
											for (var b = 0; b < t.hiddenContentsType.length; b++) {
												if (t.hiddenContentsType[b] == "1") coR.objectTitleRemoved = !1;
												else if (t.hiddenContentsType[b] == "2") coR.objectImageRemoved = !1;
												else if (t.hiddenContentsType[b] == "3") coR.objectTextRemoved = !1;
												else if (t.hiddenContentsType[b] == "4") coR.objectScoreRemoved = !1;
												else if (t.hiddenContentsType[b] == "5") coR.objectRequirementRemoved = !1;
												else if (t.hiddenContentsType[b] == "6") coR.addonTitleRemoved = !1;
												else if (t.hiddenContentsType[b] == "7") coR.addonImageRemoved = !1;
												else if (t.hiddenContentsType[b] == "8") coR.addonTextRemoved = !1;
											}
										}
									}
								}
								if ("undefined" !== typeof t.cancelForcedActivated) t.cancelForcedActivated.splice(0);
							}
							t.isActive = !1;
						}
						function discountS(t, coS) {
							if (t.stackableDiscount) {
								var scoreVal = parseInt(coS.value),
									stackDiscount = 0,
									stackDiscountCal = 0,
									bTempStacked = !1,
									tmpNum = 0,
									discountedFrom = [],
									aDiscount = [];
								if (coS.notStackableDiscount) {
									for (var f = 0; f < coS.tmpDiscount.length; f++) {
										if (coS.tmpDiscount[f][0]) {
											discountedFrom = coS.tmpDiscount[f][1];
											discountedFrom.push(t.id);
											scoreVal = coS.tmpDiscount[f][2];
											bTempStacked = !0;
											tmpNum = f;
										}
									}
									if (1 == t.discountOperator) stackDiscount = scoreVal - parseInt(t.discountValue);
									else if (2 == t.discountOperator) stackDiscount = scoreVal + parseInt(t.discountValue);
									else if (3 == t.discountOperator) stackDiscount = parseInt(scoreVal * t.discountValue);
									else if (4 == t.discountOperator) stackDiscount = parseInt(scoreVal / t.discountValue);
									stackDiscountCal = stackDiscount;
									if (t.discountLowLimitIsOn && "undefined" !== typeof t.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(t.discountLowLimit));
									if (t.discountShow) {
										if (t.discountAfterText != "") {
											if ("undefined" === typeof coS.discountTextA) coS.discountTextA = [];
											var dA = !1;
											if (coS.discountTextA.includes(t.discountAfterText)) dA = !0;
											if (t.discountTextDuplicated) {
												if ("undefined" === typeof coS.dupTextA) coS.dupTextA = {};
												if (dA) {
													coS.dupTextA[t.discountAfterText] = coS.dupTextA[t.discountAfterText] + 1
												} else {
													coS.dupTextA[t.discountAfterText] = 1;
													coS.discountTextA.push(t.discountAfterText);
												}
											} else {
												coS.discountTextA.push(t.discountAfterText);
											}
										}
										if (t.discountBeforeText != "") {
											if ("undefined" === typeof coS.discountTextB) coS.discountTextB = [];
											var dB = !1;
											if (coS.discountTextB.includes(t.discountBeforeText)) dB = !0
											if (t.discountTextDuplicated) {
												if ("undefined" === typeof coS.dupTextB) coS.dupTextB = {};
												if (dB) {
													coS.dupTextB[t.discountBeforeText] = coS.dupTextB[t.discountBeforeText] + 1
												} else {
													coS.dupTextB[t.discountBeforeText] = 1;
													coS.discountTextB.push(t.discountBeforeText);
												}
											} else {
												coS.discountTextB.push(t.discountBeforeText);
											}
										}
									}
									if (coS.discountScore > stackDiscount) {
										aDiscount.push(false);
										aDiscount.push(coS.discountedFrom);
										aDiscount.push(coS.discountScoreCal);
										aDiscount.push(coS.discountScore);
										if (coS.discountShow) {
											aDiscount.push(true);
											aDiscount.push(t.discountBeforeText);
											aDiscount.push(t.discountAfterText);
										} else {
											aDiscount.push(false);
										}
										coS.discountScore = stackDiscount;
										coS.discountScoreCal = stackDiscountCal;
										if ("undefined" !== typeof coS.discountTextA) coS.discountAfterText = coS.discountTextA.join("");
										if ("undefined" !== typeof coS.discountTextB) coS.discountBeforeText = coS.discountTextB.join("");
										if ("object" !== typeof coS.discountedFrom) coS.discountedFrom = [];
										coS.discountedFrom.push(...discountedFrom);
										if (bTempStacked) coS.tmpDiscount.splice(tmpNum, 1);
										coS.tmpDiscount.push(aDiscount);
										coS.notStackableDiscount = !1;
									} else {
										discountedFrom.push(t.id);
										if (bTempStacked) {
											coS.tmpDiscount[tmpNum][1] = discountedFrom;
											coS.tmpDiscount[tmpNum][2] = stackDiscountCal;
											coS.tmpDiscount[tmpNum][3] = stackDiscount;
										} else {
											if ("undefined" === typeof coS.tmpDiscount) coS.tmpDiscount = [];
											"undefined" === typeof t.stackableDiscount ? aDiscount.push(false) : aDiscount.push(t.stackableDiscount);
											aDiscount.push(discountedFrom);
											aDiscount.push(stackDiscountCal);
											aDiscount.push(stackDiscount);
											coS.tmpDiscount.push(aDiscount);
										}
									}
								} else {
									scoreVal = coS.discountIsOn ? coS.discountScoreCal : parseInt(coS.value);
									if (1 == t.discountOperator) stackDiscount = scoreVal - parseInt(t.discountValue);
									else if (2 == t.discountOperator) stackDiscount = scoreVal + parseInt(t.discountValue);
									else if (3 == t.discountOperator) stackDiscount = parseInt(scoreVal * t.discountValue);
									else if (4 == t.discountOperator) stackDiscount = parseInt(scoreVal / t.discountValue);
									stackDiscountCal = stackDiscount;
									if (t.discountLowLimitIsOn && "undefined" !== typeof t.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(t.discountLowLimit));
									if (t.discountShow) {
										if (t.discountAfterText != "") {
											coS.discountShow = t.discountShow;
											if ("undefined" === typeof coS.discountTextA) coS.discountTextA = [];
											var dA = !1;
											if (coS.discountTextA.includes(t.discountAfterText)) dA = !0;
											if (t.discountTextDuplicated) {
												if ("undefined" === typeof coS.dupTextA) coS.dupTextA = {};
												if (dA) {
													coS.dupTextA[t.discountAfterText] = coS.dupTextA[t.discountAfterText] + 1
												} else {
													"undefined" !== typeof coS.discountAfterText ? coS.discountAfterText = coS.discountAfterText + t.discountAfterText : coS.discountAfterText = t.discountAfterText;
													coS.dupTextA[t.discountAfterText] = 1;
													coS.discountTextA.push(t.discountAfterText);
												}
											} else {
												"undefined" !== typeof coS.discountAfterText ? coS.discountAfterText = coS.discountAfterText + t.discountAfterText : coS.discountAfterText = t.discountAfterText;
												coS.discountTextA.push(t.discountAfterText);
											}
										}
										if (t.discountBeforeText != "") {
											coS.discountShow = t.discountShow;
											if ("undefined" === typeof coS.discountTextB) coS.discountTextB = [];
											var dB = !1;
											if (coS.discountTextB.includes(t.discountBeforeText)) dB = !0
											if (t.discountTextDuplicated) {
												if ("undefined" === typeof coS.dupTextB) coS.dupTextB = {};
												if (dB) {
													coS.dupTextB[t.discountBeforeText] = coS.dupTextB[t.discountBeforeText] + 1
												} else {
													"undefined" !== typeof coS.discountBeforeText ? coS.discountBeforeText = coS.discountBeforeText + t.discountBeforeText : coS.discountBeforeText = t.discountBeforeText;
													coS.dupTextB[t.discountBeforeText] = 1;
													coS.discountTextB.push(t.discountBeforeText);
												}
											} else {
												"undefined" !== typeof coS.discountBeforeText ? coS.discountBeforeText = coS.discountBeforeText + t.discountBeforeText : coS.discountBeforeText = t.discountBeforeText;
												coS.discountTextB.push(t.discountBeforeText);
											}
										}
									}
									if ("object" !== typeof coS.discountedFrom) coS.discountedFrom = [];
									coS.discountScore = stackDiscount;
									coS.discountScoreCal = stackDiscountCal;
									coS.discountedFrom.push(t.id);
									if (!coS.discountIsOn) coS.discountIsOn = true;
								}
							} else {
								var scoreVal = parseInt(coS.value),
									stackDiscount = 0,
									stackDiscountCal = 0,
									aDiscount = [];
								if ("undefined" === typeof coS.tmpDiscount) coS.tmpDiscount = [];
								if (1 == t.discountOperator) stackDiscount = scoreVal - parseInt(t.discountValue);
								else if (2 == t.discountOperator) stackDiscount = scoreVal + parseInt(t.discountValue);
								else if (3 == t.discountOperator) stackDiscount = parseInt(scoreVal * t.discountValue);
								else if (4 == t.discountOperator) stackDiscount = parseInt(scoreVal / t.discountValue);
								stackDiscountCal = stackDiscount;
								if (t.discountLowLimitIsOn && "undefined" !== typeof t.discountLowLimit) stackDiscount = Math.max(stackDiscount, parseInt(t.discountLowLimit));
								if (coS.discountIsOn) {
									"undefined" === typeof t.stackableDiscount ? aDiscount.push(false) : aDiscount.push(t.stackableDiscount);
									if (coS.discountScore > stackDiscount) {
										aDiscount.push(coS.discountedFrom);
										aDiscount.push(coS.discountScoreCal);
										aDiscount.push(coS.discountScore);
										if (coS.discountShow) {
											aDiscount.push(true);
											aDiscount.push(t.discountBeforeText);
											aDiscount.push(t.discountAfterText);
										} else {
											aDiscount.push(false);
										}
										coS.discountScore = stackDiscount;
										coS.discountScoreCal = stackDiscountCal;
										coS.discountShow = t.discountShow;
										coS.discountBeforeText = t.discountBeforeText;
										coS.discountAfterText = t.discountAfterText;
										coS.discountedFrom = t.id;
										coS.notStackableDiscount = true;
									} else {
										aDiscount.push(t.id);
										aDiscount.push(stackDiscountCal);
										aDiscount.push(stackDiscount);
										if (t.discountShow) {
											aDiscount.push(true);
											aDiscount.push(t.discountBeforeText);
											aDiscount.push(t.discountAfterText);
										} else {
											aDiscount.push(false);
										}
									}
									coS.tmpDiscount.push(aDiscount);
								} else {
									coS.discountScore = stackDiscount;
									coS.discountScoreCal = stackDiscountCal;
									if (t.discountShow) coS.discountShow = t.discountShow, coS.discountBeforeText = t.discountBeforeText, coS.discountAfterText = t.discountAfterText;
									coS.discountIsOn = true;
									coS.discountedFrom = t.id;
									coS.notStackableDiscount = true;
								}
							}
						}
						var tmpList = new Set(e.app.activated.map(item => item.split("/ON#")[0])),
							preserveList = new Set(),
							forcedList = new Set(),
							multiList = new Map(),
							forcedMulList = new Map();
						e.app.activated.splice(0), e.app.mdObjects.splice(0);
						if (e.app.bgmFadeInterval !== 0) clearInterval(e.app.bgmFadeInterval), e.app.bgmFadeInterval = 0;
						if (e.app.bgmFadeTimer !== 0) clearInterval(e.app.bgmFadeTimer), e.app.bgmFadeTimer = 0;
						e.app.isFadingOut = !1, e.app.lastFadeTime = 0;
						for (const item of tmpList) {
							if ("undefined" !== typeof e.app.comp[item]) {
								var co = e.app.comp[item],
									coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows],
									coO = coR.objects[co.objects];
								if (coO.notDeselectedByClean) {
									if (coO.isSelectableMultiple && coO.isMultipleUseVariable) multiList.set(coO.id, coO.multipleUseVariable);
									preserveList.add(coO.id);
									checkActivateOther(coO);
								}
							}
						}
                        for (var o = 0; o < e.app.rows.length; o++) {
							var coR = e.app.rows[o];
							coR.isEditModeOn = !1;
							coR.allowedChoicesChange > 0 && (coR.allowedChoices -= coR.allowedChoicesChange, coR.allowedChoicesChange = 0);
							for (var t = 0; t < coR.objects.length; t++) {
								var coO = coR.objects[t];
								for (var r = 0; r < coO.scores.length; r++) {
									var coS = coO.scores[r];
									if (coO.isSelectableMultiple) {
										if (coO.isMultipleUseVariable) {
											if (coO.multipleUseVariable < 0) {
												for (var k = 0; k <= Math.abs(coO.multipleUseVariable) - 1; k++) {
													coS.isActiveMulMinus[k] = !1;
												}
											} else {
												for (var k = 0; k <= coO.multipleUseVariable - 1; k++) {
													coS.isActiveMul[k] = !1;
												}
											}
										}
									} else {
										coS.isActive = !1;
									}
									coS.discountIsOn = !1;
									if ("undefined" !== typeof coS.discountedFrom) coS.discountedFrom = "";
									coS.discountShow = !1;
									if ("undefined" !== typeof coS.discountScore) coS.discountScore = 0;
									if ("undefined" !== typeof coS.discountScoreCal) coS.discountScoreCal = 0;
									if ("undefined" !== typeof coS.tmpDisScore) coS.tmpDisScore = 0;
									if ("undefined" !== typeof coS.tmpDiscount) coS.tmpDiscount.splice(0);
									if ("undefined" !== typeof coS.isChangeDiscount) coS.isChangeDiscount = !1;
									if ("undefined" !== typeof coS.dupTextA) coS.dupTextA = {};
									if ("undefined" !== typeof coS.dupTextB) coS.dupTextB = {};
									if ("undefined" !== typeof coS.discountTextA) coS.discountTextA.splice(0);
									if ("undefined" !== typeof coS.discountTextB) coS.discountTextB.splice(0);
									if ("undefined" !== typeof coS.discountAfterText) coS.discountAfterText = "";
									if ("undefined" !== typeof coS.discountBeforeText) coS.discountBeforeText = "";
									if (coS.setValue) coS.setValue = !1;
								}
								coO.forcedActivated = !1;
								if (coO.isSelectableMultiple) {
									if (coO.isMultipleUseVariable)
										coO.multipleUseVariable = 0, coO.selectedThisManyTimesProp = 0, coO.numMultipleTimesMinus = coO.initMultipleTimesMinus, e.app.objectMap[coO.id] = 0;
									else
										for (var a = 0; a < e.app.pointTypes.length; a++) e.app.pointTypes[a].id == coO.multipleScoreId && (coO.selectedThisManyTimesProp = e.app.pointTypes[a].initValue);
								}
								if (!preserveList.has(coO.id)) {
									clearChoices(coO);
								}
							}
							coR.currentChoices = 0;
						}
						for (var a = 0; a < e.app.pointTypes.length; a++) e.app.pointTypes[a].startingSum = e.app.pointTypes[a].initValue, e.app.pointTypeMap[e.app.pointTypes[a].id] = e.app.pointTypes[a].startingSum;
						e.app.wordChangeComplete = !1;
						for (const item of preserveList) {
							if ("undefined" !== typeof e.app.comp[item]) {
								var p = e.app.comp[item],
									pR = p.type == "app" ? e.app.rows[p.rows] : e.app.backpack[p.rows],
									pO = pR.objects[p.objects];
								if(checkRequireds(pO)) {
									if (pO.discountOther) {
										if ("undefined" !== typeof pO.discountOperator && "undefined" !== typeof pO.discountValue) {
											if (pO.isDisChoices) {
												if ("undefined" !== typeof pO.discountChoices) {
													for (var a = 0; a < pO.discountChoices.length; a++) {
														if ("undefined" !== typeof e.app.comp[pO.discountChoices[a]]) {
															var co = e.app.comp[pO.discountChoices[a]],
																coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows],
																coO = coR.objects[co.objects];
															for (var c = 0; c < coO.scores.length; c++) {
																var coS = coO.scores[c];
																if (pO.discountPointTypes.length === 0 || pO.discountPointTypes.includes(coS.id)) {
																	if (!coS.isNotDiscountable) {
																		discountS(pO, coS);
																	}
																}
															}
														}
													}
												}
											} else {
												if("undefined" !== typeof pO.discountGroups) {
													for (var a = 0; a < e.app.groups.length; a++) {
														if (pO.discountGroups.includes(e.app.groups[a].id)) {
															for (var b = 0; b < e.app.groups[a].elements.length; b++)
																if ("undefined" !== typeof e.app.comp[e.app.groups[a].elements[b].id]) {
																	var co = e.app.comp[e.app.groups[a].elements[b].id],
																		coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows],
																		coO = coR.objects[co.objects];
																	for (var c = 0; c < coO.scores.length; c++) {
																		var coS = coO.scores[c];
																		if (pO.discountPointTypes.length === 0 || pO.discountPointTypes.includes(coS.id)) {
																			if (!coS.isNotDiscountable) {
																				discountS(pO, coS);
																			}
																		}
																	}
																}
														}
													}
												}
											} 
										}
									}
									if (pO.addToAllowChoice)
										if ("undefined" !== typeof e.app.compR[pO.idOfAllowChoice]) {
											var co = e.app.compR[pO.idOfAllowChoice],
												coR = co.type == "app" ? e.app.rows[co.rows] : e.app.backpack[co.rows];
											coR.allowedChoices += pO.numbAddToAllowChoice, isNaN(coR.allowedChoicesChange) && (coR.allowedChoicesChange = 0), coR.allowedChoicesChange += pO.numbAddToAllowChoice;
										}
									if (pO.isSelectableMultiple) {
										if (pO.isMultipleUseVariable) {
											pO.multipleUseVariable = multiList.get(pO.id);
											pO.selectedThisManyTimesProp = pO.multipleUseVariable;
											e.app.activated.push(pO.id + "/ON#" + pO.multipleUseVariable);
											if (forcedMulList.has(pO.id)) {
												pO.numMultipleTimesMinus = forcedMulList.get(pO.id);
												pO.forcedActivated = !0;
											}
										}
									} else {
										e.app.activated.push(pO.id);
										if (forcedList.has(pO.id)) pO.forcedActivated = !0;
									}
									pR.currentChoices += 1;
								} else {
									preserveList.delete(pO.id);
								}
							}
						}
						for (const item of preserveList) {
							if ("undefined" !== typeof e.app.comp[item]) {
								var p = e.app.comp[item],
									pR = p.type == "app" ? e.app.rows[p.rows] : e.app.backpack[p.rows],
									pO = pR.objects[p.objects];
								if (pO.isSelectableMultiple) {
									if (pO.isMultipleUseVariable) {
										if ("undefined" !== typeof pO.scores) {
											for (var i = 0; i < pO.scores.length; i++) {
												for (var s = 0; s < e.app.pointTypes.length; s++) {
													if (e.app.pointTypes[s].id == pO.scores[i].id) {
														for (var a = 0; a < pO.multipleUseVariable; a++) {
															if (checkRequireds(pO.scores[i]) && !pO.scores[i].isActiveMul[a]) {
																if (pO.scores[i].multiplyByTimes) {
																	e.app.pointTypes[s].startingSum -= (pO.scores[i].discountIsOn ? pO.scores[i].discountScore * (a + 1) : parseInt(pO.scores[i].value) * (a + 1));
																	pO.scores[i].isActiveMul[a] = !0;
																} else {
																	e.app.pointTypes[s].startingSum -= (pO.scores[i].discountIsOn ? pO.scores[i].discountScore : parseInt(pO.scores[i].value));
																	pO.scores[i].isActiveMul[a] = !0;
																}
															}
														}
														e.app.pointTypeMap[e.app.pointTypes[s].id] = e.app.pointTypes[s].startingSum;
													}
												}
											}
										}
									}
								}
								for (var g = 0; g < pO.scores.length; g++) {
									if (checkRequireds(pO.scores[g]) && !pO.scores[g].isActive)
										for (var w = 0; w < e.app.pointTypes.length; w++) e.app.pointTypes[w].id == pO.scores[g].id && (e.app.pointTypes[w].startingSum -= (pO.scores[g].discountIsOn ? pO.scores[g].discountScore : parseInt(pO.scores[g].value)), pO.scores[g].isActive = !0, e.app.pointTypeMap[e.app.pointTypes[w].id] = e.app.pointTypes[w].startingSum);
								}
								if (pO.multiplyPointtypeIsOn) {
									pO.multiplyPointtypeIsOnCheck = !0;
									for (var m = 0; m < e.app.pointTypes.length; m++)
										if (e.app.pointTypes[m].id == pO.pointTypeToMultiply) {
											if (pO.multiplyPointtypeIsId)
												for (var x = 0; x < e.app.pointTypes.length; x++) e.app.pointTypes[x].id == pO.multiplyWithThis && (pO.startingSumAtMultiply = e.app.pointTypes[m].startingSum * e.app.pointTypes[x].startingSum, e.app.pointTypes[m].startingSum *= e.app.pointTypes[x].startingSum);
											else pO.startingSumAtMultiply = e.app.pointTypes[m].startingSum * pO.multiplyWithThis, e.app.pointTypes[m].startingSum *= pO.multiplyWithThis;
											e.app.mdObjects.push(pO);
											e.app.pointTypeMap[e.app.pointTypes[m].id] = e.app.pointTypes[m].startingSum;
										}
								}
								if (pO.dividePointtypeIsOn) {
									pO.dividePointtypeIsOnCheck = !0;
									for (var m = 0; m < e.app.pointTypes.length; m++) e.app.pointTypes[m].id == pO.pointTypeToDivide && (pO.startingSumAtDivide = e.app.pointTypes[m].startingSum / pO.divideWithThis, e.app.pointTypes[m].startingSum /= pO.divideWithThis);
									e.app.mdObjects.push(pO);
									e.app.pointTypeMap[e.app.pointTypes[m].id] = e.app.pointTypes[m].startingSum;
								}
							}
						}
                    },
                    addNewPointType: function(e, t) {
                        e.app.pointTypes.push({
                            id: t.id,
                            name: t.name,
                            startingSum: t.startingSum,
                            initValue: t.initValue,
                            activatedId: t.activatedId,
                            afterText: t.afterText,
                            beforeText: t.name + ":",
							isNotShownPointBar: t.isNotShownPointBar,
							isNotShownObjects: t.isNotShownObjects
                        });
                    },
                    addNewGroup: function(e, t) {
                        e.app.groups.push({
                            id: t.id,
                            rowType: t.rowType,
                            name: t.name,
                            elements: []
                        })
                    },
					addNewRowDesignGroup: function(e, t) {
						e.app.rowDesignGroups.push({
                            id: t.id,
                            name: t.name,
							activatedId: t.activatedId,
                            elements: [],
							backpackElements: [],
							styling: {}
                        })
					},
					addNewObjectDesignGroup: function(e, t) {
						e.app.objectDesignGroups.push({
                            id: t.id,
                            name: t.name,
							activatedId: t.activatedId,
                            elements: [],
							backpackElements: [],
							styling: {}
                        })
					},
                    addNewVariable: function(e, t) {
                        e.app.variables.push({
                            id: t.id,
                            isTrue: t.isTrue
                        })
                    },
                    addNewWord: function(e, t) {
                        e.app.words.push({
                            id: t.id,
                            replaceText: t.replaceText
                        })
                    },
					addNewGlobalRequirement: function(e, t) {
						e.app.globalRequirements.push({
							id: t.id,
							name: t.name,
							requireds: [],
							type: "gRequire"
						})
					},
                    deleteRow: function(e, t) {
                        e.app.rows.splice(e.app.rows.indexOf(t), 1)
                    },
                    deletePointType: function(e, t) {
                        e.app.pointTypes.splice(e.app.pointTypes.indexOf(t), 1)
                    },
                    deleteGroup: function(e, t) {
                        e.app.groups.splice(e.app.groups.indexOf(t), 1)
                    },
                    deleteVariable: function(e, t) {
                        e.app.variables.splice(e.app.variables.indexOf(t), 1)
                    },
                    deleteWord: function(e, t) {
                        e.app.words.splice(e.app.words.indexOf(t), 1)
                    },
					changePointOrderLeft: function(e, t) {
						if (e.app.pointTypes.indexOf(t) > 0) e.app.pointTypes.splice(e.app.pointTypes.indexOf(t) - 1, 2, e.app.pointTypes[e.app.pointTypes.indexOf(t)], e.app.pointTypes[e.app.pointTypes.indexOf(t) - 1])
					},
					changePointOrderRight: function(e, t) {
						if (e.app.pointTypes.indexOf(t) < e.app.pointTypes.length - 1) e.app.pointTypes.splice(e.app.pointTypes.indexOf(t), 2, e.app.pointTypes[e.app.pointTypes.indexOf(t) + 1], e.app.pointTypes[e.app.pointTypes.indexOf(t)])
					},
					saveAutomatically: function(e) {
						if (e.app.autoSaveIsOn) {
							if (e.app.autoSaveInterval) clearInterval(e.app.autoSaveInterval);
							e.app.autoSaveInterval = setInterval(() => {
								if (e.app.saveInLocalStorage) {
									var exceptedList = ["comp", "compR", "compG", "compODG", "compRDG", "compGR", "backpackDialog"],
										sv = JSON.parse(JSON.stringify(e.app, (key, value) => {
										if (exceptedList.includes(key)) {
											return undefined;
										}
										return value;
									}));
									const request = indexedDB.open('ICCPlus', 1);
									request.onupgradeneeded = function(t) {
										const db = t.target.result;
										if (!db.objectStoreNames.contains('autoSave')) {
											db.createObjectStore('autoSave');
										}
									};
									request.onsuccess = function(t) {
										const db = t.target.result;
										const transaction = db.transaction(['autoSave'], 'readwrite');
										const store = transaction.objectStore('autoSave');
										store.put(sv, '1');
									};
									request.onerror = function(t) {
										console.error('Database error:', t.target.errorCode);
									};
								} else {
									const now = new Date();
									const year = now.getFullYear();
									const month = String(now.getMonth() + 1).padStart(2, '0');
									const day = String(now.getDate()).padStart(2, '0');
									const hours = String(now.getHours()).padStart(2, '0');
									const minutes = String(now.getMinutes()).padStart(2, '0');
									const seconds = String(now.getSeconds()).padStart(2, '0');
									const timestamp = year + month + day + hours + minutes + seconds;
									var exceptedList = ["comp", "compR", "compG", "compODG", "compRDG", "compGR", "backpackDialog"],
										sv = JSON.parse(JSON.stringify(e.app, (key, value) => {
											if (exceptedList.includes(key)) {
												return undefined;
											}
											return value;
										}));
									var t = JSON.stringify(sv),
										o = new Blob([t], {
											type: "text/plain"
										}),
										i = document.createEvent("MouseEvents"),
										s = document.createElement("a");
									s.download = "project_" + timestamp + ".json", s.href = window.URL.createObjectURL(o), s.dataset.downloadurl = ["text/json", s.download, s.href].join(":"), i.initEvent("click", !0, !1, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), s.dispatchEvent(i);
								}
							}, 600000)
						} else {
							clearInterval(e.app.autoSaveInterval);
							e.app.autoSaveInterval = null;
						}
					}
                },
                actions: {},
                modules: {}
            }),
            ya = o("f309");
        i["a"].use(ya["a"]);
        var xa = new ya["a"]({}),
			Ca = o("caf9"),
            Ta = o("04ef"),
            ja = o.n(Ta);
        i["a"].use(Ca["a"]), i["a"].use(xa, {
            iconfont: "mdi"
        }), i["a"].config.productionTip = !1, i["a"].prototype.$sanitize = ja.a, new i["a"]({
            store: wa,
            vuetify: xa,
            render: function(e) {
                return e(ma)
            }
        }).$mount("#app")
    },
    "5aea": function(e, t, o) {},
    "5e0a": function(e, t, o) {
        "use strict";
        var i = o("38f6"),
            s = o.n(i);
        s.a
    },
    "63c6": function(e, t, o) {
        "use strict";
        var i = o("c3ab"),
            s = o.n(i);
        s.a
    },
    7137: function(e, t, o) {},
    "742b": function(e, t, o) {
        "use strict";
        var i = o("7137"),
            s = o.n(i);
        s.a
    },
    "7e8b": function(e, t, o) {},
    "7f1a": function(e, t, o) {
        "use strict";
        var i = o("e118"),
            s = o.n(i);
        s.a
    },
    "7ff2": function(e, t, o) {},
    "879f": function(e, t, o) {},
    "8a23": function(e, t, o) {},
    "8ab2": function(e, t, o) {
        "use strict";
        var i = o("d1db"),
            s = o.n(i);
        s.a
    },
    "996b": function(e, t, o) {
        "use strict";
        var i = o("7e8b"),
            s = o.n(i);
        s.a
    },
    a05d: function(e, t, o) {},
    a1b2: function(e, t, o) {
        "use strict";
        var i = o("7ff2"),
            s = o.n(i);
        s.a
    },
    a27d: function(e, t, o) {},
    bb36: function(e, t, o) {
        "use strict";
        var i = o("879f"),
            s = o.n(i);
        s.a
    },
    bf59: function(e, t, o) {},
    c16f: function(e, t, o) {
        "use strict";
        var i = o("1f65"),
            s = o.n(i);
        s.a
    },
    c3ab: function(e, t, o) {},
    c64f: function(e, t, o) {
        "use strict";
        var i = o("f9a1"),
            s = o.n(i);
        s.a
    },
    cb3f: function(e, t, o) {
        "use strict";
        var i = o("ea9f"),
            s = o.n(i);
        s.a
    },
    cea9: function(e, t, o) {
        "use strict";
        var i = o("4c61"),
            s = o.n(i);
        s.a
    },
    d1db: function(e, t, o) {},
    e118: function(e, t, o) {},
    ea9f: function(e, t, o) {},
    f9a1: function(e, t, o) {}
});
//# sourceMappingURL=app.d3103a3b.js.map